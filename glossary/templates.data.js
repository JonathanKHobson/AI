

;(function(root){
  // === Data ===
  const TEMPLATES = [

{
      id: "pattern-picker",
      slug: "pattern-picker",
      label: "— Pattern Picker —",
      kind: "helper",
      categories: [
        "template-picker"
      ],
      tags: [
        "type:helper",
        "use:framework-picker",
        "use:template-picker",
        "topic:meta"
      ],
      use_cases: [
        "help me pick the best framework or pattern",
        "which template should I do",
        "pick for me",
        "explain which framework or pattern fits my task",
        "what is this",
        "helping you find out where to start",
        "produce a ready-to-copy prompt for choosing the best framework"
      ],
      boosters: [
        "Ask up to 3 clarifying questions before recommending.",
        "Return 3 candidate frameworks with a short rationale.",
        "Then synthesize a ready-to-copy prompt using the best candidate.",
        "Library tools: 2-minute rule (david allen):planning avoidance away beginner brief c,5w1h — who · what · where · when · why · how:incident prompt scope acceptance analysi,a3 problem solving (toyota):problem plan actions align brief cause c,aar — feelings first:debrief learning needs alone beginner bo,abcde — activating event · belief · consequence · dispute · effect:thought anxiety reframe self bias coachi,abductive reasoning — best explanation:predictions risky account analysis begin,accountability letter:amends apology beginner clear close comm,active imagination — dialogue with inner voices:inner creative dialogue parts self chara,addie — analyze · design · develop · implement · evaluate:course training learning design goals ou,adversarial collaboration:adjudication design advance change commu,agent-based models & system dynamics:abm agents calibration complex declare d,aida — attention · interest · desire · action:copy write action email hook landing not,amor–vita–memoria (avm):grief self gratitude one you memory ment,anekāntavāda & syādvāda (jain many-sided logic):cultural truths add bias context cross f,announcement — change & action:announcement change communication notice,argument mapping — claim · premises · objections · rejoinders:points reasoning critical debate design,arnstein’s ladder of participation — from tokenism to citizen control:power community influence governance pla,automatic writing — truth sprint:writing truth automatic avoiding beginne,backcasting - start from the desired future state and plan backwards:back community plan future map planning,backlog — prioritize:capacity items plan portfolio prioritiza,bayesian science — posterior odds:priors action analysis based bayes data,before-after-bridge (bab) — before state · after state · bridge (solution):pitch copy page write bridge cold deck f,bhag — big hairy audacious goal:planning vision align ambition around au,bias impact assessment (ai/tech pre-launch):bias check right compliance dataset ethi,bias interrupters — diagnose risk · insert guardrail · measure effect:bias feedback check fair group make rubr,blameless postmortem — essence first:teaching actionable analyze beginner bla,bloom’s — remember · understand · apply · analyze · evaluate · create:design objectives learning lesson plan b,brand archetypes for communities - shared identity motifs and tone:our archetype archetypes community voice,buddhist eightfold path (adapted for action):decision ethical design harm right check,canary + blue-green — revert comms:comms rollback beginner blast blue call,causal inference — dags & identification:identification assumptions causal dag di,causal inference playbook:design assumptions based bias block choo,clear — challenge · limitation · effect · action · result:problem summary action decision write ca,clear contracts + exit ramps:boundaries consent beginner communicatio,clear path forward — concise · logical · explicit · adaptive · reflective:prompt step planning ask make next promp,clear prompting method — clarity · length · empathy · actionability · relevance:prompt make scope ask audience hygiene i,clown ‘flop’ — failure seen safely:failure resilience shame armor bravery b,cognitive debiasing — state assumption · seek disconfirming evidence · adjust:check bias could decision evidence make,collective impact — common agenda shared measurement backbone:partners purpose across community govern,community capitals framework - seven capitals lens for purpose and investment:capital capitals across investments comm,community-led development (cld): locally led priorities accountability and capacity:community design governance phase planni,comparative analysis — rank • pros/cons • matrix:compare should options side which best b,competing values framework - culture map to align ways of working with mission:culture values across decide our clan ex,computational science — simulation:reproducibility simulation validation ca,constraint flip (play with edges):what design feature had make one work as,contact improv — listening duet:listening practice attention attunement,costar — context · objective · style · tone · audience · response:brief content message campaign copy crea,cover letter — tailor / rewrite / feedback:cover letter job ats draft feedback sect,critical incident analysis:ethics teaching charged communication da,cultural probes & diary studies - longitudinal participant-led voice capture:people daily study capture routines acro,cultural web - unpack symbols rituals stories shaping voice:culture cultural voice rituals shape map,daoist wu-wei strategy (effortless action):instead align burnout plan already big c,decision record — dissent & kill criteria:dissent adr alignment beginner chose com,deliberative polling / citizens juries - informed structured public deliberation:people citizens public make community de,design doc — scariest change:design risk align alignment architecture,design justice principles — center those most affected; redistribute design power:design community power data decision jus,design science research (dsr):utility artifact artifacts build constru,dignity questions — identity · meaning · legacy:family gratitude storytelling audio begi,disney strategy — dreamer · realist · critic:idea creative concept plan balance ideas,dm — outreach & follow-up:follow outreach quick writing ask beta c,dmaic — define · measure · analyze · improve · control:data improvement process project quality,doe + tolerance stacks — ci & power:acceptance experiment stack analysis ana,dot voting and heat-mapping - quick temperature check on priorities:decision phase planning community across,east — easy · attractive · social · timely:design behavioral nudge choice friction,eisenhower matrix — urgent/important prioritization:delegate tasks priorities what decide de,email — draft & polish:email follow networking outreach support,empathy mapping personas jtbd - ground voice in needs and contexts:what design empathy community jobs needs,empty chair dialogue (gestalt):self one conversation talk boundary busi,energy budget planner (spoon theory):plan energy day spoons tasks accommodati,engineering method — iterate to standard:acceptance cycle standards beginner buil,epic quest tasking — gamify the chore:quest quests chores make self storytelli,ethical data stewardship - governance for safe listening:data community design decide safe sharin,ethnographic & interpretivist methods:description fieldwork reflexivity thick,examples / few-shot prompting:examples example format output show styl,exploratory vs confirmatory paths:cda eda avoid beginner confirmatory diff,fab — feature · advantage · benefit:benefits bullets copy feature features p,facione — interpret · analyze · evaluate · infer · explain · self-regulate:bias evidence reasoning argument check c,facts & expertise primer:what facts check expert give avoid begin,feyerabend — pluralism:method design document ethics exploring,feynman technique — explain like i’m 5:explain make complex non break clear exp,findings — synthesize:insights confidence create summarize the,first principles — question assumptions & reason from basics:true problem reasoning analogies assumpt,fmea · hazop · fault tree — unified card:design hazop analysis causes criticality,focusing — felt-sense check:check mental aboutness ambivalent beginn,freewriting — unfiltered stream of thought (zero draft):writing block draft brainstorming ideas,future search — whole-system future-focused planning (2–3 days):future planning search community plan ac,fuzzing + mutation — outage shape:edge inputs catch conditions define flow,ganma — knowledge confluence (yolŋu):knowledge cultural design indigenous sha,goal breakdown (prompt/question decomposition):step goal tasks turn what break first pl,goal composition (prompt/question composition):one tasks plan asks brief goal goals mak,goal prompting:goal goals plan first main next objectiv,goals of care — what matters most:conversation life planning values advanc,golden circle — why · how · what · mission:purpose mission community values align c,gratitude under duress:pain acknowledge beginner bypass check c,grounded theory — reflexive memos:coding reflexivity theory audit axial be,grow — goal · reality · options · way forward:goal coaching plan what goals next set b,head–heart–gut — logic · emotion · instinct (rational · emotional · instinctual check):check decision heart balance choice gut,hero’s journey — departure · initiation · return:journey story arc hero writing map outli,heuristics & biases — debiasing pre-flight:check bias decision quick review wrong a,holacracy (selective) - role-based governance for volunteer groups:roles governance meetings without avoid,hoshin kanri (policy deployment) - align annual breakthrough objectives with daily work:phase planning community objectives revi,how might we statements (hmw):problem make questions brainstorming opp,human-centered design / double diamond: discover define develop deliver with community co-creation:design research clear community delivery,hypnagogic spark — semi-sleep insight technique:brainstorming state creativity design dr,iap2 spectrum of public participation — inform → consult → involve → collaborate → empower:engagement community input planning publ,ice — impact × confidence × ease:ideas planning quick backlog effort fast,ikigai — purpose map:purpose career against align anti beginn,imaginary council — multiple mentors one question:would phase see what council creative de,implementation intentions (if–then):plan coding goals habits new set daily h,inclusive design (edge personas):design make edge check easier low one te,inner child work — conscious self · inner child:child inner self childhood practice comf,internal weather report — storm · calm · forecast:check state emotional energy mood reduce,interviews — plan & questions — write:plan guide interviews design discussion,jtbd interviews — felt-sense friction:jtbd progress struggles body capture dis,kaitiakitanga — guardianship & stewardship (māori):product cultural data design governance,kano model — must-be · performance · delighters:planning product what brainstorming buil,kansei engineering (emotion → design mapping):design emotions emotional features feeli,kaupapa māori research — by/with/for māori communities; sovereignty at the core:research ori community communities data,kepner–tregoe (situation · problem · decision · potential problem):decision analysis phase alternatives amo,keywords + why + tasks — vector priming:actionable alignment apply avoid better,kuhn — paradigms & revolutions:anomalies science across beginner choice,kumu / systems mapping - actors flows feedbacks:purpose community find map system visual,lakatos — research programs:belt core hard program theory decide deg,lara / cri — dialogue scaffold:dialogue affirmation beginner center com,last 2% round — share the unsaid edge:alignment avoid beginner communication c,lean startup loop — stop & harm rules:decision hypothesis rules analytics begi,least to most (ltm):building complex derive edge escalating,letter — formal / personal:letter formal writing apology appeal app,liberating structures - light-weight ways to get everyones voice in (1-2-4-all 9 whys triz conversation café what so what now what):group ways simple what without decision,lines/veils revisit — mid-campaign:consent lines refresh safety ttrpg veils,maṣlaḥa — public interest reasoning (islamic ethics):decision product advanced align appeal a,memento mori — micro-sit:gratitude actually add beginner choose c,memo — tl;dr + recommendation:decision writing brief capture change co,mind map — central idea with branches:visual adhd analysis around assist begin,mind mapping — visual cluster of ideas:discover map planning actions around beg,mixed methods — triangulation:integration beginner design designs disc,monroe’s motivated sequence — attention · need · satisfaction · visualization · action:value decision persuasive across act ada,mortal message — letter/audio:gratitude repair beginner blessing brief,moscow — must · should · could · won’t:planning management product scope beginn,most significant change (msc) — collect stories; community selects what mattered most:community stories change evaluation acti,musyawarah & mufakat — deliberation to consensus (indonesia):consensus decision deliberation facilita,naïve dialecticism (east asian holistic reasoning):adapt adjustments advanced analytic asia,nonviolent communication (nvc): needs-based dialogue for deeper listening:nvc conflict without empathy needs ways,north star metric & narrative:metric one community long mission planni,noting — mindfulness labels:sleep awareness beginner check craving d,nyāya — five-member syllogism:explicit inference mode analyses applica,oblique strategies — lateral thinking prompt cards:creative brainstorming break constraints,observability — slos · slis · error budgets:burn reliability analytics budget budget,ocap® & care principles — community data ownership governance and ethical listening:data community sharing control ethics re,ofrenda / remembrance board:altar artifacts beginner board care crea,okr — objective & key results:outcomes measurable planning progress re,okrs — with kill criteria:okrs analytics avoid beginner cadence co,okrs (community-adapted) — objectives & key results:community goals mission progress measura,ooda loop (observe–orient–decide–act):decision discovery fast loop ooda produc,open science checklist:accessible beginner cannot capsule check,open space technology - participant-set agenda for what matters now:open space agenda community meetings way,opportunity scoring — importance vs. satisfaction:planning jtbd across allocate clarificat,opportunity solution tree - tie problems to outcomes to keep purpose tight:outcome outcomes tree solutions opportun,outcome harvesting - gather outcomes after the fact and trace contributions with community input:already change clear community decisions,outcome mapping — boundary partners & behavior change:change community partner behavior evalua,par — problem · action · result:experience impact postmortem storytellin,participatory & decolonial approaches:data sovereignty benefit clarify communi,participatory action research (par):decision dissemination rights accessible,participatory action research / cbpr - co-research with communities:community research action phase capacity,participatory budgeting — residents directly allocate resources:community budget equity planning decisio,parts check-in — ifs-inspired:coaching self beginner check communicati,parts work dialogue (ifs therapy):inner parts self coaching compassion men,pas — problem · agitate · solution:problem copy landing marketing pain reli,paul–elder — elements of thought + standards:decision analysis apply argument brief c,pdca — plan · do · check · act:improvement beginner changes close desig,peas — performance measure · environment · actuators · sensors:design agent analysis benchmark brief do,persona — actas / simulate:apply beginner clarification development,pestle — political · economic · social · technological · legal · environmental:affecting analysis analyze broader busin,plan and solve (p&s):planning against checks clarification co,playback theatre — confession line:group story check consent create deeper,pomodoro scaffold:beginner creativity focus frame goal mic,popperian falsification:design predictions risky beginner belief,positionality statement:analysis practice preface research stand,power mapping - visualize formal and informal power; plan inclusive engagement:who influence which map see decide engag,power/interest grid & stakeholder salience — who has power who’s affected who must be heard:who power actually affected analysis com,pra / rra - participatory mapping ranking seasonal calendars guided by locals:community local research create led maps,pramāṇa — means of knowledge:evidence advanced answer audit change cl,prd — write:requirements plan guardrails localizatio,pre-mortem + pre-grief:ethics failure human review clear condit,pre-mortem + red team — embarrassing sentence:ethics failure review conditions dissent,pre-mortem scaffold:actions beginner committing decision fai,press release — ap style:release launch writing announcement appo,prompt augmentation (demonstration learning):format phase against answers apply consi,public narrative - structure shared story and call to action:story action people ask community make c,public narrative (marshall ganz) — story of self us now:story community craft action alignment a,qiyās — analogical reasoning (islamic jurisprudence):advanced analogies apply cause cultural,questionnaire — write:design item bias items logic platform qu,raccca — relevance · accuracy · completeness · clarity · coherence · appropriateness:evaluation audit beginner coding compari,raci or drci - clarify roles without muting voice:who roles consent consulted informed rac,rain — recognize · allow · investigate · nurture:self mindfulness beginner brach check cl,random association — combine unrelated ideas:brainstorming beginner block break conne,rap — result · action · problem:impact storytelling apply beginner bulle,rapid — recommend · agree · perform · input · decide:decision approvals beginner clarify defi,rapid ideation — timed idea sprint:brainstorming beginner block creative cr,ratio — role · audience · task · instructions · output:prompt brief agent apply beginner develo,reflect (bias reflection):bias analysis beginner brainstorming con,reflexive memo:analysis activated affect affective assu,registered reports & preregistration:analysis plan clarify collection data de,reliability growth & burn-in:test acceptance growth plan stop accepta,restorative circles / deep democracy - surface minority voices and work with conflict productively:circle conflict group community healing,resume — tailor / rewrite / feedback:resume job ats draft admin alongside app,rfc — unsaid objection:decision dissent alignment architecture,rice — reach × impact × confidence ÷ effort:planning allocate coding features manage,ripple effects mapping — appreciative story-mapping of impacts with stakeholders:community impact map stories action effe,risen — role · instructions · steps · end goal · narrowing:plan content design development experime,rodes — role · objective · details · examples · sense check:guided adaptation against apply check co,role storming — ideation as different personas:brainstorming apply beginner changing cr,root cause analysis:apply beginner brainstorming causes coun,rose · thorn · bud + weather:check daily hope journal practice affect,rtf — role · task · format:format prompt prompting api apply beginn,rubber duck debugging — explain to understand:problem step analysis articulating assum,safety pause with essence:safety truth ttrpg agree beginner body c,scamper (idea expansion):beginner brainstorming creative creativi,scenario-based prompting — deliberative reasoning:advice analysis coaching compose develop,scientific method — question · hypothesis · method · data · analysis · conclusion:beginner clear content design experiment,scqa — situation · complication · question · answer:frameworks analysis arc beginner brief c,screener — create criteria:screener eligibility design device fraud,sensemaker: micro-narratives self-signified by participants to surface patterns:stories patterns community phase analysi,sentipensar — thinking-feeling integration (latin america):design side analytic cultural decomposit,service design blueprints - map frontstage/backstage to see where voice is silenced:service map blueprint design help show s,shadow work dialogue — conscious self · shadow self:self side you acts advanced anger beginn,six thinking hats:brainstorming decision explore beginner,smart goals — specific · measurable · achievable · relevant · time-bound:goals actionable adjustment beginner cle,soar analysis:align aspirations beginner clarification,social media post — tailor / write / brainstorm:social media post write char hashtags ho,social network analysis / network weaving / netography - find connectors peripheries and missing voices:map spot bridges networks see track whic,sociocracy / consent decision-making - circles roles and dynamic governance for shared ownership:sociocracy consent decide circles govern,socratic questioning method:alternatives assumptions beginner belief,soft systems methodology (ssm) — explore messy problems via multiple worldviews; rich pictures:map problems community issues messy prob,somatic focusing — feel · ask · listen:self them asking beginner bodily body cl,spectrum of community engagement to ownership — concrete power-shifting practices:community power ownership authority enga,star — situation · task · action · result:story storytelling study answer apply be,stars & wishes + bleed check:bleed debrief safety ttrpg beginner cele,story circles / story harvesting — peer storytelling to extract themes and values:stories community voices values listenin,story spine + one naked sentence:story draft line pitch talk truth align,survey — plan — design:design plan survey scale align edit low,swot — strengths · weaknesses · opportunities · threats:analysis market snapshot strategy assess,synectics — analogies & problem transfer:advanced analogies apply context creativ,synesthetic brainstorm — color · sound · texture:brainstorming sensory abstract analogies,systematic review & meta-analysis:criteria heterogeneity policy protocol b,talanoa dialogue (pacific):beginner build content cultural decision,talanoa yarning circles talking circles — narrative-first consensus building:community decisions hearing understadnin,tarot spread reflection — past · present · future:mode reflection storytelling tarot actio,task prompt breakdown — task/recipe + do/don’t (cot):recipe steps beginner brainstorming brea,task scenarios — write:scenarios design accessibility hta klm p,tdd + property-based testing — invariants:edge invariants tests beginner capture d,theory of change — backcasting:change community planning mission outcom,threat modeling — stride/linddun:privacy risk security architecture categ,three vaults — facts → stories → essence:coaching check communication facilitatio,time machine advice — past self & future self:self your future you advice beginner bra,tonglen-lite — breathe with suffering:compassion self aversion beginner breath,tote — test · operate · test · exit:beginner brainstorming build communicati,toulmin’s argument model — claim · grounds · warrant · backing · qualifier · rebuttal:briefs design academic argumentation arg,transcripts - analyze:analysis analyze codebook executive sent,tree of thought — brainstorm & evaluate:across advanced best brainstorming compa,tree of thought — decomposition:advanced alternatives ambiguous brainsto,triangulation methods:across alignment apply bias checking cro,trigger storming — prompt-based brainstorming:brainstorming abstract creativity discus,triz (theory of inventive problem solving):brainstorming aim communication content,trls — with exit ramps:exit maturity salvage trl avoid beginner,trunk-based dev — feature flags:audience beginner behind cleanup collect,truth & reconciliation — micro-format:accountability amends conflict dignity a,two-eyed seeing (etuaptmumk): braiding indigenous and western knowledge:community knowledge design elders indige,usability test — plan:plan policy accessibility criteria desig,user flow — audit — design:flow design states acceptance accessibil,ux microcopy — write:copy design accessibility clarity conten,v-model / mbse — assumption ledger:assumptions model architecture dates des,v2mom — vision values methods obstacles measures:community vision plan create finding mis,value vs. effort — 2×2 quick wins matrix:identify intermediate kill management ma,viable system model - ensure functions that keep a community adaptive and coherent:community design governance operations s,voice and tone frameworks - codify how the community speaks:our tone voice community style avoid cle,vow-and-witness:commitment vow witness accountability be,vroom–yetton–jago decision model:decision autocratic balance brainstormin,wardley mapping - map capabilities and evolution to protect community advantage:community shared spot across map chain c,weighted mini-matrix (quick score):planning against compare criteria decisi,what if — scenario reframing questions:brainstorming problem alternative beginn,wishing — imagine ideal solutions:brainstorming beginner beyond constraint,woop (wish–outcome–obstacle–plan):obstacle beginner bind brainstorming con,working backwards prfaq — truths & tradeoffs:align alignment amazon backwards buildin,working out loud — truth edition:review asks beginner clarity communicati,world café - rotating small-group conversations to synthesize collective themes:cafe world ideas conversation group peop,wsjf — (business value + time criticality + risk reduction) ÷ job size:planning economic future improvement max,zhongyong — doctrine of the mean (confucian moderation):avoid calibrating communication content"
      ],
      definition: "A helper that recommends the most suitable tool from the provided template library list or generates a prompt to do so.",
      help: "Describe your goal and context. A full list of the template options will be included when you use the copy/open buttons.",
      fields: [
        {
          label: "Goal / outcome",
          key: "goal",
          ph: "What do you want to achieve?",
          type: "textarea"
        },
        {
          label: "Where are you in the process?",
          key: "stage",
          options: [
            "explore",
            "define",
            "ideate",
            "plan",
            "analyze",
            "compare/decide",
            "prioritize",
            "evaluate/review",
            "troubleshoot/debug",
            "problem solve",
            "motivate",
            "other"
          ],
          type: "select"
        },
        {
          label: "Desired deliverable",
          key: "deliverable",
          ph: "e.g., one-pager, plan, checklist",
          type: "text"
        },
        {
          label: "Constraints",
          key: "constraints",
          ph: "Deadlines, tone, tools, privacy…",
          type: "textarea"
        },
        {
          label: "Prefer tags (comma/space separated)",
          key: "include",
          ph: "e.g., marketing, ideation",
          type: "text"
        },
        {
          label: "Exclude tags (comma/space separated)",
          key: "exclude",
          ph: "e.g., philosophy",
          type: "text"
        }
      ],
      template: ({goal,stage,deliverable,constraints,include,exclude,ctx}) => {
    const all = Array.isArray(window.FRAMEWORKS)
      ? window.FRAMEWORKS
      : (Array.isArray(window.TEMPLATES) ? window.TEMPLATES : []);
    const base = (all||[]).filter(f => f && f.id && f.id !== 'none');

    // --- Deduplicate by slug → label (lowercased)
    const seen = new Set();
    const list = [];
    for (const f of base) {
      const key = String(f.slug || f.label || f.id).trim().toLowerCase();
      if (seen.has(key)) continue;
      seen.add(key);
      list.push(f);
    }

    // --- Primitive, lightweight scoring for shortlist (tokens from goal/deliverable/constraints)
    const toWords = s => String(s||'').toLowerCase();
    const toks = toWords([goal,deliverable,constraints].join(' '))
      .split(/[^a-z0-9]+/).filter(Boolean);

    function hay(f){
      return [
        f.label, f.definition, f.help,
        (f.tags||[]).join(' '),
        (f.categories||[]).join(' '),
        (f.use_cases||[]).join(' ')
      ].join(' ').toLowerCase();
    }
    function score(f){
      const h = hay(f);
      let s = 0;
      for (const t of toks){ if (t && h.includes(t)) s += 1; }
      return s;
    }

    const ranked = list.map(f => ({f, s:score(f)}))
      .sort((a,b)=> b.s - a.s || String(a.f.label).localeCompare(String(b.f.label)));

    const shortlist = ranked.slice(0,7)
      .map(x => `- ${x.f.label}`)
      .sort((a,b)=> a.localeCompare(b)) // stable, readable
      .join('\n');

    const total = list.length;

    return [
      'Template Picker — helper',
      ctx && `Context: ${ctx}`,
      goal && `Goal: ${goal}`,
      stage && `Stage: ${stage}`,
      deliverable && `Desired deliverable: ${deliverable}`,
      constraints && `Constraints: ${constraints}`,
      'You are a taxonomy expert for a mixed toolbox library of frameworks, patterns, tasks, helpers, heuristics, strategies, and methods. The library spans phases of work (explore, define, ideate, plan, compose, evaluate, review, prioritize, troubleshoot, compare/decide), topics (prompting, debiasing, logic, ethics, psychology, design, storytelling, etc.), and uses (ideation, decision-making, process improvement, teaching, content, coding). job is to choose the best listed tool (e.g., framework, method, technique, scaffold, etc...) for helping the user achieve their desired goal/outcome or problem based on their situation',
'Guidelines (follow all):',
      '1) Ask up to 3 clarifying questions if needed.',
      '2) Recommend the top 3 tools (from the list below) with one-paragraph rationale each.',
      '3) Pick one and produce a ready-to-copy prompt on using that tool, tailored to the Goal, Context, and Constraints.',
      '4) If none fit well, suggest the an alternative or the closest match, and what is missing.'
    ].filter(Boolean).join('\n');
  },
      meta: {
        search_text: "— pattern picker — none a helper that recommends the most suitable tool or generates a prompt to do so. describe your goal and context. a full list of the template options will be included when you use the copy/open buttons. type:helper use:framework-picker use:template-picker topic:meta template-picker help me pick the best framework explain which framework fits my task produce a ready-to-copy prompt using the chosen framework ask up to 3 clarifying questions before recommending. return 3 candidate frameworks with a short rationale. then synthesize a ready-to-copy prompt using the best candidate. goal / outcome where are you in the process? desired deliverable constraints prefer tags (comma/space separated) exclude tags (comma/space separated)"
      }
    },

    {
      id: "two_min_rule",
      slug: "two-minute-rule",
      label: "2-Minute Rule (David Allen)",
      kind: "heuristic",
      categories: [
        "creativity",
        "planning",
        "cultural-frameworks",
        "product-management"
      ],
      tags: [
        "use:pattern",
        "use:teaching",
        "use:goals",
        "use:storytelling",
        "use:task-brief",
        "use:planning",
        "level:beginner",
        "use:ad-copy",
        "topic:decomposition"
      ],
      use_cases: [
        "reduce friction by doing a tiny version now",
        "convert avoidance into a first motion",
        "empty inboxes quickly",
        "chip away at procrastination",
        "help me get moving",
        "help me do my to-do list",
        "prime focus for deeper work"
      ],
      boosters: [
        "If “Yes,” push the user to complete the task right now—logging it wastes more time than finishing.",
        "If “No,” guide the user to schedule a concrete 2-minute starter step in their calendar or task manager.",
        "Ensure any starter step is purely mechanical and frictionless (e.g., “open doc and type title”).",
        "Encourage momentum stacking: celebrate 3 small wins in sequence to build flow.",
        "Suggest pairing the 2-Minute Rule with Pomodoro cycles to bridge from micro-tasks into deep work.",
        "Prompt reflection: if resistance remains even at ≤2 minutes, what hidden friction is at play?"
      ],
      definition: "If a task takes ≤2 minutes, finish it immediately. If not, break it down into a concrete 2-minute “starter” step you can schedule, lowering resistance and priming momentum.",
      help: "1) Write the task clearly. 2) Decide Yes/No — can it be done in under 2 minutes? 3) If Yes, do it immediately. 4) If No, define a frictionless starter step (≤2 minutes) and schedule it. 5) Optionally add a small reward.",
      fields: [
        {
          label: "Task — what am I avoiding?",
          desc: "State the exact action, not the project.",
          key: "task",
          ph: "Reply to client email",
          type: "textarea"
        },
        {
          label: "Can I do a 2-minute version? (Yes/No)",
          desc: "Gut check—under 2 minutes of real effort?",
          key: "two_min_possible",
          ph: "Yes / No",
          type: "text"
        },
        {
          label: "If No → 2-minute starter step",
          desc: "Write the smallest visible action that lowers resistance.",
          key: "starter",
          ph: "Open doc and write title; create folder…",
          type: "textarea"
        },
        {
          label: "Tiny reward (optional)",
          desc: "Acknowledge progress to reinforce habit.",
          key: "reward",
          ph: "Stretch, sip coffee, mark ✔️",
          type: "text"
        },
        {
          label: "Timebox (auto ≤2 min)",
          desc: "Keeps scope small and safe from creep.",
          key: "timebox",
          ph: "2 min max",
          type: "text"
        }
      ],
      template: ({ task, two_min_possible, starter, reward, timebox, ctx, audience, style, tone }) => [
    'Apply the 2-Minute Rule to force a start.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    task && ('Task:\n' + task),
    typeof two_min_possible === 'string' && two_min_possible && `Can do ≤2 min now? ${two_min_possible}`,
    (two_min_possible||'').toLowerCase().startsWith('y') 
      ? 'Action: Do it now.' 
      : (starter && ('Starter step:\n' + starter)),
    `Timebox: ${timebox || '≤2 minutes'}`,
    reward && `Reward: ${reward}`,
    'Output:\n1) Task\n2) Immediate action or starter\n3) Timebox (≤2 min)\n4) Optional tiny reward'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "2-minute rule (david allen) two-minute-rule if a task takes ≤2 minutes, finish it immediately. if not, break it down into a concrete 2-minute “starter” step you can schedule, lowering resistance and priming momentum. 1) write the task clearly. 2) decide yes/no — can it be done in under 2 minutes? 3) if yes, do it immediately. 4) if no, define a frictionless starter step (≤2 minutes) and schedule it. 5) optionally add a small reward. use:pattern use:teaching use:goals use:storytelling use:task-brief use:planning level:beginner use:ad-copy topic:decomposition creativity planning cultural-frameworks product-management reduce friction by doing a tiny version now convert avoidance into a first motion empty inboxes quickly chip away at procrastination prime focus for deeper work if “yes,” push the user to complete the task right now—logging it wastes more time than finishing. if “no,” guide the user to schedule a concrete 2-minute starter step in their calendar or task manager. ensure any starter step is purely mechanical and frictionless (e.g., “open doc and type title”). encourage momentum stacking: celebrate 3 small wins in sequence to build flow. suggest pairing the 2-minute rule with pomodoro cycles to bridge from micro-tasks into deep work. prompt reflection: if resistance remains even at ≤2 minutes, what hidden friction is at play? task — what am i avoiding? can i do a 2-minute version? (yes/no) if no → 2-minute starter step tiny reward (optional) timebox (auto ≤2 min)"
      }
    },

    {
      id: "kipling_5w1h",
      slug: "five-w-one-h-kipling",
      label: "5W1H — Who · What · Where · When · Why · How",
      kind: "heuristic",
      categories: [
        "analysis-frameworks",
        "prompt-development-techniques",
        "quality",
        "reasoning"
      ],
      tags: [
        "type:framework",
        "topic:clarification",
        "use:pattern",
        "phase:compose",
        "use:scope-management",
        "level:beginner",
        "use:process-improvement",
        "topic:prompting",
        "use:case-study",
        "use:healing",
        "topic:future-self",
        "level:intermediate"
      ],
      use_cases: [
        "clarify task requirements",
        "scope a prompt before execution",
        "capture acceptance criteria",
        "analyze a problem or incident",
        "design interview or survey questions",
        "structure a research or UX discovery plan",
        "prep structured Jira tickets",
        "incident postmortem structuring"
      ],
      boosters: [
        "Ensure each W/H answer is one crisp, testable line; avoid vagueness.",
        "If an element is missing, generate a clarifying question before output.",
        "Translate answers into concrete acceptance criteria for the task.",
        "After “How,” append a “Not in scope” section to limit scope creep.",
        "Cross-check that Who + Why align logically (actor ↔ motivation).",
        "Rank the W/H elements by criticality (e.g., Why > Who > What) to guide prioritization.",
        "Highlight any inconsistencies (e.g., “Who = busy executives” but “Where = TikTok comments”)."
      ],
      definition: "A universal clarifying scaffold that ensures every prompt or problem has complete coverage across six essentials: actor, deliverable, context, timing, rationale, and approach. Prevents vague tasks, scope creep, and mismatched expectations.",
      help: "Answer each W/H in a single crisp line; if an answer isn’t known, ask a clarifying question. Once filled, review the six together to check for coherence: Who ↔ Why, What ↔ How, When ↔ Where. Finally, add exclusions in “Not in scope” to keep boundaries clear.",
      fields: [
        {
          label: "Who",
          desc: "Stakeholders, audience, or responsible actor. Type to search personas",
          key: "who",
          ph: "Target user, product team, external client",
          type: "typeahead"
        },
        {
          label: "What",
          desc: "The desired outcome, deliverable, or artifact.",
          key: "what",
          ph: "Draft onboarding email; working prototype",
          type: "text"
        },
        {
          label: "Where",
          desc: "Location, channel, or context where it applies.",
          key: "where",
          ph: "Slack channel, mobile app, user’s home",
          type: "text"
        },
        {
          label: "When",
          desc: "Timeline, deadline, or cadence.",
          key: "when",
          ph: "Within 2 weeks; daily at 9am; Q3 2025",
          type: "text"
        },
        {
          label: "Why",
          desc: "Purpose, impact, or rationale.",
          key: "why",
          ph: "Reduce churn; meet compliance; improve usability",
          type: "text"
        },
        {
          label: "How",
          desc: "Approach, process, or constraints.",
          key: "how",
          ph: "Run usability study with 5 users; follow WCAG 2.1",
          type: "textarea"
        },
        {
          label: "Not in scope (optional)",
          desc: "Explicit exclusions or anti-goals.",
          key: "not",
          ph: "Do not cover backend architecture; exclude iOS app",
          type: "textarea"
        },
        {
          label: "Priority (optional)",
          desc: "Mark which W/H is most critical (e.g., Why > Who > What).",
          key: "priority",
          ph: "Why, then Who",
          type: "text"
        }
      ],
      template: ({ who, what, where, when, why, how, not, priority, ctx }) => [
    'Use 5W1H to clarify scope and intent.',
    ctx && `Context: ${ctx}`,
    who   && `Who: ${who}`,
    what  && `What: ${what}`,
    where && `Where: ${where}`,
    when  && `When: ${when}`,
    why   && `Why: ${why}`,
    how   && `How:\n${how}`,
    not   && `Not in scope:\n${not}`,
    priority && `Priority: ${priority}`,
    'Synthesis:\n- Summarize the answers into a 1–2 paragraph plan.\n- Ensure completeness across all six dimensions.\n- Flag any gaps or conflicts.\n- Propose 1 clarifying question if needed.\n\nChecklist:\n- [ ] All six answered\n- [ ] Who ↔ Why consistent\n- [ ] Scope boundaries noted'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "5w1h — who · what · where · when · why · how five-w-one-h-kipling a universal clarifying scaffold that ensures every prompt or problem has complete coverage across six essentials: actor, deliverable, context, timing, rationale, and approach. prevents vague tasks, scope creep, and mismatched expectations. answer each w/h in a single crisp line; if an answer isn’t known, ask a clarifying question. once filled, review the six together to check for coherence: who ↔ why, what ↔ how, when ↔ where. finally, add exclusions in “not in scope” to keep boundaries clear. type:framework topic:clarification use:pattern phase:compose use:scope-management level:beginner use:process-improvement topic:prompting use:case-study use:healing topic:future-self level:intermediate analysis-frameworks prompt-development-techniques quality reasoning clarify task requirements scope a prompt before execution capture acceptance criteria analyze a problem or incident design interview or survey questions structure a research or ux discovery plan prep structured jira tickets incident postmortem structuring ensure each w/h answer is one crisp, testable line; avoid vagueness. if an element is missing, generate a clarifying question before output. translate answers into concrete acceptance criteria for the task. after “how,” append a “not in scope” section to limit scope creep. cross-check that who + why align logically (actor ↔ motivation). rank the w/h elements by criticality (e.g., why > who > what) to guide prioritization. highlight any inconsistencies (e.g., “who = busy executives” but “where = tiktok comments”). who what where when why how not in scope (optional) priority (optional)"
      }
    },

    {
      id: "a3_ps",
      slug: "a3-problem-solving-toyota",
      label: "A3 Problem Solving (Toyota)",
      kind: "strategy",
      categories: [
        "quality",
        "operations",
        "reasoning",
        "prompt-development-techniques",
        "teaching"
      ],
      tags: [
        "type:framework",
        "use:problem-framing",
        "use:brainstorming",
        "use:case-study",
        "use:pattern",
        "phase:apply",
        "use:process-improvement",
        "level:intermediate",
        "use:task-brief"
      ],
      use_cases: [
        "structure a one-page problem brief",
        "analyze current vs. target condition",
        "design countermeasures and follow-up",
        "facilitate PDCA cycles",
        "align teams on root cause and actions",
        "summarize post-mortem or retrospective findings",
              "fix a broken process",
      "why is this taking so long",
      "reduce errors at work",
      "find the root cause",
      "current vs future state",
      "make a one-page problem summary",
      "how do we stop rework",
      "standardize this workflow",
      "set a clear target",
      "turn complaints into actions",
      "plan countermeasures",
      "run a quick postmortem",
      "align the team on the problem",
      "measure the baseline",
      "what should we try first",
      "track if the fix worked",
      "prioritize fixes",
      "make a simple action plan",
      "document the problem clearly",
      "stop firefighting and plan"
      ],
      boosters: [
        "Ensure each section is concise: bullet points or ≤3 lines.",
        "Always connect each countermeasure directly to a specific root cause and owner.",
        "Validate that the target condition is measurable and time-bound.",
        "Prompt for evidence and data in the “current condition” before moving forward.",
        "Close the loop: include explicit follow-up metrics tied back to goals.",
        "Add a simple cause ↔ countermeasure mapping (table or bullets).",
        "Highlight priority countermeasures (high impact, low effort) if applicable.",
        "Ensure the A3 tells a coherent story from Background → Target → Follow-up."
      ],
      definition: "A structured, one-page problem-solving method from Toyota that frames background, problem, current vs. target condition, root cause analysis, countermeasures, and follow-up. It standardizes PDCA (Plan–Do–Check–Act) thinking in a concise, visual format.",
      help: "Fill sections in order. Use objective data in Current, measurable outcomes in Target, then map every Countermeasure to a cause and owner. Treat the page as both a planning tool and a communication tool.",
      fields: [
        {
          label: "Background (why this matters)",
          desc: "Context and importance; why solving this matters.",
          key: "background",
          ph: "Business impact, urgency, relevance",
          type: "textarea"
        },
        {
          label: "Problem statement",
          desc: "The specific issue to solve (one sentence).",
          key: "problem",
          ph: "Overtime rates increasing despite stable demand",
          type: "textarea"
        },
        {
          label: "Current condition (facts/metrics)",
          desc: "Baseline data, observable facts, and pain points.",
          key: "current",
          ph: "Error rate 12%; 25% overtime",
          type: "textarea"
        },
        {
          label: "Target condition (measurable)",
          desc: "Define clear, numeric, or time-based goals.",
          key: "target",
          ph: "Reduce overtime to <10% by Q4",
          type: "textarea"
        },
        {
          label: "Root-cause analysis",
          desc: "Causal chain using 5 Whys, fishbone, etc.",
          key: "analysis",
          ph: "Defective supplier parts → excess rework",
          type: "textarea"
        },
        {
          label: "Countermeasures",
          desc: "Actions mapped 1:1 to causes with owners.",
          key: "countermeasures",
          ph: "Add incoming inspection; assign QA lead",
          type: "textarea"
        },
        {
          label: "Implementation plan",
          desc: "Owners, dates, checkpoints, and milestones.",
          key: "plan",
          ph: "QA team, start 10/1, review weekly",
          type: "textarea"
        },
        {
          label: "Follow-up / learnings",
          desc: "Metrics, validation, and captured lessons.",
          key: "follow_up",
          ph: "Check KPI weekly; adjust if >5% scrap",
          type: "textarea"
        },
        {
          label: "Owner / Team (optional)",
          desc: "Person or team responsible for overall A3.",
          key: "owner",
          ph: "Ops manager; QA team",
          type: "text"
        }
      ],
      template: ({ background, problem, current, target, analysis, countermeasures, plan, follow_up, owner, ctx, audience, style, tone }) => [
    'Apply the A3 problem-solving structure.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    background && `Background:\n${background}`,
    problem && `Problem statement:\n${problem}`,
    current && `Current condition:\n${current}`,
    target && `Target condition:\n${target}`,
    analysis && `Root-cause analysis:\n${analysis}`,
    countermeasures && `Countermeasures (linked to causes):\n${countermeasures}`,
    plan && `Implementation plan (owners + dates):\n${plan}`,
    follow_up && `Follow-up / learnings:\n${follow_up}`,
    owner && `Owner / Team: ${owner}`,
    'Output:\n1) One-page problem brief\n2) Cause ↔ Countermeasure map\n3) Implementation timeline\n4) Follow-up checks linked to target condition\n\nChecklist:\n- [ ] Problem clearly stated\n- [ ] Target measurable & time-bound\n- [ ] Each cause linked to countermeasure\n- [ ] Follow-up defined'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "a3 problem solving (toyota) a3-problem-solving-toyota a structured, one-page problem-solving method from toyota that frames background, problem, current vs. target condition, root cause analysis, countermeasures, and follow-up. it standardizes pdca (plan–do–check–act) thinking in a concise, visual format. fill sections in order. use objective data in current, measurable outcomes in target, then map every countermeasure to a cause and owner. treat the page as both a planning tool and a communication tool. type:framework use:problem-framing use:brainstorming use:case-study use:pattern phase:apply use:process-improvement level:intermediate use:task-brief quality operations reasoning prompt-development-techniques teaching structure a one-page problem brief analyze current vs. target condition design countermeasures and follow-up facilitate pdca cycles align teams on root cause and actions summarize post-mortem or retrospective findings ensure each section is concise: bullet points or ≤3 lines. always connect each countermeasure directly to a specific root cause and owner. validate that the target condition is measurable and time-bound. prompt for evidence and data in the “current condition” before moving forward. close the loop: include explicit follow-up metrics tied back to goals. add a simple cause ↔ countermeasure mapping (table or bullets). highlight priority countermeasures (high impact, low effort) if applicable. ensure the a3 tells a coherent story from background → target → follow-up. background (why this matters) problem statement current condition (facts/metrics) target condition (measurable) root-cause analysis countermeasures implementation plan follow-up / learnings owner / team (optional)"
      }
    },

    {
      id: "abcde",
      slug: "abcde-cbt-framework",
      label: "ABCDE — Activating event · Belief · Consequence · Dispute · Effect",
      kind: "framework",
      categories: [
        "psychology",
        "self-reflection",
        "critical-thinking",
        "product-management"
      ],
      tags: [
        "type:framework",
        "use:problem-framing",
        "use:recipe",
        "topic:bias",
        "use:scope-management",
        "use:presentations",
        "level:intermediate",
        "topic:future-self"
      ],
      use_cases: [
        "reframe negative thoughts or assumptions",
        "self-coaching through emotional situations",
        "journaling for stress or anxiety",
        "cognitive bias analysis",
        "coaching or mentoring dialogue",
              "reframe a negative thought",
      "I’m spiraling what now",
      "stop catastrophizing",
      "challenge this belief",
      "deal with anxiety right now",
      "thought record helper",
      "imposter syndrome help",
      "overthinking loop break",
      "cope with rejection",
      "calm before a hard talk",
      "handle criticism better",
      "I feel like a failure",
      "reduce shame and guilt",
      "anger thought check",
      "stress at work reframe",
      "public speaking fear",
      "social anxiety script",
      "turn panic into plan",
      "make a balanced thought",
      "coach myself through this"
      ],
      boosters: [
        "Maintain a calm, validating tone when presenting the dispute.",
        "Always ground the dispute in logic or evidence rather than platitudes.",
        "Offer at least one alternative, balanced belief to replace the negative one.",
        "Ensure the Effect links back to reduced distress or constructive behavior.",
        "Encourage iteration: note that disputing may need to be repeated over time.",
        "Suggest rating emotion intensity before vs. after (0–100%) to measure shift.",
        "Use multiple disputing angles: evidence, logic, perspective, pragmatism."
      ],
      definition: "A structured cognitive restructuring tool from REBT/CBT that traces the chain from an Activating event → Belief → Consequence, then challenges the belief (Dispute) and envisions a healthier Effect. Used for self-coaching, journaling, and therapy.",
      help: "Fill in each step A–E with concise statements (1–3 sentences). Use Dispute to logically test the belief. Add an Alternative belief to reinforce constructive thinking. Rate emotions before/after to see the effect. Revisit the exercise as beliefs recur.",
      fields: [
        {
          label: "Activating event",
          desc: "Trigger or situation that set off the reaction.",
          key: "event",
          ph: "e.g., My manager criticized my report in the team meeting.",
          type: "textarea"
        },
        {
          label: "Belief or thought",
          desc: "Your interpretation, assumption, or judgment.",
          key: "belief",
          ph: "e.g., \"I must be bad at my job.\"",
          type: "textarea"
        },
        {
          label: "Consequence (feelings/behavior)",
          desc: "The emotional and behavioral outcome of that belief.",
          key: "consequence",
          ph: "e.g., I felt anxious and avoided new projects.",
          type: "textarea"
        },
        {
          label: "Dispute (challenge the belief)",
          desc: "Evidence, logic, or perspective that challenges the belief.",
          key: "dispute",
          ph: "e.g., Feedback helps me grow; one report doesn’t define me.",
          type: "textarea"
        },
        {
          label: "Alternative belief (optional)",
          desc: "Balanced replacement thought that is true and helpful.",
          key: "alt_belief",
          ph: "e.g., I can learn from mistakes and still be competent.",
          type: "textarea"
        },
        {
          label: "Effect (new outcome)",
          desc: "Healthier emotions, thoughts, or behaviors after disputing.",
          key: "effect",
          ph: "e.g., I feel motivated to improve and more confident about my skills.",
          type: "textarea"
        },
        {
          label: "Coach/Guide notes (optional)",
          desc: "Extra reflections or guidance if working with a coach or mentor.",
          key: "coach_notes",
          ph: "Coach suggests practicing self-compassion statements.",
          type: "textarea"
        }
      ],
      template: ({ event, belief, consequence, dispute, alt_belief, effect, coach_notes, ctx, audience, style, tone }) => [
    'Apply the ABCDE cognitive restructuring flow.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    event && ('A — Activating event:\n' + event),
    belief && ('B — Belief:\n' + belief),
    consequence && ('C — Consequence:\n' + consequence),
    dispute && ('D — Dispute:\n' + dispute),
    alt_belief && ('Alternative belief:\n' + alt_belief),
    effect && ('E — Effect:\n' + effect),
    coach_notes && ('Coach/Guide notes:\n' + coach_notes),
    'Output:\n1) Clear chain A→B→C\n2) Disputed belief with logical alternative\n3) Healthier effect or outlook\n\nChecklist:\n- [ ] All steps A–E filled\n- [ ] Dispute grounded in evidence/logic\n- [ ] Alternative belief stated\n- [ ] Effect shows reduced distress or constructive behavior'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "abcde — activating event · belief · consequence · dispute · effect abcde-cbt-framework a structured cognitive restructuring tool from rebt/cbt that traces the chain from an activating event → belief → consequence, then challenges the belief (dispute) and envisions a healthier effect. used for self-coaching, journaling, and therapy. fill in each step a–e with concise statements (1–3 sentences). use dispute to logically test the belief. add an alternative belief to reinforce constructive thinking. rate emotions before/after to see the effect. revisit the exercise as beliefs recur. type:framework use:problem-framing use:recipe topic:bias use:scope-management use:presentations level:intermediate topic:future-self psychology self-reflection critical-thinking product-management reframe negative thoughts or assumptions self-coaching through emotional situations journaling for stress or anxiety cognitive bias analysis coaching or mentoring dialogue maintain a calm, validating tone when presenting the dispute. always ground the dispute in logic or evidence rather than platitudes. offer at least one alternative, balanced belief to replace the negative one. ensure the effect links back to reduced distress or constructive behavior. encourage iteration: note that disputing may need to be repeated over time. suggest rating emotion intensity before vs. after (0–100%) to measure shift. use multiple disputing angles: evidence, logic, perspective, pragmatism. activating event belief or thought consequence (feelings/behavior) dispute (challenge the belief) alternative belief (optional) effect (new outcome) coach/guide notes (optional)"
      }
    },

    {
      id: "active_imagination",
      slug: "active-imagination-dialogue",
      label: "Active Imagination — Dialogue with Inner Voices",
      kind: "framework",
      categories: [
        "psychology",
        "creativity",
        "self-reflection"
      ],
      tags: [
        "type:technique",
        "use:brainstorming",
        "phase:explore",
        "type:framework",
        "use:copywriting",
        "use:pattern",
        "level:advanced"
      ],
      use_cases: [
        "gain insight by conversing with parts of yourself or imagined characters",
        "resolve inner conflicts through symbolic dialogue",
        "explore archetypes such as Shadow, Inner Child, or Sage",
        "unlock creative or unconscious material for art, writing, or problem-solving",
        "process dreams or symbolic imagery",
        "develop characters or themes for creative writing",
             "talk to my inner critic",
      "dialogue with my anxiety",
      "meet my shadow self",
      "inner child conversation",
      "creative block unlock",
      "character voice generator",
      "dream dialogue guide",
      "ask my wiser self",
      "find my muse",
      "story idea from voices",
      "two chairs exercise",
      "parts work journaling",
      "argue both sides inside",
      "mentor in my head",
      "future me advice",
      "give my fear a voice",
      "map my inner cast",
      "resolve inner conflict",
      "make a scene with parts",
      "turn feelings into a story"
      ],
      boosters: [
        "Maintain a consistent voice for each inner figure; let them sound distinct from the Self.",
        "Allow symbolic or metaphorical language if it arises; do not over-rationalize.",
        "If new figures emerge, introduce them naturally and allow them to interact.",
        "Ensure the Self pauses at intervals to reflect on what was revealed.",
        "If strong emotion arises, pause to note it explicitly before continuing.",
        "Dialogue should run at least 3–5 exchanges before synthesis.",
        "Conclude with reflection and, if useful, an integration step (action, ritual, or affirmation).",
        "If a voice becomes overwhelming, return to the Self and close with grounding."
      ],
      definition: "A Jungian method for engaging the unconscious by entering into dialogue with inner figures or voices. The process surfaces hidden thoughts, emotions, archetypes, and symbols, bridging conscious and unconscious and fostering creativity, healing, and self-awareness.",
      help: "Start with an intention, question, or mood. Choose one or more inner figures (e.g., Inner Critic, Shadow, Guide). The model will script a dialogue where Self and the inner figures exchange perspectives. Allow new figures or symbols to appear naturally. Conclude by synthesizing insights, themes, or imagery, and consider a closing ritual to integrate the experience.",
      fields: [
        {
          label: "Intention or entry question (optional)",
          key: "intention",
          ph: "e.g., What is blocking my creativity? What do I need to learn?",
          type: "textarea"
        },
        {
          label: "Issue or theme to explore",
          key: "issue",
          ph: "e.g., Feeling blocked in my creative work",
          type: "textarea"
        },
        {
          label: "Inner figure(s) or voices",
          autofill: "persona->inline",
          itemLabel: "figure",
          itemType: "typeahead",
          key: "figures",
          max: 5,
          min: 1,
          ph: "Start typing to pick or name an inner voice (e.g., Inner Critic, Wise Old Man, Future Self)…",
          type: "repeater"
        },
        {
          label: "Tone/style of the voices (optional)",
          key: "tone",
          ph: "e.g., Harsh, playful, wise, cryptic",
          type: "text"
        },
        {
          label: "Scenario or mood (optional)",
          key: "scenario",
          ph: "Describe the emotional entry point, e.g., “I felt anxious before bed.”",
          type: "textarea"
        },
        {
          label: "Symbols or imagery (optional)",
          key: "symbols",
          ph: "Any recurring images, dream fragments, colors, animals, places…",
          type: "textarea"
        },
        {
          label: "Closing ritual or integration step (optional)",
          key: "closing",
          ph: "e.g., Thank the figure, visualize integration, commit to one action",
          type: "textarea"
        }
      ],
      template: ({ intention, issue, figures, tone, scenario, symbols, closing, ctx }) => [
    'Initiate an Active Imagination dialogue.',
    ctx && `Context: ${ctx}`,
    intention && `Intention/entry question: ${intention}`,
    issue && `Issue: ${issue}`,
    scenario && `Scenario/mood: ${scenario}`,
    figures && (
      'Inner figures:\n' + String(figures)
        .split(/\n+/).map(s => s.trim()).filter(Boolean)
        .map((x,i) => `${i+1}. ${x}${tone ? ` (tone: ${tone})` : ''}`)
        .join('\n')
    ),
    symbols && `Symbols/imagery: ${symbols}`,
    'Dialogue:\nSelf: (Begin by addressing the figure(s) about the issue.)\n<Each figure responds in turn, with distinct voices>\n... (Continue alternating for at least 3–5 exchanges) ...',
    'Synthesis:\nSummarize in 2–3 sentences the main insights, archetypes, or symbols revealed.',
    closing && `Closing ritual/integration: ${closing}`,
    'Checklist:\n- [ ] At least one intention/question stated\n- [ ] Distinct voices for each figure\n- [ ] Dialogue runs multiple exchanges\n- [ ] Symbols noted and reflected on\n- [ ] Concluding synthesis provided\n- [ ] Optional closing ritual/integration step recorded'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "active imagination — dialogue with inner voices active-imagination-dialogue a jungian method for engaging the unconscious by entering into dialogue with inner figures or voices. the process surfaces hidden thoughts, emotions, archetypes, and symbols, bridging conscious and unconscious and fostering creativity, healing, and self-awareness. start with an intention, question, or mood. choose one or more inner figures (e.g., inner critic, shadow, guide). the model will script a dialogue where self and the inner figures exchange perspectives. allow new figures or symbols to appear naturally. conclude by synthesizing insights, themes, or imagery, and consider a closing ritual to integrate the experience. type:technique use:brainstorming phase:explore type:framework use:copywriting use:pattern level:advanced psychology creativity self-reflection gain insight by conversing with parts of yourself or imagined characters resolve inner conflicts through symbolic dialogue explore archetypes such as shadow, inner child, or sage unlock creative or unconscious material for art, writing, or problem-solving process dreams or symbolic imagery develop characters or themes for creative writing maintain a consistent voice for each inner figure; let them sound distinct from the self. allow symbolic or metaphorical language if it arises; do not over-rationalize. if new figures emerge, introduce them naturally and allow them to interact. ensure the self pauses at intervals to reflect on what was revealed. if strong emotion arises, pause to note it explicitly before continuing. dialogue should run at least 3–5 exchanges before synthesis. conclude with reflection and, if useful, an integration step (action, ritual, or affirmation). if a voice becomes overwhelming, return to the self and close with grounding. intention or entry question (optional) issue or theme to explore inner figure(s) or voices tone/style of the voices (optional) scenario or mood (optional) symbols or imagery (optional) closing ritual or integration step (optional)"
      }
    },

    {
      id: "addie",
      slug: "addie-instructional-design",
      label: "ADDIE — Analyze · Design · Develop · Implement · Evaluate",
      kind: "strategy",
      categories: [
        "teaching",
        "planning",
        "design"
      ],
      tags: [
        "type:framework",
        "use:pattern",
        "use:goals",
        "use:evaluation",
        "level:beginner",
        "use:ad-copy"
      ],
      use_cases: [
        "plan and structure an educational course or program",
        "develop training or e-learning materials systematically",
        "design corporate or professional development training",
        "align learning outcomes with assessments",
        "review, evaluate, and improve instructional content",
          "design a course fast",
      "make a lesson plan",
      "new hire training plan",
      "outline a workshop",
      "e-learning roadmap",
      "define learning goals",
      "pick assessments that fit",
      "course module outline",
      "onboarding program steps",
      "training slide outline",
      "write a syllabus",
      "practice activities list",
      "course project ideas",
      "evaluate my training",
      "fix a weak lesson",
      "turn goals into lessons",
      "build a simple curriculum",
      "learner outcomes check",
      "roll out and measure",
      "improve this course"
      ],
      boosters: [
        "In Analyze, prompt for learner profile, prior knowledge, and constraints before moving on.",
        "In Design, enforce alignment between objectives, strategies, and assessments.",
        "In Develop, ensure deliverables are concrete (slides, exercises, quizzes).",
        "In Implement, specify delivery method (online, in-person, blended) and timeline.",
        "In Evaluate, include both formative (ongoing) and summative (end) evaluation methods.",
        "Check alignment: every objective should map to a strategy, activity, and assessment.",
        "Encourage iteration: capture improvements after pilot delivery."
      ],
      definition: "An instructional design framework with five phases—Analyze, Design, Develop, Implement, Evaluate—for creating and improving learning experiences. ADDIE is iterative and cyclical: insights from evaluation feed into future cycles of analysis and design.",
      help: "Provide the training topic, learner personas, objectives, and delivery context. The model will expand these through each ADDIE phase to produce a structured instructional design plan. Remember: each phase informs the next, and evaluation loops back to improve the whole design.",
      fields: [
        {
          label: "Training topic",
          desc: "The subject matter or skill to be taught.",
          key: "topic",
          ph: "e.g., Basics of Data Science",
          type: "text"
        },
        {
          label: "Learner audience",
          autofill: "persona->inline",
          desc: "Who the learners are, including role, age, or prior knowledge.",
          itemLabel: "learner",
          itemType: "typeahead",
          key: "audience",
          max: 10,
          min: 1,
          ph: "e.g., Junior marketing analysts with no coding background, Nurse Trainee, Sales Manager, New Hire",
          type: "repeater"
        },
        {
          label: "Learning objectives (optional)",
          desc: "Specific goals or outcomes for the learning.",
          key: "objectives",
          ph: "e.g., Understand key Python libraries; build a simple regression model.",
          type: "textarea"
        },
        {
          label: "Assessment methods (optional)",
          desc: "How learning will be measured.",
          key: "assessment",
          ph: "e.g., Quizzes, project work, peer review, certification exam",
          type: "textarea"
        },
        {
          label: "Delivery mode/timeline (optional)",
          desc: "How and when training will be delivered.",
          key: "delivery",
          ph: "e.g., 4-week blended course with weekly online sessions + in-person workshop",
          type: "textarea"
        },
        {
          label: "Resources or constraints (optional)",
          desc: "Budget, tools, platforms, or limits that affect design.",
          key: "resources",
          ph: "e.g., LMS required; budget capped at $10k",
          type: "textarea"
        }
      ],
      template: ({ topic, audience, objectives, assessment, delivery, resources, ctx, style, tone }) => [
    'Apply the ADDIE instructional design framework.',
    ctx && `Context: ${ctx}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    topic && `Topic: ${topic}`,
    audience && (
      'Learner audience:\n' + String(audience)
        .split(/\n+/).map(s => s.trim()).filter(Boolean)
        .map((x,i) => `${i+1}. ${x}`)
        .join('\n')
    ),
    objectives && ('Objectives:\n' + objectives),
    assessment && ('Assessment methods:\n' + assessment),
    delivery && ('Delivery mode/timeline:\n' + delivery),
    resources && ('Resources/constraints:\n' + resources),
    'Output (five phases):',
    '1) Analyze: learner needs, gaps, constraints, and context.',
    '2) Design: learning objectives, strategies, assessments, sequencing, and alignment.',
    '3) Develop: concrete materials and activities tied to design.',
    '4) Implement: delivery plan (who, when, where, how).',
    '5) Evaluate: formative and summative evaluation methods linked to objectives.',
    'Checklist:\n- [ ] Objectives measurable\n- [ ] Assessments aligned\n- [ ] Delivery plan realistic\n- [ ] Evaluation cycle clear'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "addie — analyze · design · develop · implement · evaluate addie-instructional-design an instructional design framework with five phases—analyze, design, develop, implement, evaluate—for creating and improving learning experiences. addie is iterative and cyclical: insights from evaluation feed into future cycles of analysis and design. provide the training topic, learner personas, objectives, and delivery context. the model will expand these through each addie phase to produce a structured instructional design plan. remember: each phase informs the next, and evaluation loops back to improve the whole design. type:framework use:pattern use:goals use:evaluation level:beginner use:ad-copy teaching planning design plan and structure an educational course or program develop training or e-learning materials systematically design corporate or professional development training align learning outcomes with assessments review, evaluate, and improve instructional content in analyze, prompt for learner profile, prior knowledge, and constraints before moving on. in design, enforce alignment between objectives, strategies, and assessments. in develop, ensure deliverables are concrete (slides, exercises, quizzes). in implement, specify delivery method (online, in-person, blended) and timeline. in evaluate, include both formative (ongoing) and summative (end) evaluation methods. check alignment: every objective should map to a strategy, activity, and assessment. encourage iteration: capture improvements after pilot delivery. training topic learner audience learning objectives (optional) assessment methods (optional) delivery mode/timeline (optional) resources or constraints (optional)"
      }
    },

    {
      id: "aida",
      slug: "aida-model",
      label: "AIDA — Attention · Interest · Desire · Action",
      kind: "strategy",
      categories: [
        "storytelling-frameworks",
        "prompt-development-techniques"
      ],
      tags: [
        "type:framework",
        "use:healing",
        "phase:apply",
        "level:beginner",
        "use:ad-copy",
        "use:task-brief",
        "phase:premortem"
      ],
      use_cases: [
        "ad copy",
        "landing page messaging",
        "email campaign copy",
        "social post copy",
        "ad headlines & CTAs",
        "video script teaser",
        "push notification blurb",
             "write ad copy",
      "catchy headline",
      "scroll-stopping hook",
      "product teaser",
      "landing page hero",
      "short CTA ideas",
      "email subject lines",
      "boost clicks",
      "write promo post",
      "app store description",
      "push notification line",
      "ad for my product",
      "turn interest into action",
      "convert readers",
      "social ad script",
      "15-sec video hook",
      "make them care",
      "simple sales copy",
      "write call to action",
      "launch announcement"
      ],
      boosters: [
        "Return 3 headline/CTA variants; rank them and state the top-1 reason in one short line."
      ],
      definition: "A classic four-stage persuasion model that moves an audience from attention to action.",
      help: "Classic marketing flow for persuasive outputs.",
      fields: [
        {
          label: "Product/offer",
          desc: "What you are promoting.",
          key: "product",
          ph: "e.g., Email warmup tool",
          type: "text"
        },
        {
          label: "Key benefit",
          desc: "Primary value to highlight.",
          key: "key_benefit",
          ph: "e.g., Better deliverability in 2 weeks",
          type: "text"
        },
        {
          label: "Primary call-to-action",
          desc: "The action to take.",
          key: "cta",
          ph: "e.g., Start free trial",
          type: "text"
        },
        {
          label: "Constraints",
          desc: "Rules/limits to follow.",
          key: "constraints",
          ph: "e.g., <=120 words; no jargon",
          type: "textarea"
        }
      ],
      template: ({product,key_benefit,cta,constraints,ctx,audience,style,tone})=>[
      `Use AIDA to craft a persuasive message.`,
      ctx&&`Context: ${ctx}`,
      product&&`Offer: ${product}`,
      audience&&`Audience: ${audience}`,
      key_benefit&&`Key benefit/value: ${key_benefit}`,
      style&&`Style: ${style}`,
      tone&&`Tone: ${tone}`,
      constraints&&`Constraints: ${constraints}`,
      cta&&`End with this CTA: ${cta}`
    ].filter(Boolean).join('\n'),
      meta: {
        search_text: "aida — attention · interest · desire · action aida-model a classic four-stage persuasion model that moves an audience from attention to action. classic marketing flow for persuasive outputs. type:framework use:healing phase:apply level:beginner use:ad-copy use:task-brief phase:premortem storytelling-frameworks prompt-development-techniques ad copy landing page messaging email campaign copy social post copy ad headlines & ctas video script teaser push notification blurb return 3 headline/cta variants; rank them and state the top-1 reason in one short line. product/offer key benefit primary call-to-action constraints"
      }
    },

    {
      id: "anekantavada_syadvada",
      slug: "anekantavada-syadvada-jain",
      label: "Anekāntavāda & Syādvāda (Jain Many-Sided Logic)",
      kind: "heuristic",
      categories: [
        "reasoning",
        "psychology",
        "cultural-frameworks",
        "ethics",
        "quality"
      ],
      tags: [
        "type:framework",
        "use:brainstorming",
        "use:decision-making",
        "use:healing",
        "phase:explore",
        "phase:apply",
        "level:advanced",
        "use:scope-management",
        "use:pattern",
        "use:copywriting",
        "topic:bias",
        "use:content"
      ],
      use_cases: [
        "frame a contentious issue via multiple partial truths",
        "generate sevenfold qualified statements (syādvāda)",
        "surface context-conditional claims",
        "analyze bias in reasoning by surfacing missing standpoints",
        "design inclusive policies or ethical frameworks with pluralist grounding",
        "support cross-cultural dialogue and conflict resolution",
              "see both sides",
      "balanced view",
      "add nuance",
      "avoid black and white",
      "find partial truths",
      "many angles of issue",
      "phrase with caveats",
      "it depends wording",
      "qualify my claim",
      "list perspectives",
      "reduce polarization",
      "bridge disagreements",
      "cross-cultural framing",
      "write fair summary",
      "respect context",
      "multiple truths phrasing",
      "argue gently",
      "add nuance to debate",
      "both/and thinking",
      "find common ground"
      ],
      boosters: [
        "Always present at least 3 distinct standpoints drawn from different cultural or disciplinary perspectives.",
        "Use “in some respect…” qualifiers to avoid absolutist claims.",
        "Explicitly acknowledge Jain origins of the framework to prevent cultural erasure.",
        "Encourage recognition of whose voices are absent or marginalized in the standpoints.",
        "Preserve conditionality—never collapse perspectives into a single universal truth.",
        "Map out the sevenfold Syādvāda forms where possible: it is; it is not; it is and it is not; it is indescribable; it is and is indescribable; it is not and is indescribable; it is, it is not, and is indescribable."
      ],
      definition: "A Jain philosophical method: Anekāntavāda (many-sidedness) affirms that truth is always partial, while Syādvāda formalizes this via sevenfold conditional predication. Together, they model pluralism, humility, and inclusivity in reasoning and decision-making.",
      help: "List the issue or claim. Provide multiple standpoints, including marginalized perspectives. Generate syādvāda-style qualified statements (“in some respect it is…”). Then synthesize by highlighting limits, contradictions, and coexisting truths, while noting cultural origins.",
      fields: [
        {
          label: "Issue/claim under analysis",
          key: "issue",
          ph: "Describe the claim or debate.",
          type: "textarea"
        },
        {
          label: "Standpoints (naya)",
          desc: "List viewpoints from disciplines, cultures, or contexts.",
          key: "standpoints",
          ph: "Economic…\nEcological…\nLegal…",
          type: "textarea"
        },
        {
          label: "Cultural/marginalized perspectives",
          desc: "Perspectives often excluded from dominant narratives.",
          key: "cultural",
          ph: "Indigenous view…\nDalit perspective…\nNon-Western epistemology…",
          type: "textarea"
        },
        {
          label: "Key evidence by standpoint",
          key: "evidence",
          ph: "Map data or reasoning to each standpoint.",
          type: "textarea"
        },
        {
          label: "Bias/absence check",
          desc: "Who is missing or stereotyped? How might bias distort the framing?",
          key: "bias",
          ph: "Women’s voices missing; overemphasis on economic lens.",
          type: "textarea"
        },
        {
          label: "Qualified statements (syād-…)",
          key: "predications",
          ph: "In some respect it is…\nIn some respect it is not…",
          type: "textarea"
        },
        {
          label: "Sevenfold Syādvāda mapping (optional)",
          desc: "Explicitly write each of the 7 forms to discipline reasoning.",
          key: "sevenfold",
          ph: "1. In some respect it is...\n2. In some respect it is not...\n...",
          type: "textarea"
        },
        {
          label: "Application/implication (optional)",
          desc: "How plural reasoning could inform action, design, or policy.",
          key: "application",
          ph: "e.g., Inclusive policy design; mediation strategy.",
          type: "textarea"
        }
      ],
      template: ({ issue, standpoints, cultural, evidence, bias, predications, sevenfold, application, ctx }) => [
    'Apply Anekāntavāda / Syādvāda (many-sided conditional reasoning).',
    ctx && `Context: ${ctx}`,
    issue && `Issue:\n${issue}`,
    standpoints && ('Standpoints:\n' + String(standpoints).split(/\n+/).map((x,i)=>`${i+1}. ${x}`).join('\n')),
    cultural && ('Cultural/marginalized perspectives:\n' + cultural),
    evidence && `Evidence (by standpoint):\n${evidence}`,
    bias && `Bias/absence check:\n${bias}`,
    predications && `Qualified statements (syādvāda style):\n${predications}`,
    sevenfold && `Sevenfold mapping:\n${sevenfold}`,
    application && `Application/implication:\n${application}`,
    'Synthesis:\n1) Summarize conditional truths.\n2) Highlight the limits and contradictions of each perspective.\n3) Acknowledge missing voices.\n4) Note the Jain origins of the framework.\n5) Suggest applications in pluralist reasoning or inclusive policy.'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "anekāntavāda & syādvāda (jain many-sided logic) anekantavada-syadvada-jain a jain philosophical method: anekāntavāda (many-sidedness) affirms that truth is always partial, while syādvāda formalizes this via sevenfold conditional predication. together, they model pluralism, humility, and inclusivity in reasoning and decision-making. list the issue or claim. provide multiple standpoints, including marginalized perspectives. generate syādvāda-style qualified statements (“in some respect it is…”). then synthesize by highlighting limits, contradictions, and coexisting truths, while noting cultural origins. type:framework use:brainstorming use:decision-making use:healing phase:explore phase:apply level:advanced use:scope-management use:pattern use:copywriting topic:bias use:content reasoning psychology cultural-frameworks ethics quality frame a contentious issue via multiple partial truths generate sevenfold qualified statements (syādvāda) surface context-conditional claims analyze bias in reasoning by surfacing missing standpoints design inclusive policies or ethical frameworks with pluralist grounding support cross-cultural dialogue and conflict resolution always present at least 3 distinct standpoints drawn from different cultural or disciplinary perspectives. use “in some respect…” qualifiers to avoid absolutist claims. explicitly acknowledge jain origins of the framework to prevent cultural erasure. encourage recognition of whose voices are absent or marginalized in the standpoints. preserve conditionality—never collapse perspectives into a single universal truth. map out the sevenfold syādvāda forms where possible: it is; it is not; it is and it is not; it is indescribable; it is and is indescribable; it is not and is indescribable; it is, it is not, and is indescribable. issue/claim under analysis standpoints (naya) cultural/marginalized perspectives key evidence by standpoint bias/absence check qualified statements (syād-…) sevenfold syādvāda mapping (optional) application/implication (optional)"
      }
    },

    {
      id: "argument-map",
      slug: "argument-mapping",
      label: "Argument Mapping — Claim · Premises · Objections · Rejoinders",
      kind: "strategy",
      categories: [
        "reasoning",
        "critical-thinking",
        "design",
        "psychology",
        "ethics"
      ],
      tags: [
        "type:framework",
        "use:presentations",
        "use:teaching",
        "topic:future-self",
        "phase:apply",
        "level:beginner",
        "phase:premortem",
        "use:pattern",
        "use:iteration",
        "use:copywriting"
      ],
      use_cases: [
        "debate preparation and rebuttal planning",
        "design trade-offs and product decisions",
        "policy briefs and litigation memos",
        "essay planning and thesis testing",
        "negotiation strategy",
        "ethical reasoning and value debates",
        "teaching logic and critical thinking",
        "debiasing reasoning by mapping assumptions",
           "map my argument",
      "structure my essay",
      "make a logical case",
      "find weak points",
      "steelman the other side",
      "build rebuttals",
      "pros and cons map",
      "outline debate points",
      "claim and reasons",
      "test my thesis",
      "avoid logical fallacies",
      "prepare for cross",
      "negotiation points",
      "policy tradeoffs",
      "decision rationale",
      "objection handling",
      "evidence checklist",
      "turn notes to outline",
      "compare arguments",
      "simplify complex issue"
      ],
      boosters: [
        "Always generate at least one objection, even if the input is one-sided.",
        "Map each rejoinder directly to its objection for clarity.",
        "Highlight the warrant if provided; if missing, suggest one.",
        "Return a 1–5 confidence score and note which missing element would strengthen the argument most.",
        "Flag if the claim relies heavily on assumptions rather than evidence.",
        "Include both empirical (fact-based) and normative (value-based) premises if possible.",
        "Identify any logical fallacies that weaken the argument."
      ],
      definition: "Argument mapping lays out claims, supporting premises, objections, and rebuttals as a tree. It surfaces hidden assumptions, clarifies logical structure, and reveals weaknesses. Toulmin elements (grounds, warrant, backing, qualifier, rebuttal) can be layered in for depth.",
      help: "Provide a thesis, premises, objections, and rejoinders. Optionally add warrants, backing, qualifiers, and a counter-thesis. The output includes a structured ASCII tree, an assessment of strengths/weaknesses, and suggestions for refinement.",
      fields: [
        {
          label: "Thesis / main claim",
          key: "thesis",
          ph: "e.g., We should adopt Option B.",
          type: "text"
        },
        {
          label: "Premises (one per line)",
          key: "premises",
          ph: "e.g., Lower cost\\nHigher reliability\\nFaster to ship",
          type: "textarea"
        },
        {
          label: "Evidence / grounds",
          key: "evidence",
          ph: "Studies, metrics, citations",
          type: "textarea"
        },
        {
          label: "Warrant (optional)",
          desc: "The reasoning principle that links premises to claim.",
          key: "warrant",
          ph: "e.g., Lower costs usually improve sustainability.",
          type: "textarea"
        },
        {
          label: "Backing (optional)",
          desc: "Further support for the warrant (laws, principles, expert opinion).",
          key: "backing",
          ph: "Industry reports; legal precedents",
          type: "textarea"
        },
        {
          label: "Qualifier (optional)",
          desc: "How strongly the claim is asserted.",
          key: "qualifier",
          ph: "e.g., probably, almost certainly",
          type: "text"
        },
        {
          label: "Counter-thesis (optional)",
          desc: "The strongest opposing claim.",
          key: "counter",
          ph: "e.g., We should adopt Option A.",
          type: "textarea"
        },
        {
          label: "Objections (one per line)",
          key: "objections",
          ph: "e.g., Vendor risk\\nMigration cost",
          type: "textarea"
        },
        {
          label: "Rejoinders (one per line)",
          key: "rejoinders",
          ph: "e.g., Multi-vendor strategy\\nStaged rollout",
          type: "textarea"
        },
        {
          label: "Implications (optional)",
          desc: "Consequences if thesis is accepted or rejected.",
          key: "implications",
          ph: "If adopted: cost savings; If rejected: lost market share",
          type: "textarea"
        },
        {
          label: "Standard of proof",
          key: "standard",
          ph: "preponderance | clear & convincing | beyond reasonable doubt",
          type: "text"
        }
      ],
      template: ({ thesis, premises, evidence, warrant, backing, qualifier, counter, objections, rejoinders, implications, standard, ctx }) => [
    'Construct an argument map with Toulmin elements where possible.',
    ctx && `Context: ${ctx}`,
    thesis && `Thesis: ${thesis}`,
    counter && `Counter-thesis: ${counter}`,
    evidence && `Evidence: ${evidence}`,
    warrant && `Warrant: ${warrant}`,
    backing && `Backing: ${backing}`,
    qualifier && `Qualifier: ${qualifier}`,
    standard && `Standard of proof: ${standard}`,
    'Output:',
    'A) ASCII tree:',
    'Claim',
    '├─ Premises',
    premises && String(premises).split(/\\n+/).filter(Boolean).map((p,i)=>`│  ├─ P${i+1}: ${p}`).join('\\n'),
    warrant && `├─ Warrant: ${warrant}`,
    backing && `├─ Backing: ${backing}`,
    qualifier && `├─ Qualifier: ${qualifier}`,
    '├─ Objections',
    objections && String(objections).split(/\\n+/).filter(Boolean).map((o,i)=>`│  ├─ O${i+1}: ${o}`).join('\\n'),
    '└─ Rejoinders',
    rejoinders && String(rejoinders).split(/\\n+/).filter(Boolean).map((r,i)=>`   ├─ R${i+1}: ${r}`).join('\\n'),
    implications && `Implications:\n${implications}`,
    'B) Assessment:',
    '- Strongest premise and strongest objection.',
    '- Confidence score (1–5).',
    '- Note missing premise, warrant, or evidence.',
    '- Flag any logical fallacies if present.',
    'C) Revision:',
    '- Suggest a refined thesis or structure if warranted.',
    '- Propose additional evidence or counter-arguments.'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "argument mapping — claim · premises · objections · rejoinders argument-mapping argument mapping lays out claims, supporting premises, objections, and rebuttals as a tree. it surfaces hidden assumptions, clarifies logical structure, and reveals weaknesses. toulmin elements (grounds, warrant, backing, qualifier, rebuttal) can be layered in for depth. provide a thesis, premises, objections, and rejoinders. optionally add warrants, backing, qualifiers, and a counter-thesis. the output includes a structured ascii tree, an assessment of strengths/weaknesses, and suggestions for refinement. type:framework use:presentations use:teaching topic:future-self phase:apply level:beginner phase:premortem use:pattern use:iteration use:copywriting reasoning critical-thinking design psychology ethics debate preparation and rebuttal planning design trade-offs and product decisions policy briefs and litigation memos essay planning and thesis testing negotiation strategy ethical reasoning and value debates teaching logic and critical thinking debiasing reasoning by mapping assumptions always generate at least one objection, even if the input is one-sided. map each rejoinder directly to its objection for clarity. highlight the warrant if provided; if missing, suggest one. return a 1–5 confidence score and note which missing element would strengthen the argument most. flag if the claim relies heavily on assumptions rather than evidence. include both empirical (fact-based) and normative (value-based) premises if possible. identify any logical fallacies that weaken the argument. thesis / main claim premises (one per line) evidence / grounds warrant (optional) backing (optional) qualifier (optional) counter-thesis (optional) objections (one per line) rejoinders (one per line) implications (optional) standard of proof"
      }
    },
    
   {
  id: "avm_framework",
  slug: "amor-vita-memoria-avm",
  label: "Amor–Vita–Memoria (AVM)",
  kind: "framework",

  // Discovery taxonomy tuned for grief-aware reflection & journaling
  categories: [
    "self-reflection",
    "wellbeing",
    "personal-development",
    "mental-health",
    "grief"
  ],
  tags: [
    "type:framework",
    "use:reflection",
    "use:journaling",
    "use:gratitude-journaling",
    "use:self-care",
    "topic:values",
    "topic:gratitude",
    "topic:grief",
    "topic:bereavement",
    "origin:original",
    "level:beginner"
  ],

  // Grief, gratitude, and continuing-bonds forward use-cases
  use_cases: [
    "mourning journal — name who you hold love for (amāre), how you will live today (vīvere), and who/what you remember (mortuōrum)",
    "daily gratitude in grief — one thank-you to a person, place, pet, mentor, or prior self",
    "continuing bonds — write to the deceased or to a past self; keep the thread",
    "tiny act of living — choose one small, reversible step done in honor/memory",
    "anniversary & hard-day ritual — light touch ritual + one memory vignette",
    "values-under-pressure — choose what to protect when energy is low",
    "evening close — name a loss, record a lesson, thank an ancestor/mentor",
          "grief journal starter",
      "write to loved one",
      "honor their memory",
      "daily gratitude in grief",
      "small step today",
      "anniversary ritual",
      "hard day plan",
      "letter to past self",
      "keep the bond",
      "remember and live",
      "thank a mentor",
      "evening close note",
      "values under stress",
      "gentle morning check-in",
      "release guilt",
      "say goodbye safely",
      "name my feelings",
      "memorial message",
      "grief-safe self care",
      "tiny act of living"
  ],

  // Gentle grief-aware nudges
  boosters: [
    "Write AVM as three questions first: Mementō amāre (who to love/protect?), Mementō vīvere (how to live today?), Mementō mortuōrum (who/what to remember?).",
    "Name one real person (living or dead) or part of self to protect today (amāre).",
    "Pick one tiny, preferably reversible step (≤10 minutes) done in honor or care (vīvere).",
    "Tell a short memory vignette with one sensory detail; add one line of gratitude (mortuōrum).",
    "Write in second person if helpful (“I miss you…”, “You taught me…”).",
    "If you get stuck, make it smaller and more reversible; tears are data, not failure.",
    "If any lens feels red, stop and soften the plan; yellow means adjust the scope."
  ],

  // Concise description with provenance note
  definition:
    "AVM is a three-lens journaling scaffold for grief, gratitude, and gentle momentum: Mementō amāre (remember to love/protect), Mementō vīvere (remember to live—one tiny act), Mementō mortuōrum (remember the dead—carry the story). Use it to keep bonds, act softly, and honor limits. Professional note: AVM is a user-originated working pattern (non-canonical) presented here for practical use.",

  help:
    "Walk the triangle each day. Amāre: who/what you’ll actively love or protect. Vīvere: one reversible act of living you can finish now. Mortuōrum: a memory vignette + one gratitude line. Green/green/green → proceed; yellow → adjust; red → soften or rest. Use letter-writing to a loved one or past self if it helps.",

  // Fields: journaling-first AVM + legacy AVM action-planning (kept for backward compat)
  fields: [
    // Situation
    { label: "What’s happening (one sentence)", key: "situation", type: "textarea", ph: "State the decision, mood, or moment plainly." },

    // ——— Mementō Trio (journaling-first) ———
    { label: "Dedication (optional)", key: "dedication", type: "text", ph: "For __ (name, role, pet, place, or prior self)" },
    { label: "Loss or tenderness you’re holding", key: "loss_kind", type: "select",
      options: ["a loved one", "a former self", "the life I once had", "a pet", "other"], ph: "Name the shape of the ache." },

    // Mementō amāre — remember to love/protect
    { label: "Mementō amāre — Who/what will you actively love/protect today?", key: "amare_who", type: "text", ph: "Name them (or a part of you)." },

    // Mementō vīvere — remember to live (tiny, reversible)
    { label: "Mementō vīvere — Tiny act of living (≤10 min)", key: "vivere_act", type: "textarea", ph: "One concrete act done in honor/care, preferably reversible." },

    // Mementō mortuōrum — remember the dead (or what was)
    { label: "Mementō mortuōrum — Who/what are you remembering?", key: "mortuorum_name", type: "text", ph: "A person, place, season, or prior self." },
    { label: "Memory vignette (1–3 sentences, include one sensory detail)", key: "mortuorum_memory", type: "textarea", ph: "“The way their laugh sounded in the kitchen…”" },
    { label: "Gratitude line (optional)", key: "mortuorum_gratitude", type: "text", ph: "“Thank you for teaching me __.”" },

    // ——— Legacy AVM (advanced/optional action-planning) ———
    // AMOR — care/values
    { label: "Amor — Value to honor today", key: "amor_value", type: "text", ph: "Trust, kindness, stability, creativity, health…" },
    { label: "Amor — Protected person/relationship", key: "amor_protected", type: "text", ph: "Who or what you’ll actively care for today (name them)." },
    { label: "Amor — Harm to avoid (be specific)", key: "amor_harm", type: "textarea", ph: "E.g., ‘snapping at <name>’, ‘skipping meds’, ‘doomscrolling past bedtime’." },

    // VITA — action/energy
    { label: "Vita — Next tiny step (≤10 min)", key: "vita_action", type: "textarea", ph: "One concrete, finishable action you can start now." },
    { label: "Vita — Reversibility", key: "vita_reversibility", type: "select", options: ["high", "low"], ph: "If it goes poorly, can you undo it?" },
    { label: "Vita — Today’s energy ask", key: "vita_energy", type: "select", options: ["low", "high"], ph: "Be honest about your current bandwidth." },

    // MEMORIA — lineage/limits/gratitude
    { label: "Memoria — Promises/rituals to respect", key: "memoria_commitments", type: "textarea", ph: "Medication, bedtime, therapy, movement, prayer, weekly call…" },
    { label: "Memoria — Precedent this sets (habit formed)", key: "memoria_precedent", type: "textarea", ph: "If repeated, what will this teach future-you is ‘normal’?" },
    { label: "Memoria — Long-tail risk (name the non-obvious)", key: "memoria_long_tail", type: "textarea", ph: "What’s the subtle cost if this drifts for months?" },

    // Additive helpers for wellbeing (optional)
    { label: "Gratitude — Who/what I’m thankful for (optional)", key: "gratitude_to", type: "text", ph: "Name a person, place, mentor, or prior self." },
    { label: "Support — Small ask I can make (optional)", key: "support_ask", type: "text", ph: "A lightweight request that would help today." },
    { label: "Body check-in (optional)", key: "body_signal", type: "text", ph: "Tense jaw? shallow breath? need water? note it." },

    // Decision & Debrief
    { label: "Decision", key: "decision", type: "select", options: ["do", "delay", "redesign"], ph: "Choose your path." },
    { label: "Debrief (one sentence after action)", key: "debrief", type: "textarea", ph: "What changed in you or the situation?" },

    // Optional “keep it honest” scores (reframed)
    { label: "Amor score 1–5 (reduced suffering / increased trust)", key: "amor_score", type: "text", ph: "Optional" },
    { label: "Vita score 1–5 (visible movement today)", key: "vita_score", type: "text", ph: "Optional" },
    { label: "Memoria score 1–5 (promises honored / gratitude named)", key: "memoria_score", type: "text", ph: "Optional" }
  ],

  // Rendered prompt text
  template: ({
    situation, dedication, loss_kind,
    amare_who, vivere_act, mortuorum_name, mortuorum_memory, mortuorum_gratitude,
    // legacy fields (kept for compat / optional action-planning)
    amor_value, amor_protected, amor_harm,
    vita_action, vita_reversibility, vita_energy,
    memoria_commitments, memoria_precedent, memoria_long_tail,
    gratitude_to, support_ask, body_signal,
    decision, debrief, amor_score, vita_score, memoria_score,
    ctx, audience, style, tone
  }) => [
    "Amor–Vita–Memoria — grief & gratitude journaling",
    "Note: AVM is a user-originated, non-canonical working pattern shared professionally.",
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    situation && `What’s happening: ${situation}`,
    dedication && `Dedication: ${dedication}`,
    loss_kind && `Holding: ${loss_kind}`,
    "",
    "Mementō amāre — remember to love/protect",
    amare_who && `• Who/what I’ll love/protect today: ${amare_who}`,
    "",
    "Mementō vīvere — remember to live",
    vivere_act && `• Tiny, reversible act (≤10 min):\n${vivere_act}`,
    "",
    "Mementō mortuōrum — remember the dead (or what was)",
    mortuorum_name && `• Remembering: ${mortuorum_name}`,
    mortuorum_memory && `• Memory vignette:\n${mortuorum_memory}`,
    (mortuorum_gratitude || gratitude_to) && `• Gratitude: ${mortuorum_gratitude || gratitude_to}`,
    "",
    body_signal && `Body check-in: ${body_signal}`,
    support_ask && `Support ask: ${support_ask}`,
    "",
    // — Optional legacy AVM (action-planning) —
    (amor_value || amor_protected || amor_harm || vita_action || vita_reversibility || vita_energy ||
     memoria_commitments || memoria_precedent || memoria_long_tail) && "— Optional action-planning (classic AVM) —",
    amor_value && `Amor — value to honor: ${amor_value}`,
    amor_protected && `Amor — protected person/relationship: ${amor_protected}`,
    amor_harm && `Amor — harm to avoid:\n${amor_harm}`,
    vita_action && `Vita — next tiny step (≤10 min):\n${vita_action}`,
    vita_reversibility && `Vita — reversibility: ${vita_reversibility}`,
    vita_energy && `Vita — today’s energy ask: ${vita_energy}`,
    memoria_commitments && `Memoria — promises/rituals to respect:\n${memoria_commitments}`,
    memoria_precedent && `Memoria — precedent (habit formed):\n${memoria_precedent}`,
    memoria_long_tail && `Memoria — long-tail risk (non-obvious):\n${memoria_long_tail}`,
    "",
    "Decision logic:",
    "- If any lens is red, soften or redesign. Yellow → adjust. Three greens → proceed.",
    decision && `Decision: ${decision}`,
    debrief && `Debrief (after action): ${debrief}`,
    (amor_score || vita_score || memoria_score) && [
      "",
      "Scores (optional, 1–5):",
      amor_score && `- Amor: ${amor_score}`,
      vita_score && `- Vita: ${vita_score}`,
      memoria_score && `- Memoria: ${memoria_score}`
    ].filter(Boolean).join("\n"),
    "",
    "Cadence suggestion:",
    "- Morning — Amāre: name who/what you’ll protect; send a gentle message.",
    "- Midday — Vīvere: ship one tiny, reversible act in honor or care.",
    "- Evening — Mortuōrum: a vignette + a gratitude line; close the loop."
  ].filter(Boolean).join("\n"),

  meta: {
    search_text:
      "amor–vita–memoria avm grief mourning bereavement gratitude journaling continuing bonds memento amare vivere mortuorum remember to love remember to live remember the dead tiny reversible step values care lineage limits memory vignette dedication letter writing protected person body check-in support ask ritual anniversary"
  }
},


    {
      id: "bab",
      slug: "before-after-bridge-formula",
      label: "Before-After-Bridge (BAB) — Before state · After state · Bridge (solution)",
      kind: "framework",
      categories: [
        "storytelling-frameworks",
        "writing",
        "decision"
      ],
      tags: [
        "type:framework",
        "use:copywriting",
        "use:storytelling",
        "phase:compose",
        "level:beginner",
        "topic:values",
        "use:ad-copy",
        "use:planning",
        "use:coding",
        "topic:bias",
        "use:teaching",
        "use:scope-management"
      ],
      use_cases: [
        "highlight a product’s impact by contrasting life before vs. after its use",
        "craft persuasive marketing copy, landing page sections, or fundraising appeals",
        "design pitch deck slides or investor messaging",
        "frame user onboarding as a transformation journey",
        "write social media hooks or cold outreach emails",
          "before/after story",
      "show transformation",
      "pitch my solution",
      "landing page section",
      "sales page rewrite",
      "write fundraising appeal",
      "cold email angle",
      "customer success story",
      "onboarding pitch",
      "pain vs gain copy",
      "product benefit framing",
      "simple value prop",
      "write bridge sentence",
      "compare before and after",
      "state the problem",
      "promise the after",
      "bridge to action",
      "case study intro",
      "upgrade my pitch deck",
      "reframe features to benefits"
      ],
      boosters: [
        "Exaggerate the pain of the Before with vivid, relatable detail drawn from the audience’s world.",
        "Make the After state aspirational but credible—avoid unrealistic hype.",
        "Present the Bridge as the natural, indispensable connector between the two states.",
        "If available, add proof (e.g., stats, testimonials) to make the Bridge more trustworthy.",
        "Anchor the After state with a sensory image (what they see, hear, feel).",
        "If an Objection is provided, weave a reassuring response into the Bridge.",
        "Keep language emotionally engaging—focus on how it feels, not just what it is."
      ],
      definition: "A persuasion formula that contrasts the audience’s current state (Before) with their desired future (After), positioning the offering as the Bridge that enables the transformation. It frames the gap as a story of change.",
      help: "Fill in the current pain point (Before), the desired outcome (After), and your solution (Bridge). Add audience, emotional words, objections, or proof if available. Write in the second person for resonance. The model will create a narrative showing transformation and end with a tagline.",
      fields: [
        {
          label: "Before — current pain point",
          desc: "The problem state or frustration your audience faces.",
          key: "before",
          ph: "e.g., Small business owners manually track invoices, causing errors and late payments.",
          type: "textarea"
        },
        {
          label: "After — desired outcome",
          desc: "The improved state or benefit once the problem is solved.",
          key: "after",
          ph: "e.g., Invoices are tracked automatically, paid on time, and stress-free.",
          type: "textarea"
        },
        {
          label: "Bridge — solution/offering",
          desc: "The product, service, or idea that connects Before to After.",
          key: "product",
          ph: "e.g., PayEasy automated invoicing software",
          type: "text"
        },
        {
          label: "Audience/Persona (optional)",
          autofill: "persona->inline",
          desc: "Define who this is for to tailor tone and imagery.",
          key: "audience",
          ph: "e.g., Busy small business owners",
          type: "typeahead"
        },
        {
          label: "Emotion words (optional)",
          desc: "Key feelings in the Before and After states.",
          key: "emotions",
          ph: "Before: stressed, overwhelmed\nAfter: confident, relieved",
          type: "textarea"
        },
        {
          label: "Likely objection/hesitation (optional)",
          desc: "What resistance the audience might raise.",
          key: "objection",
          ph: "e.g., Too expensive; Hard to learn",
          type: "textarea"
        },
        {
          label: "Proof/Credibility (optional)",
          desc: "Evidence that makes the Bridge trustworthy (stats, testimonials, authority).",
          key: "proof",
          ph: "e.g., Used by 10,000+ businesses; saves an average of 8 hours/week",
          type: "textarea"
        }
      ],
      template: ({ before, after, product, audience, emotions, objection, proof, ctx, style, tone }) => [
    'Apply the Before-After-Bridge formula to craft a persuasive narrative.',
    ctx && `Context: ${ctx}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    audience && `Audience: ${audience}`,
    before && `Before (pain): ${before}`,
    emotions && emotions.includes('Before:') && emotions.split('\n').find(e => e.startsWith('Before:')),
    after && `After (desired): ${after}`,
    emotions && emotions.includes('After:') && emotions.split('\n').find(e => e.startsWith('After:')),
    product && `Bridge (solution): ${product}`,
    objection && `Objection/hesitation: ${objection}\nResponse: (weave reassurance here)`,
    proof && `Proof: ${proof}`,
    'Output:\n1) Paint the BEFORE (painful present).\n2) Imagine the AFTER (desirable future).\n3) Position the BRIDGE (solution) as the connector.\n4) Reinforce with proof if provided.\n5) Address objections if present.\n6) Conclude with a one-line tagline blending After + Bridge.',
    'Checklist:\n- [ ] Before vivid\n- [ ] After aspirational but credible\n- [ ] Bridge clear and indispensable\n- [ ] Proof provided if possible\n- [ ] Objection addressed'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "before-after-bridge (bab) — before state · after state · bridge (solution) before-after-bridge-formula a persuasion formula that contrasts the audience’s current state (before) with their desired future (after), positioning the offering as the bridge that enables the transformation. it frames the gap as a story of change. fill in the current pain point (before), the desired outcome (after), and your solution (bridge). add audience, emotional words, objections, or proof if available. write in the second person for resonance. the model will create a narrative showing transformation and end with a tagline. type:framework use:copywriting use:storytelling phase:compose level:beginner topic:values use:ad-copy use:planning use:coding topic:bias use:teaching use:scope-management storytelling-frameworks writing decision highlight a product’s impact by contrasting life before vs. after its use craft persuasive marketing copy, landing page sections, or fundraising appeals design pitch deck slides or investor messaging frame user onboarding as a transformation journey write social media hooks or cold outreach emails exaggerate the pain of the before with vivid, relatable detail drawn from the audience’s world. make the after state aspirational but credible—avoid unrealistic hype. present the bridge as the natural, indispensable connector between the two states. if available, add proof (e.g., stats, testimonials) to make the bridge more trustworthy. anchor the after state with a sensory image (what they see, hear, feel). if an objection is provided, weave a reassuring response into the bridge. keep language emotionally engaging—focus on how it feels, not just what it is. before — current pain point after — desired outcome bridge — solution/offering audience/persona (optional) emotion words (optional) likely objection/hesitation (optional) proof/credibility (optional)"
      }
    },

    {
      id: "bias_impact_assessment",
      slug: "bias-impact-assessment",
      label: "Bias Impact Assessment (AI/tech pre-launch)",
      kind: "strategy",
      categories: [
        "design",
        "ethics",
        "writing"
      ],
      tags: [
        "use:pattern",
        "use:healing",
        "level:advanced",
        "use:planning",
        "use:format-guidance"
      ],
      use_cases: [
        "pre-deployment review for ML models or decision systems",
        "dataset/label pipeline changes and retrains",
        "feature launches that alter ranking/recommendation or access",
        "vendor assessments and compliance sign-offs",
              "is my AI fair",
      "check model bias",
      "who could be harmed",
      "reduce biased results",
      "fairness check before launch",
      "bias audit checklist",
      "test with different groups",
      "did we miss edge cases",
      "labeling bias check",
      "privacy and bias review",
      "impact on accessibility",
      "document known limits",
      "add guardrails before ship",
      "red team this feature",
      "go/no-go ethics check",
      "risk and harms scan",
      "dataset bias quick test",
      "transparent release notes",
      "mitigation plan please",
      "compliance preflight",
      "am I in the right",
      "check my work for biases",
      "which perspective is right",
      "how do I know I am right",
      "am I leaning too much in one direction"
      ],
      boosters: [
        "Measure by slice: report metrics across salient groups (not just averages).",
        "Define thresholds & actions (degrade/rollback/human-in-the-loop).",
        "Note uncertainty and evaluation limits; propose follow-ups.",
        "Include impacted communities in stakeholder mapping.",
        "Cite explainability artifacts (model cards, datasheets)."
      ],
      definition: "A structured pre-launch review to surface stakeholders, plausible bias (tricks on the mind) mechanisms, mitigations, transparency duties, and a monitoring plan with thresholds and owners. Aligns with model cards/datasheets, fairness evaluations, and incident response readiness.",
      help: "Name the system & purpose; list affected stakeholders (by role and demographic where appropriate); select likely bias risks (sampling, labels, shift, proxies, interaction effects); define mitigations (data/process/model/UX); add transparency measures (docs, appeals); and finish with monitoring (metric, threshold, cadence, owner).",
      fields: [
        {
          label: "System / algorithm / product name",
          key: "system",
          ph: "Name/version",
          type: "text"
        },
        {
          label: "Intended purpose",
          key: "purpose",
          ph: "Primary task and success measures.",
          type: "textarea"
        },
        {
          label: "Stakeholders affected (one per line)",
          key: "stakeholders",
          ph: "Groups/roles.",
          type: "textarea"
        },
        {
          label: "Bias risks identified (free text)",
          key: "risks",
          ph: "Inputs, labels, sampling, shift, proxy variables, UX copy…",
          type: "textarea"
        },
        {
          label: "Biases (from library)",
          autofill: "bias->inline",
          dataset: "bias",
          desc: "Optional: attach named biases that match the plausible mechanisms.",
          itemType: "typeahead",
          key: "risks_picks",
          ph: "Start typing to search the bias library…",
          type: "repeater",
          unit: "bias"
        },
        {
          label: "Mitigation steps (free text)",
          key: "mitigation",
          ph: "Data/process/model changes; human-in-the-loop…",
          type: "textarea"
        },
        {
          label: "Mitigation technique(s) (from library)",
          autofill: "bias->inline",
          dataset: "bias",
          desc: "Prefer items whose kind/category indicates “mitigation/technique”.",
          itemType: "typeahead",
          key: "mitigation_picks",
          ph: "Search for mitigation patterns…",
          unit: "technique"
        },
        {
          label: "Transparency / explainability measures",
          key: "transparency",
          ph: "Docs, disclosures, appeal paths…",
          type: "textarea"
        },
        {
          label: "Follow-up monitoring plan",
          key: "monitoring",
          ph: "Metric(s), threshold(s), cadence, owner.",
          type: "textarea"
        }
      ],
      template: ({ system, purpose, stakeholders, risks, risks_picks, mitigation, mitigation_picks, transparency, monitoring, ctx, audience, style, tone }) => [
    'Create a Bias Impact Assessment for an AI/tech system.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    system && `System: ${system}`,
    purpose && ('Intended purpose:\n' + purpose),

    stakeholders && (
      'Stakeholders:\n' + String(stakeholders).split(/\n+/).map(s=>s.trim()).filter(Boolean).map((x,i)=>`${i+1}. ${x}`).join('\n')
    ),

    risks_picks && (
      'Biases (selected from library):\n' +
      String(risks_picks).split(/\n+/).map((s,i)=>`${i+1}. ${s.trim()}`).join('\n')
    ),
    risks && ('Bias risks (free text):\n' + risks),

    mitigation_picks && (
      'Mitigation technique(s) (from library):\n' +
      String(mitigation_picks).split(/\n+/).map((s,i)=>`${i+1}. ${s.trim()}`).join('\n')
    ),
    mitigation && ('Mitigation steps (free text):\n' + mitigation),

    transparency && ('Transparency / explainability:\n' + transparency),
    monitoring && ('Monitoring plan:\n' + monitoring),

    'Output:\n1) System + purpose\n2) Stakeholders\n3) Risks (library + free text)\n4) Mitigations (library + free text)\n5) Transparency plan\n6) Monitoring plan (metric + threshold + owner)'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "bias impact assessment (ai/tech pre-launch) bias-impact-assessment a structured pre-launch review to surface stakeholders, plausible bias mechanisms, mitigations, transparency duties, and a monitoring plan with thresholds and owners. aligns with model cards/datasheets, fairness evaluations, and incident response readiness. name the system & purpose; list affected stakeholders (by role and demographic where appropriate); select likely bias risks (sampling, labels, shift, proxies, interaction effects); define mitigations (data/process/model/ux); add transparency measures (docs, appeals); and finish with monitoring (metric, threshold, cadence, owner). use:pattern use:healing level:advanced use:planning use:format-guidance design ethics writing pre-deployment review for ml models or decision systems dataset/label pipeline changes and retrains feature launches that alter ranking/recommendation or access vendor assessments and compliance sign-offs measure by slice: report metrics across salient groups (not just averages). define thresholds & actions (degrade/rollback/human-in-the-loop). note uncertainty and evaluation limits; propose follow-ups. include impacted communities in stakeholder mapping. cite explainability artifacts (model cards, datasheets). system / algorithm / product name intended purpose stakeholders affected (one per line) bias risks identified (free text) biases (from library) mitigation steps (free text) mitigation technique(s) (from library) transparency / explainability measures follow-up monitoring plan"
      }
    },

    {
      id: "bias_interrupters",
      slug: "bias-interrupters",
      label: "Bias Interrupters — diagnose risk · insert guardrail · measure effect",
      kind: "heuristic",
      categories: [
        "strategy",
        "ethics",
        "operations"
      ],
      tags: [
        "use:pattern",
        "topic:bias",
        "topic:matrix",
        "level:intermediate",
        "use:healing",
        "use:evaluation",
        "use:iteration"
      ],
      use_cases: [
        "hiring loops (sourcing → screening → interview → debrief)",
        "performance calibration and promo committees",
        "code/content/peer reviews and rubric scoring",
        "vendor selection and grant/program intake",
              "reduce hiring bias",
      "fair interview questions",
      "neutral job post",
      "blind resume tips",
      "use a scoring rubric",
      "structured debrief guide",
      "calibrate performance ratings",
      "second reviewer rule",
      "pre-commit scores",
      "interrupt bias in meetings",
      "rotate speaking time",
      "evidence-based feedback",
      "diverse shortlist rule",
      "compare outcomes by group",
      "track pass-through rates",
      "rewrite feedback neutrally",
      "check rubric for bias",
      "review code fairly",
      "nudge for inclusion",
      "measure bias over time",
       "am I leaning too much in one direction",
         "is my feedback too personal",
  "how do I avoid favoritism",
  "check if my wording sounds biased",
  "how to make group discussions fair",
  "make promotion reviews more equal",
  "help me spot bias in my notes",
  "make sure I’m not judging by personality",
  "ways to keep interviews consistent",
  "how to stop louder voices from dominating",
  "are my examples showing bias",
  "does this feedback sound fair",
  "check if I’m being harsher on one group",
  "how to be objective in ratings"
        
      ],
      boosters: [
        "Baseline first: compute the metric on last cycle before changing the process.",
        "Name a single accountable owner and a review cadence (monthly/quarterly).",
        "Prefer “small + sticky” changes over big, fragile ones.",
        "Record trade-offs: cost, time-to-decision, stakeholder experience.",
        "Pilot on one team for 2–4 weeks; only then standardize."
      ],
      definition: "A lightweight, repeatable change (“interrupter”) applied to a specific process step to reduce bias (tricks on the mind) and increase fairness. Each interrupter is observable (a metric), owned by someone, and reviewed on a cadence to improve over time.",
      help: "Pick a concrete process step, list likely bias risks (gut-feel patterns are valid), then add a small guardrail (anonymization, rubrics, structured prompts, second-reader, rotation, etc.). Attach a metric with a target and an owner. Close by scheduling a review and naming risks of the change itself.",
      fields: [
        {
          label: "Process step",
          desc: "Scope narrowly so you can observe the change.",
          key: "process_step",
          ph: "Hiring / Evaluation / Promotion / Review",
          type: "text"
        },
        {
          label: "Bias risk(s) you expect",
          desc: "Write anything you see or suspect (patterns, anecdotes, “vibes”).",
          key: "bias_risk",
          ph: "Gut-feel; halo effect; similarity bias…",
          type: "textarea"
        },
        {
          label: "Biases (from library)",
          autofill: "bias->inline",
          dataset: "bias",
          desc: "Optional: attach named biases for clarity & shared language.",
          itemType: "typeahead",
          key: "bias_picks",
          ph: "Start typing to search the bias library…",
          type: "repeater",
          unit: "bias"
        },
        {
          label: "Interrupter strategy (your guardrail)",
          desc: "Describe the small change you will actually try.",
          key: "strategy",
          ph: "Structured interviews; rubrics; anonymization…",
          type: "textarea"
        },
        {
          label: "Mitigation technique(s) (from library)",
          autofill: "bias->inline",
          dataset: "bias",
          desc: "Prefer items whose kind/category indicates “mitigation/technique”.",
          itemType: "typeahead",
          key: "technique_picks",
          ph: "Search the library for mitigation patterns…",
          type: "repeater",
          unit: "technique"
        },
        {
          label: "Metric to track",
          desc: "One observable, comparable number. Add a target if known.",
          key: "metric",
          ph: "e.g., Score variance by rubric item; pass-through by group…",
          type: "textarea"
        },
        {
          label: "Iteration plan",
          desc: "Name an owner + date. Note trade-offs or new risks.",
          key: "iteration",
          ph: "What to refine next cycle and when.",
          type: "textarea"
        }
      ],
      template: ({ process_step, bias_risk, bias_picks, strategy, technique_picks, metric, iteration, ctx, audience, style, tone }) => [
    'Design a bias-interrupter for a people/ops process with clear metrics.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    process_step && `Process step: ${process_step}`,

    bias_picks && (
      'Biases (selected from library):\n' +
      String(bias_picks).split(/\n+/).map((s,i)=>`${i+1}. ${s.trim()}`).join('\n')
    ),

    bias_risk && ('Bias risks (free text):\n' + bias_risk),

    technique_picks && (
      'Mitigation technique(s) (from library):\n' +
      String(technique_picks).split(/\n+/).map((s,i)=>`${i+1}. ${s.trim()}`).join('\n')
    ),

    strategy && ('Interrupter strategy (free text):\n' + strategy),
    metric && ('Metric(s) to track:\n' + metric),
    iteration && ('Iteration plan:\n' + iteration),

    'Output:\n1) Interrupter spec\n2) Owner + start date\n3) Metric w/ target + baseline\n4) Review cadence\n5) Risks & mitigations'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "bias interrupters — diagnose risk · insert guardrail · measure effect bias-interrupters a lightweight, repeatable change (“interrupter”) applied to a specific process step to reduce bias and increase fairness. each interrupter is observable (a metric), owned by someone, and reviewed on a cadence to improve over time. pick a concrete process step, list likely bias risks (gut-feel patterns are valid), then add a small guardrail (anonymization, rubrics, structured prompts, second-reader, rotation, etc.). attach a metric with a target and an owner. close by scheduling a review and naming risks of the change itself. use:pattern topic:bias topic:matrix level:intermediate use:healing use:evaluation use:iteration strategy ethics operations hiring loops (sourcing → screening → interview → debrief) performance calibration and promo committees code/content/peer reviews and rubric scoring vendor selection and grant/program intake baseline first: compute the metric on last cycle before changing the process. name a single accountable owner and a review cadence (monthly/quarterly). prefer “small + sticky” changes over big, fragile ones. record trade-offs: cost, time-to-decision, stakeholder experience. pilot on one team for 2–4 weeks; only then standardize. process step bias risk(s) you expect biases (from library) interrupter strategy (your guardrail) mitigation technique(s) (from library) metric to track iteration plan"
      }
    },

    {
      id: "blooms",
      slug: "blooms-taxonomy",
      label: "Bloom’s — Remember · Understand · Apply · Analyze · Evaluate · Create",
      kind: "heuristic",
      categories: [
        "teaching",
        "critical-thinking",
        "design"
      ],
      tags: [
        "type:framework",
        "use:pattern",
        "use:evaluation",
        "level:beginner",
        "use:process-improvement",
        "use:coding"
      ],
      use_cases: [
        "write measurable learning objectives",
        "design quiz, homework, or exam items",
        "plan lessons and projects across difficulty levels",
        "generate competency checklists for training or self-study",
        "design rubrics and performance assessments",
      "write learning objectives",
      "verbs for objectives",
      "make a study plan",
      "quiz question ideas",
      "beginner to advanced steps",
      "scaffold a lesson",
      "align goals and tests",
      "rubric starter",
      "evaluate understanding",
      "project ideas by level",
      "test blueprint",
      "fix weak objectives",
      "lesson sequence map",
      "practice tasks by level",
      "higher-order thinking check",
      "design final project",
      "kids lesson plan",
      "adult training goals",
      "unit outline fast",
      "measure learning"
      ],
      boosters: [
        "Always select verbs aligned to the specified Bloom level; if level is missing, scaffold from Remember → Create.",
        "If progression is true, generate one task per ascending level.",
        "Include success criteria or observable outcomes for each objective.",
        "Suggest assessment methods aligned to the task type (quiz, project, discussion).",
        "Avoid vague verbs like “learn” or “understand” without measurable criteria.",
        "Where relevant, combine cognitive with affective/creative verbs for richer objectives."
      ],
      definition: "A taxonomy of cognitive skills arranged in six levels: Remember, Understand, Apply, Analyze, Evaluate, Create. It helps structure objectives, questions, and assessments so they move from recall to higher-order thinking. Though often shown hierarchically, learners can move flexibly across levels.",
      help: "Choose a Bloom’s level or enable progression. Provide topic, number of items, and optional verbs, assessment methods, or constraints. The model generates objectives/questions with measurable verbs, success criteria, and suggested assessment formats.",
      fields: [
        {
          label: "Topic",
          key: "topic",
          ph: "e.g., Binary search trees",
          type: "text"
        },
        {
          label: "Bloom level",
          key: "level",
          options: [
            {
              label: "Remember",
              value: "remember"
            },
            {
              label: "Understand",
              value: "understand"
            },
            {
              label: "Apply",
              value: "apply"
            },
            {
              label: "Analyze",
              value: "analyze"
            },
            {
              label: "Evaluate",
              value: "evaluate"
            },
            {
              label: "Create",
              value: "create"
            }
          ],
          ph: "Pick one Bloom level",
          type: "select"
        },
        {
          label: "# of items",
          key: "n",
          ph: "e.g., 3",
          type: "text"
        },
        {
          label: "Progression across levels (true/false)",
          key: "progression",
          ph: "true",
          type: "text"
        },
        {
          label: "Custom verbs (optional)",
          key: "verbs",
          ph: "e.g., List, Compare, Design",
          type: "textarea"
        },
        {
          label: "Assessment method (optional)",
          key: "assessment",
          ph: "e.g., Quiz, coding project, oral exam",
          type: "text"
        },
        {
          label: "Success criteria (optional)",
          key: "criteria",
          ph: "e.g., At least 80% test accuracy; working prototype; coherent argument",
          type: "textarea"
        },
        {
          label: "Constraints",
          key: "constraints",
          ph: "e.g., ≤120 words each; measurable verbs only",
          type: "text"
        }
      ],
      template: ({ topic, level, n, progression, verbs, assessment, criteria, constraints, ctx, audience, style, tone }) => {
    const N = Number.parseInt(n || '3', 10) || 3;
    return [
      'Generate Bloom-aligned learning objectives or tasks.',
      ctx && `Context: ${ctx}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      topic && `Topic: ${topic}`,
      level && `Level: ${level}`,
      progression && `Progression: ${progression}`,
      verbs && `Custom verbs: ${verbs}`,
      assessment && `Preferred assessment method: ${assessment}`,
      criteria && `Custom success criteria: ${criteria}`,
      constraints && `Constraints: ${constraints}`,
      `Output: ${N} ${progression === 'true' ? 'progressive tasks across levels' : `${level || 'Bloom'}-level tasks`} including:`,
      '- Verb aligned to Bloom’s level',
      '- Objective phrased for the topic',
      '- Success criteria or assessment notes',
      '- Suggested assessment method',
      'Checklist:\n- [ ] Verb measurable\n- [ ] Objective clear\n- [ ] Criteria observable\n- [ ] Assessment aligned'
    ].filter(Boolean).join('\n');
  },
      meta: {
        search_text: "bloom’s — remember · understand · apply · analyze · evaluate · create blooms-taxonomy a taxonomy of cognitive skills arranged in six levels: remember, understand, apply, analyze, evaluate, create. it helps structure objectives, questions, and assessments so they move from recall to higher-order thinking. though often shown hierarchically, learners can move flexibly across levels. choose a bloom’s level or enable progression. provide topic, number of items, and optional verbs, assessment methods, or constraints. the model generates objectives/questions with measurable verbs, success criteria, and suggested assessment formats. type:framework use:pattern use:evaluation level:beginner use:process-improvement use:coding teaching critical-thinking design write measurable learning objectives design quiz, homework, or exam items plan lessons and projects across difficulty levels generate competency checklists for training or self-study design rubrics and performance assessments always select verbs aligned to the specified bloom level; if level is missing, scaffold from remember → create. if progression is true, generate one task per ascending level. include success criteria or observable outcomes for each objective. suggest assessment methods aligned to the task type (quiz, project, discussion). avoid vague verbs like “learn” or “understand” without measurable criteria. where relevant, combine cognitive with affective/creative verbs for richer objectives. topic bloom level # of items progression across levels (true/false) custom verbs (optional) assessment method (optional) success criteria (optional) constraints"
      }
    },

    {
      id: "eightfold_path",
      slug: "buddhist-eightfold-path-adapted",
      label: "Buddhist Eightfold Path (Adapted for Action)",
      kind: "strategy",
      categories: [
        "ethics",
        "reasoning",
        "cultural-frameworks",
        "critical-thinking"
      ],
      tags: [
        "type:framework",
        "use:decision-making",
        "use:pattern",
        "use:healing",
        "level:intermediate",
        "use:communication",
        "use:scope-management"
      ],
      use_cases: [
        "design ethical guardrails for decision-making",
        "structure mindful decision steps in organizations",
        "review potential impacts on others with inclusivity in mind",
        "teach non-Western ethical frameworks in education or leadership training",
        "support activism, policy, or design processes that emphasize non-harm and compassion",
        "mediate cross-cultural or interfaith dialogue",
              "make an ethical choice",
      "do no harm plan",
      "align with values",
      "right intention check",
      "right speech script",
      "right action checklist",
      "pause before reacting",
      "compassionate option",
      "mindful decision steps",
      "is this respectful",
      "reduce harm to others",
      "inclusive choice guide",
      "fairness and empathy check",
      "choose sustainable path",
      "ethical design review",
      "conflict with kindness",
      "set gentle guardrails",
      "own my impact",
      "be honest and kind",
      "walk the talk plan"
      ],
      boosters: [
        "Map each factor into a concrete, actionable reflection relevant to the task.",
        "Acknowledge Buddhist origins to avoid cultural erasure or whitewashing.",
        "Emphasize compassion and non-harming (ahimsa) as a throughline.",
        "Check each step for bias: surface whose voices or needs are missing.",
        "Note tensions between factors (e.g., Livelihood vs. Action).",
        "Adapt language to secular or organizational contexts while preserving ethical depth."
      ],
      definition: "A practical adaptation of the Buddhist Eightfold Path (View, Intention, Speech, Action, Livelihood, Effort, Mindfulness, Concentration). This framework honors its Buddhist origins while making each factor actionable for decision-making, ethics, leadership, and cross-cultural contexts.",
      help: "Begin by naming the decision or task. Map it to each factor of the Eightfold Path. Keep language culturally respectful, actionable, and inclusive. Always acknowledge Buddhist roots, surface tensions between factors, and close with a compassionate, non-harming recommendation.",
      fields: [
        {
          label: "Decision or task under review",
          key: "decision",
          ph: "e.g., Launching a new product; setting hiring policy",
          type: "textarea"
        },
        {
          label: "Right View (assumptions/realities)",
          key: "view",
          ph: "e.g., Are we seeing the situation clearly, or through bias?",
          type: "textarea"
        },
        {
          label: "Right Intention (aims)",
          key: "intention",
          ph: "e.g., Are our goals rooted in compassion and goodwill?",
          type: "textarea"
        },
        {
          label: "Right Speech (communication)",
          key: "speech",
          ph: "e.g., How are we communicating—truthful, kind, and purposeful?",
          type: "textarea"
        },
        {
          label: "Right Action (conduct)",
          key: "action",
          ph: "e.g., What behaviors align with non-harm and integrity?",
          type: "textarea"
        },
        {
          label: "Right Livelihood (means)",
          key: "livelihood",
          ph: "e.g., Is the work or method of earning aligned with ethics?",
          type: "textarea"
        },
        {
          label: "Right Effort (discipline)",
          key: "effort",
          ph: "e.g., How are we sustaining wholesome actions and avoiding harm?",
          type: "textarea"
        },
        {
          label: "Right Mindfulness (attention)",
          key: "mindfulness",
          ph: "e.g., Are we fully aware of context, impacts, and interdependence?",
          type: "textarea"
        },
        {
          label: "Right Concentration (focus)",
          key: "concentration",
          ph: "e.g., How are we cultivating clarity and deep focus?",
          type: "textarea"
        },
        {
          label: "Cultural context / inclusivity check",
          key: "cultural",
          ph: "e.g., Which cultural or marginalized perspectives must be included?",
          type: "textarea"
        },
        {
          label: "Compassion / non-harm reflection",
          key: "compassion",
          ph: "e.g., How does this reduce harm and foster well-being for all involved?",
          type: "textarea"
        },
        {
          label: "Trade-offs or risks (optional)",
          key: "tradeoffs",
          ph: "e.g., Profit vs. sustainability; efficiency vs. inclusivity",
          type: "textarea"
        },
        {
          label: "Outcome / next steps (optional)",
          key: "outcome",
          ph: "e.g., Adjust hiring plan; add inclusivity review; pause launch",
          type: "textarea"
        }
      ],
      template: ({ decision, view, intention, speech, action, livelihood, effort, mindfulness, concentration, cultural, compassion, tradeoffs, outcome, ctx }) => [
    'Eightfold Path (adapted for action) — Ethical and inclusive review:',
    ctx && `Context: ${ctx}`,
    decision && `Decision/Task:\n${decision}`,
    view && `Right View:\n${view}`,
    intention && `Right Intention:\n${intention}`,
    speech && `Right Speech:\n${speech}`,
    action && `Right Action:\n${action}`,
    livelihood && `Right Livelihood:\n${livelihood}`,
    effort && `Right Effort:\n${effort}`,
    mindfulness && `Right Mindfulness:\n${mindfulness}`,
    concentration && `Right Concentration:\n${concentration}`,
    cultural && `Cultural / inclusivity check:\n${cultural}`,
    compassion && `Compassion / non-harm reflection:\n${compassion}`,
    tradeoffs && `Trade-offs / risks:\n${tradeoffs}`,
    outcome && `Outcome / next steps:\n${outcome}`,
    'Synthesis:\n1) Ethical adjustment or refinement.\n2) Inclusivity reflection.\n3) Tensions noted between factors.\n4) Explicit acknowledgment of Buddhist origins.',
    'Checklist:\n- [ ] Cultural respect upheld\n- [ ] Compassion and non-harm prioritized\n- [ ] Bias and exclusions surfaced\n- [ ] Actionable next step recorded'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "buddhist eightfold path (adapted for action) buddhist-eightfold-path-adapted a practical adaptation of the buddhist eightfold path (view, intention, speech, action, livelihood, effort, mindfulness, concentration). this framework honors its buddhist origins while making each factor actionable for decision-making, ethics, leadership, and cross-cultural contexts. begin by naming the decision or task. map it to each factor of the eightfold path. keep language culturally respectful, actionable, and inclusive. always acknowledge buddhist roots, surface tensions between factors, and close with a compassionate, non-harming recommendation. type:framework use:decision-making use:pattern use:healing level:intermediate use:communication use:scope-management ethics reasoning cultural-frameworks critical-thinking design ethical guardrails for decision-making structure mindful decision steps in organizations review potential impacts on others with inclusivity in mind teach non-western ethical frameworks in education or leadership training support activism, policy, or design processes that emphasize non-harm and compassion mediate cross-cultural or interfaith dialogue map each factor into a concrete, actionable reflection relevant to the task. acknowledge buddhist origins to avoid cultural erasure or whitewashing. emphasize compassion and non-harming (ahimsa) as a throughline. check each step for bias: surface whose voices or needs are missing. note tensions between factors (e.g., livelihood vs. action). adapt language to secular or organizational contexts while preserving ethical depth. decision or task under review right view (assumptions/realities) right intention (aims) right speech (communication) right action (conduct) right livelihood (means) right effort (discipline) right mindfulness (attention) right concentration (focus) cultural context / inclusivity check compassion / non-harm reflection trade-offs or risks (optional) outcome / next steps (optional)"
      }
    },

    {
      id: "clear",
      slug: "clear-framework",
      label: "CLEAR — Challenge · Limitation · Effect · Action · Result",
      kind: "framework",
      categories: [
        "analysis-frameworks",
        "prompt-development-techniques"
      ],
      tags: [
        "type:framework",
        "use:pattern",
        "phase:apply",
        "level:beginner",
        "use:problem-framing",
        "use:decision-making"
      ],
      use_cases: [
        "problem framing",
        "decision record",
        "risk assessment",
        "root-cause write-up",
        "retrospective summary",
        "proposal justification",
        "change request rationale",
             "state the problem clearly",
      "what’s blocking us",
      "why this matters",
      "what action now",
      "expected result",
      "write a decision record",
      "risk and effect summary",
      "root cause write-up",
      "change request note",
      "retrospective summary",
      "justify this proposal",
      "quick problem brief",
      "make a crisp memo",
      "align on next step",
      "one-page summary",
      "evidence and impact",
      "who owns the action",
      "how we’ll measure",
      "when to review",
      "simple action plan"
      ],
      boosters: [
        "End with a one-paragraph “Decision record” that links Action→Effect→Result explicitly."
      ],
      definition: "A problem-framing flow that surfaces constraints and outcomes.",
      help: "Problem-framing flow to surface constraints and outcomes.",
      fields: [
        {
          label: "Challenge",
          desc: "Problem context.",
          key: "challenge",
          ph: "e.g., Low onboarding completion",
          type: "textarea"
        },
        {
          label: "Limitation",
          desc: "Constraints/risks.",
          key: "limitation",
          ph: "e.g., No in-app messaging yet",
          type: "textarea"
        },
        {
          label: "Effect",
          desc: "Observed impact.",
          key: "effect",
          ph: "e.g., High drop-off at step 2",
          type: "textarea"
        },
        {
          label: "Action",
          desc: "Intervention/plan.",
          key: "action",
          ph: "e.g., Add email nudge + tooltip",
          type: "textarea"
        },
        {
          label: "Result",
          desc: "Outcome/measure.",
          key: "result",
          ph: "e.g., Onboarding completion +15%",
          type: "textarea"
        }
      ],
      template: ({challenge,limitation,effect,action,result,ctx})=>[
      ctx&&`Context: ${ctx}`,
      `Use the CLEAR framing to structure the answer.`,
      challenge&&`Challenge: ${challenge}`,
      limitation&&`Limitation: ${limitation}`,
      effect&&`Effect: ${effect}`,
      action&&`Action: ${action}`,
      result&&`Result: ${result}`
    ].filter(Boolean).join('\n'),
      meta: {
        search_text: "clear — challenge · limitation · effect · action · result clear-framework a problem-framing flow that surfaces constraints and outcomes. problem-framing flow to surface constraints and outcomes. type:framework use:pattern phase:apply level:beginner use:problem-framing use:decision-making analysis-frameworks prompt-development-techniques problem framing decision record risk assessment root-cause write-up retrospective summary proposal justification change request rationale end with a one-paragraph “decision record” that links action→effect→result explicitly. challenge limitation effect action result"
      }
    },

    {
      id: "clear_path",
      slug: "clear-path-forward-framework",
      label: "CLEAR Path Forward — Concise · Logical · Explicit · Adaptive · Reflective",
      kind: "framework",
      categories: [
        "prompt-development-techniques"
      ],
      tags: [
        "type:framework",
        "topic:prompting",
        "phase:apply",
        "level:beginner",
        "use:planning",
        "use:iteration",
        "use:pattern",
        "use:process-improvement"
      ],
      use_cases: [
        "prompt optimization",
        "clarifying prompts",
        "next-step planning",
        "teaching prompt literacy",
        "debugging failed prompts",
              "fix my prompt",
      "make this prompt clearer",
      "shorter better prompt",
      "set role and tone",
      "add examples to prompt",
      "define the output format",
      "ask for assumptions",
      "debug a bad answer",
      "tighten constraints",
      "iterate my prompt",
      "clarify context",
      "step-by-step ask",
      "improve follow-ups",
      "stop vague answers",
      "prevent hallucinations",
      "prompt checklist",
      "next step plan",
      "make it adaptive",
      "reflect then refine",
      "prompt for planning"
      ],
      boosters: [
        "Propose an improved next prompt (≤3 lines) and one concrete next action."
      ],
      definition: "An AI prompt literacy framework that shapes a next best prompt via concise goals, logical steps, explicit constraints, adaptive context, and reflective checks.",
      help: "Use to tighten a messy prompt and identify the next concrete step.",
      fields: [
        {
          label: "Concise (goal in one line)",
          desc: "Single-sentence objective.",
          key: "concise",
          ph: "e.g., Summarize the paper for a lay audience",
          type: "text"
        },
        {
          label: "Logical (steps/structure)",
          desc: "Outline reasoning or steps.",
          key: "logical",
          ph: "e.g., Read → Extract key claims → Simplify → Check terms",
          type: "textarea"
        },
        {
          label: "Explicit (rules/format/defs)",
          desc: "Constraints, definitions, formats.",
          key: "explicit",
          ph: "e.g., 120–150 words; define “overfitting”; Markdown",
          type: "textarea"
        },
        {
          label: "Adaptive (audience/context)",
          desc: "Who/where this applies; edge cases.",
          key: "adaptive",
          ph: "e.g., For non-technical policy analysts; US context",
          type: "textarea"
        },
        {
          label: "Reflective (checks/criteria)",
          desc: "Quality checks or acceptance tests.",
          key: "reflective",
          ph: "e.g., No jargon; 2 factual references; no policy claims",
          type: "textarea"
        }
      ],
      template: ({concise,logical,explicit,adaptive,reflective,ctx})=>[
    `Apply the CLEAR Path Forward framework to optimize the prompt and next action.`,
    ctx&&`Context: ${ctx}`,
    concise&&`Concise goal: ${concise}`,
    logical&&`Logical plan: ${logical}`,
    explicit&&`Explicit constraints/format: ${explicit}`,
    adaptive&&`Adaptive context: ${adaptive}`,
    reflective&&`Reflective checks: ${reflective}`
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "clear path forward — concise · logical · explicit · adaptive · reflective clear-path-forward-framework an ai prompt literacy framework that shapes a next best prompt via concise goals, logical steps, explicit constraints, adaptive context, and reflective checks. use to tighten a messy prompt and identify the next concrete step. type:framework topic:prompting phase:apply level:beginner use:planning use:iteration use:pattern use:process-improvement prompt-development-techniques prompt optimization clarifying prompts next-step planning teaching prompt literacy debugging failed prompts propose an improved next prompt (≤3 lines) and one concrete next action. concise (goal in one line) logical (steps/structure) explicit (rules/format/defs) adaptive (audience/context) reflective (checks/criteria)"
      }
    },

    {
      id: "clear_pm",
      slug: "clear-prompting-method",
      label: "CLEAR Prompting Method — Clarity · Length · Empathy · Actionability · Relevance",
      kind: "framework",
      categories: [
        "prompt-development-techniques"
      ],
      tags: [
        "type:framework",
        "topic:prompting",
        "phase:apply",
        "level:beginner",
        "use:communication",
        "topic:matrix",
        "use:scope-management"
      ],
      use_cases: [
        "prompt hygiene",
        "length control",
        "audience fit",
        "scope management",
        "instruction cleanup",
              "clean up this prompt",
      "shorter better prompt",
      "make AI stop rambling",
      "set role and tone",
      "add just enough context",
      "ask step by step",
      "force bullet points",
      "limit to 150 words",
      "make instructions clear",
      "define the output format",
      "remove jargon",
      "keep only what matters",
      "tailor to my audience",
      "avoid vague answers",
      "tighten the scope",
      "what do you need from me",
      "improve my ask",
      "example then task",
      "check prompt hygiene",
      "make it relevant",
      "improve my instructions",
      "how do I prompt"
      ],
      boosters: [
        "Return an edited, tightened prompt honoring the length; list any removed ambiguity in one line."
      ],
      definition: "A prompting checklist to improve clarity, respect length, empathize with the reader, ensure actionability, and maintain relevance.",
      help: "Use to “clean up” instructions before sending to a model.",
      fields: [
        {
          label: "Clarity (must-include info)",
          desc: "Remove ambiguity; define terms.",
          key: "clarity",
          ph: "e.g., Define “qualified lead”; include timeframe",
          type: "textarea"
        },
        {
          label: "Length (limit)",
          desc: "Word/token/section limits.",
          key: "length",
          ph: "e.g., ≤150 words",
          type: "text"
        },
        {
          label: "Empathy (audience needs)",
          desc: "Reader persona/concerns.",
          key: "empathy",
          ph: "e.g., Busy execs; prefer bullet points",
          type: "textarea"
        },
        {
          label: "Actionability (doable steps)",
          desc: "What the model should do/produce.",
          key: "actionability",
          ph: "e.g., Provide 3 options + 1 pick with rationale",
          type: "textarea"
        },
        {
          label: "Relevance (in/out of scope)",
          desc: "Focus and exclusions.",
          key: "relevance",
          ph: "e.g., Focus on onboarding; exclude pricing",
          type: "textarea"
        }
      ],
      template: ({clarity,length,empathy,actionability,relevance,ctx})=>[
    `Apply the CLEAR Prompting Method to refine the instructions.`,
    ctx&&`Context: ${ctx}`,
    clarity&&`Clarity requirements: ${clarity}`,
    length&&`Length limit: ${length}`,
    empathy&&`Audience empathy: ${empathy}`,
    actionability&&`Actionability: ${actionability}`,
    relevance&&`Relevance (scope): ${relevance}`
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "clear prompting method — clarity · length · empathy · actionability · relevance clear-prompting-method a prompting checklist to improve clarity, respect length, empathize with the reader, ensure actionability, and maintain relevance. use to “clean up” instructions before sending to a model. type:framework topic:prompting phase:apply level:beginner use:communication topic:matrix use:scope-management prompt-development-techniques prompt hygiene length control audience fit scope management instruction cleanup return an edited, tightened prompt honoring the length; list any removed ambiguity in one line. clarity (must-include info) length (limit) empathy (audience needs) actionability (doable steps) relevance (in/out of scope)"
      }
    },

    {
      id: "cognitive_debiasing",
      slug: "cognitive-debiasing",
      label: "Cognitive Debiasing — state assumption · seek disconfirming evidence · adjust",
      kind: "strategy",
      categories: [
        "ethics",
        "operations",
        "critical-thinking"
      ],
      tags: [
        "use:pattern",
        "topic:bias",
        "topic:decomposition",
        "level:beginner",
        "use:decision-making",
        "phase:premortem"
      ],
      use_cases: [
        "document a current assumption and actively seek disconfirming evidence",
        "run a quick pre-mortem on a plan or forecast",
        "decide next adjustment with rationale and follow-up",
        "audit reasoning in board reviews or strategic planning",
        "sanity-check research, PRDs, or investment theses",
              "challenge my assumption",
      "what am I missing",
      "play devil’s advocate",
      "seek disconfirming evidence",
      "could I be biased",
      "steelman the other side",
      "check for cherry-picking",
      "spot my blind spots",
      "pre-mortem this plan",
      "how could this fail",
      "separate facts from story",
      "confirm or revise stance",
      "test my forecast",
      "sanity-check my decision",
      "name hidden assumptions",
      "look for base rates",
      "ask for opposing data",
      "update my belief",
      "write the kill criteria",
      "decide with less bias",
        "is my feedback too personal",
  "how do I avoid favoritism",
  "check if my wording sounds biased",
  "how to make group discussions fair",
  "make promotion reviews more equal",
  "help me spot bias in my notes",
  "make sure I’m not judging by personality",
  "ways to keep interviews consistent",
  "how to stop louder voices from dominating",
  "are my examples showing bias",
  "does this feedback sound fair",
  "check if I’m being harsher on one group",
  "how to be objective in ratings",
   "am I jumping to conclusions",
  "help me slow down my thinking",
  "could I be assuming too much",
  "double-check my logic",
  "show me the other perspective",
  "is my reasoning solid",
  "help me avoid tunnel vision",
  "what evidence would change my mind",
  "is this just my gut talking",
  "stress test this idea",
  "am I being overconfident",
  "separate feelings from facts",
  "help me spot emotional bias",
  "is this decision too rushed",
  "how would a skeptic see this"
      ],
      boosters: [
        "Cite ≥2 credible, independent sources that challenge the assumption.",
        "Include one perspective outside your immediate cultural/disciplinary bubble.",
        "Rank disconfirming evidence by strength/credibility.",
        "Pre-mortem: “If this failed in [timeframe], the most likely reason would be…”",
        "Log at least one expected-but-missing datapoint.",
        "Have another persona (or the model) argue the opposite side.",
        "Name secondary biases (anchoring, confirmation, sunk cost) influencing the reasoning.",
        "Add at least one concrete mitigation tied to the failure mode."
      ],
      definition: "A meta-cognitive scaffold that surfaces assumptions, tests them with opposites and alternatives, and documents disconfirming evidence, missing data, mitigations, and follow-up. It cannot remove bias, but it structures accountability against common reasoning errors.",
      help: "1) Name the bias risk and write your assumption plainly. 2) Generate an opposite scenario and a plausible alternative. 3) Gather ≥2 pieces of disconfirming evidence (and log missing). 4) Run a one-line pre-mortem. 5) Decide a concrete adjustment and add mitigations. 6) Set a follow-up checkpoint. Optionally invite a persona to argue the opposite.",
      fields: [
        {
          label: "Bias in question",
          desc: "Name the most likely bias influencing your reasoning.",
          key: "bias",
          ph: "Anchoring / Confirmation / Availability / Other",
          type: "text"
        },
        {
          label: "Biases (from library)",
          autofill: "bias->inline",
          dataset: "bias",
          desc: "Optional: attach named biases for clarity & shared language.",
          itemType: "typeahead",
          key: "bias_picks",
          ph: "Start typing to add named biases…",
          type: "repeater",
          unit: "bias"
        },
        {
          label: "Stake / Impact if wrong",
          desc: "Spell out cost, reputational risk, time lost, or user impact.",
          key: "stake",
          ph: "What’s at risk if this assumption fails?",
          type: "textarea"
        },
        {
          label: "My initial assumption",
          desc: "Keep it short and falsifiable.",
          key: "initial",
          ph: "Write it down plainly.",
          type: "textarea"
        },
        {
          label: "Opposite scenario — What if the opposite is true?",
          desc: "Steelman the opposite; do not strawman.",
          key: "opposite",
          ph: "Spell a plausible opposite.",
          type: "textarea"
        },
        {
          label: "Alternative hypothesis (not strict opposite)",
          desc: "Different causal path, segmentation, or mechanism.",
          key: "alt_hypothesis",
          ph: "Another plausible framing of reality.",
          type: "textarea"
        },
        {
          label: "Disconfirming evidence (≥2, one per line)",
          desc: "Independent sources preferred. Rank strongest → weakest in your notes.",
          key: "disconfirm",
          ph: "Source, fact, or datapoint per line.",
          type: "textarea"
        },
        {
          label: "Missing evidence (expected but absent)",
          desc: "Absence can be informative; note gaps & access constraints.",
          key: "missing",
          ph: "What did you expect to find that you could not?",
          type: "textarea"
        },
        {
          label: "Pre-mortem — If this failed, why?",
          desc: "Name concrete failure modes and when they would show up.",
          key: "premortem",
          ph: "Top 1–3 failure reasons. Specify timeframe.",
          type: "textarea"
        },
        {
          label: "Mitigation steps",
          desc: "Concrete guardrails you will add now to reduce risk.",
          key: "mitigation",
          ph: "Procedures, gates, prompts, second-reader, measurement, rollback criteria…",
          type: "textarea"
        },
        {
          label: "Mitigation technique(s) (from library)",
          autofill: "bias->inline",
          dataset: "bias",
          desc: "Prefer named techniques that match your bias risks.",
          itemType: "typeahead",
          key: "mitigation_picks",
          ph: "Search library for mitigation patterns…",
          type: "repeater",
          unit: "technique"
        },
        {
          label: "Next step decision — What will I adjust?",
          desc: "Small, testable adjustments beat big, fragile changes.",
          key: "decision",
          ph: "Change of plan, metric, gate, or experiment.",
          type: "textarea"
        },
        {
          label: "Persona check (optional)",
          autofill: "persona->inline",
          desc: "Invite a challenging voice to stress-test reasoning.",
          key: "persona",
          ph: "Pick a persona to argue the opposite (e.g., Skeptical Analyst, External Critic)",
          type: "typeahead"
        },
        {
          label: "Follow-up checkpoint",
          desc: "Name date/trigger and who is accountable.",
          key: "followup",
          ph: "When/how will I revisit this assumption?",
          type: "text"
        }
      ],
      template: ({ bias, bias_picks, stake, initial, opposite, alt_hypothesis, disconfirm, missing, premortem, mitigation, mitigation_picks, decision, persona, followup, ctx, audience, style, tone }) => [
    'Apply a cognitive debiasing pass.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,

    // Bias (free text + picker list)
    bias && `Bias in question: ${bias}`,
    bias_picks && (
      'Biases (selected from library):\n' +
      String(bias_picks).split(/\n+/).map((s,i)=>`${i+1}. ${s.trim()}`).join('\n')
    ),

    stake && `Stake / Impact if wrong:\n${stake}`,
    initial && ('Initial assumption:\n' + initial),
    opposite && ('Opposite scenario:\n' + opposite),
    alt_hypothesis && ('Alternative hypothesis:\n' + alt_hypothesis),

    disconfirm && (
      'Disconfirming evidence:\n' +
      String(disconfirm).split(/\n+/).map(s=>s.trim()).filter(Boolean).map((x,i)=>`${i+1}. ${x}`).join('\n')
    ),
    missing && ('Missing evidence:\n' + missing),
    premortem && ('Pre-mortem:\n' + premortem),

    // Mitigations (free text + picker list)
    mitigation && ('Mitigation steps (free text):\n' + mitigation),
    mitigation_picks && (
      'Mitigation technique(s) (from library):\n' +
      String(mitigation_picks).split(/\n+/).map((s,i)=>`${i+1}. ${s.trim()}`).join('\n')
    ),

    decision && ('Next step decision:\n' + decision),
    persona && (`Persona check — Opposing voice:\n${persona}`),
    followup && ('Follow-up checkpoint:\n' + followup),

    'Output:\n1) Bias summary (free text + named biases)\n2) Assumption vs. opposite vs. alternative\n3) Disconfirming evidence (≥2, ranked)\n4) Missing evidence noted\n5) Pre-mortem failure modes\n6) Mitigations\n7) Decision & rationale\n8) Follow-up accountability',
    'Checklist:\n- [ ] ≥2 disconfirming sources\n- [ ] One external perspective included\n- [ ] Missing evidence logged\n- [ ] Pre-mortem stated\n- [ ] Mitigations added\n- [ ] Decision adjusted\n- [ ] Follow-up scheduled'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "cognitive debiasing — state assumption · seek disconfirming evidence · adjust cognitive-debiasing a meta-cognitive scaffold that surfaces assumptions, tests them with opposites and alternatives, and documents disconfirming evidence, missing data, mitigations, and follow-up. it cannot remove bias, but it structures accountability against common reasoning errors. 1) name the bias risk and write your assumption plainly. 2) generate an opposite scenario and a plausible alternative. 3) gather ≥2 pieces of disconfirming evidence (and log missing). 4) run a one-line pre-mortem. 5) decide a concrete adjustment and add mitigations. 6) set a follow-up checkpoint. optionally invite a persona to argue the opposite. use:pattern topic:bias topic:decomposition level:beginner use:decision-making phase:premortem ethics operations critical-thinking document a current assumption and actively seek disconfirming evidence run a quick pre-mortem on a plan or forecast decide next adjustment with rationale and follow-up audit reasoning in board reviews or strategic planning sanity-check research, prds, or investment theses cite ≥2 credible, independent sources that challenge the assumption. include one perspective outside your immediate cultural/disciplinary bubble. rank disconfirming evidence by strength/credibility. pre-mortem: “if this failed in [timeframe], the most likely reason would be…” log at least one expected-but-missing datapoint. have another persona (or the model) argue the opposite side. name secondary biases (anchoring, confirmation, sunk cost) influencing the reasoning. add at least one concrete mitigation tied to the failure mode. bias in question biases (from library) stake / impact if wrong my initial assumption opposite scenario — what if the opposite is true? alternative hypothesis (not strict opposite) disconfirming evidence (≥2, one per line) missing evidence (expected but absent) pre-mortem — if this failed, why? mitigation steps mitigation technique(s) (from library) next step decision — what will i adjust? persona check (optional) follow-up checkpoint"
      }
    },

    {
      id: "comparative_analysis",
      slug: "comparative-analysis",
      label: "Comparative Analysis — rank • pros/cons • matrix",
      kind: "strategy",
      categories: [
        "analysis-frameworks",
        "decision"
      ],
      tags: [
        "type:framework",
        "phase:compose",
        "use:evaluation",
        "phase:apply",
        "level:intermediate"
      ],
      use_cases: [
        "choose between options",
        "competitive analysis",
        "tool selection",
        "feature trade-offs",
              "compare my options",
      "which is better and why",
      "pros and cons list",
      "rank these choices",
      "make a decision matrix",
      "A vs B vs C",
      "side-by-side features",
      "tool selection help",
      "best bang for buck",
      "trade-offs explained",
      "score by criteria",
      "shortlist the top picks",
      "show deal breakers",
      "weight importance",
      "simple comparison table",
      "choose the best plan",
      "prioritize features",
      "compare price vs value",
      "narrow it to two",
      "recommend one choice",
      "what should I buy",
      "Is this a good deal",
      "Is this too pricey",
      "Help me shop",
        "help me pick between two phones",
  "compare grocery prices",
  "is this subscription worth it",
  "which laptop should I buy",
  "compare travel options",
  "should I rent or buy",
  "help me pick dinner options",
  "is premium worth extra cost",
  "compare warranties",
  "side-by-side streaming services",
  "which insurance plan fits me",
  "best value for my budget",
  "help me rank priorities",
  "compare job offers",
  "should I upgrade or wait",
  "is this feature worth paying for",
  "which class should I take",
  "compare memberships",
  "is this option overkill",
  "help me choose fairly"
      ],
      boosters: [
        "End with a concise recommendation and next steps.",
        "Surface key trade-offs in one short line per option.",
        "If criteria are provided with weights, show the score math simply (no long reasoning)."
      ],
      definition: "Compare multiple options using a selected comparison style (ranking, pros/cons, table, weighted matrix, etc.).",
      help: "Pick a comparison style, list the options (one per line), and optionally add criteria (weights with \"name:weight\").",
      fields: [
        {
          label: "Topic / decision context",
          key: "topic",
          ph: "e.g., Choose a JavaScript charting library for dashboards",
          type: "text"
        },
        {
          label: "Comparison style",
          desc: "The prompt adapts to your choice.",
          key: "compare_style",
          options: [
            {
              label: "Pros & Cons",
              value: "pros-cons"
            },
            {
              label: "For & Against",
              value: "for-against"
            },
            {
              label: "Benefits vs. Risks",
              value: "benefits-risks"
            },
            {
              label: "Strengths & Weaknesses",
              value: "strengths-weaknesses"
            },
            {
              label: "Similarities & Differences",
              value: "similarities-differences"
            },
            {
              label: "Chart",
              value: "chart"
            },
            {
              label: "Venn",
              value: "venn"
            },
            {
              label: "Decision Tree",
              value: "decision-tree"
            },
            {
              label: "Heat Map",
              value: "heatmap"
            },
            {
              label: "Ranked List",
              value: "rank"
            },
            {
              label: "Rating Scale",
              value: "rating"
            },
            {
              label: "Weighted Criteria Matrix",
              value: "weighted-matrix"
            },
            {
              label: "Tiering (S/A/B...)",
              value: "tiering"
            },
            {
              label: "Side-by-Side Table",
              value: "table"
            },
            {
              label: "Point-by-Point",
              value: "point-by-point"
            },
            {
              label: "Block Comparison",
              value: "block"
            },
            {
              label: "Benchmarking (vs gold standard)",
              value: "benchmarking"
            },
            {
              label: "Case Studies",
              value: "case-studies"
            },
            {
              label: "Analogies & Metaphors",
              value: "analogies"
            },
            {
              label: "Before vs After",
              value: "before-after"
            },
            {
              label: "Scenario-Based",
              value: "scenario"
            }
          ],
          type: "select"
        },
        {
          label: "Options to compare (one per line)",
          key: "items",
          ph: "Option A\nOption B\nOption C",
          type: "textarea"
        },
        {
          label: "Criteria (one per line, optional weights)",
          desc: "Optionally add weights like \"cost:30\", \"ease of use:20\". Unweighted criteria default to equal weight.",
          key: "criteria",
          ph: "cost:30\necosystem:20\nperformance:25\nlearning curve:25",
          type: "textarea"
        },
        {
          label: "Rating scale max (only for Rating Scale)",
          key: "scale_max",
          ph: "10",
          type: "text"
        },
        {
          label: "Output rules / format preferences (optional)",
          key: "rules",
          ph: "e.g., Markdown table; keep each pro/con ≤12 words; include tie-break rules.",
          type: "textarea"
        }
      ],
      template: ({topic,compare_style,items,criteria,scale_max='10',rules,ctx,audience,style,tone})=>{
      const list = String(items||'').split(/\n+/).map(s=>s.trim()).filter(Boolean);
      const critList = String(criteria||'').split(/\n+/).map(s=>s.trim()).filter(Boolean);
      const parsed = critList.map(c=>{
        const m = c.match(/^(.+?):\s*([0-9]+(?:\.[0-9]+)?)\s*$/i);
        return m ? {name:m[1].trim(), weight:parseFloat(m[2])} : {name:c, weight:null};
      });
      const hasWeights = parsed.some(c=>c.weight!==null);
      const simpleCriteria = parsed.map(c=>c.name).join(', ');
      const weightedLine = hasWeights
        ? parsed.map(c=>`${c.name} (${c.weight}%)`).join(', ')
        : simpleCriteria;

      const styleLine = (()=>{
        switch(compare_style){
          case 'for-against':
            return 'Lay out arguments "for" and "against" each option, then weigh balance of evidence.';
           case 'benefits-risks':
            return 'Lay out the benefits and risks for each option, then weigh and compare the benefits vs. the risks.';
          case 'strengths-weaknesses':
            return 'List strengths and weaknesses per option with one-line explanations.';
          case 'similarities-differences':
            return 'Make a two-column list: similarities on the left, differences on the right.';
          case 'rank':
            return 'Produce a ranked list (best → worst) with one-line justification per item.';
          case 'rating':
            return `Rate each item on a 1–${scale_max} scale for each criterion, show subtotals and a final average; break ties with a brief rationale.`;
          case 'weighted-matrix':
            return `Build a weighted criteria matrix. Criteria${hasWeights? ' (with weights)':''}: ${weightedLine}. Show per-criterion scores and a weighted total.`;
          case 'tiering':
            return 'Assign each item to tiers (S/A/B...) with one-line reason per assignment.';
          case 'table':
            return 'Create a side-by-side Markdown table: rows = criteria/features, columns = options. Keep cells concise.';
          case 'point-by-point':
            return 'Compare point-by-point across criteria: list each criterion and discuss how each option fares.';
          case 'block':
            return 'Write compact blocks: Option A summary, Option B summary, Option C summary; end with synthesis.';
          case 'benchmarking':
            return 'Benchmark each item against a named gold standard; call out gaps and advantages.';
          case 'case-studies':
            return 'Use short case snippets to illustrate differences; cite realistic scenarios.';
          case 'analogies':
            return 'Use clear analogies/metaphors to contrast items; keep analogies concrete.';
          case 'before-after':
            return 'Show before/after outcomes per option for the same scenario.';
          case 'scenario':
            return 'Test each option in the same hypothetical scenario; report outcomes and risks.';
          case 'chart':
            return 'Render comparison as a chart (bar, radar, scatter, etc.); include axis/legend labels.';
            case 'venn':
    return 'Draw a Venn diagram: overlapping area = shared traits, outer zones = unique traits.';
    case 'decision-tree':
    return 'Map a decision tree: branches show which option applies under which condition.';
    case 'heatmap':
    return 'Build a heatmap grid of items × criteria; color intensity signals performance.';
          default:
            return 'List pros & cons per option in bullet form, then synthesize trade-offs.';
        }
      })();

      const itemsBlock = list.length ? ('Options:\n' + list.map((t,i)=>`${i+1}. ${t}`).join('\n')) : '';
      const critBlock  = parsed.length ? (`Criteria:${hasWeights? ' (weights in %)':''}\n` + parsed.map(c=>`- ${c.name}${c.weight!==null?`: ${c.weight}%`:''}`).join('\n')) : '';

      return [
        'Perform a comparative analysis.',
        topic && `Topic/decision: ${topic}`,
        ctx && `Context: ${ctx}`,
        audience && `Audience: ${audience}`,
        style && `Style: ${style}`,
        tone && `Tone: ${tone}`,
        itemsBlock,
        critBlock,
        `Comparison mode: ${compare_style || 'pros-cons'}`,
        styleLine,
        rules && `Output rules: ${rules}`,
        'End with: (1) succinct recommendation, (2) key trade-offs in one line, (3) next steps or what could change the decision.'
      ].filter(Boolean).join('\n');
    },
      meta: {
        search_text: "comparative analysis — rank • pros/cons • matrix comparative-analysis compare multiple options using a selected comparison style (ranking, pros/cons, table, weighted matrix, etc.). pick a comparison style, list the options (one per line), and optionally add criteria (weights with \"name:weight\"). type:framework phase:compose use:evaluation phase:apply level:intermediate analysis-frameworks decision choose between options competitive analysis tool selection feature trade-offs end with a concise recommendation and next steps. surface key trade-offs in one short line per option. if criteria are provided with weights, show the score math simply (no long reasoning). topic / decision context comparison style options to compare (one per line) criteria (one per line, optional weights) rating scale max (only for rating scale) output rules / format preferences (optional)"
      }
    },

    {
      id: "constraint_flip",
      slug: "constraint-flip",
      label: "Constraint Flip (play with edges)",
      kind: "strategy",
      categories: [
        "creativity",
        "strategy",
        "cultural-frameworks"
      ],
      tags: [
        "use:pattern",
        "use:presentations",
        "use:decision-making",
        "use:brainstorming",
        "use:workshop",
        "level:beginner"
      ],
      use_cases: [
        "turn blockers into creative triggers",
        "explore exaggerated, inverted, or removed constraints",
        "design for edge cases or paradoxes",
        "run innovation workshops or design sprints under tight limits",
        "brainstorm alternatives when resources are scarce",
              "do it with zero budget",
      "solve it with half the time",
      "what if the opposite",
      "design for worst case",
      "work with tiny team",
      "no internet option",
      "mobile only version",
      "one screen only",
      "remove this feature then what",
      "use only free tools",
      "build it ugly first",
      "assume high traffic spike",
      "assume user is offline",
      "cannot hire anyone",
      "flip the constraint",
      "edge-case ideas",
      "make the limit the feature",
      "smallest viable version",
      "plan for failure first",
      "break the rule safely",
        "how would I do this with no money",
  "make it work without tech",
  "what if I had double the problem",
  "design for only one hand",
  "how to do it with pen and paper",
  "what if it had to be fun not serious",
  "imagine the rule is reversed",
  "what if the user is a child",
  "what if power goes out",
  "how to make it work in one minute",
  "turn the weakness into the feature",
  "what if it had to fit in a tweet",
  "what if everything was optional",
  "design with only leftovers",
  "what if failure is the goal"
      ],
      boosters: [
        "Generate ≥3 ideas per flip direction (exaggerate, remove, invert, edge-case).",
        "Include at least one non-Western or artistic example of constraint-play.",
        "Link at least one flipped idea to a concrete user need.",
        "Compare feasibility vs. originality across flips.",
        "End with a synthesis sentence: what hidden possibility emerged?",
        "Close with a feasible prototype step."
      ],
      definition: "A creativity scaffold that flips limits into design prompts: exaggerate, remove, invert, or design for edge cases. By reframing constraints, hidden opportunities emerge and can be prototyped.",
      help: "Identify a real constraint. Explore it exaggerated, removed, inverted, and at its edge. Generate ≥3 ideas per flip. Add a cultural or artistic analogy. End with a synthesis and a prototype step to test feasibility.",
      fields: [
        {
          label: "What’s limiting me right now?",
          key: "limiting",
          ph: "e.g., Budget cap; only 2 engineers; limited space",
          type: "textarea"
        },
        {
          label: "If I exaggerated that constraint, what new ideas emerge?",
          key: "exaggerate",
          ph: "e.g., If budget were $0, how would we still deliver value?",
          type: "textarea"
        },
        {
          label: "If I removed it entirely, what could I try?",
          key: "remove",
          ph: "e.g., If time were unlimited, what would I build?",
          type: "textarea"
        },
        {
          label: "If I turned it into a mandatory rule, what happens?",
          key: "invert",
          ph: "e.g., If delays were required, what experience would we design?",
          type: "textarea"
        },
        {
          label: "What if I designed only for edge/worst-case users?",
          key: "edge",
          ph: "e.g., For people with no internet access; for extreme climates",
          type: "textarea"
        },
        {
          label: "Cultural/artistic analogy (optional)",
          key: "analogy",
          ph: "e.g., Japanese wabi-sabi approach; jazz improvisation; African fractal design",
          type: "textarea"
        },
        {
          label: "Prototype step",
          key: "prototype",
          ph: "What’s one small, testable experiment to try now?",
          type: "textarea"
        },
        {
          label: "Synthesis insight",
          key: "synthesis",
          ph: "What hidden possibility or new direction did this reveal?",
          type: "textarea"
        }
      ],
      template: ({ limiting, exaggerate, remove, invert, edge, analogy, prototype, synthesis, ctx, audience, style, tone }) => [
    'Run a Constraint Flip session (play with edges).',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    limiting && ('Constraint:\n' + limiting),
    exaggerate && ('Exaggerated constraint → ideas:\n' + exaggerate),
    remove && ('Removed constraint → ideas:\n' + remove),
    invert && ('Inverted constraint (make it a rule) → ideas:\n' + invert),
    edge && ('Edge-case design → ideas:\n' + edge),
    analogy && ('Cultural/artistic analogy:\n' + analogy),
    prototype && ('Prototype step:\n' + prototype),
    synthesis && ('Synthesis insight:\n' + synthesis),
    'Output:\n1) Constraint summary\n2) Divergent ideas (all flips)\n3) Cultural/artistic analogies\n4) Prototype step\n5) Synthesis insight',
    'Checklist:\n- [ ] ≥3 ideas per flip\n- [ ] Analogy included\n- [ ] Prototype feasible\n- [ ] Insight captured'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "constraint flip (play with edges) constraint-flip a creativity scaffold that flips limits into design prompts: exaggerate, remove, invert, or design for edge cases. by reframing constraints, hidden opportunities emerge and can be prototyped. identify a real constraint. explore it exaggerated, removed, inverted, and at its edge. generate ≥3 ideas per flip. add a cultural or artistic analogy. end with a synthesis and a prototype step to test feasibility. use:pattern use:presentations use:decision-making use:brainstorming use:workshop level:beginner creativity strategy cultural-frameworks turn blockers into creative triggers explore exaggerated, inverted, or removed constraints design for edge cases or paradoxes run innovation workshops or design sprints under tight limits brainstorm alternatives when resources are scarce generate ≥3 ideas per flip direction (exaggerate, remove, invert, edge-case). include at least one non-western or artistic example of constraint-play. link at least one flipped idea to a concrete user need. compare feasibility vs. originality across flips. end with a synthesis sentence: what hidden possibility emerged? close with a feasible prototype step. what’s limiting me right now? if i exaggerated that constraint, what new ideas emerge? if i removed it entirely, what could i try? if i turned it into a mandatory rule, what happens? what if i designed only for edge/worst-case users? cultural/artistic analogy (optional) prototype step synthesis insight"
      }
    },

    {
      id: "costar",
      slug: "costar-framework",
      label: "COSTAR — Context · Objective · Style · Tone · Audience · Response",
      kind: "framework",
      categories: [
        "prompt-development-techniques",
        "storytelling-frameworks"
      ],
      tags: [
        "use:pattern",
        "topic:prompting",
        "phase:apply",
        "level:beginner",
        "use:brainstorming",
        "use:task-brief",
        "use:content"
      ],
      use_cases: [
        "creative brief",
        "message brief",
        "content brief",
        "campaign brief",
        "UX copy brief",
        "press/news announcement brief",
           "write a creative brief",
      "set context and goal",
      "define the objective",
      "pick style and tone",
      "who is the audience",
      "message brief template",
      "UX copy brief",
      "campaign brief fast",
      "press release brief",
      "content brief outline",
      "give examples to follow",
      "what does success look like",
      "constraints and must-haves",
      "channels and format",
      "CTA options",
      "brand voice notes",
      "one-pager brief please",
      "turn idea into brief",
      "align team on message",
      "hand off to writer"
      ],
      boosters: [
        "Verify each COSTAR element is addressed; then output the final message under “Final response:”"
      ],
      definition: "A context-first messaging recipe encoding context, objective, style, tone, audience, and response format.",
      help: "Popular structure that bakes in style/tone and output format.",
      fields: [
        {
          label: "Context",
          desc: "Background, problem, scenario.",
          key: "context",
          ph: "e.g., Announcing a new feature to free users",
          type: "textarea"
        },
        {
          label: "Objective",
          desc: "What the message must achieve.",
          key: "objective",
          ph: "e.g., Drive upgrades to Pro",
          type: "text"
        },
        {
          label: "Style (overrides common)",
          desc: "Writing style.",
          key: "style",
          ph: "e.g., Practical, plain language",
          type: "text"
        },
        {
          label: "Tone (overrides common)",
          desc: "Emotional flavor.",
          key: "tone",
          ph: "e.g., Friendly, confident",
          type: "text"
        },
        {
          label: "Audience (overrides common)",
          desc: "Who this is for.",
          key: "audience",
          ph: "e.g., Busy SMB owners",
          type: "text"
        },
        {
          label: "Response format",
          desc: "Desired output structure.",
          key: "response",
          ph: "e.g., Markdown outline with H2s",
          type: "text"
        }
      ],
      template: ({context,objective,style,tone,audience,response,ctx})=>[
      (ctx||context)&&`Context: ${ctx?ctx:context}`,
      objective&&`Objective: ${objective}`,
      (style)&&`Style: ${style}`,
      (tone)&&`Tone: ${tone}`,
      audience&&`Audience: ${audience}`,
      response&&`Response format: ${response}`,
      `Follow COSTAR. Ask clarifying Qs only if blocking.`
    ].filter(Boolean).join('\n'),
      meta: {
        search_text: "costar — context · objective · style · tone · audience · response costar-framework a context-first messaging recipe encoding context, objective, style, tone, audience, and response format. popular structure that bakes in style/tone and output format. use:pattern topic:prompting phase:apply level:beginner use:brainstorming use:task-brief use:content prompt-development-techniques storytelling-frameworks creative brief message brief content brief campaign brief ux copy brief press/news announcement brief verify each costar element is addressed; then output the final message under “final response:” context objective style (overrides common) tone (overrides common) audience (overrides common) response format"
      }
    },

    {
      id: "dao_wu_wei",
      slug: "daoist-wu-wei-strategy",
      label: "Daoist Wu-Wei Strategy (Effortless Action)",
      kind: "strategy",
      categories: [
        "strategy",
        "ethics",
        "cultural-frameworks"
      ],
      tags: [
        "type:framework",
        "use:copywriting",
        "use:brainstorming",
        "use:teaching",
        "use:coding",
        "use:pattern",
        "level:intermediate",
        "use:format-guidance",
        "topic:clarification",
        "use:scope-management",
        "use:goals"
      ],
      use_cases: [
        "design minimal-intervention strategies",
        "align with existing flows instead of forcing change",
        "choose timing and points of least-effort leverage",
        "practice yielding and redirection instead of resistance",
        "develop sustainable strategies that prevent burnout",
        "practice ethical leadership rooted in cultural wisdom",
              "less effort strategy",
      "stop forcing it",
      "go with the flow plan",
      "pick the right moment",
      "nudge not shove",
      "path of least resistance",
      "align with existing habits",
      "remove friction points",
      "win by not overworking",
      "reduce burnout approach",
      "small moves big effect",
      "use what already works",
      "redirect instead of resist",
      "do nothing wisely",
      "minimal viable process",
      "choose gentle defaults",
      "leverage timing",
      "let blockers guide design",
      "simplify the system",
      "sustainable pace plan",
        "how to stop overthinking my plan",
  "simplify this process",
  "how to lead without pushing",
  "find the natural flow",
  "when should I wait instead of act",
  "make it easier not harder",
  "how to avoid burnout",
  "work smarter not harder",
  "gentle way to influence",
  "do less but get more done",
  "align with habits people already have",
  "how to nudge instead of force",
  "what if I just remove steps",
  "how to let go of control",
  "small action big effect"
      ],
      boosters: [
        "Prefer removing steps over adding steps, unless timing calls for a single decisive move.",
        "Name non-actions explicitly (what you will not do).",
        "Check if the move harmonizes with larger flows and cycles rather than forcing against them.",
        "Add at least one yielding or redirection move (like water flowing around stone).",
        "Contrast a forcing strategy with the wu-wei version.",
        "Reflect on emptiness: what space is created by restraint?",
        "Close with a Daoist metaphor or image that reflects the strategy."
      ],
      definition: "Wu-wei (effortless action) is a Daoist principle of acting with the grain of natural flows rather than forcing outcomes. It emphasizes minimal, well-timed interventions, yielding over resistance, and cultivating space (emptiness) as a source of power. In strategic use, it guides leaders and teams to reduce friction, simplify operations, and harmonize with larger patterns.",
      help: "Observe flows and frictions. Identify timing, leverage, and minimal moves. List deliberate non-actions. Compare what forcing the issue would look like versus wu-wei. Use natural metaphors (water, bamboo, valley) as reasoning tools. Close with a next step or practice.",
      fields: [
        {
          label: "Goal/outcome",
          key: "goal",
          ph: "Desired state.",
          type: "text"
        },
        {
          label: "Existing flows (where energy already moves)",
          key: "flows",
          ph: "User habits, market currents, team rhythms…",
          type: "textarea"
        },
        {
          label: "Friction points",
          key: "frictions",
          ph: "Bottlenecks, resistances.",
          type: "textarea"
        },
        {
          label: "Leverage points",
          key: "leverage",
          ph: "Small moves with outsized effect.",
          type: "textarea"
        },
        {
          label: "Timing (ripe moments, natural cycles)",
          key: "timing",
          ph: "Seasonal, market, or team rhythms.",
          type: "textarea"
        },
        {
          label: "Yielding or redirecting moves",
          key: "yielding_moves",
          ph: "Flowing around resistance, reframing.",
          type: "textarea"
        },
        {
          label: "Non-actions (deliberate restraint)",
          key: "non_actions",
          ph: "What not to do.",
          type: "textarea"
        },
        {
          label: "Minimal enabling actions",
          key: "minimal_moves",
          ph: "Remove, nudge, or re-sequence.",
          type: "textarea"
        },
        {
          label: "Alignment check",
          key: "alignment",
          ph: "Does this harmonize with larger natural, cultural, or organizational patterns?",
          type: "textarea"
        },
        {
          label: "Trade-offs / risks (optional)",
          key: "tradeoffs",
          ph: "What hidden costs could minimalism create?",
          type: "textarea"
        },
        {
          label: "Daoist metaphor or imagery",
          key: "imagery",
          ph: "Water, valley, bamboo, empty space…",
          type: "textarea"
        },
        {
          label: "Next step / practice (optional)",
          key: "outcome",
          ph: "What small action or reminder will embody wu-wei here?",
          type: "textarea"
        }
      ],
      template: ({ goal, flows, frictions, leverage, timing, yielding_moves, non_actions, minimal_moves, alignment, tradeoffs, imagery, outcome, ctx }) => [
    'Apply Wu-Wei planning (effortless action).',
    ctx && `Context: ${ctx}`,
    goal && `Goal: ${goal}`,
    flows && `Existing flows:\n${flows}`,
    frictions && `Friction points:\n${frictions}`,
    leverage && `Leverage points:\n${leverage}`,
    timing && `Timing (ripe moments):\n${timing}`,
    yielding_moves && `Yielding/redirecting moves:\n${yielding_moves}`,
    non_actions && `Non-actions:\n${non_actions}`,
    minimal_moves && `Minimal enabling actions:\n${minimal_moves}`,
    alignment && `Alignment check:\n${alignment}`,
    tradeoffs && `Trade-offs / risks:\n${tradeoffs}`,
    imagery && `Daoist metaphor:\n${imagery}`,
    outcome && `Next step / practice:\n${outcome}`,
    'Output:\n1) Flow/energy map\n2) Minimal/yielding moves\n3) Explicit non-actions\n4) Alignment check\n5) Daoist metaphor summary\n6) Actionable next step',
    'Checklist:\n- [ ] Non-actions recorded\n- [ ] Minimal moves only\n- [ ] Harmonizes with flows/timing\n- [ ] Metaphor included\n- [ ] Next step identified'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "daoist wu-wei strategy (effortless action) daoist-wu-wei-strategy wu-wei (effortless action) is a daoist principle of acting with the grain of natural flows rather than forcing outcomes. it emphasizes minimal, well-timed interventions, yielding over resistance, and cultivating space (emptiness) as a source of power. in strategic use, it guides leaders and teams to reduce friction, simplify operations, and harmonize with larger patterns. observe flows and frictions. identify timing, leverage, and minimal moves. list deliberate non-actions. compare what forcing the issue would look like versus wu-wei. use natural metaphors (water, bamboo, valley) as reasoning tools. close with a next step or practice. type:framework use:copywriting use:brainstorming use:teaching use:coding use:pattern level:intermediate use:format-guidance topic:clarification use:scope-management use:goals strategy ethics cultural-frameworks design minimal-intervention strategies align with existing flows instead of forcing change choose timing and points of least-effort leverage practice yielding and redirection instead of resistance develop sustainable strategies that prevent burnout practice ethical leadership rooted in cultural wisdom prefer removing steps over adding steps, unless timing calls for a single decisive move. name non-actions explicitly (what you will not do). check if the move harmonizes with larger flows and cycles rather than forcing against them. add at least one yielding or redirection move (like water flowing around stone). contrast a forcing strategy with the wu-wei version. reflect on emptiness: what space is created by restraint? close with a daoist metaphor or image that reflects the strategy. goal/outcome existing flows (where energy already moves) friction points leverage points timing (ripe moments, natural cycles) yielding or redirecting moves non-actions (deliberate restraint) minimal enabling actions alignment check trade-offs / risks (optional) daoist metaphor or imagery next step / practice (optional)"
      }
    },

    {
      id: "disney_creative",
      slug: "disney-dreamer-realist-critic",
      label: "Disney Strategy — Dreamer · Realist · Critic",
      kind: "strategy",
      categories: [
        "creativity",
        "teaching",
        "storytelling-frameworks"
      ],
      tags: [
        "type:framework",
        "use:decision-making",
        "use:iteration",
        "use:goals",
        "use:brainstorming",
        "use:workshop",
        "level:intermediate"
      ],
      use_cases: [
        "develop an idea from wild concept to practical plan",
        "balance imaginative thinking with realism and critical review",
        "loop ideas through multiple creative lenses",
        "run innovation sprints or workshops with role rotation",
        "teach creative problem-solving through structured perspectives",
             "turn idea into plan",
      "brainstorm then reality check",
      "separate dream and critique",
      "make a wild idea workable",
      "structure a creative sprint",
      "role-play dreamer realist critic",
      "pitch then stress test",
      "don’t kill ideas too soon",
      "switch lenses on my idea",
      "balance vision with execution",
      "refine a rough concept",
      "find risks without killing vibe",
      "map fantasy to roadmap",
      "creative workshop outline",
      "prototype next steps",
      "loop idea through roles",
      "get honest feedback safely",
      "make critics helpful",
      "from napkin sketch to plan",
      "pressure-test the concept"
      ],
      boosters: [
        "Dreamer: Generate ≥5 ideas, with ≥2 absurd or magical. Suspend judgment completely.",
        "Realist: Translate at least 1 Dreamer idea into concrete steps, including timeline or milestones.",
        "Critic: Each risk/weakness must propose a fix or mitigation, not just a flaw.",
        "Critic: Explicitly check for cultural/ethical inclusivity.",
        "Observer: Reflect on balance and propose the next loop back to Dreamer.",
        "End with a checklist confirming all roles contributed."
      ],
      definition: "A structured creative process (from Walt Disney, modeled by Robert Dilts) that cycles through Dreamer (imagination), Realist (planning), and Critic (evaluation). Iterative looping transforms wild ideas into feasible, ethical, and innovative plans while preserving imaginative richness.",
      help: "Provide an idea or project to develop. Begin with Dreamer ideas (suspend all judgment). Translate selected ideas into Realist steps grounded in resources and constraints. Critic evaluates risks and ethics, but must pair each flaw with a mitigation. Observer reflects on balance and suggests looping back to Dreamer. Use different voices or spaces for each role to encourage perspective shift.",
      fields: [
        {
          label: "Idea or project description",
          key: "idea",
          ph: "e.g., A device that translates animal thoughts into human language",
          type: "textarea"
        },
        {
          label: "Dreamer seed (optional)",
          key: "dreamer_seed",
          ph: "Image, theme, metaphor, or random word to spark ideas",
          type: "textarea"
        },
        {
          label: "Dreamer triggers (optional)",
          key: "dream_triggers",
          ph: "Random word, metaphor, or character to inspire dreaming",
          type: "textarea"
        },
        {
          label: "Dreamer’s Persona",
          autofill: "persona->textarea",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "dreamer_persona",
          ph: "Start typing to pick one or more personas for the Dreamer role",
          type: "repeater"
        },
        {
          label: "Constraints (Realist must respect)",
          key: "constraints",
          ph: "Budget, time, tech limits",
          type: "textarea"
        },
        {
          label: "Resources available (optional)",
          key: "realist_resources",
          ph: "Funding, team, tools, partnerships",
          type: "textarea"
        },
        {
          label: "Critic focus (optional)",
          key: "critic_focus",
          ph: "Lens for critique: technical, financial, ethical, cultural",
          type: "textarea"
        },
        {
          label: "Ethical/cultural considerations",
          key: "ethics",
          ph: "Potential bias, sustainability, inclusivity",
          type: "textarea"
        },
        {
          label: "Observer reflection (optional)",
          key: "observer",
          ph: "What balance or insight emerged?",
          type: "textarea"
        }
      ],
      template: ({ idea, dreamer_seed, dream_triggers, dreamer_persona, constraints, realist_resources, critic_focus, ethics, observer, ctx }) => [
    'Apply the Disney Creative Strategy.',
    ctx && `Context: ${ctx}`,
    idea && `Idea: ${idea}`,
    dreamer_seed && `Dreamer seed:\n${dreamer_seed}`,
    dream_triggers && `Dreamer triggers:\n${dream_triggers}`,
    dreamer_persona && (
      'Dreamer’s Persona(s):\n' +
      String(dreamer_persona).split(/\n+/).map(s => s.trim()).filter(Boolean).map((x,i)=>`${i+1}. ${x}`).join('\n')
    ),
    constraints && `Constraints:\n${constraints}`,
    realist_resources && `Resources available:\n${realist_resources}`,
    critic_focus && `Critic focus:\n${critic_focus}`,
    ethics && `Ethical/cultural considerations:\n${ethics}`,
    '---',
    'Dreamer: Bold, playful, and unconstrained ideas (≥5, include magical/absurd). Use Dreamer’s Persona(s) to guide imagination.',
    'Realist: Translate selected Dreamer ideas into concrete plans, with timeline and resources, respecting constraints.',
    'Critic: Identify risks and weaknesses (technical, ethical, cultural), but pair each with mitigation.',
    observer && ('Observer:\n' + observer),
    'Output:\n1) Dreamer ideas\n2) Realist plan\n3) Critic risks + fixes\n4) Observer reflection',
    'Checklist:\n- [ ] ≥5 Dreamer ideas\n- [ ] Dreamer personas included\n- [ ] Realist plan respects constraints/resources\n- [ ] Critic includes fixes & ethical checks\n- [ ] Observer reflection included'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "disney strategy — dreamer · realist · critic disney-dreamer-realist-critic a structured creative process (from walt disney, modeled by robert dilts) that cycles through dreamer (imagination), realist (planning), and critic (evaluation). iterative looping transforms wild ideas into feasible, ethical, and innovative plans while preserving imaginative richness. provide an idea or project to develop. begin with dreamer ideas (suspend all judgment). translate selected ideas into realist steps grounded in resources and constraints. critic evaluates risks and ethics, but must pair each flaw with a mitigation. observer reflects on balance and suggests looping back to dreamer. use different voices or spaces for each role to encourage perspective shift. type:framework use:decision-making use:iteration use:goals use:brainstorming use:workshop level:intermediate creativity teaching storytelling-frameworks develop an idea from wild concept to practical plan balance imaginative thinking with realism and critical review loop ideas through multiple creative lenses run innovation sprints or workshops with role rotation teach creative problem-solving through structured perspectives dreamer: generate ≥5 ideas, with ≥2 absurd or magical. suspend judgment completely. realist: translate at least 1 dreamer idea into concrete steps, including timeline or milestones. critic: each risk/weakness must propose a fix or mitigation, not just a flaw. critic: explicitly check for cultural/ethical inclusivity. observer: reflect on balance and propose the next loop back to dreamer. end with a checklist confirming all roles contributed. idea or project description dreamer seed (optional) dreamer triggers (optional) dreamer’s persona constraints (realist must respect) resources available (optional) critic focus (optional) ethical/cultural considerations observer reflection (optional)"
      }
    },

    {
      id: "dmaic",
      slug: "dmaic-six-sigma",
      label: "DMAIC — Define · Measure · Analyze · Improve · Control",
      kind: "strategy",
      categories: [
        "quality",
        "operations",
        "decision",
        "critical-thinking"
      ],
      tags: [
        "type:framework",
        "topic:matrix",
        "level:beginner",
        "use:process-improvement",
        "use:brainstorming",
        "level:intermediate",
        "use:case-study",
        "use:pattern",
        "use:healing"
      ],
      use_cases: [
        "structure a data-driven improvement",
        "tie logic and evidence to countermeasures",
        "design sustainable monitoring plans",
        "prepare Six Sigma project reports",
        "audit processes for quality or compliance",
              "fix a process with data",
      "define the problem",
      "measure the baseline",
      "analyze root causes",
      "improve then control",
      "reduce defects",
      "six sigma starter",
      "process improvement plan",
      "what to track for quality",
      "simple control plan",
      "evidence for countermeasures",
      "create a project charter",
      "tie metrics to actions",
      "monitor after the fix",
      "stop firefighting with data",
      "visualize before vs after",
      "pick the right measure",
      "report out my project",
      "sustain the gains",
      "compliance-friendly summary"
      ],
      boosters: [
        "Each root cause must link back to at least one measured metric.",
        "Each Improve action must map to a validated cause and include a success test.",
        "Control plan must specify metric, threshold, owner, and cadence.",
        "Surface one assumption and one disconfirming data point in Analyze.",
        "Use visual tools: control charts, Pareto, fishbone diagrams where possible.",
        "Anticipate drift/slippage in Control and plan mitigation."
      ],
      definition: "DMAIC is a five-phase Six Sigma method for continuous improvement. It cycles through Define, Measure, Analyze, Improve, and Control. It emphasizes evidence-based problem solving, root cause validation, and sustainable controls. It is iterative—insights from Control can restart the cycle.",
      help: "Work step by step: Define the problem and scope, Measure baseline metrics, Analyze causes with evidence and disconfirmation, Improve via tested interventions, and design Control mechanisms that sustain gains. At each stage, surface assumptions and validate with data.",
      fields: [
        {
          label: "Define",
          key: "define",
          ph: "Problem statement, scope, customers, assumptions.",
          type: "textarea"
        },
        {
          label: "Measure",
          key: "measure",
          ph: "Baseline metrics, KPIs, operational definitions.",
          type: "textarea"
        },
        {
          label: "Baseline snapshot (optional)",
          key: "baseline",
          ph: "Numeric summary of current state (e.g., defect rate = 7%)",
          type: "text"
        },
        {
          label: "Analyze",
          key: "analyze",
          ph: "Root causes, 5 Whys, evidence, disconfirmation.",
          type: "textarea"
        },
        {
          label: "Key assumptions (explicit)",
          key: "assumptions",
          ph: "What do we believe that must be tested?",
          type: "textarea"
        },
        {
          label: "Improve",
          key: "improve",
          ph: "Interventions, pilots, experiments, counterfactuals.",
          type: "textarea"
        },
        {
          label: "Risks / limits (optional)",
          key: "risks",
          ph: "Constraints, trade-offs, unintended effects.",
          type: "textarea"
        },
        {
          label: "Control",
          key: "control",
          ph: "Metrics, thresholds, owners, review cadence.",
          type: "textarea"
        },
        {
          label: "Control plan ownership (optional)",
          key: "owners",
          ph: "Who owns each metric or process check?",
          type: "textarea"
        }
      ],
      template: ({ define, measure, baseline, analyze, assumptions, improve, risks, control, owners, ctx }) => [
    'Run DMAIC (Define → Measure → Analyze → Improve → Control).',
    ctx && `Context: ${ctx}`,
    define && `Define:\n${define}`,
    measure && `Measure:\n${measure}`,
    baseline && `Baseline snapshot:\n${baseline}`,
    analyze && `Analyze:\n${analyze}`,
    assumptions && `Key assumptions:\n${assumptions}`,
    improve && `Improve:\n${improve}`,
    risks && `Risks / limits:\n${risks}`,
    control && `Control:\n${control}`,
    owners && `Control owners:\n${owners}`,
    'Output:\n1) Problem → Data → Cause → Action → Control chain\n2) Cause-action-metric mapping\n3) Control plan with metrics, thresholds, owners\n4) Assumptions & disconfirmation noted',
    'Checklist:\n- [ ] Root causes linked to metrics\n- [ ] Improve actions mapped to causes & tests\n- [ ] Risks acknowledged\n- [ ] Control plan sustainable\n- [ ] Owners accountable'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "dmaic — define · measure · analyze · improve · control dmaic-six-sigma dmaic is a five-phase six sigma method for continuous improvement. it cycles through define, measure, analyze, improve, and control. it emphasizes evidence-based problem solving, root cause validation, and sustainable controls. it is iterative—insights from control can restart the cycle. work step by step: define the problem and scope, measure baseline metrics, analyze causes with evidence and disconfirmation, improve via tested interventions, and design control mechanisms that sustain gains. at each stage, surface assumptions and validate with data. type:framework topic:matrix level:beginner use:process-improvement use:brainstorming level:intermediate use:case-study use:pattern use:healing quality operations decision critical-thinking structure a data-driven improvement tie logic and evidence to countermeasures design sustainable monitoring plans prepare six sigma project reports audit processes for quality or compliance each root cause must link back to at least one measured metric. each improve action must map to a validated cause and include a success test. control plan must specify metric, threshold, owner, and cadence. surface one assumption and one disconfirming data point in analyze. use visual tools: control charts, pareto, fishbone diagrams where possible. anticipate drift/slippage in control and plan mitigation. define measure baseline snapshot (optional) analyze key assumptions (explicit) improve risks / limits (optional) control control plan ownership (optional)"
      }
    },

    {
      id: "east_nudge",
      slug: "east-behavioral-nudge",
      label: "EAST — Easy · Attractive · Social · Timely",
      kind: "heuristic",
      categories: [
        "planning",
        "design",
        "strategy"
      ],
      tags: [
        "type:framework",
        "level:intermediate",
        "use:format-guidance",
        "use:pattern",
        "level:beginner",
        "use:scope-management",
        "use:content"
      ],
      use_cases: [
        "design nudges for adoption",
        "reduce friction in flows",
        "translate insights into micro-interventions",
        "adapt behavioral design for different cultural contexts",
        "improve default settings in digital services",
        "run A/B tests of behavioral interventions",
              "make it easier to do",
      "reduce friction in signup",
      "better default settings",
      "nudge not nag",
      "use social proof",
      "timely reminder ideas",
      "more attractive choice",
      "one-click options",
      "simplify the path",
      "behavioral quick wins",
      "microcopy that nudges",
      "set smart defaults",
      "make good choice obvious",
      "right moment to ask",
      "peer examples that help",
      "localize the nudge",
      "A/B test a nudge",
      "habit-friendly design",
      "less effort more action",
      "boost opt-in rates"
      ],
      boosters: [
        "Pair each tactic with a measurable behavior and metric.",
        "Generate at least one low-cost nudge per EAST element.",
        "Add a tiny “if–then” plan for the riskiest barrier.",
        "Stress-test against cultural differences: what is attractive or social in one context may not be in another.",
        "Check equity and inclusivity: ensure ease and salience do not unintentionally exclude vulnerable groups.",
        "Document at least one unintended consequence to monitor."
      ],
      definition: "EAST is a behavioral design heuristic from the UK Behavioural Insights Team. It makes desired behaviors more likely by making them Easy, Attractive, Social, and Timely—while checking for cultural fit and ethical safeguards. It works best when paired with iterative testing.",
      help: "Define the target behavior and audience (persona). Identify barriers. Apply each EAST lever with concrete design changes. Add an if–then plan for risky barriers. Include a cultural/equity safeguard. Conclude with a single highest-leverage nudge and test plan.",
      fields: [
        {
          label: "Target behavior",
          desc: "The action you want your audience to take, stated clearly.",
          key: "behavior",
          ph: "What should happen?",
          type: "text"
        },
        {
          label: "Audience/Personas",
          autofill: "persona->inline",
          desc: "Pick one or more personas to represent your audience. Full persona profiles will autofill here for richer context.",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "audience",
          ph: "Who is acting?",
          type: "repeater"
        },
        {
          label: "Barriers (optional)",
          desc: "List the main obstacles that prevent the target behavior.",
          key: "barriers",
          ph: "What blocks the target behavior now?",
          type: "textarea"
        },
        {
          label: "Easy (reduce effort)",
          desc: "How can you reduce friction and simplify the behavior?",
          key: "easy",
          ph: "Defaults, autofill, fewer steps…",
          type: "textarea"
        },
        {
          label: "Attractive (salience/incentive)",
          desc: "How will you make the behavior more appealing or rewarding?",
          key: "attractive",
          ph: "Visual priority, rewards…",
          type: "textarea"
        },
        {
          label: "Social (norms/reciprocity)",
          desc: "How can social influence, norms, or reciprocity encourage action?",
          key: "social",
          ph: "Testimonials, peer stats…",
          type: "textarea"
        },
        {
          label: "Timely (moment/trigger)",
          desc: "How can you deliver the nudge at the most effective moment?",
          key: "timely",
          ph: "Just-in-time prompts, reminders…",
          type: "textarea"
        },
        {
          label: "If–Then plan (optional)",
          desc: "Write a contingency: “If [barrier], then [nudge].”",
          key: "if_then_plan",
          ph: "If [barrier], then [nudge]…",
          type: "textarea"
        },
        {
          label: "Success metric",
          desc: "Define how you’ll measure success.",
          key: "metric",
          ph: "Conversion, completion time…",
          type: "text"
        },
        {
          label: "Cultural/contextual factors",
          desc: "Account for norms, accessibility, or inclusivity across contexts.",
          key: "cultural",
          ph: "Norms, accessibility, inclusivity checks…",
          type: "textarea"
        },
        {
          label: "Equity/inclusion safeguard",
          desc: "Ensure the nudge does not unintentionally exclude or harm vulnerable groups.",
          key: "equity_check",
          ph: "How will this nudge avoid excluding vulnerable groups?",
          type: "textarea"
        }
      ],
      template: ({ behavior, audience, barriers, easy, attractive, social, timely, if_then_plan, metric, cultural, equity_check, ctx, style, tone }) => [
    'Apply EAST (behavioral design) with inclusivity checks.',
    ctx && `Context: ${ctx}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    behavior && `Behavior: ${behavior}`,
    audience && (
      'Audience Personas:\n' +
      String(audience).split(/\n+/).map(s => s.trim()).filter(Boolean).map((x,i)=>`${i+1}. ${x}`).join('\n')
    ),
    barriers && `Barriers:\n${barriers}`,
    easy && `Easy:\n${easy}`,
    attractive && `Attractive:\n${attractive}`,
    social && `Social:\n${social}`,
    timely && `Timely:\n${timely}`,
    if_then_plan && `If–Then plan:\n${if_then_plan}`,
    metric && `Metric:\n${metric}`,
    cultural && `Cultural/contextual factors:\n${cultural}`,
    equity_check && `Equity/inclusion safeguard:\n${equity_check}`,
    'Output:\n1) EAST-mapped plan\n2) Highest-leverage nudge\n3) Quick test plan (metric + if–then)\n4) Equity/inclusion safeguard\n5) Next iteration note'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "east — easy · attractive · social · timely east-behavioral-nudge east is a behavioral design heuristic from the uk behavioural insights team. it makes desired behaviors more likely by making them easy, attractive, social, and timely—while checking for cultural fit and ethical safeguards. it works best when paired with iterative testing. define the target behavior and audience (persona). identify barriers. apply each east lever with concrete design changes. add an if–then plan for risky barriers. include a cultural/equity safeguard. conclude with a single highest-leverage nudge and test plan. type:framework level:intermediate use:format-guidance use:pattern level:beginner use:scope-management use:content planning design strategy design nudges for adoption reduce friction in flows translate insights into micro-interventions adapt behavioral design for different cultural contexts improve default settings in digital services run a/b tests of behavioral interventions pair each tactic with a measurable behavior and metric. generate at least one low-cost nudge per east element. add a tiny “if–then” plan for the riskiest barrier. stress-test against cultural differences: what is attractive or social in one context may not be in another. check equity and inclusivity: ensure ease and salience do not unintentionally exclude vulnerable groups. document at least one unintended consequence to monitor. target behavior audience/personas barriers (optional) easy (reduce effort) attractive (salience/incentive) social (norms/reciprocity) timely (moment/trigger) if–then plan (optional) success metric cultural/contextual factors equity/inclusion safeguard"
      }
    },

    {
      id: "eisenhower_matrix",
      slug: "eisenhower-priority-matrix",
      label: "Eisenhower Matrix — Urgent/Important Prioritization",
      kind: "strategy",
      categories: [
        "creativity",
        "planning",
        "psychology",
        "decision"
      ],
      tags: [
        "type:framework",
        "use:scope-management",
        "use:decision-making",
        "use:pattern",
        "level:beginner",
        "level:intermediate",
        "use:planning",
        "use:presentations"
      ],
      use_cases: [
        "categorize tasks by urgency and importance",
        "decide what to do now, schedule for later, delegate, or drop",
        "facilitate team sprint or project prioritization",
        "improve personal productivity and reduce stress",
        "ensure proactive time is spent on long-term strategic goals",
        "prevent burnout by identifying tasks to eliminate or delegate",
        "use in leadership workshops to realign on priorities",
              "urgent vs important",
      "what to do first",
      "prioritize my list",
      "schedule or delegate",
      "what to drop",
      "plan my week",
      "reduce overwhelm",
      "focus on big rocks",
      "2x2 priority matrix",
      "stop busywork",
      "decide now vs later",
      "protect deep work",
      "delegate or delete",
      "clarify top priorities",
      "move tasks to calendar",
      "say no list",
      "limit emergency work",
      "map tasks by impact",
      "balance urgent and important",
      "reset my priorities"
      ],
      boosters: [
        "Write a one-sentence justification for why each task falls into its category.",
        "If multiple tasks land in one category, rank them or suggest which to tackle first.",
        "Identify at least one “Schedule” (Quadrant II) task to put on the calendar this week.",
        "Notice overload in “Do now” (Quadrant I) — consider prevention strategies.",
        "Highlight if one quadrant dominates and suggest rebalancing.",
        "Ensure at least one low-value task is dropped (Eliminate).",
        "Flag delegation friction: what prevents handing tasks off?"
      ],
      definition: "The Eisenhower Matrix is a time-management and decision-making tool that classifies tasks by urgency and importance. It divides work into four quadrants: Do (urgent & important), Schedule (important but not urgent), Delegate (urgent but not important), and Eliminate (neither). It helps reduce stress, improve focus, and rebalance effort toward long-term goals.",
      help: "List tasks one per line, adding deadlines, importance cues, or stakeholders in context. The model will assign tasks to quadrants, provide justifications, and highlight workload imbalances. Use delegation and elimination proactively to free time for strategic (Schedule) work.",
      fields: [
        {
          label: "Tasks (one per line)",
          desc: "List tasks you want to prioritize. Be specific: include verbs, deadlines, and owners if known.",
          key: "tasks",
          ph: "Write report (due tomorrow)\nWeekly 1:1 with team member\nScroll social media\nPrep strategy deck for client",
          type: "textarea"
        },
        {
          label: "Context (optional)",
          desc: "Extra info: deadlines, importance signals, stakeholders, constraints.",
          key: "context",
          ph: "Task 1 due tomorrow; Task 2 optional cleanup; Task 3 critical for client meeting.",
          type: "textarea"
        },
        {
          label: "Delegation options (optional)",
          desc: "List people, teams, or tools that could take tasks off your plate.",
          key: "delegation",
          ph: "Virtual assistant, teammate, automation bot",
          type: "textarea"
        },
        {
          label: "Deadline sensitivity (optional)",
          desc: "Flag tasks that are time-critical vs. flexible.",
          key: "deadline_sensitivity",
          ph: "Report due in 24h = high sensitivity; backlog grooming = low sensitivity.",
          type: "textarea"
        },
        {
          label: "Strategic goals alignment (optional)",
          desc: "Link tasks to long-term objectives or KPIs.",
          key: "strategic_goals",
          ph: "Client growth, team retention, Q2 OKRs",
          type: "textarea"
        }
      ],
      template: ({ tasks, context, delegation, deadline_sensitivity, strategic_goals, ctx, style, tone }) => [
    'Apply the Eisenhower Matrix to categorize tasks by urgency and importance.',
    ctx && `Context: ${ctx}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    tasks && (
      'Tasks:\n' + String(tasks).split(/\n+/).map(s => s.trim()).filter(Boolean).map((t,i) => `${i+1}. ${t}`).join('\n')
    ),
    context && ('Context:\n' + context),
    delegation && ('Delegation options:\n' + delegation),
    deadline_sensitivity && ('Deadline sensitivity:\n' + deadline_sensitivity),
    strategic_goals && ('Strategic goals:\n' + strategic_goals),
    '---',
    'Return:',
    '1) Tasks grouped into 4 quadrants:',
    '   - Do (Urgent & Important)',
    '   - Schedule (Important but Not Urgent)',
    '   - Delegate (Urgent but Not Important)',
    '   - Eliminate (Neither)',
    '2) One-sentence justification for each placement',
    '3) Ranking within quadrants (if >1 item)',
    '4) Highlight workload imbalances (quadrants overloaded or empty)',
    '5) Recommend 1 “Schedule” task to calendar this week',
    '6) Optional: show ASCII matrix with tasks in each quadrant',
    'Checklist:\n- [ ] Do quadrant manageable\n- [ ] ≥1 Schedule task prioritized\n- [ ] Delegation attempted\n- [ ] At least 1 Eliminate task identified'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "eisenhower matrix — urgent/important prioritization eisenhower-priority-matrix the eisenhower matrix is a time-management and decision-making tool that classifies tasks by urgency and importance. it divides work into four quadrants: do (urgent & important), schedule (important but not urgent), delegate (urgent but not important), and eliminate (neither). it helps reduce stress, improve focus, and rebalance effort toward long-term goals. list tasks one per line, adding deadlines, importance cues, or stakeholders in context. the model will assign tasks to quadrants, provide justifications, and highlight workload imbalances. use delegation and elimination proactively to free time for strategic (schedule) work. type:framework use:scope-management use:decision-making use:pattern level:beginner level:intermediate use:planning use:presentations creativity planning psychology decision categorize tasks by urgency and importance decide what to do now, schedule for later, delegate, or drop facilitate team sprint or project prioritization improve personal productivity and reduce stress ensure proactive time is spent on long-term strategic goals prevent burnout by identifying tasks to eliminate or delegate use in leadership workshops to realign on priorities write a one-sentence justification for why each task falls into its category. if multiple tasks land in one category, rank them or suggest which to tackle first. identify at least one “schedule” (quadrant ii) task to put on the calendar this week. notice overload in “do now” (quadrant i) — consider prevention strategies. highlight if one quadrant dominates and suggest rebalancing. ensure at least one low-value task is dropped (eliminate). flag delegation friction: what prevents handing tasks off? tasks (one per line) context (optional) delegation options (optional) deadline sensitivity (optional) strategic goals alignment (optional)"
      }
    },

    {
      id: "empty_chair",
      slug: "empty-chair-technique",
      label: "Empty Chair Dialogue (Gestalt)",
      kind: "framework",
      categories: [
        "psychology",
        "self-reflection",
        "teaching",
        "critical-thinking"
      ],
      tags: [
        "use:pattern",
        "use:content",
        "use:ad-copy",
        "type:framework",
        "phase:explore",
        "level:intermediate",
        "use:problem-framing",
        "phase:compose",
        "topic:clarification"
      ],
      use_cases: [
        "voice unresolved feelings (“unfinished business”) with someone not present",
        "negotiate an internal polarity (e.g., Inner Critic vs. Playful Self)",
        "rehearse a difficult conversation safely and concretely",
        "transform shame/self-attack via two-chair compassion work",
        "arrive at one boundary, one request, and one 24-hour micro-step",
             "practice tough conversation",
      "say what I couldn’t",
      "talk to someone not here",
      "dialogue with my inner critic",
      "two-chair exercise steps",
      "rehearse boundary setting",
      "roleplay an apology",
      "find the right words",
      "process unfinished business",
      "release guilt safely",
      "speak to past self",
      "prepare for a hard talk",
      "turn anger into request",
      "name one need clearly",
      "grief conversation practice",
      "heal shame with dialogue",
      "get closure script",
      "compassionate self-talk",
      "switch roles to understand",
      "plan a 24-hour micro-step"
      ],
      boosters: [
        "Stay present tense; short sentences; switch often (every 60–90 seconds or 1–2 turns).",
        "Use “I” language and observable behaviors (“I need a 24-hour reply window”) instead of abstractions (“respect”).",
        "Repeat the “hot” line to deepen before problem-solving.",
        "If stuck, add a Third chair (Compassionate Nurturer, Mentor/Guide, or Values/Healthy Adult) for one clarifying pass.",
        "End by de-roling: state what each side protects, then set one boundary/request and a 24-hour micro-step.",
        "Cultural attunement: permit metaphors, indirect speech, or letter-style wording if direct address feels unsafe."
      ],
      definition: "A Gestalt experiment that externalizes a person or inner part into an “empty chair.” You alternate speaking from each seat, in present tense, to surface needs, complete unspoken feelings, and integrate a next action.",
      help: "Choose the two voices (person or part), add persona overlays if helpful, name the topic, set a short timebox, and pick a switch cadence. The model will script an embodied, present-tense dialogue with deepening moves and close with an integration plan (need, boundary/request, micro-commitment).",
      fields: [
        {
          label: "Your role — Seat A",
          autofill: "persona->textarea",
          desc: "Your presenting self or a specific inner part (include strengths, fears, goals).",
          key: "you",
          ph: "e.g., Current Self — exhausted but seeking fairness; values honesty; fears conflict",
          type: "typeahead_textarea"
        },
        {
          label: "Seat A persona overlays",
          autofill: "persona->inline",
          desc: "Add 0–3 personas to blend into Seat A’s voice (pulls from your persona library).",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "you_personas",
          ph: "Start typing to add overlays (e.g., Inner Protector, Future Self, Coach You)",
          type: "repeater"
        },
        {
          label: "Other role — Seat B",
          autofill: "persona->textarea",
          desc: "Person/part you’re addressing (include what they protect and their likely concerns).",
          key: "other",
          ph: "e.g., Inner Critic — seeks safety via control; fears failure and rejection",
          type: "typeahead_textarea"
        },
        {
          label: "Seat B persona overlays",
          autofill: "persona->inline",
          desc: "Add 0–3 personas to enrich Seat B’s stance (e.g., Manager, Parent-mode, Rule-maker).",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "other_personas",
          ph: "Start typing to add overlays",
          type: "repeater"
        },
        {
          label: "Third chair (optional)",
          desc: "Add one supportive, reality-anchored voice for a single pass to help reconcile the polarity.",
          key: "third_chair",
          options: [
            {
              label: "— none —",
              value: "none"
            },
            {
              label: "Compassionate Nurturer",
              value: "compassion"
            },
            {
              label: "Mentor / Guide",
              value: "mentor"
            },
            {
              label: "Values / Healthy Adult",
              value: "values_self"
            }
          ],
          ph: "Choose one supportive stance",
          type: "select"
        },
        {
          label: "Third chair persona overlays (optional)",
          autofill: "persona->inline",
          desc: "Optionally blend 1–2 persona traits for the third chair (e.g., Therapist-mode, Elder, Teacher).",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "third_chair_personas",
          ph: "Start typing to add overlays",
          type: "repeater"
        },
        {
          label: "Topic or emotion to explore",
          desc: "Name the issue in one or two lines; keep it specific and present-focused.",
          key: "topic",
          ph: "e.g., Anger about last week’s feedback meeting; fear of sending the proposal",
          type: "textarea"
        },
        {
          label: "Outcome goal (what changes by session end?)",
          desc: "Define a concrete aim to land on behavior.",
          key: "goal",
          ph: "e.g., Decide my boundary and draft the first sentence I will say",
          type: "text"
        },
        {
          label: "Timebox (minutes)",
          desc: "Short, focused sessions are best: 10–20 minutes is typical.",
          key: "timebox",
          ph: "e.g., 12",
          type: "text"
        },
        {
          label: "Switch cadence",
          desc: "How often to alternate seats (by time or turns).",
          key: "switch_interval",
          ph: "e.g., Every 90 seconds or every 2 lines",
          type: "text"
        },
        {
          label: "Deepening prompts (one per line)",
          desc: "Cues the model will use to contact the feeling and the need.",
          key: "deepeners",
          ph: "Say that as “I need…”\nWhere is that in your body?\nIf you believed this fully, what would change?\nWhat does this part protect?",
          type: "textarea"
        },
        {
          label: "Cognitive/relational lenses (optional)",
          autofill: "bias->inline",
          desc: "Patterns to watch (e.g., mind-reading, all-or-nothing, fundamental attribution error).",
          itemLabel: "bias",
          itemType: "typeahead",
          key: "bias_lenses",
          ph: "Mind-reading • Catastrophizing • Typical-user bias",
          type: "repeater"
        },
        {
          label: "Chair rules",
          desc: "Behavioral rules to keep the experiment safe and productive.",
          key: "chair_rules",
          ph: "Present tense • Short sentences • “I” statements • No insults or threats • Switch often • Stop if overwhelmed",
          type: "textarea"
        },
        {
          label: "Integration targets",
          desc: "What the session should produce, stated in observable terms.",
          key: "acceptance_targets",
          ph: "One need; one boundary/request; one 24-hour micro-step; one sentence each chair learned",
          type: "textarea"
        }
      ],
      template: (f) => {
    const toLines = s => String(s||'').split(/\n+/).map(x=>x.trim()).filter(Boolean);
    const list = (title, xs) => xs.length ? [title, ...xs.map((x,i)=>`${i+1}. ${x}`)].join('\n') : null;
    const joinIf = (label, block) => block ? `${label}\n${block}` : null;

    const thirdChairDescription = (value) => {
      switch (value) {
        case 'compassion':
          return 'Compassionate Nurturer — warm, non-judgmental, reality-attuned care; de-escalates shame, validates needs, and seeks sustainable pace.';
        case 'mentor':
          return 'Mentor / Guide — seasoned advisor; frames feedback, models skills, sets achievable experiments, privileges learning over perfection.';
        case 'values_self':
          return 'Values / Healthy Adult — principled yet flexible; names core values, balances self/other needs, converts ideals into daily behaviors and boundaries.';
        default:
          return null;
      }
    };

    const deepeners = toLines(f.deepeners);
    const rules = toLines(f.chair_rules);
    const aOverlays = toLines(f.you_personas && f.you_personas.join ? f.you_personas.join('\n') : f.you_personas);
    const bOverlays = toLines(f.other_personas && f.other_personas.join ? f.other_personas.join('\n') : f.other_personas);
    const cOverlays = toLines(f.third_chair_personas && f.third_chair_personas.join ? f.third_chair_personas.join('\n') : f.third_chair_personas);
    const lenses = (f.bias_lenses && f.bias_lenses.length) ? f.bias_lenses.join(' • ') : '';

    const out = [];
    out.push('Run a Gestalt Empty Chair dialogue with two roles (and, if selected, a third supportive chair). Produce embodied, present-tense alternating voices; use deepening prompts; and end with one clear behavior change.');

    // Context & framing
    f.ctx && out.push(`Context: ${f.ctx}`);
    f.goal && out.push(`Outcome goal: ${f.goal}`);
    f.timebox && out.push(`Timebox: ${f.timebox} min`);
    f.switch_interval && out.push(`Switch cadence: ${f.switch_interval}`);

    // Roles
    f.you && out.push(`Seat A — You:\n${f.you}`);
    aOverlays.length && out.push(joinIf('Seat A persona overlays:', aOverlays.map((x,i)=>`${i+1}. ${x}`).join('\n')));

    f.other && out.push(`Seat B — Other:\n${f.other}`);
    bOverlays.length && out.push(joinIf('Seat B persona overlays:', bOverlays.map((x,i)=>`${i+1}. ${x}`).join('\n')));

    if (f.third_chair && f.third_chair !== 'none') {
      const desc = thirdChairDescription(f.third_chair);
      if (desc) out.push(`Third chair:\n${desc}`);
      cOverlays.length && out.push(joinIf('Third chair persona overlays:', cOverlays.map((x,i)=>`${i+1}. ${x}`).join('\n')));
    }

    // Topic & rules
    f.topic && out.push(`Topic:\n${f.topic}`);
    rules.length && out.push(list('Chair rules:', rules));
    lenses && out.push(`Bias/relational lenses to watch: ${lenses}`);
    deepeners.length && out.push(list('Deepening prompts the dialogue should use:', deepeners));
    f.acceptance_targets && out.push(`Integration targets:\n${f.acceptance_targets}`);

    // Output spec
    out.push('Output:');
    out.push('1) Scripted dialogue with labeled turns (A:, B:, and if chosen, C:), present tense, short sentences, switching per cadence. Use at least one deepening prompt every 1–2 exchanges.');
    out.push('2) Hot-line reflection: repeat and respond to the most emotionally charged sentence to surface need/meaning.');
    out.push('3) Integration plan:');
    out.push('   - One explicit Need: “I need … because …”.');
    out.push('   - One Boundary/Request in observable terms (who/what/when).');
    out.push('   - One 24-hour micro-commitment (≤10 minutes; first next step).');
    out.push('   - One-sentence learning from each chair (“What I realized is…”).');
    out.push('4) De-role & ground: a 2–3 line close (breath cue, brief walk/water) and a follow-up time.');
    out.push('5) If the third chair is used: add exactly one pass from that chair to model compassionate, realistic care and help reconcile the polarity.');

    return out.filter(Boolean).join('\n');
  },
      meta: {
        search_text: "empty chair dialogue (gestalt) empty-chair-technique a gestalt experiment that externalizes a person or inner part into an “empty chair.” you alternate speaking from each seat, in present tense, to surface needs, complete unspoken feelings, and integrate a next action. choose the two voices (person or part), add persona overlays if helpful, name the topic, set a short timebox, and pick a switch cadence. the model will script an embodied, present-tense dialogue with deepening moves and close with an integration plan (need, boundary/request, micro-commitment). use:pattern use:content use:ad-copy type:framework phase:explore level:intermediate use:problem-framing phase:compose topic:clarification psychology self-reflection teaching critical-thinking voice unresolved feelings (“unfinished business”) with someone not present negotiate an internal polarity (e.g., inner critic vs. playful self) rehearse a difficult conversation safely and concretely transform shame/self-attack via two-chair compassion work arrive at one boundary, one request, and one 24-hour micro-step stay present tense; short sentences; switch often (every 60–90 seconds or 1–2 turns). use “i” language and observable behaviors (“i need a 24-hour reply window”) instead of abstractions (“respect”). repeat the “hot” line to deepen before problem-solving. if stuck, add a third chair (compassionate nurturer, mentor/guide, or values/healthy adult) for one clarifying pass. end by de-roling: state what each side protects, then set one boundary/request and a 24-hour micro-step. cultural attunement: permit metaphors, indirect speech, or letter-style wording if direct address feels unsafe. your role — seat a seat a persona overlays other role — seat b seat b persona overlays third chair (optional) third chair persona overlays (optional) topic or emotion to explore outcome goal (what changes by session end?) timebox (minutes) switch cadence deepening prompts (one per line) cognitive/relational lenses (optional) chair rules integration targets"
      },
      notice: "This can evoke strong feelings. If you have recent trauma, active suicidality, psychosis, or dissociation, use only with a qualified clinician. Ground after: breath, cold water, brief walk."
    },

    {
      id: "spoon_planner",
      slug: "spoon-theory-energy-planner",
      label: "Energy Budget Planner (Spoon Theory)",
      kind: "strategy",
      categories: [
        "creativity",
        "self-reflection",
        "cultural-frameworks",
        "writing"
      ],
      tags: [
        "type:framework",
        "use:storytelling",
        "use:scope-management",
        "use:healing",
        "use:presentations",
        "level:beginner",
        "use:pattern",
        "use:ad-copy",
        "use:decision-making",
        "use:goals"
      ],
      use_cases: [
        "Plan your day according to limited energy or focus (“spoons”).",
        "Prioritize tasks when fatigued, neurodivergent, or living with chronic illness.",
        "Balance high-effort tasks with restorative activities to avoid burnout.",
        "Communicate limits and plan accommodations with colleagues, caregivers, or therapists.",
        "Create weekly or cyclical plans aligned with fluctuating energy.",
        "Share energy plans as a self-advocacy tool in health or workplace contexts.",
              "low energy day plan",
      "plan my spoons",
      "what can I handle today",
      "pace my day",
      "energy budget template",
      "prioritize with fatigue",
      "swap tasks for rest",
      "high vs low effort menu",
      "avoid burnout today",
      "weekly spoon planner",
      "plan around flare ups",
      "ask for accommodations",
      "communicate limits at work",
      "stack gentle habits",
      "balance work and recovery",
      "spoons check in",
      "plan breaks and buffers",
      "schedule recovery days",
      "morning vs afternoon energy",
      "make a light day plan"
      ],
      boosters: [
        "Balance each high-cost task with a planned recovery break or restorative activity.",
        "If tasks exceed the spoon budget, propose trade-offs, delegation, or simplifications.",
        "Always include at least one low-spoon backup task to preserve momentum.",
        "Translate spoons into an alternative metaphor (battery %, water jars, rice bowls) if inclusivity or preference suggests it.",
        "Check: Are non-negotiables realistic given today’s spoon budget?",
        "Balance across domains (work, health, social, personal).",
        "Suggest pacing strategies (Pomodoro, zoning, micro-rests)."
      ],
      definition: "Spoon Theory is a planning method from chronic illness and disability advocacy that treats energy or focus as a limited budget (“spoons”) to spend on tasks. This framework helps prioritize, schedule, and balance activities with intentional rest, delegation, and recovery. It supports sustainable productivity, wellbeing, and communication.",
      help: "Input how many spoons (energy units) you have and list your tasks with estimated spoon costs. Include non-negotiables and restorative activities. Optionally note timeframe, support, or energy boosters. The model will build a plan showing what to do, what to defer, and how to recharge. Review midway and adjust if your spoon levels change.",
      fields: [
        {
          label: "Timeframe",
          desc: "State whether you are planning for today, this week, or another period.",
          key: "timeframe",
          ph: "e.g., Today / This week",
          type: "text"
        },
        {
          label: "Available spoons (energy for the day)",
          desc: "Your estimated energy budget for the chosen timeframe.",
          key: "spoons",
          ph: "e.g., 10",
          type: "text"
        },
        {
          label: "Tasks (one per line, with optional spoon cost)",
          desc: "List activities and their estimated spoon costs (1 = easy, 5 = very demanding).",
          key: "tasks",
          ph: "Do laundry - 2\nFinish report - 4\nCall a friend - 1\nMake dinner - 3",
          type: "textarea"
        },
        {
          label: "Non-negotiable tasks",
          desc: "Tasks that must be done regardless of cost. Use this to surface essentials.",
          key: "nonnegotiables",
          ph: "Pick up medication - 3",
          type: "textarea"
        },
        {
          label: "Restorative activities",
          desc: "Things that help recharge energy during the day.",
          key: "restoratives",
          ph: "Nap - restores 2 spoons\nMeditation - restores 1 spoon",
          type: "textarea"
        },
        {
          label: "Delegation/support (optional)",
          desc: "Who or what could take tasks off your plate (people, tools, accommodations).",
          key: "delegation_support",
          ph: "Spouse does dishes; use grocery delivery app",
          type: "textarea"
        },
        {
          label: "Energy boosters (optional)",
          desc: "Small, quick actions that help you recover spoons temporarily.",
          key: "energy_boosters",
          ph: "Snack, stretch, step outside, hydration",
          type: "textarea"
        }
      ],
      template: ({ timeframe, spoons, tasks, nonnegotiables, restoratives, delegation_support, energy_boosters, ctx, audience, style, tone }) => [
    'Plan using Spoon Theory (energy budgeting).',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    timeframe && `Timeframe: ${timeframe}`,
    spoons && `Spoons available: ${spoons}`,
    nonnegotiables && `Non-negotiable tasks:\n${nonnegotiables}`,
    tasks && (
      'Tasks:\n' + String(tasks)
        .split(/\n+/)
        .map(s => s.trim())
        .filter(Boolean)
        .map((t,i) => `${i+1}. ${t}`)
        .join('\n')
    ),
    restoratives && `Restorative activities:\n${restoratives}`,
    delegation_support && `Delegation/support:\n${delegation_support}`,
    energy_boosters && `Energy boosters:\n${energy_boosters}`,
    'Output:',
    '1) Spoon budget math: total available vs. planned spend',
    '2) Prioritized task plan with rationale',
    '3) Scheduled rest breaks or restorative activities',
    '4) Delegation/support suggestions',
    '5) Backup low-spoon task(s)',
    '6) Over-budget warning if applicable + trade-offs',
    '7) Alternative metaphor if user prefers',
    'Checklist:\n- [ ] Non-negotiables included\n- [ ] Restoratives balanced\n- [ ] ≥1 low-spoon task available\n- [ ] Delegation considered\n- [ ] Buffer for surprises added'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "energy budget planner (spoon theory) spoon-theory-energy-planner spoon theory is a planning method from chronic illness and disability advocacy that treats energy or focus as a limited budget (“spoons”) to spend on tasks. this framework helps prioritize, schedule, and balance activities with intentional rest, delegation, and recovery. it supports sustainable productivity, wellbeing, and communication. input how many spoons (energy units) you have and list your tasks with estimated spoon costs. include non-negotiables and restorative activities. optionally note timeframe, support, or energy boosters. the model will build a plan showing what to do, what to defer, and how to recharge. review midway and adjust if your spoon levels change. type:framework use:storytelling use:scope-management use:healing use:presentations level:beginner use:pattern use:ad-copy use:decision-making use:goals creativity self-reflection cultural-frameworks writing plan your day according to limited energy or focus (“spoons”). prioritize tasks when fatigued, neurodivergent, or living with chronic illness. balance high-effort tasks with restorative activities to avoid burnout. communicate limits and plan accommodations with colleagues, caregivers, or therapists. create weekly or cyclical plans aligned with fluctuating energy. share energy plans as a self-advocacy tool in health or workplace contexts. balance each high-cost task with a planned recovery break or restorative activity. if tasks exceed the spoon budget, propose trade-offs, delegation, or simplifications. always include at least one low-spoon backup task to preserve momentum. translate spoons into an alternative metaphor (battery %, water jars, rice bowls) if inclusivity or preference suggests it. check: are non-negotiables realistic given today’s spoon budget? balance across domains (work, health, social, personal). suggest pacing strategies (pomodoro, zoning, micro-rests). timeframe available spoons (energy for the day) tasks (one per line, with optional spoon cost) non-negotiable tasks restorative activities delegation/support (optional) energy boosters (optional)"
      }
    },

    {
      id: "epic_quest",
      slug: "epic-quest-tasking",
      label: "Epic Quest Tasking — Gamify the Chore",
      kind: "framework",
      categories: [
        "creativity",
        "storytelling-frameworks",
        "brainstorming",
        "self-reflection"
      ],
      tags: [
        "use:pattern",
        "topic:clarification",
        "phase:apply",
        "use:storytelling",
        "level:intermediate",
        "use:evaluation",
        "use:ad-copy",
        "topic:prompting",
        "use:healing",
        "use:brainstorming",
        "use:goals"
      ],
      use_cases: [
        "Transform chores or tasks into engaging quests through narrative play.",
        "Help neurodivergent individuals overcome task resistance by reframing them as heroic missions.",
        "Make goal-setting fun and sustainable with characters, villains, and rewards.",
        "Gamify self-care or wellbeing routines into “daily quests.”",
        "Encourage children or groups to collaborate on chores as “party quests.”",
        "Reframe routine activities into therapeutic storytelling for resilience.",
        "Stack habits by turning recurring routines into progressive quest chains.",
              "make chores a game",
      "turn task into quest",
      "daily quests list",
      "quest for laundry",
      "reward ideas for tasks",
      "boss battle kitchen clean",
      "side quests for self care",
      "quest chain for habits",
      "party quest with kids",
      "xp points for chores",
      "level up my routine",
      "quest log template",
      "npc mentor pep talk",
      "mini boss procrastination",
      "loot reward ideas",
      "quest timer 25 minutes",
      "story theme for goals",
      "villain is distraction",
      "unlock next level rule",
      "make boring tasks fun"
      ],
      boosters: [
        "Always dramatize at least one obstacle or villain linked to friction in the task.",
        "Invent a persona if none provided, themed to the task (e.g., dishes = Water Mage).",
        "Add XP or loot-style rewards, even if the user only provides a real-world reward.",
        "Introduce urgency with a countdown, rival, or time-sensitive stakes.",
        "Provide at least 3 alternate quest names/titles for variety.",
        "Tie the villain to a specific pain point or blocker in the real task.",
        "Keep endings celebratory — frame setbacks as plot twists, not failures.",
        "End with a sequel hook for tomorrow’s quest or next stage."
      ],
      definition: "A narrative productivity pattern that reframes chores and tasks as quests in a story-driven world, using roleplay, game mechanics, and rewards to turn resistance into playful motivation. Rooted in gamification, game theory, and therapeutic storytelling. It helps individuals (including ADHD and chronic illness communities) build habits, overcome resistance, and sustain motivation.",
      help: "Enter a task you want to gamify. Optionally specify a hero persona, quest type, world theme, villain/obstacle, XP value, or reward. The model will generate a short quest narrative where you (the hero) undertake the task as an epic mission, with obstacles, triumph, and reward.",
      fields: [
        {
          label: "Task or chore to gamify",
          desc: "The real-world activity you want reframed as a quest.",
          key: "task",
          ph: "e.g., cleaning my room",
          type: "textarea"
        },
        {
          label: "Hero persona or theme (optional)",
          desc: "Who you are in this story. If left blank, the AI will invent one.",
          key: "persona",
          ph: "e.g., a pirate captain, a wizard, a secret agent",
          type: "text"
        },
        {
          label: "Quest type (optional)",
          desc: "Helps frame priority and style of the task.",
          key: "quest_type",
          ph: "e.g., Main Quest, Side Quest, Daily Ritual",
          type: "text"
        },
        {
          label: "Villain or obstacle (optional)",
          desc: "An adversary that represents the hardest part of the task.",
          key: "villain",
          ph: "e.g., the Dust Goblin, the Chaos Horde",
          type: "text"
        },
        {
          label: "Lore / world theme (optional)",
          desc: "The setting or story world the task takes place in.",
          key: "lore",
          ph: "e.g., Arcane Library, Cosmic Empire, Pirate Seas",
          type: "textarea"
        },
        {
          label: "Difficulty level (optional)",
          desc: "How challenging this quest should feel to set tone and stakes.",
          key: "difficulty",
          options: [
            "Easy",
            "Moderate",
            "Epic",
            "Legendary"
          ],
          type: "select"
        },
        {
          label: "Party members / allies (optional)",
          desc: "Who joins you on this quest — real or imagined allies.",
          key: "allies",
          ph: "e.g., my sibling, my dog, a friendly robot",
          type: "textarea"
        },
        {
          label: "XP or points to award (optional)",
          desc: "Points earned for completing the quest. Can be symbolic or tracked.",
          key: "xp",
          ph: "e.g., 50 XP, 1 skill point",
          type: "text"
        },
        {
          label: "Reward for completion (optional)",
          desc: "Real-life or symbolic reward to celebrate quest completion.",
          key: "reward",
          ph: "e.g., 15 minutes of video game time, a snack",
          type: "text"
        }
      ],
      template: ({ task, persona, reward, quest_type, villain, xp, lore, difficulty, allies, ctx, audience, style, tone }) => [
    'Transform the task into an epic quest narrative.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    task && `Quest (task): ${task}`,
    quest_type && `Quest type: ${quest_type}`,
    persona && `Hero persona: ${persona}`,
    villain && `Villain/obstacle: ${villain}`,
    lore && `World theme:\n${lore}`,
    difficulty && `Difficulty: ${difficulty}`,
    allies && `Allies/party:\n${allies}`,
    reward && `Reward for success: ${reward}`,
    xp && `XP awarded: ${xp}`,
    'Output:\n1) Adventurous setup: hero identity, stakes, quest title\n2) Challenges and villainous obstacles dramatized as story beats\n3) Allies or supports (if any)\n4) Heroic completion with XP, loot, and celebratory reward\n5) Sequel hook to carry narrative momentum forward\n\nChecklist:\n- [ ] Quest has name/title\n- [ ] Villain dramatized\n- [ ] Reward + XP clear\n- [ ] Ending celebratory\n- [ ] Sequel hook included'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "epic quest tasking — gamify the chore epic-quest-tasking a narrative productivity pattern that reframes chores and tasks as quests in a story-driven world, using roleplay, game mechanics, and rewards to turn resistance into playful motivation. rooted in gamification, game theory, and therapeutic storytelling. it helps individuals (including adhd and chronic illness communities) build habits, overcome resistance, and sustain motivation. enter a task you want to gamify. optionally specify a hero persona, quest type, world theme, villain/obstacle, xp value, or reward. the model will generate a short quest narrative where you (the hero) undertake the task as an epic mission, with obstacles, triumph, and reward. use:pattern topic:clarification phase:apply use:storytelling level:intermediate use:evaluation use:ad-copy topic:prompting use:healing use:brainstorming use:goals creativity storytelling-frameworks brainstorming self-reflection transform chores or tasks into engaging quests through narrative play. help neurodivergent individuals overcome task resistance by reframing them as heroic missions. make goal-setting fun and sustainable with characters, villains, and rewards. gamify self-care or wellbeing routines into “daily quests.” encourage children or groups to collaborate on chores as “party quests.” reframe routine activities into therapeutic storytelling for resilience. stack habits by turning recurring routines into progressive quest chains. always dramatize at least one obstacle or villain linked to friction in the task. invent a persona if none provided, themed to the task (e.g., dishes = water mage). add xp or loot-style rewards, even if the user only provides a real-world reward. introduce urgency with a countdown, rival, or time-sensitive stakes. provide at least 3 alternate quest names/titles for variety. tie the villain to a specific pain point or blocker in the real task. keep endings celebratory — frame setbacks as plot twists, not failures. end with a sequel hook for tomorrow’s quest or next stage. task or chore to gamify hero persona or theme (optional) quest type (optional) villain or obstacle (optional) lore / world theme (optional) difficulty level (optional) party members / allies (optional) xp or points to award (optional) reward for completion (optional)"
      }
    },

    {
      id: "few_shot",
      slug: "few-shot-examples",
      label: "Examples / Few-Shot Prompting",
      kind: "technique",
      categories: [
        "prompt-development-techniques"
      ],
      tags: [
        "use:pattern",
        "phase:explore",
        "topic:future-self",
        "phase:apply",
        "level:beginner",
        "use:format-guidance",
        "use:storytelling"
      ],
      use_cases: [
        "show ideal output format with 1+ shots",
        "demonstrate style/voice to imitate",
        "constrain outputs to examples",
              "show example output",
      "follow this template",
      "copy this style",
      "match tone and voice",
      "use these examples",
      "format exactly like this",
      "do it like the sample",
      "give two examples first",
      "teach by example",
      "pattern then fill",
      "mimic the structure",
      "learn from samples",
      "keep placeholders same",
      "use my schema",
      "output in this format",
      "replicate these bullets",
      "style from the example",
      "train with small examples",
      "make similar examples",
      "show example then do mine"
      ],
      boosters: [
        "Begin with a short description of the desired format before listing examples.",
        "Number the examples and refer back to them explicitly.",
        "Prefer short, high-signal examples over long rambles."
      ],
      definition: "Guide the model by supplying one or more example outputs (“shots”) to anchor format and tone.",
      help: "Add a main brief/goal, then list examples (one per line). The model mirrors structure/style from the shots.",
      fields: [
        {
          label: "Main brief / goal",
          desc: "What you want, in plain language.",
          key: "main",
          ph: "e.g., Generate a product description in the style below.",
          type: "textarea"
        },
        {
          label: "Examples / shots (one per line)",
          desc: "Provide one example per line (short is fine).",
          key: "examples",
          ph: "Example 1…\nExample 2…\nExample 3…",
          type: "textarea"
        },
        {
          label: "Do's (must do)",
          desc: "Positive constraints the output must follow.",
          key: "dos",
          ph: "Use the given headings; keep under 200 words; cite the example number used.",
          type: "textarea"
        },
        {
          label: "Don'ts / constraints",
          desc: "Things to avoid or hard limits.",
          key: "donts",
          ph: "Don't invent facts; avoid slang; no emojis.",
          type: "textarea"
        }
      ],
      template: ({ main, examples, dos, donts, ctx, audience, style, tone }) => [
    'Use few-shot prompting. Mirror the structure/style demonstrated by the examples.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    main && `Goal: ${main}`,
    examples && (
      'Examples:\n' + String(examples)
        .split(/\n+/).map(s=>s.trim()).filter(Boolean)
        .map((ex,i)=> `${i+1}. ${ex}`)
        .join('\n')
    ),
    dos && `Do:\n${dos}`,
    donts && `Don't:\n${donts}`,
    'First restate the intended format in one line, then produce the output consistent with the examples.'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "examples / few-shot prompting few-shot-examples guide the model by supplying one or more example outputs (“shots”) to anchor format and tone. add a main brief/goal, then list examples (one per line). the model mirrors structure/style from the shots. use:pattern phase:explore topic:future-self phase:apply level:beginner use:format-guidance use:storytelling prompt-development-techniques show ideal output format with 1+ shots demonstrate style/voice to imitate constrain outputs to examples begin with a short description of the desired format before listing examples. number the examples and refer back to them explicitly. prefer short, high-signal examples over long rambles. main brief / goal examples / shots (one per line) do's (must do) don'ts / constraints"
      }
    },

    {
      id: "fab",
      slug: "feature-advantage-benefit",
      label: "FAB — Feature · Advantage · Benefit",
      kind: "framework",
      categories: [
        "storytelling-frameworks",
        "writing",
        "strategy",
        "teaching"
      ],
      tags: [
        "type:framework",
        "use:copywriting",
        "topic:values",
        "use:scope-management",
        "use:decision-making",
        "use:planning",
        "use:content",
        "phase:apply",
        "level:beginner",
        "level:intermediate",
        "use:pattern",
        "use:ad-copy",
        "use:healing"
      ],
      use_cases: [
        "Turn product features into user-focused benefits for marketing copy.",
        "Train a model to articulate why a feature matters to customers.",
        "Create sales bullets or product descriptions emphasizing value.",
        "Reframe technical jargon into plain language for non-technical audiences.",
        "Craft resume or LinkedIn bullets by translating responsibilities into achievements.",
        "Translate engineering specs into customer-facing copy.",
        "Reframe B2B SaaS features into executive-level benefits.",
        "Build persuasive pitch decks for investors.",
        "Highlight transferable skills in job applications.",
              "turn features into benefits",
      "why this feature matters",
      "write sales bullets",
      "explain value simply",
      "translate tech to plain language",
      "benefits not features",
      "product copy help",
      "pitch my feature to execs",
      "resume bullet rewrite",
      "job bullet impact",
      "investor pitch bullets",
      "list advantage and benefit",
      "what problem does this solve",
      "customer value statement",
      "convert specs to benefits",
      "simplify product message",
      "website feature blurbs",
      "make benefits pop",
      "write app store bullets",
      "explain it to a friend"
      ],
      boosters: [
        "Translate technical features into plain advantages and user benefits.",
        "Ensure the benefit addresses a specific customer need or pain point.",
        "Include at least one emotional or human-centered benefit, not just functional.",
        "Pair each benefit with a potential customer persona (“For busy professionals…”).",
        "Offer an alternate phrasing that works as a sales bullet or ad headline.",
        "Force-test each benefit with “So what?” until it resonates at a human level.",
        "Provide one micro-FAB version (short-form for ads, resumes, or social posts).",
        "Tailor at least one FAB to a secondary persona for versatility testing."
      ],
      definition: "A classic product messaging formula that starts with a Feature of a product, explains the Advantage (what it does or why it’s better), and concludes with the Benefit (why it matters to the user). It is widely used in marketing, sales, resumes, and persuasion writing.",
      help: "Provide a key product feature. Optionally add target audience and customer pain point. The model will respond with a clear FAB breakdown: feature, advantage, and benefit — plus variations for different messaging contexts and lengths.",
      fields: [
        {
          label: "Product feature(s)",
          desc: "Enter one or more product features, one per line.",
          key: "feature",
          ph: "Real-time analytics dashboard\nAutomated reporting engine",
          type: "textarea"
        },
        {
          label: "Target audience (optional)",
          autofill: "persona->inline",
          desc: "Who the message should be tailored for.",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "aud_target",
          ph: "Marketing managers, busy parents, enterprise buyers",
          type: "repeater"
        },
        {
          label: "Customer need/pain point (optional)",
          desc: "The underlying problem this feature helps solve.",
          key: "painpoint",
          ph: "Teams waste hours compiling reports manually.",
          type: "textarea"
        },
        {
          label: "Advantage (optional, pre-written)",
          desc: "Seed your own draft of how the feature helps. If blank, the model will generate it.",
          key: "advantage_override",
          ph: "Gives managers real-time visibility into campaign ROI.",
          type: "textarea"
        },
        {
          label: "Benefit (optional, pre-written)",
          desc: "Seed your own draft of why it matters to the user. If blank, the model will generate it.",
          key: "benefit_override",
          ph: "Saves hours each week and reduces stress for the team.",
          type: "textarea"
        },
        {
          label: "Output format (optional)",
          desc: "Preferred output style.",
          key: "format",
          ph: "Bullets, headline, paragraph, LinkedIn bullet",
          type: "text"
        },
        {
          label: "Constraints (optional)",
          desc: "Any format or length constraints.",
          key: "constraints",
          ph: "1 sentence per item; ≤20 words each.",
          type: "text"
        }
      ],
      template: ({ feature, aud_target, painpoint, advantage_override, benefit_override, format, constraints, ctx, audience, style, tone }) => [
    'Use the FAB framework to highlight the feature, what it does, and why it matters.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    feature && (
      'Feature(s):\n' + String(feature).split(/\n+/).map((f,i)=>`${i+1}. ${f}`).join('\n')
    ),
    painpoint && `Customer pain point:\n${painpoint}`,
    aud_target && (
      'Target audience:\n' + String(aud_target).split(/\n+/).map((a,i)=>`${i+1}. ${a}`).join('\n')
    ),
    advantage_override && `Advantage (pre-provided): ${advantage_override}`,
    benefit_override && `Benefit (pre-provided): ${benefit_override}`,
    format && `Preferred format: ${format}`,
    constraints && `Constraints: ${constraints}`,
    'Output:\n1) Full FAB breakdown (Feature → Advantage → Benefit)\n2) Emotional + functional benefit covered\n3) Persona-tailored version\n4) Micro-FAB (short-form version)\n5) Alternate phrasing for ads/resumes\n\nChecklist:\n- [ ] Feature stated clearly\n- [ ] Advantage explained in plain terms\n- [ ] Benefit tied to audience need/pain\n- [ ] Includes emotional + functional benefit\n- [ ] One short-form version provided'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "fab — feature · advantage · benefit feature-advantage-benefit a classic product messaging formula that starts with a feature of a product, explains the advantage (what it does or why it’s better), and concludes with the benefit (why it matters to the user). it is widely used in marketing, sales, resumes, and persuasion writing. provide a key product feature. optionally add target audience and customer pain point. the model will respond with a clear fab breakdown: feature, advantage, and benefit — plus variations for different messaging contexts and lengths. type:framework use:copywriting topic:values use:scope-management use:decision-making use:planning use:content phase:apply level:beginner level:intermediate use:pattern use:ad-copy use:healing storytelling-frameworks writing strategy teaching turn product features into user-focused benefits for marketing copy. train a model to articulate why a feature matters to customers. create sales bullets or product descriptions emphasizing value. reframe technical jargon into plain language for non-technical audiences. craft resume or linkedin bullets by translating responsibilities into achievements. translate engineering specs into customer-facing copy. reframe b2b saas features into executive-level benefits. build persuasive pitch decks for investors. highlight transferable skills in job applications. translate technical features into plain advantages and user benefits. ensure the benefit addresses a specific customer need or pain point. include at least one emotional or human-centered benefit, not just functional. pair each benefit with a potential customer persona (“for busy professionals…”). offer an alternate phrasing that works as a sales bullet or ad headline. force-test each benefit with “so what?” until it resonates at a human level. provide one micro-fab version (short-form for ads, resumes, or social posts). tailor at least one fab to a secondary persona for versatility testing. product feature(s) target audience (optional) customer need/pain point (optional) advantage (optional, pre-written) benefit (optional, pre-written) output format (optional) constraints (optional)"
      }
    },

    {
      id: "facione-core",
      slug: "facione-core-skills",
      label: "Facione — Interpret · Analyze · Evaluate · Infer · Explain · Self-regulate",
      kind: "framework",
      categories: [
        "critical-thinking",
        "teaching",
        "reasoning",
        "decision"
      ],
      tags: [
        "type:framework",
        "use:copywriting",
        "use:presentations",
        "topic:bias",
        "use:decision-making",
        "use:healing",
        "use:discover",
        "phase:apply",
        "use:evaluation",
        "level:beginner",
        "phase:explore",
        "topic:future-self",
        "level:intermediate",
        "level:advanced"
      ],
      use_cases: [
        "Appraise evidence for and against a claim.",
        "Write critical research summaries or peer reviews.",
        "Conduct root cause analysis in complex problems.",
        "Run ethics or policy evaluations with balance.",
        "Teach or practice structured critical thinking.",
        "Prepare debate arguments and rebuttals.",
        "Evaluate scientific or academic work during peer review.",
        "Develop policy whitepapers with rigorous reasoning.",
        "Practice bias-awareness training exercises.",
        "Pre-read sanity checks before exec or board decisions.",
             "is this claim solid",
      "evaluate this evidence",
      "find the weak links",
      "map claim and reasons",
      "what follows logically",
      "spot hidden assumptions",
      "separate facts and opinions",
      "weigh both sides fairly",
      "explain your reasoning",
      "does the data support it",
      "infer the best conclusion",
      "avoid common fallacies",
      "sanity-check my argument",
      "summarize evidence clearly",
      "write a balanced review",
      "rate source credibility",
      "challenge my conclusion",
      "make a defensible case",
      "prepare rebuttals",
      "self-check for bias",
        "is this argument strong",
  "help me think it through",
  "what’s the logic here",
  "am I being fair",
  "check if this makes sense",
  "explain both sides",
  "does this conclusion hold up",
  "spot weak reasoning",
  "rate my argument",
  "is this evidence solid",
  "help me avoid bias",
  "separate feelings from facts",
  "summarize the case simply",
  "does this follow logically",
  "help me be more objective"
      ],
      boosters: [
        "Always state a confidence level (low/medium/high) and an uncertainty range.",
        "Strengthen at least one opposing argument before rebutting.",
        "Test each key claim against at least one counterexample or alternative mechanism.",
        "Make bias checks explicit; tie each to a mitigation technique.",
        "Connect inference to real-world implications or decisions.",
        "Finish with a 2-line “Because–Therefore” justification and one actionable next step."
      ],
      definition: "A six-skill model of critical thinking (Facione, Delphi Report) that operationalizes interpretation, analysis, evaluation, inference, explanation, and self-regulation. It structures balanced, evidence-based reasoning and makes bias checks explicit.",
      help: "Provide a topic/claim/problem plus pro/con evidence. Optionally add alternatives, criteria, and stakeholders. The output walks through all six skills, strengthens a counterargument, flags bias, states confidence/uncertainty, and ends with one concrete next step.",
      fields: [
        {
          label: "Topic / claim / problem",
          desc: "The statement or issue under consideration.",
          key: "topic",
          ph: "e.g., “Feature X reduces churn by 10%.”",
          type: "text"
        },
        {
          label: "Evidence supporting",
          desc: "Main supporting data, arguments, or reasoning.",
          key: "evidence",
          ph: "Key studies, metrics, examples…",
          type: "textarea"
        },
        {
          label: "Evidence opposing",
          desc: "Counterevidence or disconfirming data.",
          key: "counter",
          ph: "Limitations, critiques, contrary findings…",
          type: "textarea"
        },
        {
          label: "Alternative explanations / hypotheses",
          desc: "Other plausible causes or interpretations.",
          key: "alt_explanations",
          ph: "Market seasonality, user bias, sampling issues…",
          type: "textarea"
        },
        {
          label: "Evaluation criteria (optional)",
          desc: "Standards for judging evidence or claims.",
          key: "criteria",
          ph: "Validity, reliability, fairness, impact",
          type: "textarea"
        },
        {
          label: "Stakeholders (optional)",
          desc: "Who is affected by the conclusion or decision.",
          key: "stakeholders",
          ph: "Executives, customers, regulators, peers",
          type: "textarea"
        },
        {
          label: "Explanation audience",
          autofill: "persona->inline",
          desc: "Who the reasoning will be explained to.",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "explain_aud",
          ph: "Executives, peers, students, customers…",
          type: "repeater"
        },
        {
          label: "Bias / self-regulation notes",
          desc: "Bias checks, personal reflection, or quality controls.",
          key: "selfreg_checks",
          ph: "Seek disconfirming data; avoid anchoring; confidence rating…",
          type: "text"
        },
        {
          label: "Biases (from library)",
          autofill: "bias->inline",
          dataset: "bias",
          desc: "Optional: attach named biases or techniques to make checks explicit.",
          itemType: "typeahead",
          key: "selfreg_bias_picks",
          ph: "Start typing to add named biases…",
          type: "repeater",
          unit: "bias"
        },
        {
          label: "Confidence & uncertainty (optional)",
          desc: "State your confidence and uncertainty range.",
          key: "confidence",
          ph: "Confidence: medium; Uncertainty: ±5–7pp",
          type: "text"
        },
        {
          label: "Next step (optional)",
          desc: "One concrete follow-up action.",
          key: "next_step",
          ph: "Run A/B on alt hypothesis; schedule review in 2 weeks",
          type: "text"
        }
      ],
      template: ({ topic, evidence, counter, alt_explanations, criteria, stakeholders, explain_aud, selfreg_checks, selfreg_bias_picks, confidence, next_step, ctx, audience, style, tone }) => [
    'Apply Facione’s six core critical thinking skills.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,

    topic && `Target issue: ${topic}`,
    'Output:',
    '1) Interpretation — Clarify what the issue and evidence mean in plain terms.',
    evidence && `2) Analysis — Identify key structures, relations, or assumptions in the evidence:\n${evidence}`,
    counter && `3) Evaluation — Weigh credibility and logical strength of supporting vs. opposing evidence:\n${counter}`,
    alt_explanations && `4) Inference — Draw a conclusion, with uncertainty and alternatives:\n${alt_explanations}`,
    criteria && `Criteria — Standards applied for evaluation:\n${criteria}`,
    stakeholders && `Stakeholders — Who is impacted:\n${stakeholders}`,

    explain_aud && (
      '5) Explanation — Frame the conclusion for the audience(s):\n' +
      String(explain_aud).split(/\n+/).map((a,i)=>`${i+1}. ${a}`).join('\n')
    ),

    selfreg_checks && `6) Self-regulation — Bias/quality checks applied:\n${selfreg_checks}`,
    selfreg_bias_picks && (
      'Self-regulation — Named biases/techniques (from library):\n' +
      String(selfreg_bias_picks).split(/\n+/).map((s,i)=>`${i+1}. ${s.trim()}`).join('\n')
    ),

    confidence && `Confidence & uncertainty:\n${confidence}`,
    next_step && `Next step:\n${next_step}`,

    'Close with:\n- Because–Therefore justification\n- Confidence level & uncertainty range\n- One next step (experiment, check, or action)\n\nChecklist:\n- [ ] All six skills addressed\n- [ ] One opposing argument strengthened\n- [ ] Bias check included (named where possible)\n- [ ] Confidence level stated\n- [ ] Actionable next step proposed'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "facione — interpret · analyze · evaluate · infer · explain · self-regulate facione-core-skills a six-skill model of critical thinking (facione, delphi report) that operationalizes interpretation, analysis, evaluation, inference, explanation, and self-regulation. it structures balanced, evidence-based reasoning and makes bias checks explicit. provide a topic/claim/problem plus pro/con evidence. optionally add alternatives, criteria, and stakeholders. the output walks through all six skills, strengthens a counterargument, flags bias, states confidence/uncertainty, and ends with one concrete next step. type:framework use:copywriting use:presentations topic:bias use:decision-making use:healing use:discover phase:apply use:evaluation level:beginner phase:explore topic:future-self level:intermediate level:advanced critical-thinking teaching reasoning decision appraise evidence for and against a claim. write critical research summaries or peer reviews. conduct root cause analysis in complex problems. run ethics or policy evaluations with balance. teach or practice structured critical thinking. prepare debate arguments and rebuttals. evaluate scientific or academic work during peer review. develop policy whitepapers with rigorous reasoning. practice bias-awareness training exercises. pre-read sanity checks before exec or board decisions. always state a confidence level (low/medium/high) and an uncertainty range. strengthen at least one opposing argument before rebutting. test each key claim against at least one counterexample or alternative mechanism. make bias checks explicit; tie each to a mitigation technique. connect inference to real-world implications or decisions. finish with a 2-line “because–therefore” justification and one actionable next step. topic / claim / problem evidence supporting evidence opposing alternative explanations / hypotheses evaluation criteria (optional) stakeholders (optional) explanation audience bias / self-regulation notes biases (from library) confidence & uncertainty (optional) next step (optional)"
      }
    },

    {
      id: "facts_primer",
      slug: "facts-expertise-primer",
      label: "Facts & Expertise Primer",
      kind: "technique",
      categories: [
        "prompt-development-techniques",
        "quality"
      ],
      tags: [
        "type:framework",
        "use:teaching",
        "level:beginner",
        "use:case-study"
      ],
      use_cases: [
        "prime a conversation with domain facts",
        "reduce hallucinations",
        "scope an expert role before a task",
              "start with the facts",
      "give me the essentials",
      "what do I need to know",
      "define key terms",
      "scope the task",
      "set the expert role",
      "sources I can trust",
      "assumptions and limits",
      "known unknowns list",
      "quick domain primer",
      "avoid made-up info",
      "evidence first please",
      "ask me missing details",
      "ground the discussion",
      "context in one page",
      "fact check this topic",
      "guardrails for answers",
      "use citations when sure",
      "keep to verified data",
      "expert stance setup",
      "prevent the ai from making mistakes",
      "Is this factually correct",
      "make this is accurate",
       "give me the background first",
  "help me avoid fake info",
  "show me trusted sources",
  "what’s the context here",
  "separate facts from opinions",
  "list what’s confirmed vs unsure",
  "make this beginner friendly",
  "help me fact-check my notes",
  "summarize the reliable parts",
  "clarify what’s evidence vs guess",
  "keep it straight to the facts",
  "spot what might be wrong",
  "what should I double-check",
  "give me the baseline knowledge",
  "help me not spread misinformation"
      ],
      boosters: [
        "Explicitly mark unknowns and ask up to 3 clarifying questions if needed.",
        "Prefer verifiable facts over speculation.",
        "Keep rationales to one short sentence unless asked to elaborate."
      ],
      definition: "Prime the model with verified facts, role, and scope constraints before asking for an output.",
      help: "List facts one-per-line (or use the add-row control). The prompt will ground itself in those facts and mark unknowns.",
      fields: [
        {
          label: "Role to embody (optional)",
          key: "role",
          ph: "e.g., Senior epidemiologist focused on respiratory viruses",
          type: "text"
        },
        {
          label: "Domain / scope",
          key: "domain",
          ph: "e.g., US healthcare billing (2023–2025) • EU privacy law • K-12 math",
          type: "text"
        },
        {
          label: "Facts / known truths (one per line)",
          desc: "One fact per line. Commas are OK; they will be split. Add short notes with \":\" if useful.",
          key: "facts",
          ph: "e.g., HIPAA applies to covered entities\nGDPR requires lawful basis for processing",
          type: "textarea"
        },
        {
          label: "Known pitfalls / myths to avoid",
          key: "pitfalls",
          ph: "e.g., “Vitamin C cures colds” is a myth; do not claim it.",
          type: "textarea"
        },
        {
          label: "Initial task or question",
          key: "task",
          ph: "e.g., Draft a one-page overview of consent requirements for telehealth.",
          type: "textarea"
        },
        {
          label: "Rigor / citation expectations (optional)",
          key: "rigor",
          ph: "e.g., Cite authoritative sources; avoid fabricated citations.",
          type: "text"
        }
      ],
      template: ({role,domain,facts,pitfalls,task,rigor,ctx,audience,style,tone})=>{
      const factLines = String(facts||'')
        .split(/\n+|,/)
        .map(s=>s.trim())
        .filter(Boolean)
        .map((t,i)=>`${i+1}. ${t}`)
        .join('\n');

      return [
        'You are being primed with facts and scope before performing a task.',
        role   && `Adopt role: ${role}`,
        domain && `Domain/scope: ${domain}`,
        ctx    && `Context: ${ctx}`,
        audience && `Audience: ${audience}`,
        style  && `Style: ${style}`,
        tone   && `Tone: ${tone}`,
        factLines && `Facts (treat as ground truth):\n${factLines}`,
        pitfalls && `Avoid known pitfalls/myths:\n${pitfalls}`,
        rigor && `Rigor expectations: ${rigor}`,
        'Behavioral rules:',
        '- Prefer verifiable facts; do not invent sources.',
        '- If information is missing or ambiguous, explicitly list unknowns and ask up to 3 clarifying questions.',
        '- Keep rationales concise; do not reveal hidden chain-of-thought.',
        task && `Initial task:\n${task}`
      ].filter(Boolean).join('\n');
    },
      meta: {
        search_text: "facts & expertise primer facts-expertise-primer prime the model with verified facts, role, and scope constraints before asking for an output. list facts one-per-line (or use the add-row control). the prompt will ground itself in those facts and mark unknowns. type:framework use:teaching level:beginner use:case-study prompt-development-techniques quality prime a conversation with domain facts reduce hallucinations scope an expert role before a task explicitly mark unknowns and ask up to 3 clarifying questions if needed. prefer verifiable facts over speculation. keep rationales to one short sentence unless asked to elaborate. role to embody (optional) domain / scope facts / known truths (one per line) known pitfalls / myths to avoid initial task or question rigor / citation expectations (optional)"
      }
    },

    {
      id: "feynman",
      slug: "feynman-technique",
      label: "Feynman Technique — Explain Like I’m 5",
      kind: "framework",
      categories: [
        "teaching",
        "reasoning",
        "critical-thinking",
        "psychology"
      ],
      tags: [
        "use:pattern",
        "topic:clarification",
        "use:teaching",
        "use:copywriting",
        "level:beginner",
        "use:case-study",
        "topic:bias",
        "use:task-brief"
      ],
      use_cases: [
        "Simplify complex concepts for learners or non-experts.",
        "Debug your own understanding by explaining simply.",
        "Teach difficult topics with analogies and stories.",
        "Prepare clear communication for executives or children.",
        "Break down technical terms into everyday language.",
        "Pitch complex research to non-specialists.",
        "Design tiered learning materials (kids → teens → peers → experts).",
        "Identify and fix gaps in understanding during onboarding or training.",
          "explain this like I’m 5",
  "make it simple for my grandma",
  "turn this into plain English",
  "help me explain to a friend",
  "teach this without jargon",
  "break it into simple steps",
  "make this kid-friendly",
  "how would I explain this at a party",
  "make it sound less technical",
  "give me an analogy",
  "explain for a non-expert",
  "make it clear for my boss",
  "simplify for beginners",
  "turn this into a story",
  "how do I explain without buzzwords",
"help me understand",
"summarize this",
"explain this complex topic",
"I do not understand",
"what does this mean"
      ],
      boosters: [
        "Draft the explanation in plain words, then refine it until no jargon remains.",
        "Offer at least one analogy or real-world example matched to the audience.",
        "Create layered explanations: ELI5 → teen → peer → expert.",
        "End with a short “Because… Therefore…” justification to show reasoning is intact.",
        "Match tone and examples to the selected audience level or persona.",
        "Provide a progression ladder if requested (stepwise across levels)."
      ],
      definition: "A learning strategy (from Richard Feynman) that reveals true understanding by forcing you to explain a concept in simple, jargon-free terms, tailored to the audience’s level of age or expertise.",
      help: "Provide a concept or topic, select an audience level from the drop-down, and optionally add personas or examples. The model will generate a clear, step-by-step explanation, simplify jargon, use analogies, and include a self-check line.",
      fields: [
        {
          label: "Concept or topic",
          desc: "The subject you want explained in simple, audience-appropriate terms.",
          key: "concept",
          ph: "e.g., Quantum entanglement",
          type: "textarea"
        },
        {
          label: "Audience level",
          desc: "Select the age or expertise level. The choice adjusts tone, vocabulary, examples, and level of abstraction in the explanation.",
          key: "audience_level",
          options: [
            {
              label: "Child (around 5 years old)",
              value: "Explain as if to a 5-year-old child: use very simple language, short sentences, playful analogies (toys, games, animals), and avoid abstractions."
            },
            {
              label: "Child (10–12 years old)",
              value: "Explain as if to a 10–12 year-old: simple but not babyish, use concrete examples from school or hobbies, allow light abstraction but anchor in stories or visuals."
            },
            {
              label: "Teenager (13–17)",
              value: "Explain as if to a teenager (13–17): balance simplicity with nuance, connect to school, social life, hobbies, identity, introduce moderate abstraction and cause-effect reasoning."
            },
            {
              label: "Adult — non-expert",
              value: "Explain as if to a non-expert adult: avoid jargon, use workplace or everyday analogies, emphasize clarity over technical precision, highlight practical takeaways."
            },
            {
              label: "Adult — peer/executive",
              value: "Explain as if to a peer/executive adult: clear, concise, professional tone, mix plain language with light domain-specific terms, focus on decision relevance and high-level reasoning."
            },
            {
              label: "Expert audience",
              value: "Explain as if to an expert audience: rigorous and precise, keep technical vocabulary, assume shared background, focus on clarity of logic and highlighting subtleties."
            }
          ],
          ph: "Choose an age/expertise group",
          type: "select"
        },
        {
          label: "Audience persona(s) (optional)",
          autofill: "persona->inline",
          desc: "Add persona details to further tailor the explanation (e.g., Busy parent, Software engineer, 10-year-old gamer).",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "audience_persona",
          ph: "Start typing to pick or add personas",
          type: "repeater"
        },
        {
          label: "Examples or analogies (optional)",
          desc: "Optional real-world examples or analogies you want the model to include.",
          key: "examples",
          ph: "e.g., magnets, playground swings, Legos",
          type: "textarea"
        },
        {
          label: "Constraints (optional)",
          desc: "Formatting or length requirements.",
          key: "constraints",
          ph: "e.g., 1 paragraph max; bullet points only; ≤100 words",
          type: "text"
        }
      ],
      template: ({ concept, audience_level, audience_persona, examples, constraints, ctx, style, tone }) => [
    'Apply the Feynman Technique: explain simply, refine, clarify.',
    ctx && `Context: ${ctx}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    concept && `Concept: ${concept}`,
    audience_level && `Audience level selected: ${audience_level}`,
    audience_persona && (
      'Audience persona(s):\n' +
      String(audience_persona).split(/\n+/).map((p,i)=>`${i+1}. ${p}`).join('\n')
    ),
    examples && `Examples/analogies to include: ${examples}`,
    constraints && `Constraints: ${constraints}`,
    'Output:\n1) Explanation tailored to the chosen audience level\n2) Simplify or expand detail depending on age/expertise\n3) At least one analogy or example matched to audience or persona\n4) Clarify tricky terms in simpler words\n5) End with a “Because… Therefore…” justification line\n\nChecklist:\n- [ ] Explanation fits audience level\n- [ ] Persona context used if provided\n- [ ] Analogy/example included\n- [ ] Reasoning intact and clear'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "feynman technique — explain like i’m 5 feynman-technique a learning strategy (from richard feynman) that reveals true understanding by forcing you to explain a concept in simple, jargon-free terms, tailored to the audience’s level of age or expertise. provide a concept or topic, select an audience level from the drop-down, and optionally add personas or examples. the model will generate a clear, step-by-step explanation, simplify jargon, use analogies, and include a self-check line. use:pattern topic:clarification use:teaching use:copywriting level:beginner use:case-study topic:bias use:task-brief teaching reasoning critical-thinking psychology simplify complex concepts for learners or non-experts. debug your own understanding by explaining simply. teach difficult topics with analogies and stories. prepare clear communication for executives or children. break down technical terms into everyday language. pitch complex research to non-specialists. design tiered learning materials (kids → teens → peers → experts). identify and fix gaps in understanding during onboarding or training. draft the explanation in plain words, then refine it until no jargon remains. offer at least one analogy or real-world example matched to the audience. create layered explanations: eli5 → teen → peer → expert. end with a short “because… therefore…” justification to show reasoning is intact. match tone and examples to the selected audience level or persona. provide a progression ladder if requested (stepwise across levels). concept or topic audience level audience persona(s) (optional) examples or analogies (optional) constraints (optional)"
      }
    },

    {
      id: "first_principles",
      slug: "first-principles-analysis",
      label: "First Principles — Question assumptions & reason from basics",
      kind: "heuristic",
      categories: [
        "reasoning",
        "brainstorming",
        "analysis-frameworks",
        "creativity",
        "psychology",
        "product-management"
      ],
      tags: [
        "type:framework",
        "use:problem-framing",
        "use:presentations",
        "use:copywriting",
        "use:workshop",
        "use:brainstorming",
        "level:intermediate",
        "use:pattern",
        "use:content",
        "use:decision-making",
        "topic:values",
        "use:teaching"
      ],
      use_cases: [
        "Solve complex problems by breaking them down to fundamental truths.",
        "Challenge default assumptions to find innovative or unexpected solutions.",
        "Reverse-engineer a claim or idea by testing its foundational basis.",
        "Analyze feasibility by building up from basic principles.",
        "Make personal or strategic decisions with clarity about true constraints.",
        "De-bias reasoning by stripping analogies and defaults.",
        "Develop radically new product designs where conventional wisdom blocks progress.",
        "Teach critical thinking and structured problem decomposition.",
              "explain from scratch",
      "question every assumption",
      "what are the fundamentals",
      "strip it to basics",
      "build up step by step",
      "why is this true",
      "prove it or drop it",
      "true constraints only",
      "rethink the problem",
      "start at first principles",
      "no analogies just logic",
      "smallest working plan",
      "rebuild the solution",
      "if we started today",
      "test core assumptions",
      "show the base equations",
      "ground in reality",
      "what must be true",
      "derive not copy",
      "root-cause reasoning"
      ],
      boosters: [
        "Explicitly list core facts or principles that are undeniably true in this context.",
        "For each assumption, ask “Why must this be true?” and explore what happens if it’s not.",
        "Translate truths into measurable criteria or physical/economic limits when possible.",
        "Force at least 3 rounds of “Why?” questioning for each assumption.",
        "If a fact is missing, flag it as an unknown needing research.",
        "Propose at least 2 alternative solutions rebuilt from the same truths.",
        "End with a short “Because–Therefore” reasoning chain that ties facts to the conclusion."
      ],
      definition: "A problem-solving approach that strips an issue down to fundamental truths and rebuilds solutions from the ground up. It challenges assumptions and analogies to unlock novel thinking, drawing from philosophy, science, and entrepreneurship.",
      help: "State the problem, list assumptions, known truths, unknowns, and optionally a desired outcome. The model will reduce the issue to basics, test assumptions, highlight gaps, and rebuild reasoning from first principles.",
      fields: [
        {
          label: "Problem or question",
          desc: "The issue to solve or question to answer, stated as clearly and concretely as possible.",
          key: "problem",
          ph: "e.g., How can we create a low-cost, sustainable water filter for remote areas?",
          type: "textarea"
        },
        {
          label: "Assumptions (optional, one per line)",
          desc: "Assumptions or constraints you think apply. These will be tested and possibly challenged.",
          key: "assumptions",
          ph: "Water must be boiled to purify...\nWe can only use local materials...",
          type: "textarea"
        },
        {
          label: "Known truths/evidence (optional)",
          desc: "List what you know for sure: scientific laws, validated data, or observable facts.",
          key: "facts",
          ph: "Clean water requires removing microbes and particulates.\nGravity filtration works without power.",
          type: "textarea"
        },
        {
          label: "Unknowns / gaps in knowledge (optional)",
          desc: "What information is missing or uncertain and needs to be researched further.",
          key: "unknowns",
          ph: "Exact cost of local materials\nLifespan of ceramic filters",
          type: "textarea"
        },
        {
          label: "Desired outcome (optional)",
          desc: "The ultimate goal or success state you want to achieve.",
          key: "goal",
          ph: "Affordable filter accessible to rural households",
          type: "text"
        }
      ],
      template: ({ problem, assumptions, facts, unknowns, goal, ctx, style, tone }) => [
    'Apply first principles reasoning.',
    ctx && `Context: ${ctx}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    problem && `Problem: ${problem}`,
    assumptions && (
      'Assumptions:\n' + String(assumptions).split(/\n+/).map(s => s.trim()).filter(Boolean).map((a,i) => `${i+1}. ${a}`).join('\n')
    ),
    facts && (
      'Known truths:\n' + String(facts).split(/\n+/).map(s => s.trim()).filter(Boolean).map((f,i) => `${i+1}. ${f}`).join('\n')
    ),
    unknowns && (
      'Unknowns / gaps:\n' + String(unknowns).split(/\n+/).map(s => s.trim()).filter(Boolean).map((u,i) => `${i+1}. ${u}`).join('\n')
    ),
    goal && `Desired outcome: ${goal}`,
    'Output:\n1) Reduced fundamentals (core truths)\n2) Challenges to assumptions (what if false?)\n3) Alternative reconstructions from truths\n4) Because–Therefore justification\n5) Research agenda: what unknowns must be resolved to proceed'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "first principles — question assumptions & reason from basics first-principles-analysis a problem-solving approach that strips an issue down to fundamental truths and rebuilds solutions from the ground up. it challenges assumptions and analogies to unlock novel thinking, drawing from philosophy, science, and entrepreneurship. state the problem, list assumptions, known truths, unknowns, and optionally a desired outcome. the model will reduce the issue to basics, test assumptions, highlight gaps, and rebuild reasoning from first principles. type:framework use:problem-framing use:presentations use:copywriting use:workshop use:brainstorming level:intermediate use:pattern use:content use:decision-making topic:values use:teaching reasoning brainstorming analysis-frameworks creativity psychology product-management solve complex problems by breaking them down to fundamental truths. challenge default assumptions to find innovative or unexpected solutions. reverse-engineer a claim or idea by testing its foundational basis. analyze feasibility by building up from basic principles. make personal or strategic decisions with clarity about true constraints. de-bias reasoning by stripping analogies and defaults. develop radically new product designs where conventional wisdom blocks progress. teach critical thinking and structured problem decomposition. explicitly list core facts or principles that are undeniably true in this context. for each assumption, ask “why must this be true?” and explore what happens if it’s not. translate truths into measurable criteria or physical/economic limits when possible. force at least 3 rounds of “why?” questioning for each assumption. if a fact is missing, flag it as an unknown needing research. propose at least 2 alternative solutions rebuilt from the same truths. end with a short “because–therefore” reasoning chain that ties facts to the conclusion. problem or question assumptions (optional, one per line) known truths/evidence (optional) unknowns / gaps in knowledge (optional) desired outcome (optional)"
      }
    },

    {
      id: "freewrite",
      slug: "freewriting-zero-draft",
      label: "Freewriting — Unfiltered Stream of Thought (Zero Draft)",
      kind: "framework",
      categories: [
        "creativity",
        "writing",
        "self-reflection",
        "cultural-frameworks",
        "critical-thinking"
      ],
      tags: [
        "type:technique",
        "use:copywriting",
        "use:planning",
        "use:brainstorming",
        "use:presentations",
        "use:teaching",
        "use:goals",
        "level:beginner"
      ],
      use_cases: [
        "Overcome writer’s block or creative block.",
        "Discover latent ideas by writing without stopping.",
        "Generate raw content for later essays, stories, or articles.",
        "Surface hidden emotions or subconscious associations.",
        "Warm-up exercise before structured work or research.",
        "Kick off group workshops or brainstorming sessions.",
        "Explore metaphors and imagery for fiction or poetry.",
        "Reveal subconscious patterns useful in therapy or coaching.",
                  "help me start writing",
      "zero draft now",
      "10 minute freewrite",
      "brain dump session",
      "write without editing",
      "unstick my ideas",
      "warm-up paragraph",
      "stream of consciousness",
      "morning pages prompt",
      "messy first draft",
      "timer and go",
      "follow the thought",
      "no censor writing",
      "seed words please",
      "riff on this topic",
      "fill one page fast",
      "idea spill then sort",
      "write past the block",
      "loosen up my voice",
      "draft then organize"
      ],
      boosters: [
        "Do not stop or edit mid-flow; even nonsense is acceptable in the draft.",
        "If stuck, keep typing the same word or phrase until new thoughts emerge.",
        "Use looping: after finishing, pull out a phrase and restart writing from it.",
        "Allow emotional honesty; if strong feelings surface, capture them without judgment.",
        "After the freewrite, highlight surprising phrases, images, or insights for further use.",
        "Experiment with sensory writing: describe sounds, smells, textures.",
        "Switch perspective mid-way (write as a rival, child, or future self).",
        "Apply playful constraints (no adjectives, only questions, all ocean metaphors)."
      ],
      definition: "A technique where you write continuously about a topic without worrying about structure, grammar, or correctness. Also called a “zero draft,” it helps bypass inner censorship, overcome creative block, and produce raw material for later refinement.",
      help: "Provide a topic, emotion, or question to explore. Optionally add time, length, or constraints. The model will generate a continuous freewriting draft, then highlight key patterns, images, and next steps.",
      fields: [
        {
          label: "Topic, question, or emotion",
          desc: "What you want to explore — could be a subject, feeling, or random prompt.",
          key: "topic",
          ph: "e.g., Reflections on technology in education; “Why am I restless today?”",
          type: "textarea"
        },
        {
          label: "Timebox (optional)",
          desc: "How long you want to freewrite (minutes). Short = 5, Long = 20.",
          key: "timer",
          ph: "e.g., 10 minutes",
          type: "text"
        },
        {
          label: "Starting tone (optional)",
          desc: "Initial mood or style to begin with. It may shift mid-flow.",
          key: "tone",
          ph: "Reflective, ranting, playful, meditative",
          type: "text"
        },
        {
          label: "Target length (optional)",
          desc: "Approximate target word count or paragraphs.",
          key: "length",
          ph: "e.g., 300 words; 3 paragraphs",
          type: "text"
        },
        {
          label: "Constraints (optional)",
          desc: "Rules or limits to spark creativity.",
          key: "constraints",
          ph: "e.g., Only questions; all sentences start with “What if…”",
          type: "textarea"
        },
        {
          label: "Persona voice (optional)",
          autofill: "persona->inline",
          desc: "Write in the perspective of a persona or role (e.g., Pirate, Future Self, Therapist).",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "persona_voice",
          ph: "Start typing to pick a persona...",
          type: "repeater"
        },
        {
          label: "Post-processing focus (optional)",
          desc: "How you want to analyze or use the draft afterward.",
          key: "postprocess",
          ph: "Summarize key themes; extract story ideas; highlight emotions.",
          type: "textarea"
        }
      ],
      template: ({ topic, timer, tone, length, constraints, persona_voice, postprocess, ctx }) => [
    'Begin a Freewriting (Zero Draft) session.',
    ctx && `Context: ${ctx}`,
    topic && `Topic: ${topic}`,
    timer && `Timebox: ${timer}`,
    tone && `Starting tone: ${tone}`,
    length && `Target length: ${length}`,
    constraints && `Constraints: ${constraints}`,
    persona_voice && (
      'Persona voice:\n' +
      String(persona_voice).split(/\n+/).map((p,i)=>`${i+1}. ${p}`).join('\n')
    ),
    '---',
    'Stream of Consciousness Draft (no edits, raw flow):',
    '... (continuous unfiltered writing here) ...',
    '---',
    postprocess && `Post-process: After the draft, ${postprocess}`,
    'Output:\n1) Raw unfiltered draft\n2) Highlighted phrases, images, or patterns\n3) One-sentence summary of surprising or useful insights\n4) Suggested next step: how to use the material'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "freewriting — unfiltered stream of thought (zero draft) freewriting-zero-draft a technique where you write continuously about a topic without worrying about structure, grammar, or correctness. also called a “zero draft,” it helps bypass inner censorship, overcome creative block, and produce raw material for later refinement. provide a topic, emotion, or question to explore. optionally add time, length, or constraints. the model will generate a continuous freewriting draft, then highlight key patterns, images, and next steps. type:technique use:copywriting use:planning use:brainstorming use:presentations use:teaching use:goals level:beginner creativity writing self-reflection cultural-frameworks critical-thinking overcome writer’s block or creative block. discover latent ideas by writing without stopping. generate raw content for later essays, stories, or articles. surface hidden emotions or subconscious associations. warm-up exercise before structured work or research. kick off group workshops or brainstorming sessions. explore metaphors and imagery for fiction or poetry. reveal subconscious patterns useful in therapy or coaching. do not stop or edit mid-flow; even nonsense is acceptable in the draft. if stuck, keep typing the same word or phrase until new thoughts emerge. use looping: after finishing, pull out a phrase and restart writing from it. allow emotional honesty; if strong feelings surface, capture them without judgment. after the freewrite, highlight surprising phrases, images, or insights for further use. experiment with sensory writing: describe sounds, smells, textures. switch perspective mid-way (write as a rival, child, or future self). apply playful constraints (no adjectives, only questions, all ocean metaphors). topic, question, or emotion timebox (optional) starting tone (optional) target length (optional) constraints (optional) persona voice (optional) post-processing focus (optional)"
      }
    },

    {
      id: "ganma_confluence",
      slug: "ganma-knowledge-confluence",
      label: "Ganma — Knowledge Confluence (Yolŋu)",
      kind: "strategy",
      categories: [
        "reasoning",
        "cultural-frameworks",
        "strategy",
        "psychology",
        "teaching",
        "ethics"
      ],
      tags: [
        "type:framework",
        "use:healing",
        "use:pattern",
        "level:beginner",
        "use:workshop",
        "phase:explore",
        "level:advanced",
        "use:brainstorming"
      ],
      use_cases: [
        "Explore how Indigenous and Western (or other) knowledge systems meet without collapsing differences.",
        "Document shared insights while respecting boundaries and incommensurables.",
        "Design confluence processes in education, ecology, health, or policy contexts.",
        "Facilitate dialogue where multiple knowledge traditions are present.",
        "Reflect on safeguards to prevent erasure or domination of one knowledge stream by another.",
        "Teach knowledge plurality in classrooms and workshops.",
        "Support co-research between Indigenous and non-Indigenous partners.",
        "Inform policy development with cultural legitimacy and shared authority.",
        "Guide environmental stewardship that respects both Country and science.",
              "blend knowledge systems",
      "two-way learning plan",
      "science and Country together",
      "respect cultural boundaries",
      "co-design with community",
      "shared authority process",
      "avoid tokenism",
      "hold differences with care",
      "map common ground",
      "what not to share",
      "protocols before project",
      "invite Elders’ guidance",
      "both/and knowledge",
      "design with reciprocity",
      "document agreements fairly",
      "credit and consent first",
      "keep language respectful",
      "multiple ways of knowing",
      "plan a confluence workshop",
      "balance evidence and story"
      ],
      boosters: [
        "Center Yolŋu framing: fresh water and salt water mixing in a lagoon; avoid reducing this to “integration” or “assimilation.”",
        "Surface tensions as valuable knowledge rather than as obstacles.",
        "Respect that some knowledge may be restricted, sacred, or not shareable — note boundaries clearly.",
        "Emphasize reciprocity, responsibility, and ongoing protocols, not just outcomes.",
        "Name who is speaking and whose voices are missing.",
        "Include relationships to land, ancestors, and community as part of the streams.",
        "Recognize that confluence is often slow and relational — not a single event."
      ],
      definition: "Ganma is a Yolŋu metaphor describing the meeting of fresh water and salt water, used as a way to think about knowledge confluence. Each stream keeps its identity while creating new qualities in the mixing. It is a practice of holding difference, dialogue, and shared emergence without erasing cultural integrity.",
      help: "Use this when exploring two or more knowledge systems or traditions. Map where they overlap, where they remain distinct, and what new insights emerge at the confluence. Always note cultural protocols, boundaries, and responsibilities.",
      fields: [
        {
          label: "Knowledge Stream A",
          desc: "One knowledge source or tradition (e.g., Yolŋu ecological knowledge, community practice, lived experience).",
          key: "stream_a",
          ph: "e.g., Yolŋu kinship laws about water; Community practice of fire management",
          type: "textarea"
        },
        {
          label: "Knowledge Stream B",
          desc: "Another knowledge source or tradition (e.g., Western science, academic research, policy knowledge).",
          key: "stream_b",
          ph: "e.g., Hydrological science data; Academic theory",
          type: "textarea"
        },
        {
          label: "Participants / voices involved (optional)",
          autofill: "persona->inline",
          desc: "People, communities, or roles carrying each knowledge stream.",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "participants",
          ph: "Elder, Scientist, Policy-maker, Student",
          type: "repeater"
        },
        {
          label: "Context / setting (optional)",
          desc: "Where the confluence happens — classroom, policy meeting, research collaboration, on Country.",
          key: "context",
          ph: "e.g., Joint management meeting for a National Park",
          type: "textarea"
        },
        {
          label: "Shared Resonances / Overlaps",
          desc: "Where the streams align, resonate, or find common ground.",
          key: "overlaps",
          ph: "e.g., Both emphasize cyclical patterns in water flows",
          type: "textarea"
        },
        {
          label: "Tensions / Incommensurables",
          desc: "Places where the streams do not align, cannot be translated, or should not be forced together.",
          key: "tensions",
          ph: "e.g., Scientific demand for measurement vs. Yolŋu spiritual responsibility",
          type: "textarea"
        },
        {
          label: "Confluence (Emergent Insight)",
          desc: "What arises at the mixing point — new practice, method, or understanding that emerges when both streams meet.",
          key: "synthesis",
          ph: "e.g., A co-designed water management plan blending observation, ritual, and data",
          type: "textarea"
        },
        {
          label: "Safeguards / Protocols",
          desc: "Cultural protocols, agreements, or ethical practices to protect both streams and prevent erasure.",
          key: "safeguards",
          ph: "e.g., Yolŋu authority over sacred knowledge; data-sharing agreements",
          type: "textarea"
        }
      ],
      template: ({ stream_a, stream_b, participants, context, overlaps, tensions, synthesis, safeguards, ctx, audience, style, tone }) => [
    'Apply Ganma (knowledge confluence).',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    context && `Setting:\n${context}`,
    participants && (
      'Participants / voices:\n' +
      String(participants).split(/\n+/).map((p,i)=>`${i+1}. ${p}`).join('\n')
    ),
    stream_a && `Stream A:\n${stream_a}`,
    stream_b && `Stream B:\n${stream_b}`,
    overlaps && `Shared Resonances:\n${overlaps}`,
    tensions && `Tensions / Incommensurables:\n${tensions}`,
    synthesis && `Confluence (emergent insight):\n${synthesis}`,
    safeguards && `Safeguards / Protocols:\n${safeguards}`,
    'Return: A reflective summary that respects both streams, honors differences, and proposes shared next steps without erasing cultural boundaries.\nClose with: Reciprocity and future responsibilities (who continues the dialogue, how, under what protocols).'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "ganma — knowledge confluence (yolŋu) ganma-knowledge-confluence ganma is a yolŋu metaphor describing the meeting of fresh water and salt water, used as a way to think about knowledge confluence. each stream keeps its identity while creating new qualities in the mixing. it is a practice of holding difference, dialogue, and shared emergence without erasing cultural integrity. use this when exploring two or more knowledge systems or traditions. map where they overlap, where they remain distinct, and what new insights emerge at the confluence. always note cultural protocols, boundaries, and responsibilities. type:framework use:healing use:pattern level:beginner use:workshop phase:explore level:advanced use:brainstorming reasoning cultural-frameworks strategy psychology teaching ethics explore how indigenous and western (or other) knowledge systems meet without collapsing differences. document shared insights while respecting boundaries and incommensurables. design confluence processes in education, ecology, health, or policy contexts. facilitate dialogue where multiple knowledge traditions are present. reflect on safeguards to prevent erasure or domination of one knowledge stream by another. teach knowledge plurality in classrooms and workshops. support co-research between indigenous and non-indigenous partners. inform policy development with cultural legitimacy and shared authority. guide environmental stewardship that respects both country and science. center yolŋu framing: fresh water and salt water mixing in a lagoon; avoid reducing this to “integration” or “assimilation.” surface tensions as valuable knowledge rather than as obstacles. respect that some knowledge may be restricted, sacred, or not shareable — note boundaries clearly. emphasize reciprocity, responsibility, and ongoing protocols, not just outcomes. name who is speaking and whose voices are missing. include relationships to land, ancestors, and community as part of the streams. recognize that confluence is often slow and relational — not a single event. knowledge stream a knowledge stream b participants / voices involved (optional) context / setting (optional) shared resonances / overlaps tensions / incommensurables confluence (emergent insight) safeguards / protocols"
      }
    },

    {
      id: "goal_breakdown",
      slug: "goal-breakdown-decomposition",
      label: "Goal Breakdown (Prompt/Question Decomposition)",
      kind: "technique",
      categories: [
        "planning",
        "prompt-development-techniques"
      ],
      tags: [
        "use:pattern",
        "topic:decomposition",
        "level:beginner",
        "use:brainstorming",
        "use:task-brief"
      ],
      use_cases: [
        "break a complex goal into micro-tasks",
        "turn a vague prompt into concrete sub-questions",
        "plan-first before execution",
          "help me break this project into steps",
  "what’s the first thing I should do",
  "split this into smaller tasks",
  "turn this vague idea into a checklist",
  "how do I start tackling this big goal",
  "map this out step by step",
  "make this less overwhelming",
     "break down my goal",
      "turn this into steps",
      "make a step-by-step plan",
      "what’s the first step",
      "list sub-tasks",
      "decompose the problem",
      "turn vague idea into tasks",
      "numbered outline please",
      "assumptions and unknowns",
      "plan before doing",
      "clarify scope and steps",
      "smallest next action",
      "split into milestones",
      "map dependencies",
      "what can run in parallel",
      "timebox each step",
      "checkpoints and deliverables",
      "convert goal to questions",
      "risk/unknowns list",
      "who does what by when"
      ],
      boosters: [
        "Show a numbered hierarchy (1, 1.1, 1.1.1…) before any deliverable.",
        "Flag assumptions and unknowns as explicit sub-questions.",
        "Suggest the smallest next action at the end."
      ],
      definition: "Break a complex goal/prompt into smaller, verifiable sub-tasks and sub-questions before doing the work.",
      help: "Enter a complex goal or prompt. The model will decompose it into a deep, numbered hierarchy and propose a minimal execution plan.",
      fields: [
        {
          label: "Goal / complex task",
          desc: "The overarching task or question to decompose.",
          key: "main",
          ph: "e.g., Build a go-to-market plan for a B2B SaaS in 6 weeks.",
          type: "textarea"
        },
        {
          label: "Do's (must do)",
          desc: "Positive guardrails.",
          key: "dos",
          ph: "Use numbered hierarchy; identify dependencies.",
          type: "textarea"
        },
        {
          label: "Don'ts / constraints",
          desc: "Limits to respect.",
          key: "donts",
          ph: "No speculative claims; ≤500 words in plan.",
          type: "textarea"
        }
      ],
      template: ({ main, dos, donts, ctx, audience, style, tone }) => [
    'Perform prompt/question decomposition for the goal into micro-tasks and sub-questions.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    main && `Goal/complex task: ${main}`,
    dos && `Do:\n${dos}`,
    donts && `Don\'t:\n${donts}`,
    'Output format:\n1) Decomposition (numbered hierarchy)\n2) Minimal execution plan\n3) Assumptions & unknowns\n4) Next action'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "goal breakdown (prompt/question decomposition) goal-breakdown-decomposition break a complex goal/prompt into smaller, verifiable sub-tasks and sub-questions before doing the work. enter a complex goal or prompt. the model will decompose it into a deep, numbered hierarchy and propose a minimal execution plan. use:pattern topic:decomposition level:beginner use:brainstorming use:task-brief planning prompt-development-techniques break a complex goal into micro-tasks turn a vague prompt into concrete sub-questions plan-first before execution show a numbered hierarchy (1, 1.1, 1.1.1…) before any deliverable. flag assumptions and unknowns as explicit sub-questions. suggest the smallest next action at the end. goal / complex task do's (must do) don'ts / constraints"
      }
    },

    {
      id: "goal_composition",
      slug: "goal-composition",
      label: "Goal Composition (Prompt/Question Composition)",
      kind: "technique",
      categories: [
        "planning",
        "prompt-development-techniques"
      ],
      tags: [
        "use:pattern",
        "topic:decomposition",
        "use:goals",
        "level:beginner",
        "use:planning"
      ],
      use_cases: [
        "compose a broader goal from many sub-prompts/actions",
        "derive an objective and plan from granular tasks",
        "summarize scattered asks into one coherent brief",
          "combine these tasks into one plan",
  "make all these requests one clear goal",
  "bring scattered notes into one objective",
  "merge these steps into a bigger picture",
  "turn this checklist into a strategy",
  "summarize my asks into a single brief",
  "align small tasks to one big purpose",
        "combine tasks into a plan",
      "pull the pieces together",
      "compose one big goal",
      "roll up sub-goals",
      "make one brief from notes",
      "cluster similar tasks",
      "set success criteria",
      "pick a north-star metric",
      "summarize scattered asks",
      "merge subprojects",
      "create one roadmap",
      "align goals into one",
      "unify requirements",
      "turn tasks into objective",
      "single plan from many",
      "clean executive summary",
      "make one clear ask",
      "finalize scope",
      "coherent plan please",
      "compose goals and KPIs",
        "combine these tasks into one plan",
  "make all these requests one clear goal",
  "bring scattered notes into one objective",
  "merge these steps into a bigger picture",
  "turn this checklist into a strategy",
  "summarize my asks into a single brief",
  "align small tasks to one big purpose"
      ],
      boosters: [
        "Cluster similar actions before composing.",
        "State explicit success criteria for the composed goal.",
        "End with one “north-star” metric."
      ],
      definition: "Synthesize a broader objective from a list of sub-prompts/actions, then propose a coherent plan.",
      help: "List sub-prompts/actions one per line. Optionally add an intended direction for the composed goal.",
      fields: [
        {
          label: "Intended direction (optional)",
          desc: "Theme or constraints to guide composition.",
          key: "direction",
          ph: "e.g., Emphasize ROI and low lift.",
          type: "textarea"
        },
        {
          label: "Sub-prompts / actions (one per line)",
          desc: "Granular items to synthesize into a broader goal.",
          key: "actions",
          ph: "Draft FAQ page…\nInterview 5 users…\nDefine ICP…",
          type: "textarea"
        },
        {
          label: "Do's (must do)",
          desc: "Positive guardrails.",
          key: "dos",
          ph: "Quantify effort; produce a one-paragraph composed goal.",
          type: "textarea"
        },
        {
          label: "Don'ts / constraints",
          desc: "Limits to respect.",
          key: "donts",
          ph: "No jargon; ≤300 words total.",
          type: "textarea"
        }
      ],
      template: ({ direction, actions, dos, donts, ctx, audience, style, tone }) => [
    'Compose a broader goal from specific sub-prompts/actions, then produce a concise plan.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    direction && `Intended direction: ${direction}`,
    actions && (
      'Inputs (actions):\n' + String(actions)
        .split(/\n+/).map(s=>s.trim()).filter(Boolean)
        .map((a,i)=> `${i+1}. ${a}`).join('\n')
    ),
    dos && `Do:\n${dos}`,
    donts && `Don\'t:\n${donts}`,
    'Output:\n1) Composed goal (1 paragraph)\n2) 3–5 key objectives\n3) High-level plan by objective\n4) Single next action'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "goal composition (prompt/question composition) goal-composition synthesize a broader objective from a list of sub-prompts/actions, then propose a coherent plan. list sub-prompts/actions one per line. optionally add an intended direction for the composed goal. use:pattern topic:decomposition use:goals level:beginner use:planning planning prompt-development-techniques compose a broader goal from many sub-prompts/actions derive an objective and plan from granular tasks summarize scattered asks into one coherent brief cluster similar actions before composing. state explicit success criteria for the composed goal. end with one “north-star” metric. intended direction (optional) sub-prompts / actions (one per line) do's (must do) don'ts / constraints"
      }
    },

    {
      id: "goal_prompting",
      slug: "goal-prompting",
      label: "Goal Prompting",
      kind: "technique",
      categories: [
        "planning",
        "prompt-development-techniques"
      ],
      tags: [
        "use:pattern",
        "use:goals",
        "level:beginner",
        "use:brainstorming",
        "use:planning"
      ],
      use_cases: [
        "state a primary goal and supporting goals",
        "ask the model to prioritize or plan",
        "structure outputs around explicit objectives",
              "set goals for this",
      "goal-based prompt",
      "prioritize my goals",
      "organize output by goals",
      "numbered plan by goal",
      "risks per goal",
      "next action per goal",
      "goal tree outline",
      "tie tasks to goals",
      "goal-first roadmap",
      "rank goals by impact",
      "dependencies between goals",
      "weekly plan by goals",
      "SMART goals list",
      "OKR-style goals",
      "what to do to hit goal",
      "goal summary and next step",
      "goals then steps",
      "goal → plan converter",
      "measure each goal",
        "set one main goal and side goals",
  "organize my priorities",
  "help me write clear objectives",
  "make my request goal-focused",
  "turn this into a goal-oriented plan",
  "what should I focus on first",
  "show me supporting goals for my main one"
      ],
      boosters: [
        "Ask for a numbered plan tied to each goal.",
        "Request a brief risk or dependency note per goal.",
        "End with a next-action recommendation."
      ],
      definition: "Center the request on a primary goal, with optional supporting goals listed separately.",
      help: "Write the main brief/goal, then list additional goals one per line, plus do/don’t guardrails.",
      fields: [
        {
          label: "Primary goal (brief)",
          desc: "One clear objective in your own words.",
          key: "main",
          ph: "e.g., Launch a newsletter in 4 weeks.",
          type: "textarea"
        },
        {
          label: "Additional goals (one per line)",
          desc: "List zero or more supporting goals.",
          key: "goals",
          ph: "Audience growth to 1k…\n≥40% open rate…\nMonetize by week 8…",
          type: "textarea"
        },
        {
          label: "Do's (must do)",
          desc: "Positive constraints.",
          key: "dos",
          ph: "Quantify time/effort; provide a week-by-week outline.",
          type: "textarea"
        },
        {
          label: "Don'ts / constraints",
          desc: "Limits or exclusions.",
          key: "donts",
          ph: "Don't exceed 700 words; avoid paid tools.",
          type: "textarea"
        }
      ],
      template: ({ main, goals, dos, donts, ctx, audience, style, tone }) => [
    'Focus on explicit objectives and produce a concise, actionable plan.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    main && `Primary goal: ${main}`,
    goals && (
      'Additional goals:\n' + String(goals)
        .split(/\n+/).map(s=>s.trim()).filter(Boolean)
        .map((g,i)=> `${i+1}. ${g}`)
        .join('\n')
    ),
    dos && `Do:\n${dos}`,
    donts && `Don't:\n${donts}`,
    'Provide a short plan tied to each goal, then a single next action.'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "goal prompting goal-prompting center the request on a primary goal, with optional supporting goals listed separately. write the main brief/goal, then list additional goals one per line, plus do/don’t guardrails. use:pattern use:goals level:beginner use:brainstorming use:planning planning prompt-development-techniques state a primary goal and supporting goals ask the model to prioritize or plan structure outputs around explicit objectives ask for a numbered plan tied to each goal. request a brief risk or dependency note per goal. end with a next-action recommendation. primary goal (brief) additional goals (one per line) do's (must do) don'ts / constraints"
      }
    },

    {
      id: "golden",
      slug: "golden-circle-framework",
      label: "Golden Circle — Why · How · What · Mission",
      kind: "strategy",
      categories: [
        "storytelling-frameworks",
        "cultural-frameworks",
        "strategy",
        "brainstorming",
        "prompt-development-techniques",
        "planning"
      ],
      tags: [
        "type:framework",
        "use:goals",
        "use:healing",
        "use:decision-making",
        "topic:values",
        "use:discover",
        "level:beginner",
        "use:planning",
        "use:communication",
        "use:pattern",
        "use:storytelling",
         "use:purpose",
         "use:mission",
         "use:why",
         "use:community"
      ],
      use_cases: [
        "Craft an authentic brand or organizational purpose statement.",
        "Align team or community around shared mission and values.",
        "Shape a nonprofit’s narrative for funders and community members.",
        "Frame an individual’s life or career direction with clarity.",
        "Design communication that respects cultural diversity and shared well-being.",
        "Craft leadership speeches or keynotes that inspire through purpose.",
        "Develop culture documents or onboarding material for new employees.",
        "Shape personal mission statements or life purpose frameworks.",
          "find my why",
  "explain my purpose simply",
  "write a mission for my project",
  "align my team around one vision",
  "craft a story that inspires",
  "make a personal purpose statement",
  "show why before how and what",
  "turn my idea into a mission-driven pitch",
  "frame my career direction",
  "communicate values clearly",
      "why how what",
      "write mission statement",
      "brand purpose line",
      "start with why pitch",
      "why we exist",
      "values to mission",
      "purpose-led messaging",
      "about page copy",
      "simple purpose slide",
      "fundraising narrative",
      "align team on purpose",
      "career purpose clarity",
      "product vision story",
      "mission vs vision",
      "keynote opener (why)",
      "culture doc opener",
      "why customers should care",
      "one-line purpose",
      "purpose → how → what",
      "finding community purpose"
      ],
      boosters: [
        "Lead with *Why* — begin with belief or cause, not with the product.",
        "Keep each section clear, 2–3 sentences max; avoid jargon.",
        "Mission should emphasize contribution to others, not just self-gain.",
        "End with a one-line *Because…* or *So that…* summary linking back to well-being.",
        "Check coherence: the *What* must clearly express the *How*, and both must embody the *Why*.",
        "Test resonance with the intended audience — would they feel inspired and aligned?",
        "Use culturally respectful and inclusive language; avoid centering only profit or self-interest."
      ],
      definition: "A purpose-first communication model (popularized by Simon Sinek) that moves from belief (Why) to methods (How) to concrete offerings (What). This adaptation adds Mission — a clear, outward-facing purpose or cause that ties personal or organizational actions to broader well-being.",
      help: "Use this scaffold to clarify and communicate purpose. Begin with Mission and Why (belief), then How (principles), then What (offerings). The output includes a coherence check and an inspiring summary line.",
      fields: [
        {
          label: "Mission (guiding purpose/goal)",
          desc: "A clear purpose or larger cause that directs action and emphasizes well-being beyond the self.",
          key: "mission",
          ph: "e.g., To ensure every child has access to clean drinking water.",
          type: "textarea"
        },
        {
          label: "Why (belief/purpose)",
          desc: "The underlying belief or cause driving your work.",
          key: "why",
          ph: "e.g., Everyone deserves privacy by default.",
          type: "textarea"
        },
        {
          label: "How (principles/approach)",
          desc: "The unique values, methods, or approach that bring the purpose to life.",
          key: "how",
          ph: "e.g., Strong encryption and zero-knowledge design.",
          type: "textarea"
        },
        {
          label: "What (offerings/actions)",
          desc: "The tangible actions, services, or products that express the Why and Mission.",
          key: "what",
          ph: "e.g., Encrypted email; secure file sharing; advocacy workshops.",
          type: "textarea"
        },
        {
          label: "Audience / Beneficiaries (optional)",
          desc: "Who this mission and message is meant to serve or inspire.",
          key: "aud_beneficiaries",
          ph: "e.g., Rural communities, students, nonprofit partners.",
          type: "textarea"
        },
        {
          label: "Impact / Outcomes (optional)",
          desc: "What positive change or effect should result if the mission succeeds.",
          key: "impact",
          ph: "e.g., Reduced child mortality; stronger community trust.",
          type: "textarea"
        }
      ],
      template: ({ mission, why, how, what, aud_beneficiaries, impact, ctx, audience, style, tone }) => [
    'Craft a message using the Golden Circle (adapted with Mission).',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    mission && `Mission: ${mission}`,
    why && `Why: ${why}`,
    how && `How: ${how}`,
    what && `What: ${what}`,
    aud_beneficiaries && `Beneficiaries: ${aud_beneficiaries}`,
    impact && `Impact/Outcomes: ${impact}`,
    '---',
    'Output:',
    '1) Golden Circle narrative (Why → How → What → Mission).',
    '2) Coherence check: Do all layers align and reinforce each other?',
    '3) Audience/beneficiary resonance check.',
    '4) One-line summary linking back to broader contribution (“Because/So that…”).',
    '5) Vision impact statement describing the change this mission creates.'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "golden circle — why · how · what · mission golden-circle-framework a purpose-first communication model (popularized by simon sinek) that moves from belief (why) to methods (how) to concrete offerings (what). this adaptation adds mission — a clear, outward-facing purpose or cause that ties personal or organizational actions to broader well-being. use this scaffold to clarify and communicate purpose. begin with mission and why (belief), then how (principles), then what (offerings). the output includes a coherence check and an inspiring summary line. type:framework use:goals use:healing use:decision-making topic:values use:discover level:beginner use:planning use:communication use:pattern use:storytelling storytelling-frameworks cultural-frameworks strategy brainstorming prompt-development-techniques planning craft an authentic brand or organizational purpose statement. align team or community around shared mission and values. shape a nonprofit’s narrative for funders and community members. frame an individual’s life or career direction with clarity. design communication that respects cultural diversity and shared well-being. craft leadership speeches or keynotes that inspire through purpose. develop culture documents or onboarding material for new employees. shape personal mission statements or life purpose frameworks. lead with *why* — begin with belief or cause, not with the product. keep each section clear, 2–3 sentences max; avoid jargon. mission should emphasize contribution to others, not just self-gain. end with a one-line *because…* or *so that…* summary linking back to well-being. check coherence: the *what* must clearly express the *how*, and both must embody the *why*. test resonance with the intended audience — would they feel inspired and aligned? use culturally respectful and inclusive language; avoid centering only profit or self-interest. mission (guiding purpose/goal) why (belief/purpose) how (principles/approach) what (offerings/actions) audience / beneficiaries (optional) impact / outcomes (optional)"
      }
    },

    {
      id: "grow",
      slug: "grow-coaching-model",
      label: "GROW — Goal · Reality · Options · Way Forward",
      kind: "strategy",
      categories: [
        "critical-thinking",
        "planning",
        "self-reflection",
        "brainstorming",
        "prompt-development-techniques",
        "storytelling-frameworks"
      ],
      tags: [
        "type:framework",
        "use:goals",
        "use:decision-making",
        "use:brainstorming",
        "use:pattern",
        "level:beginner",
        "use:coding",
        "use:problem-framing"
      ],
      use_cases: [
        "Structure a coaching or mentoring conversation with clarity.",
        "Set personal or team goals with grounded reality-checks and next steps.",
        "Explore different paths forward by weighing multiple options.",
        "Support reflective practice, journaling, or therapy-style goal work.",
        "Facilitate group planning sessions where alignment is needed.",
        "Use in career coaching and performance reviews.",
        "Guide conflict resolution or mediation conversations.",
        "Provide structure for group coaching or community workshops.",
              "set a clear goal",
      "reality check my plan",
      "what options do I have",
      "choose a way forward",
      "coach me through this",
      "turn goal into actions",
      "break it into steps",
      "what’s realistic now",
      "pick the best option",
      "define success",
      "make a weekly plan",
      "remove blockers",
      "timeline and milestones",
      "risks and dependencies",
      "accountability plan",
      "next step today",
      "goal review template",
      "prepare for coaching",
      "stay on track",
      "commit to one action",
        "help me set priorities",
  "turn this into a coaching plan",
  "make my goal specific",
  "check if this goal is realistic",
  "what’s blocking me",
  "plan the next 30 days",
  "help me track progress",
  "map goal to daily habits",
  "review my goals weekly",
  "what’s the big picture here"
      ],
      boosters: [
        "Offer at least 3 distinct Options, including unconventional or stretch ones, before narrowing down.",
        "Encourage a specific, time-bound commitment in the Way Forward step (who, what, when).",
        "If relevant, include collective or community goals, not just individual ones (to reduce Western individualism bias).",
        "Highlight potential barriers and how the plan accounts for them.",
        "Use scaling questions (1–10) to assess motivation or readiness.",
        "Encourage users to set accountability partners (peer, mentor, community)."
      ],
      definition: "A coaching and decision-making framework that guides reflection and action by moving through Goal (what you want), Reality (where you are now), Options (what you could do), and Way Forward (what you will do).",
      help: "Provide the goal and current reality. You can also suggest options, barriers, motivation, or tentative actions if you have them. The model will expand with realistic strategies, diverse possibilities, and clear commitments.",
      fields: [
        {
          label: "Goal",
          desc: "The outcome or aspiration to achieve. Can be short-term (session), medium-term (project), or long-term (life/career).",
          key: "goal",
          ph: "e.g., Improve my public speaking confidence for work presentations.",
          type: "textarea"
        },
        {
          label: "Reality (current situation)",
          desc: "Facts, context, strengths, obstacles, and constraints related to the goal.",
          key: "reality",
          ph: "e.g., I get nervous, my last presentation had pacing issues and I avoided eye contact.",
          type: "textarea"
        },
        {
          label: "Motivation (optional)",
          desc: "Why this goal matters to you. Optionally include a 1–10 readiness rating.",
          key: "motivation",
          ph: "e.g., This would help me grow at work and feel more confident. Readiness: 7/10.",
          type: "textarea"
        },
        {
          label: "Options (ideas, one per line)",
          desc: "Possible strategies to reach the goal. Brainstorm freely (no judgment, even “wild” ideas welcome).",
          key: "options",
          ph: "Join a public speaking group...\nPractice with a friend...\nWatch online tutorials...",
          type: "textarea"
        },
        {
          label: "Barriers (optional)",
          desc: "Anticipated challenges or risks, and potential strategies to handle them.",
          key: "barriers",
          ph: "e.g., Lack of time → schedule shorter daily practices.",
          type: "textarea"
        },
        {
          label: "Way Forward (commitment & accountability)",
          desc: "The chosen step(s) you commit to taking, with timeline and accountability structures.",
          key: "will",
          ph: "e.g., I will enroll in a Toastmasters club and ask my colleague to check in monthly.",
          type: "textarea"
        }
      ],
      template: ({ goal, reality, motivation, options, barriers, will, ctx, style, tone, audience }) => [
    'Apply the GROW coaching model to structure reflection and action.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    goal && `Goal: ${goal}`,
    reality && (`Reality:\n${reality}`),
    motivation && (`Motivation:\n${motivation}`),
    options && (
      'Options:\n' + String(options).split(/\n+/).map(s => s.trim()).filter(Boolean).map((opt,i) => `${i+1}. ${opt}`).join('\n')
    ),
    barriers && (`Barriers:\n${barriers}`),
    will && (`Way Forward (commitment & accountability):\n${will}`),
    '---',
    'Output:',
    '1) Restate the Goal clearly.',
    '2) Summarize Reality factors (context, strengths, challenges).',
    '3) Expand on Options (≥3, diverse, including stretch ideas).',
    '4) Note Motivation/readiness (if given).',
    '5) Anticipate and address Barriers (if given).',
    '6) Define Way Forward with commitments, timelines, and accountability structures.',
    '7) Reflection question: What support or next check-in will help sustain progress?'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "grow — goal · reality · options · way forward grow-coaching-model a coaching and decision-making framework that guides reflection and action by moving through goal (what you want), reality (where you are now), options (what you could do), and way forward (what you will do). provide the goal and current reality. you can also suggest options, barriers, motivation, or tentative actions if you have them. the model will expand with realistic strategies, diverse possibilities, and clear commitments. type:framework use:goals use:decision-making use:brainstorming use:pattern level:beginner use:coding use:problem-framing critical-thinking planning self-reflection brainstorming prompt-development-techniques storytelling-frameworks structure a coaching or mentoring conversation with clarity. set personal or team goals with grounded reality-checks and next steps. explore different paths forward by weighing multiple options. support reflective practice, journaling, or therapy-style goal work. facilitate group planning sessions where alignment is needed. use in career coaching and performance reviews. guide conflict resolution or mediation conversations. provide structure for group coaching or community workshops. offer at least 3 distinct options, including unconventional or stretch ones, before narrowing down. encourage a specific, time-bound commitment in the way forward step (who, what, when). if relevant, include collective or community goals, not just individual ones (to reduce western individualism bias). highlight potential barriers and how the plan accounts for them. use scaling questions (1–10) to assess motivation or readiness. encourage users to set accountability partners (peer, mentor, community). goal reality (current situation) motivation (optional) options (ideas, one per line) barriers (optional) way forward (commitment & accountability)"
      }
    },

    {
      id: "head_heart_gut",
      slug: "head-heart-gut-decision",
      label: "Head–Heart–Gut — Logic · Emotion · Instinct (Rational · Emotional · Instinctual check)",
      kind: "framework",
      categories: [
        "decision",
        "self-reflection",
        "psychology",
        "brainstorming",
        "critical-thinking",
        "ethics"
      ],
      tags: [
        "type:framework",
        "use:decision-making",
        "topic:prompting",
        "topic:decomposition",
        "topic:values",
        "level:beginner",
        "use:goals",
        "use:pattern",
        "topic:future-self",
        "level:intermediate"
      ],
      use_cases: [
        "Make well-rounded decisions by considering logic, feelings, and intuition.",
        "Resolve internal conflict by aligning thoughts, values, and instincts.",
        "Help in coaching or mentoring conversations to surface hidden perspectives.",
        "Evaluate leadership choices, ensuring balance of rational, ethical, and instinctual input.",
        "Support culturally inclusive decision-making by recognizing multiple ways of knowing.",
        "Guide journaling or therapy practices that integrate head/heart/gut awareness.",
        "Facilitate group or organizational choices with a balanced lens.",
           "my head vs my heart",
      "trust my gut or data",
      "balance logic and feelings",
      "sense check this choice",
      "is this fear or fact",
      "values fit check",
      "whole-body yes or no",
      "intuition check",
      "logic check",
      "emotion check",
      "reduce decision regret",
      "get unstuck on a choice",
      "journal head vs heart",
      "sleep on it or act now",
      "ethical lens on choice",
      "name what I feel",
      "listen to my instincts",
      "align mind and body",
      "what does my body say",
      "choose with balance",
        "my logic says yes but my heart says no",
  "gut says one thing brain says another",
  "help me balance reason and feelings",
  "am I ignoring my intuition",
  "check decision with all three lenses",
  "when should I trust data vs instinct",
  "how do I know if it feels right",
  "test this choice with head heart gut",
  "emotions clouding judgment?",
  "align decision with my values"
      ],
      boosters: [
        "Phrase each perspective in the first person (e.g., “My Head says…”).",
        "Acknowledge differences: it’s normal if Head, Heart, and Gut say different things.",
        "If one perspective dominates, consciously give voice to the quieter one (e.g., ask “Heart, what do you feel about this?”).",
        "If one perspective (e.g., Gut) flags a concern the others don’t, take it seriously and investigate that aspect further.",
        "Use a 1–10 scale to gauge how strongly each voice feels.",
        "Invite metaphors (e.g., Heart as a character, Gut as an animal guide) to make perspectives vivid.",
        "Note one unresolved tension and how you’ll monitor it moving forward.",
        "Respect cultural differences in how Head, Heart, or Gut are prioritized."
      ],
      definition: "A decision-making technique that checks alignment across three inner intelligences: the Head (logic/reason), the Heart (emotions/values), and the Gut (instinct/intuition). Considering all three creates choices that are more balanced, authentic, and sustainable.",
      help: "State the decision or dilemma. Optionally add context, values, or risks. The model will articulate perspectives from your Head (rational analysis), Heart (emotional standpoint), and Gut (instinctual response), then help integrate them into a final recommendation.",
      fields: [
        {
          label: "Decision or dilemma",
          desc: "The choice, challenge, or question you’re facing.",
          key: "decision",
          ph: "e.g., Should I accept a new job offer in another city?",
          type: "textarea"
        },
        {
          label: "Context (optional)",
          desc: "The situation or relationships that make this decision meaningful.",
          key: "context",
          ph: "e.g., Family considerations, company culture, long-term career goals.",
          type: "textarea"
        },
        {
          label: "Values to honor (optional)",
          desc: "Personal or shared values you want to uphold.",
          key: "values",
          ph: "e.g., Integrity, growth, community, balance.",
          type: "textarea"
        },
        {
          label: "Risks / concerns (optional)",
          desc: "Possible pitfalls or red flags you’re aware of.",
          key: "risks",
          ph: "e.g., Financial instability, burnout risk, strained relationships.",
          type: "textarea"
        }
      ],
      template: ({ decision, context, values, risks, ctx, audience, style, tone }) => [
    'Run a Head–Heart–Gut decision check.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    decision && `Decision:\n${decision}`,
    context && `Context:\n${context}`,
    values && `Values:\n${values}`,
    risks && `Risks/Concerns:\n${risks}`,
    '---',
    'Output:',
    '1) Head – Rational thoughts (facts, pros/cons, logical analysis).',
    '2) Heart – Emotional response and values (hopes, fears, desires, ethical concerns).',
    '3) Gut – Instincts or intuitive hunches (body sense, unease/yes-feel, pattern recognition).',
    '4) Integration – Reconcile the three, highlight alignments and tensions, and propose a balanced next step.',
    '5) Alignment check: Are Head, Heart, and Gut reasonably in harmony? If not, what needs more attention?',
    '6) Commitment: Define one immediate action or decision informed by the integration.'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "head–heart–gut — logic · emotion · instinct (rational · emotional · instinctual check) head-heart-gut-decision a decision-making technique that checks alignment across three inner intelligences: the head (logic/reason), the heart (emotions/values), and the gut (instinct/intuition). considering all three creates choices that are more balanced, authentic, and sustainable. state the decision or dilemma. optionally add context, values, or risks. the model will articulate perspectives from your head (rational analysis), heart (emotional standpoint), and gut (instinctual response), then help integrate them into a final recommendation. type:framework use:decision-making topic:prompting topic:decomposition topic:values level:beginner use:goals use:pattern topic:future-self level:intermediate decision self-reflection psychology brainstorming critical-thinking ethics make well-rounded decisions by considering logic, feelings, and intuition. resolve internal conflict by aligning thoughts, values, and instincts. help in coaching or mentoring conversations to surface hidden perspectives. evaluate leadership choices, ensuring balance of rational, ethical, and instinctual input. support culturally inclusive decision-making by recognizing multiple ways of knowing. guide journaling or therapy practices that integrate head/heart/gut awareness. facilitate group or organizational choices with a balanced lens. phrase each perspective in the first person (e.g., “my head says…”). acknowledge differences: it’s normal if head, heart, and gut say different things. if one perspective dominates, consciously give voice to the quieter one (e.g., ask “heart, what do you feel about this?”). if one perspective (e.g., gut) flags a concern the others don’t, take it seriously and investigate that aspect further. use a 1–10 scale to gauge how strongly each voice feels. invite metaphors (e.g., heart as a character, gut as an animal guide) to make perspectives vivid. note one unresolved tension and how you’ll monitor it moving forward. respect cultural differences in how head, heart, or gut are prioritized. decision or dilemma context (optional) values to honor (optional) risks / concerns (optional)"
      }
    },

    {
      id: "heros_journey",
      slug: "heros-journey-narrative",
      label: "Hero’s Journey — Departure · Initiation · Return",
      kind: "framework",
      categories: [
        "storytelling-frameworks",
        "writing",
        "cultural-frameworks",
        "design"
      ],
      tags: [
        "type:framework",
        "use:storytelling",
        "phase:explore",
        "topic:future-self",
        "phase:compose",
        "level:intermediate",
        "topic:prompting",
        "use:goals",
        "use:pattern",
        "use:copywriting"
      ],
      use_cases: [
        "Generate mythic or epic story outlines.",
        "Develop a character’s transformative arc.",
        "Design quests and NPC arcs for tabletop or video games.",
        "Map personal life experiences as a hero’s journey.",
        "Storyboard or create beat sheets for screenwriting or novels.",
        "Frame customer or brand storytelling as a Hero’s Journey.",
          "outline my story like a hero’s journey",
  "life as a quest map",
  "turn challenge into adventure",
  "personal transformation arc",
  "brand story hero format",
  "campaign arc builder",
  "journey map for my speech",
  "customer as hero story",
  "my startup as a journey",
  "epic structure for my novel",
      "hero’s journey outline",
      "plot a character arc",
      "make a quest outline",
      "story beats like movies",
      "map my personal journey",
      "brand story template",
      "D&D campaign arc",
      "call to adventure idea",
      "mentor and trials list",
      "ordeal and reward",
      "return with the elixir",
      "beat sheet generator",
      "from ordinary to special world",
      "turn setback into growth",
      "epic tale structure",
      "customer journey as story",
      "speech as a journey",
      "backstory arc builder",
      "mythic outline fast",
      "transformational arc steps",
      "writing a fantasy novel",
      "writing a creative story",
      "need help planning a TTRPG",
      "roleplaying game",
      "high-fantasy writing",
      "story writing"
      ],
      boosters: [
        "Ensure the hero undergoes meaningful inner and outer transformation.",
        "Adapt stages flexibly — not every story requires all 12 or 17.",
        "Include archetypes (Mentor, Shadow, Ally, Trickster) for richness.",
        "Frame the Return as a gift to the community, not just the self.",
        "Tie the inner journey to the outer — growth mirrors trials.",
        "Use symbols and motifs for thematic resonance.",
        "Explore diverse cultural hero’s journey models, not just Campbell’s.",
        "If any field (Hero, Quest, Nemesis, Setting, Transformation, Gift, or Theme) is missing, suggest ideas, ask guiding questions, or introduce creative constraints to spark inspiration."
      ],
      definition: "A narrative pattern (monomyth) where a hero leaves their ordinary world, faces trials and transformation, and returns with wisdom or a gift. Based on Joseph Campbell’s work but adapted across creative traditions.",
      help: "Provide details about the hero, their world, quest, nemesis, and optional archetypes. The model will outline a story in Departure, Initiation, and Return phases, weaving in transformation, motifs, and a community-oriented Gift.",
      fields: [
        {
          label: "Target Audience Persona",
          autofill: "persona->inline",
          desc: "Who this story is for. Use personas (e.g., child reader, RPG gamer, film audience).",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "audience_persona",
          ph: "Start typing to pick or create personas for the target audience.",
          type: "repeater"
        },
        {
          label: "Hero / Protagonist",
          desc: "The main character (name, role, traits, flaws, backstory, or hidden potential).",
          key: "hero",
          ph: "e.g., Aria, a cautious village girl with secret magic powers",
          type: "textarea"
        },
        {
          label: "Hero Persona",
          autofill: "persona->inline",
          desc: "Attach a persona profile to your hero (e.g., archetypal roles, personality models).",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "hero_persona",
          ph: "Search and attach full persona profiles",
          type: "repeater"
        },
        {
          label: "Quest / Goal",
          desc: "The external mission and internal challenge the hero must face.",
          key: "quest",
          ph: "e.g., Save her village (outer) and learn self-trust (inner).",
          type: "textarea"
        },
        {
          label: "Antagonist / Main Challenge",
          desc: "The villain, force, or inner conflict opposing the hero.",
          key: "nemesis",
          ph: "e.g., Evil sorcerer / Aria’s own fear of power",
          type: "textarea"
        },
        {
          label: "Nemesis Persona",
          autofill: "persona->inline",
          desc: "Attach a persona profile to your nemesis or antagonist.",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "nemesis_persona",
          ph: "Search and attach full persona profiles",
          type: "repeater"
        },
        {
          label: "Mentor / Guide (optional)",
          desc: "Wise or flawed figure who offers guidance or tools.",
          key: "mentor",
          ph: "e.g., An eccentric old mage who teaches her control",
          type: "textarea"
        },
        {
          label: "Mentor Persona",
          autofill: "persona->inline",
          desc: "Attach a persona profile to your mentor or guide figure.",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "mentor_persona",
          ph: "Search and attach full persona profiles",
          type: "repeater"
        },
        {
          label: "Allies / Companions (optional)",
          desc: "Friends, helpers, or fellow travelers who support the hero.",
          key: "allies",
          ph: "e.g., Loyal blacksmith, mischievous fox spirit",
          type: "textarea"
        },
        {
          label: "Allies Persona",
          autofill: "persona->inline",
          desc: "Attach persona profiles for the hero’s allies or companions.",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "allies_persona",
          ph: "Search and attach full persona profiles",
          type: "repeater"
        },
        {
          label: "Shadow Aspect (optional)",
          desc: "The hero’s dark side, flaw, or an antagonist who reflects their inner struggle.",
          key: "shadow",
          ph: "e.g., Her fear of power, mirrored in the sorcerer",
          type: "textarea"
        },
        {
          label: "Shadow Persona",
          autofill: "persona->inline",
          desc: "Attach a persona profile to represent the shadow aspect.",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "shadow_persona",
          ph: "Search and attach full persona profiles",
          type: "repeater"
        },
        {
          label: "Setting Option 1",
          desc: "Choose a quick-start setting inspiration. Common genres and worlds included.",
          key: "setting1",
          options: [
            {
              label: "— Select common setting —",
              value: ""
            },
            "Fantasy world",
            "Medieval kingdom",
            "Magical school",
            "Underworld/afterlife",
            "Sci-fi future",
            "Cyberpunk metropolis",
            "Dystopian megacity",
            "Post-apocalyptic Earth",
            "Outer space",
            "Space opera galaxy",
            "Historical empire",
            "Ancient civilization",
            "Colonial frontier",
            "Mythic past",
            "Steampunk world",
            "Desert wasteland",
            "Frozen tundra",
            "Tropical island",
            "Jungle ruins",
            "Mountain stronghold",
            "Ocean voyage",
            "Modern city",
            "Small town",
            "Suburban neighborhood",
            "School campus",
            "Corporate office",
            "Hospital",
            "Haunted castle",
            "Abandoned asylum",
            "Cursed village",
            "Endless labyrinth",
            "Dreamscape",
            "Parallel dimension",
            "Virtual reality world",
            "Multiverse crossroads",
            "Lost island",
            "Wild west frontier",
            "Superhero metropolis",
            "Political intrigue court"
          ],
          ph: "Pick a common genre/world setting",
          type: "select"
        },
        {
          label: "Setting Option 2",
          desc: "Choose another setting option (same comprehensive list as Setting 1).",
          key: "setting2",
          options: [
            {
              label: "— Select common setting —",
              value: ""
            },
            "Fantasy world",
            "Medieval kingdom",
            "Magical school",
            "Underworld/afterlife",
            "Sci-fi future",
            "Cyberpunk metropolis",
            "Dystopian megacity",
            "Post-apocalyptic Earth",
            "Outer space",
            "Space opera galaxy",
            "Historical empire",
            "Ancient civilization",
            "Colonial frontier",
            "Mythic past",
            "Steampunk world",
            "Desert wasteland",
            "Frozen tundra",
            "Tropical island",
            "Jungle ruins",
            "Mountain stronghold",
            "Ocean voyage",
            "Modern city",
            "Small town",
            "Suburban neighborhood",
            "School campus",
            "Corporate office",
            "Hospital",
            "Haunted castle",
            "Abandoned asylum",
            "Cursed village",
            "Endless labyrinth",
            "Dreamscape",
            "Parallel dimension",
            "Virtual reality world",
            "Multiverse crossroads",
            "Lost island",
            "Wild west frontier",
            "Superhero metropolis",
            "Political intrigue court"
          ],
          ph: "Pick a secondary genre/world setting",
          type: "select"
        },
        {
          label: "World / Setting",
          desc: "Context and world rules (ordinary vs extraordinary).",
          key: "setting",
          ph: "e.g., A medieval land where magic is feared",
          type: "textarea"
        },
        {
          label: "Transformation",
          desc: "How the hero changes through the journey.",
          key: "transformation",
          ph: "e.g., From fearful girl to confident leader",
          type: "text"
        },
        {
          label: "Gift to the World / Community",
          desc: "What the hero brings back to benefit others.",
          key: "gift",
          ph: "e.g., Healing stone that lifts the curse",
          type: "text"
        },
        {
          label: "Theme Option 1",
          desc: "Choose a quick-start theme inspiration. Includes core, cultural, and mythic themes.",
          key: "theme1",
          options: [
            {
              label: "— Select common theme —",
              value: ""
            },
            "Good vs. Evil",
            "Love conquers all",
            "Coming of age",
            "Identity and self-discovery",
            "Sacrifice",
            "Freedom vs. control",
            "Power and corruption",
            "Justice vs. revenge",
            "Courage and resilience",
            "Friendship and loyalty",
            "Family bonds",
            "Mortality and legacy",
            "Tradition vs. progress",
            "Class struggle",
            "Colonialism and resistance",
            "Technology vs. humanity",
            "Alienation and belonging",
            "Gender and identity",
            "Environmental survival",
            "Hope in despair",
            "Chaos vs. order",
            "The hero within",
            "Redemption",
            "Fate vs. free will",
            "Illusion vs. reality",
            "The cost of ambition",
            "Knowledge and ignorance",
            "Transformation and rebirth",
            "The trickster’s lesson",
            "Balance and harmony",
            "The journey home"
          ],
          ph: "Pick a common theme in stories",
          type: "select"
        },
        {
          label: "Theme Option 2",
          desc: "Choose another theme option (same comprehensive list as Theme 1).",
          key: "theme2",
          options: [
            {
              label: "— Select common theme —",
              value: ""
            },
            "Good vs. Evil",
            "Love conquers all",
            "Coming of age",
            "Identity and self-discovery",
            "Sacrifice",
            "Freedom vs. control",
            "Power and corruption",
            "Justice vs. revenge",
            "Courage and resilience",
            "Friendship and loyalty",
            "Family bonds",
            "Mortality and legacy",
            "Tradition vs. progress",
            "Class struggle",
            "Colonialism and resistance",
            "Technology vs. humanity",
            "Alienation and belonging",
            "Gender and identity",
            "Environmental survival",
            "Hope in despair",
            "Chaos vs. order",
            "The hero within",
            "Redemption",
            "Fate vs. free will",
            "Illusion vs. reality",
            "The cost of ambition",
            "Knowledge and ignorance",
            "Transformation and rebirth",
            "The trickster’s lesson",
            "Balance and harmony",
            "The journey home"
          ],
          ph: "Pick a secondary theme in stories",
          type: "select"
        },
        {
          label: "Themes / Motifs",
          desc: "Underlying values, motifs, or symbols to highlight.",
          key: "themes",
          ph: "e.g., sacrifice, identity, freedom; recurring bird imagery",
          type: "textarea"
        }
      ],
      template: ({ hero, hero_persona, quest, nemesis, nemesis_persona, mentor, mentor_persona, allies, allies_persona, shadow, shadow_persona, setting1, setting2, setting, transformation, gift, theme1, theme2, themes, ctx, audience_persona, style, tone }) => [
    'Craft a Hero’s Journey narrative outline.',
    ctx && `Context: ${ctx}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    audience_persona && `Target Audience Persona(s): ${audience_persona}`,
    hero && `Hero: ${hero}`,
    hero_persona && `Hero Persona(s): ${hero_persona}`,
    quest && `Quest: ${quest}`,
    nemesis && `Antagonist/Challenge: ${nemesis}`,
    nemesis_persona && `Nemesis Persona(s): ${nemesis_persona}`,
    mentor && `Mentor/Guide: ${mentor}`,
    mentor_persona && `Mentor Persona(s): ${mentor_persona}`,
    allies && `Allies: ${allies}`,
    allies_persona && `Allies Persona(s): ${allies_persona}`,
    shadow && `Shadow Aspect: ${shadow}`,
    shadow_persona && `Shadow Persona(s): ${shadow_persona}`,
    (setting1 || setting2) && `Setting Options: ${[setting1, setting2].filter(Boolean).join(', ')}`,
    setting && `Setting: ${setting}`,
    transformation && `Transformation: ${transformation}`,
    gift && `Gift to Community: ${gift}`,
    (theme1 || theme2) && `Theme Options: ${[theme1, theme2].filter(Boolean).join(', ')}`,
    themes && `Themes/Motifs: ${themes}`,
    '---',
    'Output:',
    '1) Departure – Ordinary world, call to adventure, mentor, threshold.',
    '2) Initiation – Trials, allies, nemesis, crisis, transformation.',
    '3) Return – Road back, the Gift, reintegration with community.',
    '4) Integration – How inner change mirrors the outer journey.',
    '5) Story Spine – One or two sentences summarizing the arc.'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "hero’s journey — departure · initiation · return heros-journey-narrative a narrative pattern (monomyth) where a hero leaves their ordinary world, faces trials and transformation, and returns with wisdom or a gift. based on joseph campbell’s work but adapted across creative traditions. provide details about the hero, their world, quest, nemesis, and optional archetypes. the model will outline a story in departure, initiation, and return phases, weaving in transformation, motifs, and a community-oriented gift. type:framework use:storytelling phase:explore topic:future-self phase:compose level:intermediate topic:prompting use:goals use:pattern use:copywriting storytelling-frameworks writing cultural-frameworks design generate mythic or epic story outlines. develop a character’s transformative arc. design quests and npc arcs for tabletop or video games. map personal life experiences as a hero’s journey. storyboard or create beat sheets for screenwriting or novels. frame customer or brand storytelling as a hero’s journey. ensure the hero undergoes meaningful inner and outer transformation. adapt stages flexibly — not every story requires all 12 or 17. include archetypes (mentor, shadow, ally, trickster) for richness. frame the return as a gift to the community, not just the self. tie the inner journey to the outer — growth mirrors trials. use symbols and motifs for thematic resonance. explore diverse cultural hero’s journey models, not just campbell’s. if any field (hero, quest, nemesis, setting, transformation, gift, or theme) is missing, suggest ideas, ask guiding questions, or introduce creative constraints to spark inspiration. target audience persona hero / protagonist hero persona quest / goal antagonist / main challenge nemesis persona mentor / guide (optional) mentor persona allies / companions (optional) allies persona shadow aspect (optional) shadow persona setting option 1 setting option 2 world / setting transformation gift to the world / community theme option 1 theme option 2 themes / motifs"
      }
    },

    {
      id: "debiasing-checklist",
      slug: "heuristics-biases-preflight",
      label: "Heuristics & Biases — Debiasing Pre-flight",
      kind: "heuristic",
      categories: [
        "critical-thinking",
        "quality",
        "decision"
      ],
      tags: [
        "type:framework",
        "topic:bias",
        "use:healing",
        "topic:decomposition",
        "use:case-study",
        "use:pattern",
        "phase:premortem",
        "level:intermediate"
      ],
      use_cases: [
        "Review a draft answer/decision before publishing or acting",
        "Sanity-check a forecast or prediction",
        "Run a risk review before committing resources",
        "Surface blind spots in research summaries or analyses",
        "Do a quick “red team” pass under time pressure",
           "sanity check this decision",
      "are we missing something",
      "check for bias",
      "devil’s advocate pass",
      "quick red team",
      "base rate check",
      "overconfidence check",
      "confirmation bias alert",
      "anchoring check",
      "availability bias check",
      "framing effect check",
      "what would prove me wrong",
      "steelman the other side",
      "evidence vs story",
      "independent review please",
      "risk of being wrong",
      "fast pre-mortem",
      "list assumptions",
      "update with new data",
      "go/no-go bias scan",
        "double-check my assumptions",
  "could I be overconfident",
  "is this confirmation bias",
  "quick bias scan on my plan",
  "play devil’s advocate with me",
  "are we framing this wrong",
  "what am I not seeing",
  "challenge my viewpoint",
  "help me stress test decision",
  "bias check before go/no-go"
      ],
      boosters: [
        "Ask first: “What would convince me I’m wrong?”",
        "End with a one-liner: “If I’m wrong, it’s because…”",
        "Run a quick premortem: Imagine it failed in 6 months — why?",
        "Check for *bias clusters* (e.g., Anchoring + Confirmation).",
        "Re-state base rates/outside-view statistics explicitly.",
        "List ≥2 disconfirming pieces of evidence before finalizing.",
        "Balance head (logic), heart (values), and gut (instinct) before the call."
      ],
      definition: "A structured mental pre-flight that scans for common biases, applies concrete debiasing tactics, and strengthens a draft or decision. Inspired by Kahneman/Tversky’s catalog, Klein’s premortem, and aviation/medical checklists.",
      help: "Paste your draft/decision and context. Name any suspected biases and preferred tactics. Use the pickers to attach named biases and techniques (single-line inline). The checklist will run a bias scan, evidence check, premortem, and propose a revised decision with explicit uncertainties.",
      fields: [
        {
          label: "Decision/draft to check",
          desc: "The answer, judgment, or plan you want to stress-test. Include reasoning if available.",
          key: "decision",
          ph: "e.g., Invest in new product launch Q3; Survey results show 70% interest",
          type: "textarea"
        },
        {
          label: "Stakes/impact",
          desc: "How much does this decision matter? Higher stakes → slower, more thorough debiasing.",
          key: "stakes",
          ph: "High (strategic pivot, $M impact) | Medium (team workflow) | Low (wording choice)",
          type: "text"
        },
        {
          label: "Time pressure",
          desc: "Biases amplify under pressure. State the constraint clearly.",
          key: "time_pressure",
          ph: "High (hours) | Moderate (days) | Low (weeks)",
          type: "text"
        },
        {
          label: "Known or suspected biases",
          desc: "Biases you already suspect may be at play. Naming them upfront sharpens the scan.",
          key: "known_biases",
          ph: "Anchoring, confirmation, sunk cost, halo effect, recency",
          type: "textarea"
        },
        {
          label: "Biases (from library)",
          autofill: "bias->inline",
          dataset: "bias",
          desc: "Optional: attach named biases for shared language and quick inline context.",
          itemType: "typeahead",
          key: "known_biases_picks",
          ph: "Start typing to add named biases…",
          type: "repeater",
          unit: "bias"
        },
        {
          label: "Preferred debiasing tactics",
          desc: "List tactics you want to emphasize. The AI defaults to a mix if blank.",
          key: "tactics",
          ph: "Outside view, base rates, premortem, “consider the opposite,” disconfirming evidence",
          type: "textarea"
        },
        {
          label: "Debiasing tactics (from library)",
          autofill: "bias->inline",
          dataset: "bias",
          desc: "Pick named mitigation techniques matched to the suspected biases.",
          itemType: "typeahead",
          key: "tactics_picks",
          ph: "Search library for mitigation patterns…",
          type: "repeater",
          unit: "technique"
        },
        {
          label: "Mission/values alignment (optional)",
          desc: "State how this decision should align with broader mission, ethics, or stakeholder values.",
          key: "mission_alignment",
          ph: "e.g., Consistent with accessibility-first principle; avoids reputational risk",
          type: "textarea"
        },
        {
          label: "Decision-maker persona (optional)",
          autofill: "persona->inline",
          desc: "Select a decision-maker persona to frame the voice/lens of the review.",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "persona",
          ph: "e.g., Analyst, Risk Officer, UX Researcher",
          type: "repeater"
        }
      ],
      template: ({ decision, stakes, time_pressure, known_biases, known_biases_picks, tactics, tactics_picks, mission_alignment, persona, ctx, audience, style, tone }) => [
    'Run a structured Debiasing Pre-flight Checklist.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,

    persona && `Persona lens: ${persona}`,
    stakes && `Stakes: ${stakes}`,
    time_pressure && `Time pressure: ${time_pressure}`,

    known_biases_picks && (
      'Known/suspected biases (from library):\n' +
      String(known_biases_picks).split(/\n+/).map((s,i)=>`${i+1}. ${s.trim()}`).join('\n')
    ),
    known_biases && `Known/suspected biases (free text): ${known_biases}`,

    tactics_picks && (
      'Debiasing tactics:\n' +
      String(tactics_picks).split(/\n+/).map((s,i)=>`${i+1}. ${s.trim()}`).join('\n')
    ),
    tactics && `Preferred debiasing tactics: ${tactics}`,

    mission_alignment && `Mission/values alignment: ${mission_alignment}`,
    decision && `Decision/draft under review:\n${decision}`,

    '',
    'Output format:',
    '1) **Bias scan** — Highlight likely biases (anchoring, availability, confirmation, sunk cost, halo effect, overconfidence, base-rate neglect, scope insensitivity, groupthink).',
    '2) **Evidence & assumptions** — Spot-check key assumptions. Flag base rates, missing data, or untested beliefs.',
    '3) **Disconfirming view** — Provide 2+ reasons why this could be wrong. Apply “consider the opposite.”',
    '4) **Premortem** — If this fails in 6–12 months, identify the top 1–2 failure modes and mitigations.',
    '5) **Revised decision** — Rewrite the draft in light of findings. Make uncertainties explicit (confidence ranges, probability).',
    '6) **One-line bias guardrail** — “If I’m wrong, it’s because…” + one red-team style question.',
    '7) **Go / Iterate / Stop** — Final recommendation with rationale, aligned to stakes and mission.'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "heuristics & biases — debiasing pre-flight heuristics-biases-preflight a structured mental pre-flight that scans for common biases, applies concrete debiasing tactics, and strengthens a draft or decision. inspired by kahneman/tversky’s catalog, klein’s premortem, and aviation/medical checklists. paste your draft/decision and context. name any suspected biases and preferred tactics. use the pickers to attach named biases and techniques (single-line inline). the checklist will run a bias scan, evidence check, premortem, and propose a revised decision with explicit uncertainties. type:framework topic:bias use:healing topic:decomposition use:case-study use:pattern phase:premortem level:intermediate critical-thinking quality decision review a draft answer/decision before publishing or acting sanity-check a forecast or prediction run a risk review before committing resources surface blind spots in research summaries or analyses do a quick “red team” pass under time pressure ask first: “what would convince me i’m wrong?” end with a one-liner: “if i’m wrong, it’s because…” run a quick premortem: imagine it failed in 6 months — why? check for *bias clusters* (e.g., anchoring + confirmation). re-state base rates/outside-view statistics explicitly. list ≥2 disconfirming pieces of evidence before finalizing. balance head (logic), heart (values), and gut (instinct) before the call. decision/draft to check stakes/impact time pressure known or suspected biases biases (from library) preferred debiasing tactics debiasing tactics (from library) mission/values alignment (optional) decision-maker persona (optional)"
      }
    },

    {
      id: "hmw_statements",
      slug: "how-might-we-statements-hmw",
      label: "How Might We Statements (HMW)",
      kind: "strategy",
      categories: [
        "design",
        "brainstorming",
        "reasoning"
      ],
      tags: [
        "use:pattern",
        "use:problem-framing",
        "use:brainstorming",
        "use:decision-making",
        "topic:bias",
        "phase:explore",
        "level:beginner",
        "topic:prompting",
        "use:workshop",
        "use:discover"
      ],
      use_cases: [
        "reframe research insights into opportunity questions",
        "kick off brainstorming with human-centered prompts",
        "align cross-functional teams on focus areas",
        "spin variants at different scopes (broad ↔ narrow)",
        "generate inclusive, non-leading prompts that avoid baked-in solutions",
          "turn this problem into a question",
  "how might we make this easier",
  "reframe my challenge",
  "write HMW questions from insights",
  "make this opportunity statement",
  "spark creative ideas from this issue",
  "turn complaints into design prompts",
  "make a positive spin on this problem",
  "help me ask better questions",
  "how might we see this differently",
  "frame this without the solution baked in",
  "turn research notes into HMWs",
  "make broad and narrow HMW versions",
  "help me start a brainstorm",
  "align my team with opportunity questions",
  "understand my problem",
  "put postive spin on my problem"
      ],
      boosters: [
        "Generate 5+ variants: 2 broad, 2 narrow, 1 wild “adjacent possible”.",
        "Strip solutions: replace “add/build/implement” with outcomes (“help, enable, reduce, increase, simplify”).",
        "Add a “so that …” benefit clause to keep purpose sharp.",
        "Run a quick bias scan (anchoring, confirmation, availability, halo, groupthink); rewrite any leading phrasing.",
        "Include one inclusive rewrite (accessibility/equity/safety) and one constraint-aware rewrite.",
        "Attach a smallest-test plan (hypothesis, metric, tiny experiment, decision rule)."
      ],
      definition: "HMW reframes a need into an optimistic, solvable question. Good HMWs are human-specific, problem-oriented (not feature-led), Goldilocks-sized, and inclusive. Template: “How might we [improve outcome] for [who] in [context] given [key constraint] so that [benefit]?”",
      help: "Add the core need, who is affected, desired outcome, and any constraints. Optionally include research snippets, mission/values, and a persona lens. The template returns a canonical HMW plus de-anchored variants (broad, narrow, opposite), inclusivity rewrites, and a tiny experiment stub.",
      fields: [
        {
          label: "Need / challenge",
          desc: "Concise description of the problem/opportunity, grounded in evidence or observation.",
          key: "need",
          ph: "New users abandon onboarding at step 2; they do not understand data permissions.",
          type: "textarea"
        },
        {
          label: "Who is affected?",
          desc: "Name a specific audience/segment. Specificity improves ideas.",
          key: "who",
          ph: "First-time Android users on metered data in India",
          type: "text"
        },
        {
          label: "Persona lens (optional)",
          autofill: "persona->inline",
          desc: "Select a persona to inform language, values, and constraints.",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "persona",
          ph: "e.g., Privacy-first Analyst; Busy Parent; Field Technician",
          type: "repeater"
        },
        {
          label: "Desired outcome (benefit)",
          desc: "What change in behavior/experience should a good solution achieve?",
          key: "outcome",
          ph: "Reach first value in under 2 minutes without confusion",
          type: "text"
        },
        {
          label: "Context (where/when/conditions)",
          desc: "Situational details (device, channel, moment) that meaningfully shape the problem.",
          key: "context_detail",
          ph: "Mobile web at night; low bandwidth; privacy-sensitive forms",
          type: "textarea"
        },
        {
          label: "Constraints / non-goals",
          desc: "Limits to respect (policy, legal, tech, brand). Also list anti-goals to avoid solution creep.",
          key: "constraints",
          ph: "No phone number collection; avoid dark patterns; do not increase steps",
          type: "textarea"
        },
        {
          label: "Evidence / insight snippets",
          desc: "Key quotes, metrics, or observations that justify the need.",
          key: "evidence",
          ph: "“I don’t know why you need this,” • 42% drop at permissions • 18% complete on 3G",
          type: "textarea"
        },
        {
          label: "Inclusion & accessibility notes (optional)",
          desc: "Accessibility, equity, and safety considerations to bake into phrasing.",
          key: "inclusion_notes",
          ph: "Screen reader support; low-literacy wording; avoid stigma; multilingual hints",
          type: "textarea"
        },
        {
          label: "Bias watch-outs (optional)",
          desc: "Suspected biases to guard against when phrasing HMW.",
          key: "bias_watchouts",
          ph: "Anchoring on last quarter’s complaint; halo effect around premium users",
          type: "textarea"
        },
        {
          label: "Bias lens (optional)",
          autofill: "bias->inline",
          desc: "Insert bias primers from your library to guide the scan.",
          itemLabel: "bias",
          itemType: "typeahead",
          key: "bias_lens",
          ph: "Search your bias library (e.g., anchoring, confirmation, availability)",
          type: "repeater"
        },
        {
          label: "Mission/values alignment (optional)",
          desc: "How should the HMW reflect mission/values and avoid harm?",
          key: "mission",
          ph: "Champion user autonomy; minimize data collection; dignity by default",
          type: "textarea"
        },
        {
          label: "Scope preference",
          desc: "Signal the preferred breadth of the canonical HMW.",
          key: "scope_pref",
          options: [
            {
              label: "Broad (exploratory, many directions)",
              value: "Broad (exploratory, many directions)"
            },
            {
              label: "Medium (Goldilocks default)",
              value: "Medium (Goldilocks default)"
            },
            {
              label: "Narrow (tightly constrained)",
              value: "Narrow (tightly constrained)"
            }
          ],
          ph: "Medium",
          type: "select"
        },
        {
          label: "Verb palette (optional)",
          desc: "Outcome-oriented verbs to prefer; helps avoid solution verbs.",
          key: "verb_palette",
          ph: "help, enable, reduce, increase, simplify, clarify, support, reassure, connect",
          type: "textarea"
        },
        {
          label: "Do's (must do)",
          desc: "Positive guardrails for phrasing and scope.",
          key: "dos",
          ph: "Use plain language; add “so that…” benefit; keep ≤ 20 words",
          type: "textarea"
        },
        {
          label: "Don’ts / constraints",
          desc: "What to avoid while phrasing HMWs.",
          key: "donts",
          ph: "No baked-in solutions; no jargon; avoid majority-culture assumptions",
          type: "textarea"
        },
        {
          label: "Success metric (leading indicator)",
          desc: "How will we know the HMW led to useful solutions?",
          key: "success_metric",
          ph: "Drop-off step-2 −20% in 4 weeks; SUS +10; NPS +6 among new users",
          type: "text"
        }
      ],
      template: (f) => {
    const lines = [];

    const scope = f.scope_pref || 'Medium (Goldilocks default)';
    const who = f.who || '[who]';
    const outcome = f.outcome || '[outcome]';
    const context = f.context_detail ? ` in ${f.context_detail}` : '';
    const constraint = f.constraints ? ` given ${f.constraints}` : '';
    const benefit = f.outcome ? ` so that ${f.outcome}` : '';
    const verbs = (f.verb_palette || 'help, enable, reduce, increase, simplify, clarify, support, reassure, connect')
      .split(/[,;]\s*/).map(v => v.trim()).filter(Boolean);

    // Canonical HMW (avoid solution verbs if user put one in "action")
    const safeAction = (f.action || 'help').replace(/\b(add|build|implement|install|integrate|deploy|launch)\b/gi, 'help');
    const canonical = `How might we ${safeAction} for ${who}${context}${constraint}${benefit}?`;

    lines.push('Create a set of high-quality How-Might-We statements with variants and checks.');
    f.ctx && lines.push(`Context: ${f.ctx}`);
    f.persona && lines.push(`Who is affected Persona lens = 
    ${f.persona}`);
    f.mission && lines.push(`Mission/values: ${f.mission}`);
    f.bias_lens && lines.push(`Bias lens: ${f.bias_lens}`);
    f.bias_watchouts && lines.push(`Bias watch-outs: ${f.bias_watchouts}`);
    f.evidence && lines.push(`Evidence: ${f.evidence}`);
    f.inclusion_notes && lines.push(`Inclusion/accessibility: ${f.inclusion_notes}`);
    f.need && lines.push(`Need/challenge: ${f.need}`);
    f.dos && lines.push(`Do:\n${f.dos}`);
    f.donts && lines.push(`Don’t:\n${f.donts}`);
    f.success_metric && lines.push(`Success metric: ${f.success_metric}`);

    lines.push('');
    lines.push('Output:');

    // A) Canonical + scope setting
    lines.push(`A) Canonical HMW (${scope} scope):`);
    lines.push(canonical);

    // B) Variant set using verb palette and scope shifts
    lines.push('B) Variants (5+): generate 2 broad, 2 narrow, 1 wild “adjacent possible”. Prefer outcome verbs such as: ' + verbs.join(', ') + '.');

    // C) Opposite/de-anchored frames
    lines.push('C) Opposite frames: create 2 “consider the opposite” HMWs to break anchoring (e.g., if we cannot reduce steps, how might we make steps feel rewarding?).');

    // D) Inclusivity/safety rewrites
    lines.push('D) Inclusivity rewrites: provide 2 inclusive versions (accessibility, equity, safety) and explain the change briefly.');

    // E) Constraint-aware rewrite
    lines.push('E) Constraint-aware rewrite: 1 version that explicitly respects key constraints without killing creativity.');

    // F) Bias scan checklist
    lines.push('F) Bias scan (flag & fix if present): anchoring, confirmation, availability, halo, groupthink, scope insensitivity. Rewrite any leading or solution-baked phrasing.');

    // G) Quick rubric (score 1–5)
    lines.push('G) Rubric (score 1–5 each): Clarity • Human specificity • Generativity • Strategic fit • Testability. Recommend top 3 HMWs with reasons.');

    // H) Experiment stub
    lines.push('H) Smallest test (for the top HMW):');
    lines.push('- Hypothesis: If we [idea], then [metric] will improve for [who].');
    lines.push('- Metric: Use the provided success metric or propose a leading indicator.');
    lines.push('- Tiny experiment: Paper prototype / copy tweak / concierge test in 1 week.');
    lines.push('- Decision rule: Scale if effect ≥ X; iterate if 0 < effect < X; stop if ≤ 0.');

    // I) One-line synthesis
    lines.push('I) One-line synthesis: “We will explore [theme] via [top HMW] because [evidence/benefit].”');

    return lines.filter(Boolean).join('\n');
  },
      meta: {
        search_text: "how might we statements (hmw) how-might-we-statements-hmw hmw reframes a need into an optimistic, solvable question. good hmws are human-specific, problem-oriented (not feature-led), goldilocks-sized, and inclusive. template: “how might we [improve outcome] for [who] in [context] given [key constraint] so that [benefit]?” add the core need, who is affected, desired outcome, and any constraints. optionally include research snippets, mission/values, and a persona lens. the template returns a canonical hmw plus de-anchored variants (broad, narrow, opposite), inclusivity rewrites, and a tiny experiment stub. use:pattern use:problem-framing use:brainstorming use:decision-making topic:bias phase:explore level:beginner topic:prompting use:workshop use:discover design brainstorming reasoning reframe research insights into opportunity questions kick off brainstorming with human-centered prompts align cross-functional teams on focus areas spin variants at different scopes (broad ↔ narrow) generate inclusive, non-leading prompts that avoid baked-in solutions generate 5+ variants: 2 broad, 2 narrow, 1 wild “adjacent possible”. strip solutions: replace “add/build/implement” with outcomes (“help, enable, reduce, increase, simplify”). add a “so that …” benefit clause to keep purpose sharp. run a quick bias scan (anchoring, confirmation, availability, halo, groupthink); rewrite any leading phrasing. include one inclusive rewrite (accessibility/equity/safety) and one constraint-aware rewrite. attach a smallest-test plan (hypothesis, metric, tiny experiment, decision rule). need / challenge who is affected? persona lens (optional) desired outcome (benefit) context (where/when/conditions) constraints / non-goals evidence / insight snippets inclusion & accessibility notes (optional) bias watch-outs (optional) bias lens (optional) mission/values alignment (optional) scope preference verb palette (optional) do's (must do) don’ts / constraints success metric (leading indicator)"
      }
    },

    {
      id: "hypnagogic_spark",
      slug: "hypnagogic-spark-creativity",
      label: "Hypnagogic Spark — Semi-sleep insight technique",
      kind: "framework",
      categories: [
        "creativity",
        "design",
        "ethics",
        "brainstorming",
        "reasoning"
      ],
      tags: [
        "type:technique",
        "use:presentations",
        "phase:premortem",
        "level:beginner",
        "use:healing",
        "use:brainstorming",
        "use:workshop",
        "use:problem-framing",
        "level:advanced"
      ],
      use_cases: [
        "Unstick creative blocks by skimming the N1 (semi-sleep) state",
        "Generate surprising metaphors, visuals, and symbolic pairings",
        "Reframe problems with dreamlike, non-linear associations",
        "Practice surrealist or Jungian-style ideation",
        "Incubate design, story, or research sparks from hypnagogic imagery",
        "Translate half-dream fragments into testable, real-world prototypes",
        "catch ideas before I fall asleep",
  "use half-dreams for creativity",
  "spark weird connections",
  "dreamlike problem solving",
  "find inspiration in drifting off",
  "turn sleepy thoughts into designs",
  "capture surreal story ideas",
  "use hypnagogic state for brainstorming",
  "let my subconscious suggest answers",
  "make random images into insights",
  "how to use drowsy state productively",
  "inspiration from the edge of sleep",
  "train myself to notice dream fragments",
  "get new angles from twilight thinking",
  "turn nonsense thoughts into concepts"
      ],
      boosters: [
        "Keep sessions short (≤3 cycles, 2–4 minutes each) to preserve novelty.",
        "Capture raw with no editing — single words, textures, colors, broken phrases.",
        "Use a gentle cue (object in hand, timer, mantra) to simulate real drift entry/exit.",
        "Tag fragments (metaphor • sensory • risk • archetype) to aid clustering.",
        "Do one “wild card” pass: interpret a fragment through an alien lens (astronomy, mythology, cooking).",
        "Same-day triage: shortlist 3 sparks, prototype 1 within 48 hours.",
        "Include an inclusion/safety rewrite if ideas touch people, culture, or ethics."
      ],
      definition: "A short-cycle creativity method that dips into hypnagogia (N1, threshold of sleep) to loosen associations. The state yields fleeting images, sounds, and sensations — often metaphorical and novel. By interrupting gently and capturing fragments immediately, one can translate them into prototypes or insights. Rooted in Edison and Dalí’s “object-drop” naps, ancient dream incubation, and modern creativity research. The AI simulates this drift with configurable surrealism, cycles, and priming cues.",
      help: "Provide a focus problem, guardrails, and optional sensory/dream cues. The model simulates hypnagogic drift (fragments, metaphors, sensory oddities), then “wakes” to cluster, interpret, and shortlist viable sparks. Use boosters to keep cycles short, capture raw, and triage the weird into concrete test plans. Bias/inclusion lenses keep the output safe and usable.",
      fields: [
        {
          label: "Problem or topic to drift on",
          desc: "One concise problem, goal, or question. Keep outcome-focused, not feature-led.",
          key: "problem",
          ph: "e.g., Help first-time users reach value in 2 minutes without extra data collection",
          type: "textarea"
        },
        {
          label: "Constraints / non-goals",
          desc: "Hard limits (policy, ethics, brand) and explicit anti-goals.",
          key: "constraints",
          ph: "No dark patterns • Must support low bandwidth • Avoid stigmatizing language",
          type: "textarea"
        },
        {
          label: "Evidence / insight snippets (optional)",
          desc: "Quotes, metrics, or observations to ground the session.",
          key: "evidence",
          ph: "“I don’t know why you need this.” • 42% drop at permissions • 18% complete on 3G",
          type: "textarea"
        },
        {
          label: "Dream cue (optional)",
          desc: "A single word/image/symbol to seed drift, like ancient dream incubation.",
          key: "dream_cue",
          ph: "e.g., Lighthouse • Broken clock • Garden gate",
          type: "text"
        },
        {
          label: "Persona lens (optional)",
          autofill: "persona->inline",
          desc: "Pull a persona from your library to color language, values, and edge cases.",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "persona",
          ph: "e.g., Privacy-first Analyst • Busy Parent • Field Technician",
          type: "repeater"
        },
        {
          label: "Inclusion & accessibility notes (optional)",
          desc: "Accessibility, equity, cultural, or safety guardrails.",
          key: "inclusion_guardrail",
          ph: "Plain language • Screen-reader friendly • Avoid stigma",
          type: "textarea"
        },
        {
          label: "Mission/values alignment (optional)",
          desc: "Purpose/principles that final ideas should reflect.",
          key: "mission",
          ph: "Champion user autonomy • Minimize data • Dignity by default",
          type: "textarea"
        },
        {
          label: "Bias lens (optional)",
          autofill: "bias->inline",
          desc: "Bias primers to guide the scan (anchoring, availability, confirmation, sunk cost, halo, groupthink).",
          itemLabel: "bias",
          itemType: "typeahead",
          key: "bias_lens",
          ph: "Search your bias library",
          type: "repeater"
        },
        {
          label: "Protocol",
          desc: "Pick simulated (default) or a safe real-life variant.",
          key: "protocol",
          options: [
            {
              label: "Simulated hypnagogic brainstorm",
              value: "Simulated hypnagogic brainstorm"
            },
            {
              label: "Real-life: object-drop micro-nap (Dalí/Edison)",
              value: "Real-life: object-drop micro-nap (Dalí/Edison) Plan"
            },
            {
              label: "Real-life: short timer cycles (2–4 mins)",
              value: "Real-life: short timer cycles (2–4 mins) Plan"
            },
            {
              label: "Real-life: nappuccino (coffee + 10–15 min window)",
              value: "Real-life: nappuccino (coffee + 10–15 min window) Plan"
            }
          ],
          ph: "simulated",
          type: "select"
        },
        {
          label: "Cycles (1–3)",
          desc: "Number of drift→capture passes. 2 is a good default.",
          key: "cycles",
          ph: "2",
          type: "text"
        },
        {
          label: "Cycle duration (mins)",
          desc: "Short windows (2–4 minutes) maximize recall.",
          key: "cycle_minutes",
          ph: "3",
          type: "text"
        },
        {
          label: "Surreal dial",
          desc: "How loose the associations should be.",
          key: "surreal_level",
          options: [
            {
              label: "Low (mild remix, analogies)",
              value: "Low (mild remix, analogies)"
            },
            {
              label: "Medium (odd pairings, playful logic)",
              value: "Medium (odd pairings, playful logic)"
            },
            {
              label: "High (dreamlike leaps, symbolic material)",
              value: "High (dreamlike leaps, symbolic material)"
            }
          ],
          ph: "medium",
          type: "select"
        },
        {
          label: "Sensory priming (optional)",
          desc: "Any image, texture, sound, or reference that should color the drift.",
          key: "priming",
          ph: "Warm brass texture • Distant train sound • Red thread motif",
          type: "textarea"
        },
        {
          label: "State hygiene (optional)",
          desc: "Real-world prep: lighting, position, interruption strategy.",
          key: "state_hygiene",
          ph: "Dim light • Reclined but upright • Keys in hand for micro-nap",
          type: "textarea"
        },
        {
          label: "Fragment tagging scheme",
          desc: "How to tag fragments for clustering later.",
          key: "fragment_tag_style",
          options: [
            {
              label: "Metaphor/analogy tags",
              value: "metaphor"
            },
            {
              label: "Archetype/symbol tags",
              value: "archetype"
            },
            {
              label: "Color/emotion pairings",
              value: "color_emotion"
            }
          ],
          ph: "metaphor",
          type: "select"
        },
        {
          label: "Opposite-frame pass",
          desc: "Treat the main constraint as permanent and explore alternate paths.",
          key: "opposite_variant",
          options: [
            {
              label: "Yes — include an opposite-framing seed",
              value: "Yes — include an opposite-framing seed"
            },
            {
              label: "No",
              value: " "
            }
          ],
          ph: "yes",
          type: "select"
        },
        {
          label: "Capture mode",
          desc: "How to record fragments before analysis.",
          key: "capture_mode",
          options: [
            {
              label: "Voice-first (rich, natural)",
              value: "Voice-first (rich, natural)"
            },
            {
              label: "Bulleted fragments",
              value: "Bulleted fragments"
            },
            {
              label: "ASCII sketch notes",
              value: "ASCII sketch notes"
            }
          ],
          ph: "voice",
          type: "select"
        },
        {
          label: "Success metric",
          desc: "How to judge usefulness of the session.",
          key: "success_metric",
          ph: "≥5 sparks • 1 prototype candidate • Novelty+Relevance ≥7/10",
          type: "text"
        },
        {
          label: "Next action (prototype plan)",
          desc: "What you will prototype within 48 hours.",
          key: "next_action",
          ph: "Storyboard 3 thumbnails • A/B headline test • Concierge demo",
          type: "textarea"
        },
        {
          label: "Generate an image?",
          desc: "Do you want the AI to also generate a detailed image prompt for DALL·E (or similar) based on your session?",
          key: "image_prompt",
          options: [
            {
              label: "Yes — create an image prompt too",
              value: "yes"
            },
            {
              label: "No",
              value: "no"
            }
          ],
          ph: "no",
          type: "select"
        }
      ],
      template: (f) => {
    const out = [];
    const protocol = f.protocol || 'simulated';
    const cycles = Number.parseInt(f.cycles || '2', 10);
    const mins = f.cycle_minutes || '3';
    const surreal = f.surreal_level || 'medium';
    const opposite = (f.opposite_variant || 'yes') === 'yes';

    out.push('Run a Hypnagogic Spark session (drift → capture → interpret → test).');
    f.ctx && out.push(`Context: ${f.ctx}`);
    f.persona && out.push(`Persona lens: ${f.persona}`);
    f.mission && out.push(`Mission/values: ${f.mission}`);
    f.inclusion_guardrail && out.push(`Inclusion/accessibility: ${f.inclusion_guardrail}`);
    f.bias_lens && out.push(`Bias lens: ${f.bias_lens}`);
    f.evidence && out.push(`Evidence: ${f.evidence}`);
    f.constraints && out.push(`Constraints: ${f.constraints}`);
    f.dream_cue && out.push(`Dream cue: ${f.dream_cue}`);
    f.state_hygiene && out.push(`State hygiene: ${f.state_hygiene}`);

    out.push('Session plan:');
    out.push(`- Protocol: ${protocol} • Cycles: ${cycles} × ${mins} min • Surreal dial: ${surreal} • Capture: ${f.capture_mode || 'voice'}`);
    f.priming && out.push(`- Sensory priming: ${f.priming}`);
    f.fragment_tag_style && out.push(`- Fragment tagging: ${f.fragment_tag_style}`);
    opposite && out.push('- Include one opposite-frame seed.');

    f.problem && out.push(`Focus problem: ${f.problem}`);

    out.push('Output:');
    out.push('A) Hypnagogic impressions — 7–12 short fragments (words, images, textures, half-phrases). Tag each according to style.');
    if (opposite) {
      out.push('A2) Opposite-frame impressions — 3–5 fragments where the main constraint is treated as permanent.');
    }
    out.push('B) Immediate capture transcript — lightly cleaned, 1–2 lines max per fragment.');
    out.push('C) Interpretation — map each fragment to the problem: why it might help, what it suggests.');
    out.push('D) Clusters — group into 2–3 themes with names and gist.');
    out.push('E) Shortlist — top 3 ideas (Novelty • Relevance • Feasibility scores 1–5). Brief justification.');
    out.push('F) Smallest test plan (for top idea): hypothesis, metric, <60-min prototype, decision rule.');
    out.push('G) Debiasing & inclusion check — flag biases, propose inclusion/safety rewrite if needed.');
    out.push('H) One-line synthesis — “We will explore [theme] via [idea] because [evidence/benefit].”');
    out.push(`I) Next action — ${f.next_action || 'Propose a concrete 48-hour step with owner and timebox.'}`);
    
    if (f.image_prompt === 'yes') {
  out.push('');
  out.push('J) Image generation prompt — Create a detailed prompt for DALL·E (or equivalent) to visualize the session’s top idea or theme. Follow these principles:');
  out.push('- Be specific where it matters (subject, environment, key objects); sparse elsewhere.');
  out.push('- Think like a cinematographer: lock in lighting, composition, lens, color grade, and mood.');
  out.push('- Use concrete nouns and visual attributes (textures, materials, era, perspective).');
  out.push('- Control the frame: suggest aspect ratio suited to purpose (1:1 icon, 16:9 banner, 2:3 poster).');
  out.push('- If text needed, quote exact wording and style (e.g., “headline reads ‘SPARK’ in bold sans”).');
  out.push('- Avoid mimicking living artists; describe style instead (e.g., “hand-inked lines, cel shading, pastel palette”).');
  out.push('- Optionally suggest 2–3 variations with different lighting or composition.');
  out.push('The final output here should be a vivid, cinematic text prompt ready for an image model.');
}


    return out.filter(Boolean).join('\n');
  },
      meta: {
        search_text: "hypnagogic spark — semi-sleep insight technique hypnagogic-spark-creativity a short-cycle creativity method that dips into hypnagogia (n1, threshold of sleep) to loosen associations. the state yields fleeting images, sounds, and sensations — often metaphorical and novel. by interrupting gently and capturing fragments immediately, one can translate them into prototypes or insights. rooted in edison and dalí’s “object-drop” naps, ancient dream incubation, and modern creativity research. the ai simulates this drift with configurable surrealism, cycles, and priming cues. provide a focus problem, guardrails, and optional sensory/dream cues. the model simulates hypnagogic drift (fragments, metaphors, sensory oddities), then “wakes” to cluster, interpret, and shortlist viable sparks. use boosters to keep cycles short, capture raw, and triage the weird into concrete test plans. bias/inclusion lenses keep the output safe and usable. type:technique use:presentations phase:premortem level:beginner use:healing use:brainstorming use:workshop use:problem-framing level:advanced creativity design ethics brainstorming reasoning unstick creative blocks by skimming the n1 (semi-sleep) state generate surprising metaphors, visuals, and symbolic pairings reframe problems with dreamlike, non-linear associations practice surrealist or jungian-style ideation incubate design, story, or research sparks from hypnagogic imagery translate half-dream fragments into testable, real-world prototypes keep sessions short (≤3 cycles, 2–4 minutes each) to preserve novelty. capture raw with no editing — single words, textures, colors, broken phrases. use a gentle cue (object in hand, timer, mantra) to simulate real drift entry/exit. tag fragments (metaphor • sensory • risk • archetype) to aid clustering. do one “wild card” pass: interpret a fragment through an alien lens (astronomy, mythology, cooking). same-day triage: shortlist 3 sparks, prototype 1 within 48 hours. include an inclusion/safety rewrite if ideas touch people, culture, or ethics. problem or topic to drift on constraints / non-goals evidence / insight snippets (optional) dream cue (optional) persona lens (optional) inclusion & accessibility notes (optional) mission/values alignment (optional) bias lens (optional) protocol cycles (1–3) cycle duration (mins) surreal dial sensory priming (optional) state hygiene (optional) fragment tagging scheme opposite-frame pass capture mode success metric next action (prototype plan) generate an image?"
      }
    },

    {
      id: "ice_scoring",
      slug: "ice-scoring",
      label: "ICE — Impact × Confidence × Ease",
      kind: "strategy",
      categories: [
        "planning",
        "cultural-frameworks",
        "operations"
      ],
      tags: [
        "type:framework",
        "use:coding",
        "use:planning",
        "level:intermediate",
        "level:beginner",
        "use:process-improvement",
        "use:pattern"
      ],
      use_cases: [
        "fast triage of product ideas or experiments",
        "growth/CRO backlog grooming and sprint planning",
        "ops/process improvements and quick wins identification",
        "research/design workstream prioritization before deeper sizing",
         "help me pick quick wins",
  "rank ideas by impact",
  "what’s easiest with big effect",
  "score tasks by effort vs value",
  "how confident should I be",
  "prioritize my backlog",
  "compare impact vs ease",
  "choose low-hanging fruit",
  "which idea gives best return",
  "fast way to prioritize options",
  "sort projects by payoff",
  "is this worth the effort",
  "weigh ideas by confidence",
  "quick prioritization method",
  "make a simple scoring table"
      ],
      boosters: [
        "Define and display your scale rubric before scoring (e.g., Impact 1=negligible, 5=step-change).",
        "Require a one-line justification for each dimension; Confidence must cite evidence class.",
        "Include hidden work in Ease (security, legal, data, localization, QA, change mgmt).",
        "Use medians from multiple raters for contentious items; add a comment if spread >2.",
        "Add an inclusion/ethics gate: high-ICE items with harm risk pause for review.",
        "Prefer Effort mode when teams think in cost; Ease = (max+1 − Effort).",
        "Re-score after new evidence; Confidence cannot exceed your strongest evidence rung."
      ],
      definition: "ICE multiplies three quick ratings—Impact, Confidence, and Ease—to rank ideas for a first-pass, evidence-aware triage. Keep scales explicit and consistent; justify each score briefly to reduce bias and gaming.",
      help: "Provide an idea and rate Impact, Confidence, and Ease using the chosen scale (1–5 or 1–10). Optionally switch to Effort mode (Ease is auto-derived from Effort), set weights, cite evidence and dependencies, add inclusion guardrails, and specify a next test. The template returns a scored breakdown, brief justifications, a recommendation band, and a tiny experiment plan.",
      fields: [
        {
          label: "Idea / experiment",
          desc: "Short, concrete description of the idea to prioritize.",
          key: "item",
          ph: "e.g., Reduce signup fields from 8→4",
          type: "text"
        },
        {
          label: "One-line value hypothesis (optional)",
          desc: "Crisp because→therefore statement to focus the scoring.",
          key: "summary",
          ph: "If we halve fields, more users will complete signup, raising activation.",
          type: "text"
        },
        {
          label: "Scale",
          desc: "Choose the rating scale. Keep it consistent across items in a session.",
          key: "scale",
          options: [
            "1-5",
            "1-10"
          ],
          ph: "1-5",
          type: "select"
        },
        {
          label: "Ease vs. Effort",
          desc: "Pick how you’ll represent cost. Effort mode converts Effort→Ease internally.",
          key: "mode",
          options: [
            {
              label: "Rate Ease directly",
              value: "ease"
            },
            {
              label: "Rate Effort; convert to Ease automatically",
              value: "effort"
            }
          ],
          ph: "ease",
          type: "select"
        },
        {
          label: "Impact (num)",
          desc: "Expected outcome change if it works (use your rubric).",
          key: "impact",
          ph: "e.g., 4",
          type: "text"
        },
        {
          label: "Confidence (num)",
          desc: "How strong the evidence is behind your Impact/Ease estimates.",
          key: "confidence",
          ph: "e.g., 3",
          type: "text"
        },
        {
          label: "Ease (num, if mode=ease)",
          desc: "How easy/cheap/fast this is to execute (higher = easier).",
          key: "ease",
          ph: "e.g., 3",
          type: "text"
        },
        {
          label: "Effort (num, if mode=effort)",
          desc: "Total cost/complexity (higher = harder). Converted to Ease = max+1−Effort.",
          key: "effort",
          ph: "e.g., 3",
          type: "text"
        },
        {
          label: "Weight: Impact",
          desc: "Optional multiplier to emphasize Impact (default 1).",
          key: "w_impact",
          ph: "1",
          type: "text"
        },
        {
          label: "Weight: Confidence",
          desc: "Optional multiplier to emphasize Confidence (default 1).",
          key: "w_conf",
          ph: "1",
          type: "text"
        },
        {
          label: "Weight: Ease",
          desc: "Optional multiplier to emphasize Ease (default 1).",
          key: "w_ease",
          ph: "1",
          type: "text"
        },
        {
          label: "Impact rubric (quick)",
          desc: "Your scale definitions for Impact (keeps ratings consistent).",
          key: "rubric_impact",
          ph: "1=negligible; 3=~1–3% on key metric; 5=≥5% or unlocks new capability",
          type: "textarea"
        },
        {
          label: "Confidence rubric (quick)",
          desc: "Define evidence classes for Confidence.",
          key: "rubric_conf",
          ph: "1=assumption only; 3=multiple signals; 5=replicated A/Bs in this context",
          type: "textarea"
        },
        {
          label: "Ease/Effort rubric (quick)",
          desc: "Define effort bands including hidden work.",
          key: "rubric_ease",
          ph: "1=multi-team, heavy dependencies; 3=one team/1–2 sprints; 5=hours/copy",
          type: "textarea"
        },
        {
          label: "Best supporting evidence",
          desc: "Cite the strongest evidence you have (link, metric, study).",
          key: "evidence",
          ph: "A/B showed +2.1 pp on a similar form; usability: users stall on phone field",
          type: "textarea"
        },
        {
          label: "Dependencies / approvals",
          desc: "Anything that can slow execution (security, legal, data, localization, QA).",
          key: "dependencies",
          ph: "Privacy review; analytics event update; i18n strings",
          type: "textarea"
        },
        {
          label: "Inclusion / ethics guardrail",
          desc: "Equity, accessibility, or harm-reduction constraints that must be met.",
          key: "inclusion",
          ph: "AA contrast; no dark patterns; minimal PII; translated strings",
          type: "textarea"
        },
        {
          label: "Persona lens (optional)",
          autofill: "persona->inline",
          desc: "Pull a persona from your library to color Impact and risks.",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "persona",
          ph: "e.g., New-to-product user • Screen-reader user",
          type: "repeater"
        },
        {
          label: "Bias lens (optional)",
          autofill: "bias->inline",
          desc: "Common pitfalls to watch (anchoring, availability, sunk cost, halo, groupthink).",
          itemLabel: "bias",
          itemType: "typeahead",
          key: "bias_lens",
          ph: "Search bias library",
          type: "repeater"
        },
        {
          label: "Tie-breakers (optional)",
          desc: "How to break ICE ties: time-to-impact, strategic fit, learning value, risk reduction.",
          key: "tiebreakers",
          ph: "Prefer sooner impact; prioritize privacy improvements",
          type: "textarea"
        },
        {
          label: "Next test (≤1 week)",
          desc: "Smallest viable experiment if this ranks high.",
          key: "next_test",
          ph: "Ship 2 headline variants to 25% traffic; success if +1.5 pp activation",
          type: "textarea"
        },
        {
          label: "Notes (optional)",
          desc: "Context, risks, or scope assumptions.",
          key: "notes",
          ph: "Mobile-only first; do not change legal text",
          type: "textarea"
        }
      ],
      template: (f) => {
    const asNum = v => {
      const n = Number(String(v ?? '').replace(/[^0-9.\-]/g, ''));
      return Number.isFinite(n) ? n : null;
    };
    const scaleStr = f.scale || '1-5';
    const maxMatch = /1-(\d+)/.exec(scaleStr);
    const MAX = maxMatch ? Number(maxMatch[1]) : 5;
    const MIN = 1;

    // read weights
    const wI = asNum(f.w_impact) || 1;
    const wC = asNum(f.w_conf)   || 1;
    const wE = asNum(f.w_ease)   || 1;

    // read scores
    const I = asNum(f.impact);
    const C = asNum(f.confidence);
    let   E = null;

    const mode = (f.mode && (typeof f.mode === 'string') ? f.mode : 'ease').toLowerCase();
    if (mode === 'effort') {
      const Eff = asNum(f.effort);
      if (Eff != null) {
        E = (MAX + 1) - Eff; // convert Effort→Ease
      }
    } else {
      E = asNum(f.ease);
    }

    const inRange = (x) => x != null && x >= MIN && x <= MAX;
    const ready = inRange(I) && inRange(C) && inRange(E);

    // weighted ICE
    const score = ready ? (I * wI) * (C * wC) * (E * wE) : null;
    const maxScore = (MAX * wI) * (MAX * wC) * (MAX * wE);
    const pct = (score != null && maxScore > 0) ? Math.round((score / maxScore) * 100) : null;

    // Recommendation band
    let band = null;
    if (pct != null) {
      if (pct >= 60) band = 'Do now (Quick win)';
      else if (pct >= 40) band = 'Investigate (High potential; add evidence or reduce effort)';
      else if (pct >= 20) band = 'Hold (Needs reframing or prerequisites)';
      else band = 'Drop (Not competitive vs. backlog)';
    }

    // Build output
    const out = [];
    out.push('Score with ICE (Impact × Confidence × Ease). Keep scales explicit and justify each rating.');

    f.item && out.push(`Item: ${f.item}`);
    f.summary && out.push(`Value hypothesis: ${f.summary}`);
    out.push(`Scale: ${scaleStr} • Mode: ${mode === 'effort' ? 'Effort→Ease' : 'Ease'}`);
    (f.rubric_impact || f.rubric_conf || f.rubric_ease) && out.push(
      ['Rubrics:',
       f.rubric_impact && `- Impact: ${f.rubric_impact}`,
       f.rubric_conf   && `- Confidence: ${f.rubric_conf}`,
       f.rubric_ease   && `- Ease/Effort: ${f.rubric_ease}`
      ].filter(Boolean).join('\n')
    );

    // Breakdown
    if (ready) {
      out.push('Ratings:');
      out.push(`- Impact: ${I} ${f.impact_why ? '— ' + f.impact_why : ''}`);
      out.push(`- Confidence: ${C} ${f.conf_why ? '— ' + f.conf_why : ''}`);
      out.push(`- ${mode === 'effort' ? 'Effort' : 'Ease'}: ${mode === 'effort' ? ((MAX + 1) - E) : E} ${f.ease_why ? '— ' + f.ease_why : ''}`);
      (wI !== 1 || wC !== 1 || wE !== 1) && out.push(`Weights: I×${wI}, C×${wC}, E×${wE}`);
      out.push(`ICE Score: ${score} (≈ ${pct}% of max ${maxScore})`);
      band && out.push(`Recommendation: ${band}`);
    } else {
      out.push('Ratings: [missing or out of range] — please provide numeric values within the chosen scale.');
    }

    // Evidence & dependencies
    f.evidence && out.push(`Best evidence: ${f.evidence}`);
    f.dependencies && out.push(`Dependencies/approvals: ${f.dependencies}`);
    f.inclusion && out.push(`Inclusion/ethics guardrail: ${f.inclusion}`);
    f.persona && out.push(`Persona lens: ${f.persona}`);
    f.bias_lens && out.push(`Bias lens: ${f.bias_lens}`);
    f.tiebreakers && out.push(`Tie-breakers: ${f.tiebreakers}`);
    f.notes && out.push(`Notes: ${f.notes}`);

    // Next action
    out.push('Next step:');
    if (band === 'Do now (Quick win)') {
      out.push(f.next_test ? `- ${f.next_test}` : '- Propose a ≤1-week micro-test with a clear success threshold.');
    } else if (band === 'Investigate (High potential; add evidence or reduce effort)') {
      out.push('- Identify 1 new piece of evidence or a change that increases Ease by 1 point, then re-score.');
      f.next_test && out.push(`- Candidate test: ${f.next_test}`);
    } else if (band === 'Hold (Needs reframing or prerequisites)') {
      out.push('- List blockers and a smallest unblocker; consider reframing the idea for lower effort.');
    } else {
      out.push('- Archive with reason; keep a note of what evidence would resurrect this.');
    }

    // Debiasing nudge
    out.push('Debiasing check: Did we anchor on a shiny metric? Double-count Ease? Is Confidence supported by the strongest evidence cited?');

    return out.filter(Boolean).join('\n');
  },
      meta: {
        search_text: "ice — impact × confidence × ease ice-scoring ice multiplies three quick ratings—impact, confidence, and ease—to rank ideas for a first-pass, evidence-aware triage. keep scales explicit and consistent; justify each score briefly to reduce bias and gaming. provide an idea and rate impact, confidence, and ease using the chosen scale (1–5 or 1–10). optionally switch to effort mode (ease is auto-derived from effort), set weights, cite evidence and dependencies, add inclusion guardrails, and specify a next test. the template returns a scored breakdown, brief justifications, a recommendation band, and a tiny experiment plan. type:framework use:coding use:planning level:intermediate level:beginner use:process-improvement use:pattern planning cultural-frameworks operations fast triage of product ideas or experiments growth/cro backlog grooming and sprint planning ops/process improvements and quick wins identification research/design workstream prioritization before deeper sizing define and display your scale rubric before scoring (e.g., impact 1=negligible, 5=step-change). require a one-line justification for each dimension; confidence must cite evidence class. include hidden work in ease (security, legal, data, localization, qa, change mgmt). use medians from multiple raters for contentious items; add a comment if spread >2. add an inclusion/ethics gate: high-ice items with harm risk pause for review. prefer effort mode when teams think in cost; ease = (max+1 − effort). re-score after new evidence; confidence cannot exceed your strongest evidence rung. idea / experiment one-line value hypothesis (optional) scale ease vs. effort impact (num) confidence (num) ease (num, if mode=ease) effort (num, if mode=effort) weight: impact weight: confidence weight: ease impact rubric (quick) confidence rubric (quick) ease/effort rubric (quick) best supporting evidence dependencies / approvals inclusion / ethics guardrail persona lens (optional) bias lens (optional) tie-breakers (optional) next test (≤1 week) notes (optional)"
      }
    },

    {
      id: "imaginary_council",
      slug: "imaginary-mentor-council",
      label: "Imaginary Council — Multiple Mentors, One Question",
      kind: "strategy",
      categories: [
        "creativity",
        "strategy",
        "decision"
      ],
      tags: [
        "use:pattern",
        "phase:apply",
        "use:decision-making",
        "phase:premortem",
        "phase:explore",
        "use:recipe",
        "level:intermediate",
        "use:brainstorming"
      ],
      use_cases: [
        "break fixation by sampling diverse lenses before deciding",
        "stress-test a plan with skeptic, user, and ethicist seats",
        "unblock creative work via playful roleplay with constraints",
        "produce a smallest-viable experiment and a minority report",
          "what would my mentor say",
  "ask the skeptic first",
  "how would a user see this",
  "what would an ethicist warn about",
  "play devil’s advocate with characters",
  "get advice from different voices",
  "pretend I have a council of mentors",
  "imagine an optimist vs pessimist take",
  "roleplay perspectives before deciding",
  "what would a future self recommend",
  "stress test this with diverse views",
  "show me a supporter and a critic",
  "how would a creative see this",
  "minority report version please",
  "council of experts simulation",
  "see other perspectives"
      ],
      boosters: [
        "Keep it one question only; run another council for additional questions.",
        "Pick at least one User/Community Advocate and one Skeptic/Red Team seat.",
        "Force independence: Round 1 answers without referencing other seats.",
        "Require each seat to state one risk and one measurable success sign.",
        "Include a cultural lens beyond your own background; avoid caricature.",
        "Record a Minority Report and a tripwire metric that triggers review.",
        "Timebox: ≤3 minutes per step; perfection kills perspective."
      ],
      definition: "A structured thought experiment: pose one sharply framed question to a diverse council of imagined mentors (real, fictional, archetypal, or future/past selves). Each gives an independent answer, then cross-examines others. You synthesize overlap into a smallest viable next step, record dissent, and set a tripwire metric.",
      help: "Add 5–7 council members (mix of lenses). Provide one question, time horizon, success metric, constraints, and an evidence snapshot. Optionally add inclusion guardrails, bias lenses, and personas from your library. The template runs a two-round council (answers → cross-exam → one-line recommendations) and returns a synthesis, minority report, and a 1-week pilot plan.",
      fields: [
        {
          label: "The one question",
          desc: "Crisp, outcome-oriented, single focus.",
          key: "question",
          ph: "What is the smallest action that would raise week-1 retention by 3 pp for low-bandwidth users in 2 weeks?",
          type: "textarea"
        },
        {
          label: "Decision horizon / timeframe",
          desc: "When the decision matters; helps size the next step.",
          key: "horizon",
          ph: "2 weeks",
          type: "text"
        },
        {
          label: "Primary success metric",
          desc: "What you will move or observe to judge success.",
          key: "metric",
          ph: "Activation rate (first session complete)",
          type: "text"
        },
        {
          label: "Constraints & non-negotiables",
          desc: "Budget, policy, brand, legal, accessibility, ethics.",
          key: "constraints",
          ph: "No dark patterns; WCAG AA; no PII expansion; ≤1 sprint",
          type: "textarea"
        },
        {
          label: "Evidence snapshot (strongest 3–5 facts)",
          desc: "Ground answers in reality; cite your best signals.",
          key: "evidence",
          ph: "Usability shows form abandonment at phone field; 37% on mobile 3G; similar product saw +2.1 pp with guided tour",
          type: "textarea"
        },
        {
          label: "Council Member lenses (one per line, aligned with list order)",
          desc: "What each seat optimizes for (Operator, Scientist, Ethicist, User Advocate, Skeptic, Visionary, Historian, Futurist, Artist…).",
          key: "lenses",
          ph: "Scientist (evidence quality)\nUser Advocate (accessibility & burden)\nSkeptic (failure modes)\nOperator (cost & sequencing)\nVisionary (long-arc value)",
          type: "textarea"
        },
        {
          label: "Council members",
          autofill: "persona->inline",
          desc: "Pick diverse mentors (real, fictional, archetypes, future/past self). Type to pull from your persona library.",
          itemLabel: "member",
          itemType: "typeahead",
          key: "advisors",
          max: 9,
          min: 3,
          ph: "Marie Curie • Community Health Worker • Skeptic • Visionary Founder • Your Future Self",
          type: "repeater"
        },
        {
          label: "Known blind spots (one per line, aligned)",
          desc: "Name each seat’s bias so the model can compensate.",
          key: "blind_spots",
          ph: "Scientist: narrow on quantified signals\nVisionary: over-index on upside\nOperator: short-termism",
          type: "textarea"
        },
        {
          label: "Inclusion / ethics guardrail",
          desc: "Equity, safety, consent, accessibility requirements.",
          key: "inclusion",
          ph: "Minimize burden on low-bandwidth cohort; translated strings; opt-in only",
          type: "textarea"
        },
        {
          label: "Stakeholder personas (optional)",
          autofill: "persona->inline",
          desc: "Affected groups or key users to keep centered.",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "persona",
          ph: "First-time user • Screen-reader user • Support agent",
          type: "repeater"
        },
        {
          label: "Bias lenses (optional)",
          autofill: "bias->inline",
          desc: "Debiasing helpers (anchoring, availability, sunk cost, halo, groupthink).",
          itemLabel: "bias",
          itemType: "typeahead",
          key: "bias_lens",
          ph: "Anchoring • Sunk cost • Groupthink",
          type: "repeater"
        },
        {
          label: "Process",
          desc: "Two-round yields better synthesis; one-pass is faster.",
          key: "rounds",
          options: [
            "two-round (answers → cross-exam → one-line recs)",
            "one-pass (answers only + synthesis)"
          ],
          ph: "two-round (answers → cross-exam → one-line recs)",
          type: "select"
        },
        {
          label: "Voice style",
          desc: "How “in character” the advisors should sound.",
          key: "voice",
          options: [
            "clinical",
            "roleplay-rich",
            "balanced"
          ],
          ph: "balanced",
          type: "select"
        },
        {
          label: "Timebox notes (optional)",
          desc: "Helpful for workshops and AI verbosity control.",
          key: "timebox",
          ph: "≤3 sentences per advisor; ≤1 sentence in Round 2",
          type: "text"
        },
        {
          label: "Additional context (optional)",
          desc: "Anything else that shapes the council’s work.",
          key: "notes",
          ph: "Executive wants early signal next Friday; mobile first",
          type: "textarea"
        }
      ],
      template: (f) => {
    const lines = s => String(s || '').split(/\n+/).map(x => x.trim()).filter(Boolean);
    const advisors = lines(f.advisors);
    const lenses = lines(f.lenses);
    const blind = lines(f.blind_spots);
    const seats = advisors.map((name, i) => {
      const L = lenses[i] ? ` — Lens: ${lenses[i]}` : '';
      const B = blind[i] ? ` — Blind spot: ${blind[i]}` : '';
      return `${i+1}. ${name}${L}${B}`;
    });

    const out = [];
    out.push('Run an Imaginary Council on one question. Keep Round 1 independent; then cross-examine; then synthesize into a smallest viable step with a dissent note and a tripwire metric.');

    // Context
    f.question && out.push(`Question: ${f.question}`);
    f.horizon && out.push(`Horizon: ${f.horizon}`);
    f.metric && out.push(`Primary metric: ${f.metric}`);
    f.constraints && out.push(`Constraints: ${f.constraints}`);
    f.inclusion && out.push(`Inclusion/ethics guardrail: ${f.inclusion}`);
    f.evidence && out.push(`Evidence snapshot:\n${f.evidence}`);
    (f.persona && String(f.persona).trim()) && out.push(`Stakeholder personas: ${f.persona}`);
    (f.bias_lens && String(f.bias_lens).trim()) && out.push(`Bias lenses: ${f.bias_lens}`);
    seats.length && out.push(`Council:\n${seats.join('\n')}`);
    f.voice && out.push(`Voice style: ${f.voice}`);
    f.timebox && out.push(`Timebox: ${f.timebox}`);
    f.notes && out.push(`Notes: ${f.notes}`);

    // Protocol
    const twoRound = !f.rounds || /^two-round/i.test(f.rounds);
    out.push('Protocol:');
    out.push('- Round 1 — Independent answers (3–5 sentences each; no referencing other seats). Include: one concrete move, one risk, and one early metric signal.');
    if (twoRound) {
      out.push('- Cross-exam — Each seat asks one adversarial, testable question to a different seat.');
      out.push('- Round 2 — One-sentence recommendation per seat (imperative voice).');
    }

    // Output scaffolding
    out.push('Output:');
    out.push('A) Round 1 answers by seat (label each with the seat name).');
    if (twoRound) out.push('B) Cross-exam questions (seat → seat).');
    if (twoRound) out.push('C) Round 2 one-line recommendations (seat: recommendation).');
    out.push('D) Synthesis —');
    out.push('   - Overlap: the move most seats would support now (state scope).');
    out.push('   - Smallest viable experiment (≤1 week): owner, steps, sample/traffic, success threshold on the primary metric.');
    out.push('   - Inclusion adjustment: one change to reduce burden on the least advantaged group.');
    out.push('   - Dependencies to clear before starting.');
    out.push('E) Minority Report — one principled dissent with the risk it guards against and a condition under which it becomes the main plan.');
    out.push('F) Pre-mortem — “If this fails in [horizon], the most likely cause is ___; mitigation: ___.”');
    out.push('G) Tripwire — define the metric/condition that triggers rollback or escalation.');
    out.push('H) Decision — choose: go / iterate / stop, with one-line rationale.');

    // Debiasing & hygiene
    out.push('Debiasing check: Did any seat dominate? Are Confidence claims tied to the evidence snapshot? Did we double-count effort? Have we represented affected users fairly?');

    return out.join('\n');
  },
      meta: {
        search_text: "imaginary council — multiple mentors, one question imaginary-mentor-council a structured thought experiment: pose one sharply framed question to a diverse council of imagined mentors (real, fictional, archetypal, or future/past selves). each gives an independent answer, then cross-examines others. you synthesize overlap into a smallest viable next step, record dissent, and set a tripwire metric. add 5–7 council members (mix of lenses). provide one question, time horizon, success metric, constraints, and an evidence snapshot. optionally add inclusion guardrails, bias lenses, and personas from your library. the template runs a two-round council (answers → cross-exam → one-line recommendations) and returns a synthesis, minority report, and a 1-week pilot plan. use:pattern phase:apply use:decision-making phase:premortem phase:explore use:recipe level:intermediate use:brainstorming creativity strategy decision break fixation by sampling diverse lenses before deciding stress-test a plan with skeptic, user, and ethicist seats unblock creative work via playful roleplay with constraints produce a smallest-viable experiment and a minority report keep it one question only; run another council for additional questions. pick at least one user/community advocate and one skeptic/red team seat. force independence: round 1 answers without referencing other seats. require each seat to state one risk and one measurable success sign. include a cultural lens beyond your own background; avoid caricature. record a minority report and a tripwire metric that triggers review. timebox: ≤3 minutes per step; perfection kills perspective. the one question decision horizon / timeframe primary success metric constraints & non-negotiables evidence snapshot (strongest 3–5 facts) council member lenses (one per line, aligned with list order) council members known blind spots (one per line, aligned) inclusion / ethics guardrail stakeholder personas (optional) bias lenses (optional) process voice style timebox notes (optional) additional context (optional)"
      }
    },

    {
      id: "implementation_intentions",
      slug: "if-then-planning",
      label: "Implementation Intentions (If–Then)",
      kind: "strategy",
      categories: [
        "planning",
        "creativity"
      ],
      tags: [
        "use:pattern",
        "use:storytelling",
        "use:healing",
        "phase:apply",
        "level:beginner",
        "use:presentations",
        "use:ad-copy"
      ],
      use_cases: [
        "bind a reliable cue to a tiny starter action to reduce choice friction",
        "create coping plans for predictable obstacles",
        "stack a new habit after an existing routine",
        "translate goals into daily cues with a 7-day scorecard",
          "if I crave sugar then drink water",
  "plan what to do if I feel stressed",
  "if it rains then I’ll work out inside",
  "set a backup plan for bad days",
  "if I miss a habit then restart tomorrow",
  "tie new habit to brushing teeth",
  "if I scroll too long then set a timer",
  "when I get home then put on running shoes",
  "if I feel anxious then try breathing exercise",
  "if I’m tired then take a short walk",
  "when I make coffee then write a to-do",
  "if I fail then learn one thing",
  "if meeting runs over then send a quick recap",
  "when alarm goes off then stretch",
  "if I want to quit then remind myself why",
    "stick to new habits without overthinking",
  "plan what to do when obstacles show up",
  "turn goals into automatic actions",
  "make a morning routine more consistent",
  "reduce decision fatigue during the day",
  "have a plan for stressful situations",
  "set up reminders that trigger action",
  "stay on track after missing a step",
  "build healthy habits with simple cues",
  "cope better with common setbacks",
  "translate vague goals into daily routines",
  "strengthen willpower with pre-decided rules",
  "prepare fallback actions in advance",
  "tie new behaviors to existing habits",
  "make change easier by lowering friction",
    "stay focused while coding sessions",
  "plan what to do if I hit a bug",
  "turn vague coding goals into small steps",
  "reduce context-switching while programming",
  "build coding habits with clear triggers",
  "cope with coding roadblocks ahead of time",
  "set fallback plan if code breaks",
  "turn coding goals into daily routines",
  "create an if then statement"
      ],
      boosters: [
        "Make the trigger observable and frequent (time, place, routine, sensation).",
        "Write the action so half-asleep you could do it in under 120 seconds.",
        "Add one coping If–Then targeting the most likely obstacle.",
        "Rehearse once: visualize cue then action firing immediately.",
        "Attach a tiny reward to reinforce the start, not the finish.",
        "Log a 7-day scorecard and a tripwire that forces plan revision.",
        "Use inclusive cues and actions that work across abilities and bandwidth."
      ],
      definition: "Turn intentions into cue-to-action reflexes: If [observable trigger], then I will [single, mechanical action]. Add a coping If–Then for the most likely obstacle, stack after a routine if helpful, and set a tripwire metric to revise early.",
      help: "Provide one clear goal, a concrete trigger you actually encounter, and a tiny then-action that starts in under 2 minutes. Optionally add a coping plan for the top obstacle, a habit stack anchor (After I [routine]...), a tiny reward, and a tripwire metric for revising the plan. You can also use WOOP: Wish, Outcome, Obstacle, Plan.",
      fields: [
        {
          label: "Goal intention",
          desc: "What you want to move forward. Keep it single-focus.",
          key: "goal",
          ph: "Finish a 2-page project brief this week",
          type: "textarea"
        },
        {
          label: "WOOP - Wish (optional)",
          desc: "Short description of what you want.",
          key: "wish",
          ph: "Write consistently each morning",
          type: "text"
        },
        {
          label: "WOOP - Outcome (optional)",
          desc: "Why it matters. One short sentence.",
          key: "outcome",
          ph: "Less stress and a stronger proposal",
          type: "text"
        },
        {
          label: "WOOP - Obstacle (optional)",
          desc: "The inner or outer blocker that usually stops you.",
          key: "obstacle",
          ph: "Morning email rabbit hole",
          type: "text"
        },
        {
          label: "IF - Trigger or situation",
          desc: "Observable cue types: time, place, after a routine, app open, body sensation.",
          key: "trigger",
          ph: "When I sit at my desk after making coffee at 8:30...",
          type: "textarea"
        },
        {
          label: "THEN - Single, mechanical action",
          desc: "2-minute starter, no decisions required.",
          key: "action",
          ph: "Start a 15-minute timer and open Brief_Q2.md",
          type: "textarea"
        },
        {
          label: "Coping If–Then (obstacle plan)",
          desc: "If [obstacle shows up], then I will [replacement action].",
          key: "coping",
          ph: "If I feel the urge to check email, then I toggle Do Not Disturb and write 1 sentence",
          type: "textarea"
        },
        {
          label: "Habit stack (optional)",
          desc: "After I [existing routine], I will [new tiny action].",
          key: "stack_anchor",
          ph: "After I put the mug down, I type the brief title",
          type: "textarea"
        },
        {
          label: "Schedule window",
          desc: "Timebox or daily window when the cue will occur.",
          key: "schedule",
          ph: "Weekdays 8:30–9:00 AM",
          type: "text"
        },
        {
          label: "Timebox for the block",
          desc: "Default minutes for the first block or timer.",
          key: "duration",
          ph: "15 minutes",
          type: "text"
        },
        {
          label: "Tiny reward",
          desc: "Simple, immediate reinforcement after starting.",
          key: "reward",
          ph: "Make tea playlist after the first 3 sentences",
          type: "text"
        },
        {
          label: "Environment tweak",
          desc: "Remove friction, place prompts, pin files, block distractions.",
          key: "environment",
          ph: "Pin the brief in the dock, auto-launch timer, block social sites",
          type: "textarea"
        },
        {
          label: "Inclusion and accessibility",
          desc: "Adjust cues and actions for abilities, language, bandwidth.",
          key: "inclusion",
          ph: "Use large-font sticky, audio chime, offline doc for low bandwidth",
          type: "textarea"
        },
        {
          label: "Persona context (optional)",
          autofill: "persona->inline",
          desc: "Pull from your persona library to tailor language and supports.",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "personas",
          ph: "ADHD knowledge worker • Low-bandwidth mobile user",
          type: "repeater"
        },
        {
          label: "Bias check lenses (optional)",
          autofill: "bias->inline",
          desc: "Heuristics to watch for: optimism, planning fallacy, present bias.",
          itemLabel: "bias",
          itemType: "typeahead",
          key: "bias_lenses",
          ph: "Present bias • Planning fallacy",
          type: "repeater"
        },
        {
          label: "Tripwire metric",
          desc: "Condition that triggers revision of the plan.",
          key: "tripwire",
          ph: "If I miss 3 cues in a row, shrink the action by 50 percent",
          type: "text"
        },
        {
          label: "Scorecard target",
          desc: "Simple adherence goal for the next 7 days.",
          key: "scorecard",
          ph: "4 of 5 weekdays",
          type: "text"
        },
        {
          label: "First check-in time",
          desc: "When you will review and adjust.",
          key: "checkin",
          ph: "Friday 4:30 PM",
          type: "text"
        },
        {
          label: "Context (optional)",
          desc: "Any constraints or notes the AI should honor.",
          key: "ctx",
          ph: "Travel week, limited mornings, use offline-capable apps",
          type: "textarea"
        }
      ],
      template: (f) => {
    const toLines = s => String(s || '').split(/\n+/).map(x => x.trim()).filter(Boolean);
    const copingLines = toLines(f.coping);
    const personas = String(f.personas || '').trim();
    const biases = String(f.bias_lenses || '').trim();

    const out = [];

    out.push('Create an Implementation Intentions plan with action and coping If–Then, optional habit stack, and a 7-day scorecard. Keep cues observable and actions mechanical.');

    // Context
    f.ctx && out.push(`Context: ${f.ctx}`);
    f.goal && out.push(`Goal: ${f.goal}`);

    // WOOP block if present
    if (f.wish || f.outcome || f.obstacle) {
      out.push('WOOP:');
      f.wish && out.push(`- Wish: ${f.wish}`);
      f.outcome && out.push(`- Outcome: ${f.outcome}`);
      f.obstacle && out.push(`- Obstacle: ${f.obstacle}`);
    }

    // Primary plan
    f.trigger && out.push(`IF: ${f.trigger}`);
    f.action && out.push(`THEN: ${f.action}`);

    // Coping plan(s)
    if (copingLines.length) {
      out.push('Coping If–Then:');
      copingLines.forEach((c, i) => out.push(`${i + 1}. ${c}`));
    }

    // Habit stack
    f.stack_anchor && out.push(`Habit stack: After I ${f.stack_anchor}`);

    // Logistics
    (f.schedule || f.duration || f.reward || f.environment) && out.push('Supports:');
    f.schedule && out.push(`- Schedule window: ${f.schedule}`);
    f.duration && out.push(`- Timebox: ${f.duration}`);
    f.reward && out.push(`- Tiny reward: ${f.reward}`);
    f.environment && out.push(`- Environment tweak: ${f.environment}`);

    // Inclusion and bias hooks
    (f.inclusion || personas || biases) && out.push('Inclusion and bias checks:');
    f.inclusion && out.push(`- Accessibility and inclusion: ${f.inclusion}`);
    personas && out.push(`- Personas: ${personas}`);
    biases && out.push(`- Bias lenses: ${biases}`);

    // Measurement
    (f.scorecard || f.tripwire || f.checkin) && out.push('Measurement and revision:');
    f.scorecard && out.push(`- Scorecard target: ${f.scorecard}`);
    f.tripwire && out.push(`- Tripwire: ${f.tripwire}`);
    f.checkin && out.push(`- First check-in: ${f.checkin}`);

    // Output instructions
    out.push('Output:');
    out.push('1) Final primary If–Then in one line.');
    if (copingLines.length) out.push('2) Coping If–Then in one line.');
    if (f.stack_anchor) out.push('3) Habit stack in one line.');
    out.push('4) 7-day scorecard with checkboxes for adherence.');
    out.push('5) 10-second rehearsal script that visualizes cue then action.');
    out.push('6) Debiasing and quality check: confirm cue is observable, action starts under 2 minutes, coping plan covers the top obstacle, reward reinforces the start, and tripwire is set.');
    out.push('7) One-line revision rule if the tripwire triggers.');

    return out.join('\n');
  },
      meta: {
        search_text: "implementation intentions (if–then) if-then-planning turn intentions into cue-to-action reflexes: if [observable trigger], then i will [single, mechanical action]. add a coping if–then for the most likely obstacle, stack after a routine if helpful, and set a tripwire metric to revise early. provide one clear goal, a concrete trigger you actually encounter, and a tiny then-action that starts in under 2 minutes. optionally add a coping plan for the top obstacle, a habit stack anchor (after i [routine]...), a tiny reward, and a tripwire metric for revising the plan. you can also use woop: wish, outcome, obstacle, plan. use:pattern use:storytelling use:healing phase:apply level:beginner use:presentations use:ad-copy planning creativity bind a reliable cue to a tiny starter action to reduce choice friction create coping plans for predictable obstacles stack a new habit after an existing routine translate goals into daily cues with a 7-day scorecard make the trigger observable and frequent (time, place, routine, sensation). write the action so half-asleep you could do it in under 120 seconds. add one coping if–then targeting the most likely obstacle. rehearse once: visualize cue then action firing immediately. attach a tiny reward to reinforce the start, not the finish. log a 7-day scorecard and a tripwire that forces plan revision. use inclusive cues and actions that work across abilities and bandwidth. goal intention woop - wish (optional) woop - outcome (optional) woop - obstacle (optional) if - trigger or situation then - single, mechanical action coping if–then (obstacle plan) habit stack (optional) schedule window timebox for the block tiny reward environment tweak inclusion and accessibility persona context (optional) bias check lenses (optional) tripwire metric scorecard target first check-in time context (optional)"
      }
    },

    {
      id: "inclusive_design",
      slug: "inclusive-design-framework",
      label: "Inclusive Design (edge personas)",
      kind: "heuristic",
      categories: [
        "design",
        "ethics",
        "quality",
        "reasoning",
        "teaching"
      ],
      tags: [
        "type:framework",
        "use:pattern",
        "use:goals",
        "use:healing",
        "use:discover",
        "use:content",
        "level:intermediate"
      ],
      use_cases: [
        "identify edge personas and mismatches (permanent • temporary • situational)",
        "co-design adaptations that reduce exclusion and cognitive load",
        "map designs to WCAG and beyond (cognition, language, environment)",
        "spec edge-first acceptance criteria and lightweight usability tests",
        "articulate “solve for one → extend to many” benefits with metrics",
          "design for people with limited vision",
  "make this easier for non-native speakers",
  "check accessibility for screen readers",
  "design for one-handed use",
  "make forms simpler for low literacy",
  "test design in noisy environments",
  "design for colorblind users",
  "make mobile use in sunlight easier",
  "plan for older users with memory challenges",
  "design for low bandwidth internet",
  "adapt for temporary injuries",
  "design for multitasking situations",
  "make instructions easy to follow",
  "check if my design excludes anyone",
  "how to include edge cases in design"
      ],
      boosters: [
        "Recognize exclusion; treat “edge cases” as design inputs, not exceptions.",
        "Use Persona Spectrum (permanent • temporary • situational) for each need.",
        "Co-design: include lived-experience reviewers before code-complete.",
        "Write adaptations as observable behaviors, not vague intentions.",
        "Pair each adaptation with an acceptance test and a success metric.",
        "Specify cognitive load reductions (steps, memory, reading level).",
        "Name assistive tech and environmental constraints explicitly.",
        "Return one small “do now” improvement and one “follow-on” improvement."
      ],
      definition: "Design for predictable contexts of exclusion by surfacing mismatches (user × environment × interface), co-designing adaptations with edge personas, and validating that improvements lift outcomes for everyone (solve for one → extend to many).",
      help: "Start with at least one edge persona and a concrete barrier. Add the environment, assistive tech, and constraints. Propose specific adaptations, map to WCAG where relevant, plan a quick validation, and define success metrics and universal benefits. Use persona/bias autofill to enrich context.",
      fields: [
        {
          label: "Persona at the edge — who might struggle most?",
          autofill: "persona->inline",
          desc: "Pull from your persona library; include needs, abilities, devices, language, and constraints.",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "edge_persona",
          ph: "Low-vision screen-reader user on mobile • One-handed parent on a bus • Newcomer with limited language",
          type: "repeater"
        },
        {
          label: "Persona Spectrum (P • T • S)",
          desc: "Permanent, temporary, and situational variants of the same need.",
          key: "spectrum",
          ph: "Vision: blind (P) • dilated pupils (T) • glare on screen (S)",
          type: "textarea"
        },
        {
          label: "Bias lenses (optional)",
          autofill: "bias->inline",
          desc: "Heuristics to watch for (e.g., typical user bias, WEIRD bias, optimistic planning).",
          itemLabel: "bias",
          itemType: "typeahead",
          key: "bias_lenses",
          ph: "Typical-user bias • Language centrism • Present bias",
          type: "repeater"
        },
        {
          label: "Environment & constraints",
          desc: "Situational factors: bandwidth, noise, lighting, motion, device, input mode.",
          key: "environment",
          ph: "Low bandwidth, bright sun, noisy bus, small phone, one-handed, intermittent power",
          type: "textarea"
        },
        {
          label: "Assistive tech & settings",
          autofill: "assistive->inline",
          desc: "Relevant AT or OS features the design should honor.",
          itemLabel: "AT",
          itemType: "typeahead",
          key: "assistive",
          ph: "Screen reader (TalkBack/VoiceOver) • Switch control • High contrast • Reduce motion",
          type: "repeater"
        },
        {
          label: "Target task/flow",
          desc: "The specific interaction to improve.",
          key: "flow",
          ph: "Account sign-up → email verification → first run",
          type: "text"
        },
        {
          label: "Barrier — what prevents full use?",
          desc: "Name the mismatch (perception, cognition, motor, language, economic, cultural).",
          key: "barrier",
          ph: "Dense jargon; small hit targets; time-limited code; bandwidth-heavy assets",
          type: "textarea"
        },
        {
          label: "Adaptation — design change to reduce exclusion",
          desc: "Concrete change: controls, sequence, copy, media, defaults; 1 change per line.",
          key: "adaptation",
          ph: "Increase target size to 44px; add “resend code” with no timeouts; plain-language alt text",
          type: "textarea"
        },
        {
          label: "Inclusive content rules (optional)",
          desc: "Language, reading level, tone, examples, localization and RTL considerations.",
          key: "content_rules",
          ph: "Plain language at ~8th grade; examples not culture-bound; avoid idioms; provide glossary",
          type: "textarea"
        },
        {
          label: "WCAG mapping (optional)",
          autofill: "wcag->sc",
          desc: "Map each adaptation to relevant WCAG 2.2 success criteria.",
          itemLabel: "SC",
          itemType: "typeahead",
          key: "wcag",
          ph: "1.4.3 Contrast (Minimum) • 2.1.1 Keyboard • 2.5.5 Target Size",
          type: "repeater"
        },
        {
          label: "Success metrics",
          desc: "Define measurable outcomes and thresholds.",
          key: "metrics",
          ph: "Task completion +15% for screen-reader users; error rate –30%; time on task –20%",
          type: "textarea"
        },
        {
          label: "Validation plan",
          desc: "Lightweight test with edge participants; protocol, tasks, success criteria.",
          key: "validation",
          ph: "Hallway test with 3 SR users; success = complete sign-up without sighted assist in ≤3 min",
          type: "textarea"
        },
        {
          label: "Benefit to all — generalization",
          desc: "Explain who else benefits (curb-cut effect).",
          key: "universal_benefit",
          ph: "Larger targets help cold-weather gloves and tremor; plain language helps non-native speakers",
          type: "textarea"
        },
        {
          label: "Edge-first acceptance criteria",
          desc: "Observable pass/fail statements centering the edge persona.",
          key: "acceptance",
          ph: "Using VoiceOver only, a first-time user can complete verification within 3 minutes without errors",
          type: "textarea"
        },
        {
          label: "Handoffs & documentation",
          desc: "Notes for engineering, QA, localization, and support.",
          key: "handoffs",
          ph: "ARIA roles; tab order; transcript/captions; string keys for i18n; QA scripts",
          type: "textarea"
        },
        {
          label: "Do-now & follow-on improvements",
          desc: "One small change to ship now; one deeper change next.",
          key: "next_steps",
          ph: "Now: enlarge targets • Next: redesign verification to passwordless magic link",
          type: "textarea"
        },
        {
          label: "Context (optional)",
          desc: "Constraints or notes the AI should honor.",
          key: "ctx",
          ph: "Mobile-first, two-sprint window, regulated industry copy requirements",
          type: "textarea"
        }
      ],
      template: (f) => {
    const toLines = s => String(s || '').split(/\n+/).map(x => x.trim()).filter(Boolean);
    const listBlock = (label, arr) => arr && arr.length ? [label, ...arr.map((x,i)=>`${i+1}. ${x}`)].join('\n') : null;

    const edgeList = toLines(f.edge_persona);
    const adaptList = toLines(f.adaptation);
    const wcagList = toLines(f.wcag);
    const metricList = toLines(f.metrics);
    const nextList = toLines(f.next_steps);

    const out = [];
    out.push('Apply an Inclusive Design pass with Persona Spectrum, concrete adaptations, edge-first acceptance criteria, and a lightweight validation plan. Be specific and measurable.');

    // Context
    f.ctx && out.push(`Context: ${f.ctx}`);
    f.flow && out.push(`Target flow: ${f.flow}`);

    // People & lenses
    edgeList.length && out.push(listBlock('Edge personas:', edgeList));
    f.spectrum && out.push(`Persona Spectrum (P • T • S):\n${f.spectrum}`);
    const biasTxt = String(f.bias_lenses || '').trim();
    biasTxt && out.push(`Bias lenses: ${biasTxt}`);

    // Environment & AT
    f.environment && out.push(`Environment & constraints:\n${f.environment}`);
    const atTxt = String(f.assistive || '').trim();
    atTxt && out.push(`Assistive tech & settings:\n${atTxt}`);

    // Barrier & adaptations
    f.barrier && out.push(`Barrier:\n${f.barrier}`);
    adaptList.length && out.push(listBlock('Adaptations:', adaptList));

    // Content rules & standards
    f.content_rules && out.push(`Inclusive content rules:\n${f.content_rules}`);
    wcagList.length && out.push(listBlock('WCAG mapping:', wcagList));

    // Measurement & validation
    metricList.length && out.push(listBlock('Success metrics:', metricList));
    f.validation && out.push(`Validation plan:\n${f.validation}`);
    f.universal_benefit && out.push(`Benefit to all:\n${f.universal_benefit}`);

    // Ops
    f.acceptance && out.push(`Edge-first acceptance criteria:\n${f.acceptance}`);
    f.handoffs && out.push(`Handoffs & documentation:\n${f.handoffs}`);
    nextList.length && out.push(listBlock('Next steps (now • later):', nextList));

    // Output spec (instructions to AI)
    out.push('Output:');
    out.push('1) Mismatch map: user × environment × interface (3–5 bullets).');
    out.push('2) Adaptations table (bulleted): change → rationale → WCAG/standard (if any) → acceptance test.');
    out.push('3) Inclusive content rewrite (1 short example of improved copy).');
    out.push('4) Validation script: tasks, participants (edge-first), success criteria, and what to measure.');
    out.push('5) Metrics: target thresholds and how they generalize (curb-cut effect).');
    out.push('6) Risks & trade-offs (performance, localization, support) and mitigations.');
    out.push('7) Change log: what to ship now vs. next sprint.');

    return out.filter(Boolean).join('\n');
  },
      meta: {
        search_text: "inclusive design (edge personas) inclusive-design-framework design for predictable contexts of exclusion by surfacing mismatches (user × environment × interface), co-designing adaptations with edge personas, and validating that improvements lift outcomes for everyone (solve for one → extend to many). start with at least one edge persona and a concrete barrier. add the environment, assistive tech, and constraints. propose specific adaptations, map to wcag where relevant, plan a quick validation, and define success metrics and universal benefits. use persona/bias autofill to enrich context. type:framework use:pattern use:goals use:healing use:discover use:content level:intermediate design ethics quality reasoning teaching identify edge personas and mismatches (permanent • temporary • situational) co-design adaptations that reduce exclusion and cognitive load map designs to wcag and beyond (cognition, language, environment) spec edge-first acceptance criteria and lightweight usability tests articulate “solve for one → extend to many” benefits with metrics recognize exclusion; treat “edge cases” as design inputs, not exceptions. use persona spectrum (permanent • temporary • situational) for each need. co-design: include lived-experience reviewers before code-complete. write adaptations as observable behaviors, not vague intentions. pair each adaptation with an acceptance test and a success metric. specify cognitive load reductions (steps, memory, reading level). name assistive tech and environmental constraints explicitly. return one small “do now” improvement and one “follow-on” improvement. persona at the edge — who might struggle most? persona spectrum (p • t • s) bias lenses (optional) environment & constraints assistive tech & settings target task/flow barrier — what prevents full use? adaptation — design change to reduce exclusion inclusive content rules (optional) wcag mapping (optional) success metrics validation plan benefit to all — generalization edge-first acceptance criteria handoffs & documentation do-now & follow-on improvements context (optional)"
      }
    },

    {
      id: "inner_child",
      slug: "inner-child-dialogue",
      label: "Inner Child Work — Conscious Self · Inner Child",
      kind: "framework",
      categories: [
        "psychology",
        "self-reflection"
      ],
      tags: [
        "use:pattern",
        "level:beginner",
        "topic:future-self",
        "level:intermediate",
        "use:healing",
        "topic:prompting"
      ],
      use_cases: [
        "connect with and comfort your “inner child” (wounded or vulnerable parts of yourself)",
        "practice re-parenting: respond with the compassion and guidance you needed then",
        "explore childhood experiences that shape your current patterns and emotions",
         "heal childhood wounds",
  "talk kindly to my younger self",
  "practice re-parenting exercises",
  "comfort the scared part of me",
  "rewrite old memories with compassion",
  "give my inner child a safe space",
  "explore where my triggers come from",
  "connect with my playful side again",
  "heal past neglect through dialogue",
  "practice self-love through inner child work",
  "support myself like a caring parent",
  "understand childhood roots of my anxiety",
  "build trust with my inner child",
  "respond differently to old patterns",
  "validate feelings I had as a child"
      ],
      boosters: [
        "Approach the inner child gently — think of how you would speak to a child you love.",
        "Let the Inner Child voice fears or needs freely. Respond with validation and steady care."
      ],
      definition: "A popular therapeutic exercise (John Bradshaw, Homecoming) where you dialogue between your adult conscious self and your “inner child” — the vulnerable, wounded, or playful child-part inside you — to re-parent, validate, and integrate them.",
      help: "Pick a feeling from the list or type your own. Optionally attach personas to both your Inner Child and your Conscious Self (uses the same typeahead+autofill you already have). The model will script a dialogue, then summarize insights.",
      fields: [
        {
          label: "Inner Child feeling (common list)",
          key: "child_feeling",
          options: [
            {
              label: "— Select feeling —",
              value: ""
            },
            "anger",
            "anxiety",
            "apathy",
            "avoidance",
            "bitterness",
            "burnout",
            "confusion",
            "defensiveness",
            "despair",
            "distrust",
            "envy",
            "fear",
            "frustration",
            "guilt",
            "hopelessness",
            "insecurity",
            "jealousy",
            "loneliness",
            "melancholy",
            "numbness",
            "perfectionism",
            "procrastination",
            "rage",
            "regret",
            "resentment",
            "self-criticism",
            "self-loathing",
            "shame",
            "stress",
            "withdrawal",
            "acceptance",
            "affection",
            "awe",
            "calm",
            "caring",
            "compassion",
            "confidence",
            "contentment",
            "curiosity",
            "empathy",
            "enthusiasm",
            "excitement",
            "forgiveness",
            "freedom",
            "friendliness",
            "fun",
            "generosity",
            "gratitude",
            "happiness",
            "hope",
            "inspiration",
            "joy",
            "kindness",
            "laughter",
            "love",
            "motivation",
            "optimism",
            "peace",
            "playfulness",
            "pride",
            "relief",
            "relaxation",
            "satisfaction",
            "security",
            "serenity",
            "trust",
            "wonder",
            "zest"
          ],
          type: "select"
        },
        {
          label: "Inner Child traits/feelings",
          desc: "Write freely. It’s safe to name whatever surfaces — clarity grows when you give the child a voice.",
          key: "child_trait",
          ph: "e.g., scared, playful, abandoned, joyful",
          type: "textarea"
        },
        {
          label: "Name your Inner Child",
          desc: "Trust what comes up — no right or wrong answers.",
          key: "child_name",
          ph: "e.g., Little Me, Scared Kid, Playful One",
          type: "text"
        },
        {
          label: "Inner Child persona (type to search personas)",
          autofill: "persona->inline",
          desc: "Type to search personas",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "child_persona",
          ph: "e.g., Little Me at 7, Lonely Teenager, Curious Explorer",
          type: "repeater"
        },
        {
          label: "Inner Child persona details (optional)",
          desc: "Write freely. It’s safe to name whatever surfaces.",
          key: "child_text",
          ph: "Optionally add more persona details",
          type: "textarea"
        },
        {
          label: "Conscious Self feeling (common list)",
          key: "you_feeling",
          options: [],
          type: "select"
        },
        {
          label: "Conscious Self traits/feelings",
          desc: "Give words to the qualities of your adult self you want to bring here.",
          key: "you_trait",
          ph: "e.g., supportive, calm, wise",
          type: "textarea"
        },
        {
          label: "Name your Conscious Self",
          desc: "Trust what comes up — no right or wrong answers.",
          key: "you_name",
          ph: "e.g., Compassionate Parent, Wise Mentor",
          type: "text"
        },
        {
          label: "Conscious Self persona (type to search personas)",
          autofill: "persona->inline",
          desc: "Type to search personas",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "you_persona",
          ph: "e.g., Compassionate Parent, Pragmatic Coach",
          type: "repeater"
        },
        {
          label: "Conscious persona details (optional)",
          desc: "Write freely. It’s safe to name whatever surfaces.",
          key: "you_text",
          ph: "Optionally add more persona details",
          type: "textarea"
        },
        {
          label: "Triggering scenario (optional)",
          desc: "Briefly describe what brings your Inner Child up.",
          key: "scenario",
          ph: "When or why does this child usually appear?",
          type: "textarea"
        }
      ],
      template: ({
    child_feeling, child_trait, child_name, child_persona, child_text,
    you_feeling, you_trait, you_name, you_persona, you_text,
    scenario, ctx, audience, style, tone
  }) => {
    const clean = v => (v && String(v).trim()) || '';
    const oneLine = s => String(s||'').replace(/\s*\n+\s*/g,' ').replace(/\s{2,}/g,' ').trim();

    const childFeelings = [clean(child_feeling), clean(child_trait)].filter(Boolean).join(', ');
    const youFeelings   = [clean(you_feeling), clean(you_trait)].filter(Boolean).join(', ');

    const childBlock = [
      child_name && `Inner Child persona: ${clean(child_name)}`,
      child_persona && `Additional persona(s): ${Array.isArray(child_persona) ? child_persona.join(', ') : clean(child_persona)}`,
      child_text && `Details: ${oneLine(child_text)}`
    ].filter(Boolean).join('\n');

    const youBlock = [
      you_name && `Conscious persona: ${clean(you_name)}`,
      you_persona && `Additional persona(s): ${Array.isArray(you_persona) ? you_persona.join(', ') : clean(you_persona)}`,
      you_text && `Details: ${oneLine(you_text)}`
    ].filter(Boolean).join('\n');

    return [
      'Initiate an Inner Child dialogue between the conscious self and the inner child.',
      ctx && `Context: ${ctx}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      childFeelings && `Inner Child feelings/traits: ${childFeelings}`,
      youFeelings && `Conscious feelings/traits: ${youFeelings}`,
      scenario && `Trigger:\n${scenario}`,
      childBlock && childBlock,
      youBlock && youBlock,
      'Output:\n1) Dialogue exchange where “You” (Conscious Self) and “Inner Child” each speak\n' +
      '2) The Inner Child shares its needs or fears; You respond with empathy, validation, and re-parenting care\n' +
      '3) A final reflection or practice to nurture integration'
    ].filter(Boolean).join('\n');
  },
      meta: {
        search_text: "inner child work — conscious self · inner child inner-child-dialogue a popular therapeutic exercise (john bradshaw, homecoming) where you dialogue between your adult conscious self and your “inner child” — the vulnerable, wounded, or playful child-part inside you — to re-parent, validate, and integrate them. pick a feeling from the list or type your own. optionally attach personas to both your inner child and your conscious self (uses the same typeahead+autofill you already have). the model will script a dialogue, then summarize insights. use:pattern level:beginner topic:future-self level:intermediate use:healing topic:prompting psychology self-reflection connect with and comfort your “inner child” (wounded or vulnerable parts of yourself) practice re-parenting: respond with the compassion and guidance you needed then explore childhood experiences that shape your current patterns and emotions approach the inner child gently — think of how you would speak to a child you love. let the inner child voice fears or needs freely. respond with validation and steady care. inner child feeling (common list) inner child traits/feelings name your inner child inner child persona (type to search personas) inner child persona details (optional) conscious self feeling (common list) conscious self traits/feelings name your conscious self conscious self persona (type to search personas) conscious persona details (optional) triggering scenario (optional)"
      }
    },

    {
      id: "internal_weather",
      slug: "internal-weather-report",
      label: "Internal Weather Report — Storm · Calm · Forecast",
      kind: "framework",
      categories: [
        "self-reflection",
        "writing",
        "teaching"
      ],
      tags: [
        "use:pattern",
        "use:presentations",
        "use:workshop",
        "use:goals",
        "level:beginner",
        "phase:premortem"
      ],
      use_cases: [
        "one-minute mood check to reduce reactivity",
        "pre-meeting “state of me” for clearer collaboration",
        "post-incident decompression and next-step planning",
        "daily self-regulation ritual integrated with spoons/energy tracking",
          "quick emotional check-in before work",
  "share my mood with a team in simple terms",
  "help kids name and express feelings",
  "track my energy for chronic illness",
  "use in therapy sessions as a grounding tool",
  "check my state before making a big decision",
  "reflect on how I feel at the end of the day",
  "teach emotional literacy in classrooms",
  "reduce conflict by naming my state first",
  "journal moods using weather metaphors"
      ],
      boosters: [
        "Prefer 1–3 precise feelings and one body signal over long narratives.",
        "Use sliders: Temperature (arousal), Pressure (demands), Visibility (clarity), Wind (context switching), Humidity (uncertainty).",
        "End with one boundary, one 10–20 minute step, and one contingency.",
        "If sharing with others, keep content impact-focused and opt-in only.",
        "Optionally convert the Forecast into an If–Then plan (implementation intention)."
      ],
      definition: "A compact self-report using weather metaphors: name the current “Storm” (nowcast), the “Calm” (anchors/resources), and a short “Forecast” (near-term expectations, boundaries, and next step).",
      help: "Describe how you feel in plain words or sliders. The model converts it into a humane “weather report” with a tiny action plan. Keep it brief, concrete, and non-judgmental. Use numbers (0–10) if words are hard today.",
      fields: [
        {
          label: "Free text mood (optional)",
          desc: "Plain description in your own words. Helpful for nuance.",
          key: "mood",
          ph: "Nervous but hopeful; scattered after meetings; low social battery.",
          type: "textarea"
        },
        {
          label: "Mood persona(s)",
          autofill: "persona->inline",
          desc: "Add guiding archetypes to frame tone and needs (e.g., Steady Navigator, Playful Sprite, Anxious Scholar).",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "mood_personas",
          ph: "Start typing to insert one or more mood archetypes…",
          type: "repeater"
        },
        {
          label: "Body signals (optional)",
          desc: "Where and how it shows up in the body.",
          key: "body_signals",
          ph: "Tight jaw; fluttery stomach; shallow breath; heavy shoulders.",
          type: "textarea"
        },
        {
          label: "Somatic mentor persona(s) (optional)",
          autofill: "persona->inline",
          desc: "Somatic coaches/mentors to guide interoception and pacing (e.g., Breath Coach, Gentle Physio, Mindful Yogi).",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "body_persona",
          ph: "Start typing to add one or more somatic mentor personas…",
          type: "repeater"
        },
        {
          label: "Temperature (arousal 0–10)",
          desc: "How revved up you feel (0=very calm, 10=amped).",
          key: "temperature",
          ph: "e.g., 7",
          type: "text"
        },
        {
          label: "Pressure (demands/stress 0–10)",
          desc: "Obligations, deadlines, social load.",
          key: "pressure",
          ph: "e.g., 6",
          type: "text"
        },
        {
          label: "Visibility (clarity 0–10)",
          desc: "How clear the next steps feel (0=fog, 10=clear skies).",
          key: "visibility",
          ph: "e.g., 5",
          type: "text"
        },
        {
          label: "Wind (context switching 0–10)",
          desc: "Mental churn; number of competing threads.",
          key: "wind",
          ph: "e.g., 8",
          type: "text"
        },
        {
          label: "Humidity (uncertainty low/med/high)",
          desc: "Ambient ambiguity level.",
          key: "humidity",
          ph: "e.g., high",
          type: "text"
        },
        {
          label: "Energy spoons (0–10, optional)",
          desc: "Quick energy budget estimate (Spoon Theory).",
          key: "spoons",
          ph: "e.g., 4",
          type: "text"
        },
        {
          label: "Calm anchors/resources",
          desc: "Routines, people, tools, values that stabilize you.",
          key: "anchors",
          ph: "Water + walk; focus playlist; “kindness over speed”; pair with Sam at 2pm.",
          type: "textarea"
        },
        {
          label: "Values/mentor persona(s) (optional)",
          autofill: "persona->inline",
          desc: "Supportive inner mentor/values voices to guide choices (e.g., Compassionate Nurturer, Stoic Coach, Future Self).",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "values_persona",
          ph: "Start typing to add mentor/values personas…",
          type: "repeater"
        },
        {
          label: "Boundary (one line)",
          desc: "Behavioral “no” or limit for today.",
          key: "boundary",
          ph: "No new meetings after 3pm; slack replies after 5pm tomorrow.",
          type: "text"
        },
        {
          label: "Request (optional)",
          desc: "What you’ll ask of others (who/what/when).",
          key: "request",
          ph: "PM: clarify acceptance criteria by noon; teammate: pair 20m on blockers.",
          type: "textarea"
        },
        {
          label: "Tiny next step (10–20 min)",
          desc: "Smallest viable action aligned to current capacity.",
          key: "next_step",
          ph: "Draft 3 bullets for spec; rename files; 10-minute walk.",
          type: "text"
        },
        {
          label: "If it worsens → fallback",
          desc: "Pre-decided move if “storm” intensifies.",
          key: "contingency",
          ph: "Ping manager; postpone non-urgent task; breathing box 3 minutes.",
          type: "textarea"
        },
        {
          label: "Share mode",
          desc: "Select how the output should be framed for the intended audience. The selected value injects explicit AI instructions.",
          key: "share_mode",
          options: [
            {
              label: "Private log",
              value: "private log — write in first-person; include feelings + body signals; no audience; no requests; avoid names; ≤120 words; gentle, validating tone."
            },
            {
              label: "Team standup (impact-focused)",
              value: "team standup — neutral, impact-focused; omit personal details; state availability, one boundary, one request, and one tiny next step as bullets; ≤80 words."
            },
            {
              label: "Partner/friend check-in (feelings + needs)",
              value: "partner/friend check-in — warm, supportive; include feelings + needs and one specific request; de-jargonize; include appreciation; ≤150 words."
            }
          ],
          type: "select"
        },
        {
          label: "Style tone (optional)",
          desc: "Choose how the language should read. The selected value injects stylistic instructions into the prompt.",
          key: "tone_pref",
          options: [
            {
              label: "Plain",
              value: "plain — everyday language; concrete nouns; short sentences; avoid metaphors unless user provided."
            },
            {
              label: "Poetic",
              value: "poetic — concise vivid metaphors; sensory detail; no purple prose; keep it under control."
            },
            {
              label: "Playful",
              value: "playful — light humor; gentle; no sarcasm; keep safety and care foregrounded."
            },
            {
              label: "Clinical",
              value: "clinical — objective descriptions; behavioral/physiological terms; non-judgmental; no advice creep."
            },
            {
              label: "Coach-like",
              value: "coach-like — compassionate, action-oriented; normalize emotions; offer one tiny step and one encouragement."
            }
          ],
          type: "select"
        },
        {
          label: "Constraints (optional)",
          desc: "Formatting or privacy constraints.",
          key: "constraints",
          ph: "≤120 words; no medical labels; avoid sensitive details.",
          type: "textarea"
        }
      ],
      template: (f) => {
    const lines = [];
    const asNum = (x) => {
      const v = Number(String(x||'').replace(/[^0-9.]/g,''));
      return Number.isFinite(v) ? v : null;
    };
    const listify = (val) =>
      Array.isArray(val)
        ? val
        : String(val || '')
            .split(/\n+/)
            .map(s => s.trim())
            .filter(Boolean);

    // Metrics
    const T = asNum(f.temperature), P = asNum(f.pressure), V = asNum(f.visibility), W = asNum(f.wind);
    const metrics = [];
    if (T!=null) metrics.push(`Temp=${T}/10`);
    if (P!=null) metrics.push(`Pressure=${P}/10`);
    if (V!=null) metrics.push(`Visibility=${V}/10`);
    if (W!=null) metrics.push(`Wind=${W}/10`);
    if (f.humidity) metrics.push(`Humidity=${f.humidity}`);
    if (f.spoons) metrics.push(`Spoons=${f.spoons}/10`);

    // Header
    lines.push('Create an Internal Weather Report (Storm · Calm · Forecast). Keep it humane, concise, and non-judgmental.');
    if (f.ctx) lines.push(`Context: ${f.ctx}`);
    if (f.share_mode) lines.push(`Audience mode directive: ${f.share_mode}`);
    if (f.tone_pref) lines.push(`Style tone directive: ${f.tone_pref}`);
    if (f.constraints) lines.push(`Constraints: ${f.constraints}`);

    // Storm
    lines.push('Storm — Nowcast:');
    if (f.mood) lines.push(`• Feelings: ${f.mood}`);
    if (f.mood_personas && String(f.mood_personas).trim()) {
      const mp = listify(f.mood_personas);
      if (mp.length) lines.push(`• Mood persona(s): ${mp.join('; ')}`);
    }
    if (f.body_signals) lines.push(`• Body: ${f.body_signals}`);
    if (f.body_persona && String(f.body_persona).trim()) {
      const bp = listify(f.body_persona);
      if (bp.length) lines.push(`• Somatic mentor persona(s): ${bp.join('; ')}`);
    }
    if (metrics.length) lines.push(`• Metrics: ${metrics.join(' · ')}`);

    // Calm
    lines.push('Calm — Anchors & Capacity:');
    if (f.anchors) lines.push(`• Anchors: ${f.anchors}`);
    if (f.values_persona && String(f.values_persona).trim()) {
      const vp = listify(f.values_persona);
      if (vp.length) lines.push(`• Mentor/values persona(s): ${vp.join('; ')}`);
    }
    if (f.boundary) lines.push(`• Boundary: ${f.boundary}`);

    // Forecast
    lines.push('Forecast — Next few hours:');
    if (f.request) lines.push(`• Request: ${f.request}`);
    if (f.next_step) lines.push(`• Tiny next step (10–20m): ${f.next_step}`);
    if (f.contingency) lines.push(`• If worsens → ${f.contingency}`);

    // If–Then (auto-generate a simple implementation intention)
    if (f.next_step) {
      const trigger = (P!=null && P>=7) ? 'when pressure spikes again'
                    : (V!=null && V<=4) ? 'when visibility feels foggy'
                    : 'when I notice avoidance';
      lines.push('Implementation Intention:');
      lines.push(`If ${trigger}, then I will ${f.next_step}.`);
    }

    // Share-safe scaffold (only if sharing externally)
    if (f.share_mode && !/private log/i.test(f.share_mode)) {
      lines.push('Team-safe summary (no private details):');
      lines.push('- Current impact: how conditions affect availability/focus.');
      lines.push('- One request and one boundary, with timing.');
      lines.push('- One tiny next step you commit to.');
    }

    lines.push('Close with one grounding act (water, breath, light, brief stretch). Emotions are weather; they change.');

    // Output spec
    lines.push('Output:');
    lines.push('1) Current conditions (Storm): feelings, body, metrics, and any mood/somatic personas in one short paragraph.');
    lines.push('2) Calm (Anchors): list 2–4 supports (values/mentor persona(s) if provided).');
    lines.push('3) Forecast: expectations for the next few hours + boundary + tiny next step + request + contingency.');
    lines.push('4) Optional team-safe summary aligned to Share mode directive.');
    lines.push('5) One-line Implementation Intention if appropriate.');

    return lines.filter(Boolean).join('\n');
  },
      meta: {
        search_text: "internal weather report — storm · calm · forecast internal-weather-report a compact self-report using weather metaphors: name the current “storm” (nowcast), the “calm” (anchors/resources), and a short “forecast” (near-term expectations, boundaries, and next step). describe how you feel in plain words or sliders. the model converts it into a humane “weather report” with a tiny action plan. keep it brief, concrete, and non-judgmental. use numbers (0–10) if words are hard today. use:pattern use:presentations use:workshop use:goals level:beginner phase:premortem self-reflection writing teaching one-minute mood check to reduce reactivity pre-meeting “state of me” for clearer collaboration post-incident decompression and next-step planning daily self-regulation ritual integrated with spoons/energy tracking prefer 1–3 precise feelings and one body signal over long narratives. use sliders: temperature (arousal), pressure (demands), visibility (clarity), wind (context switching), humidity (uncertainty). end with one boundary, one 10–20 minute step, and one contingency. if sharing with others, keep content impact-focused and opt-in only. optionally convert the forecast into an if–then plan (implementation intention). free text mood (optional) mood persona(s) body signals (optional) somatic mentor persona(s) (optional) temperature (arousal 0–10) pressure (demands/stress 0–10) visibility (clarity 0–10) wind (context switching 0–10) humidity (uncertainty low/med/high) energy spoons (0–10, optional) calm anchors/resources values/mentor persona(s) (optional) boundary (one line) request (optional) tiny next step (10–20 min) if it worsens → fallback share mode style tone (optional) constraints (optional)"
      }
    },

    {
      id: "kaitiakitanga",
      slug: "kaitiakitanga-guardianship",
      label: "Kaitiakitanga — Guardianship & Stewardship (Māori)",
      kind: "strategy",
      categories: [
        "ethics",
        "product-management",
        "cultural-frameworks"
      ],
      tags: [
        "type:framework",
        "use:storytelling",
        "use:brainstorming",
        "topic:matrix",
        "phase:apply",
        "use:format-guidance",
        "use:pattern",
        "level:intermediate"
      ],
      use_cases: [
        "assess long-term responsibilities for places, communities, species, data, or knowledge (taonga)",
        "design safeguards (e.g., rāhui triggers) and monitoring with local guardians (kaitiaki)",
        "set co-governance, escalation paths, and reciprocity duties with affected groups",
          "plan product stewardship with community input",
  "design data use with indigenous guardianship",
  "evaluate environmental impact long-term",
  "set cultural protocols for shared resources",
  "build reciprocity into company strategy",
  "co-create rules for when to pause activity",
  "include indigenous voices in governance",
  "frame sustainability through guardianship lens",
  "align product roadmap with intergenerational duty",
  "treat knowledge as taonga (treasure) to protect"
      ],
      boosters: [
        "Treat kaitiakitanga as relational and place-based. Do not generalize across iwi/hapū; name the specific partners and tikanga you’ll follow.",
        "Add an intergenerational horizon (25–100 years) and define ‘mauri’ indicators you will uphold.",
        "Name kaitiaki roles, decision rights, and escalation paths; specify how and when guardians can pause/stop activity (rāhui).",
        "State tangible reciprocity (manaakitanga): who benefits, how, and how you’ll remain accountable over time.",
        "If any of: partner consent, guardianship roles, or mauri indicators are missing, insert a clear [[MISSING]] note and a next step."
      ],
      definition: "A stewardship lens grounded in Māori values that centers kinship with place and beings, protection of taonga (treasures), guardians' obligations, and long-term balance. It emphasizes mauri (life force), tikanga (correct practice), and co-governance with kaitiaki.",
      help: "Map the taonga, the people/places (whakapapa), the guardians and protocols (tikanga), what strengthens mauri, and the safeguards you’ll use (including rāhui). The output is a practical plan with roles, metrics, reciprocity, and review cadence. This scaffold does not replace iwi/hapū authority; it helps you prepare and show respect.",
      fields: [
        {
          label: "Taonga — what are we safeguarding?",
          desc: "Name the valued thing(s): place, river, species, language, knowledge, datasets, stories, community trust.",
          key: "taonga",
          ph: "e.g., Coastal estuary and customary fisheries; Whanganui-style river data; local language archives",
          type: "textarea"
        },
        {
          label: "Place & context (where/whose place?)",
          desc: "Name the rohe (area), waterways, mountains, community context; note prior impacts or existing protections.",
          key: "place",
          ph: "e.g., Te Tai Tokerau coastline; existing rāhui after shellfish die-off in 2023; community monitoring group active",
          type: "textarea"
        },
        {
          label: "Kaitiaki / mana whenua partners",
          autofill: "persona->inline",
          desc: "Local guardians or authorities (iwi/hapū/whānau, community groups) who hold rangatiratanga or stewardship roles.",
          itemLabel: "partner",
          itemType: "typeahead",
          key: "kaitiaki_partners",
          ph: "Start typing to add partners (e.g., [Iwi/Hapū Name], Harbour Care, Marae committee)",
          type: "repeater"
        },
        {
          label: "Your stewarding team (internal)",
          autofill: "persona->inline",
          desc: "Internal roles accountable to kaitiaki (product, data, legal, ops, research, ethics). Include decision rights.",
          itemLabel: "role",
          itemType: "typeahead",
          key: "steward_team",
          ph: "Start typing to add roles (e.g., Head of Data, Community Liaison, Ops Lead)",
          type: "repeater"
        },
        {
          label: "Tikanga / protocols & consent",
          desc: "Protocols you will follow (engagement order, hui cadence, karakia, data protocols, IP/cultural safety, consent form).",
          key: "tikanga_protocols",
          ph: "e.g., Hui at marae before kickoff; co-draft data use protocol; cultural safety training for team",
          type: "textarea"
        },
        {
          label: "Mauri indicators — how do we know vitality is upheld?",
          desc: "Define qualitative and quantitative indicators for the vitality of the taonga (ecological, cultural, social, trust).",
          key: "mauri_indicators",
          ph: "e.g., Shellfish abundance index; water clarity; language use at school; community trust score",
          type: "textarea"
        },
        {
          label: "Potential impacts (near → long term)",
          desc: "Positive and negative impacts, including distribution across groups and generations.",
          key: "impacts",
          ph: "Near (0–2y): access changes; Mid (3–10y): species recovery; Long (25y+): cultural transmission strengthened",
          type: "textarea"
        },
        {
          label: "Intergenerational horizon (years)",
          desc: "Commit to a long view aligned with kaitiakitanga.",
          key: "intergen_horizon",
          ph: "e.g., 50",
          type: "text"
        },
        {
          label: "Safeguards — rāhui triggers & thresholds",
          desc: "Explicit conditions to pause/stop or restrict activity; who declares and how it’s communicated/lifted.",
          key: "rahui_triggers",
          ph: "e.g., Turbidity > threshold 14 days; health event; species mortality spike; misuse of taonga data",
          type: "textarea"
        },
        {
          label: "Monitoring & reporting cadence",
          desc: "What you measure, by whom, how often, and where results are published. Include co-review with kaitiaki.",
          key: "monitoring",
          ph: "Monthly ecological + cultural health review; quarterly public dashboard; annual hui for adaptive changes",
          type: "textarea"
        },
        {
          label: "Manaakitanga — reciprocity & benefits",
          desc: "Tangible benefits to affected communities and places: capability, resources, revenue share, data returns, access.",
          key: "reciprocity",
          ph: "e.g., Fund local monitoring gear; paid guardian seats; bilingual materials; data sovereignty tools",
          type: "textarea"
        },
        {
          label: "Governance & escalation paths",
          desc: "Decision rights, veto/stop powers, dispute resolution, and escalation to guardians.",
          key: "governance",
          ph: "e.g., Joint governance board with guardian veto on ecological risk; independent mediator named",
          type: "textarea"
        },
        {
          label: "Knowledge & data protocols (taonga, IP, sovereignty)",
          desc: "Rules for handling taonga works/data (classification, consent, access, storage, CARE-aligned sharing).",
          key: "knowledge_safety",
          ph: "e.g., Classified “taonga data”; guardians co-own access keys; no secondary use without new consent",
          type: "textarea"
        },
        {
          label: "Non-actions (deliberate restraint)",
          desc: "What you will not do; removes over-control and reduces harm.",
          key: "non_actions",
          ph: "e.g., No commercial harvest; no model training on taonga data; no drones over wāhi tapu",
          type: "textarea"
        }
      ],
      template: (f) => {
    const toLines = (x) => Array.isArray(x) ? x : String(x || '').split(/\n+/).map(s => s.trim()).filter(Boolean);
    const list = (label, val) => val && toLines(val).length ? `${label}\n` + toLines(val).map((v,i)=>`  ${i+1}. ${v}`).join('\n') : '';
    const simple = (label, val) => val ? `${label}\n${val}` : '';

    const horizon = f.intergen_horizon ? `${f.intergen_horizon} years` : '[[MISSING: intergenerational horizon]]';
    const missing = (k, note) => f[k] ? '' : `[[MISSING: ${note}]]`;

    return [
      'Apply a Kaitiakitanga (guardianship) plan. This scaffold is relational and place-based; it does not replace iwi/hapū authority. Center local kaitiaki.',
      f.ctx && `Context: ${f.ctx}`,

      simple('Taonga (what we are safeguarding):', f.taonga || '[[MISSING: taonga]]'),
      simple('Place & context:', f.place || '[[MISSING: place/rohe context]]'),

      list('Kaitiaki / mana whenua partners:', f.kaitiaki_partners) || '[[MISSING: named kaitiaki/mana whenua partners]]',
      list('Your stewarding team (internal):', f.steward_team) || '[[MISSING: internal stewarding roles]]',

      simple('Tikanga / protocols & consent:', f.tikanga_protocols || '[[MISSING: protocols and consent approach]]'),
      simple('Mauri indicators (how vitality is upheld):', f.mauri_indicators || '[[MISSING: mauri indicators]]'),

      simple('Potential impacts (near → long term):', f.impacts || '[[MISSING: impact mapping]]'),
      `Intergenerational horizon: ${horizon}`,

      simple('Safeguards — rāhui triggers & thresholds:', f.rahui_triggers || '[[MISSING: explicit pause/stop conditions]]'),
      simple('Monitoring & reporting cadence:', f.monitoring || '[[MISSING: cadence and co-review]]'),

      simple('Manaakitanga — reciprocity & benefits:', f.reciprocity || '[[MISSING: concrete reciprocity]]'),
      simple('Governance & escalation paths:', f.governance || '[[MISSING: decision rights, dispute resolution, guardian veto/stop]]'),
      simple('Knowledge & data protocols (taonga, IP, sovereignty):', f.knowledge_safety || '[[MISSING: data/knowledge safety]]'),
      simple('Non-actions (deliberate restraint):', f.non_actions || '[[MISSING: explicit non-actions]]'),

      '',
      'Checklist for the AI (do not omit):',
      '- Treat kaitiakitanga as relational and place-specific; avoid token language.',
      '- Name the kaitiaki partners and their decision rights. If unknown, insert [[MISSING]] with a next-step engagement.',
      '- Keep mauri indicators actionable (ecological + cultural + trust).',
      '- Include rāhui triggers with thresholds and comms plan (who declares, how lifted).',
      '- State reciprocity (manaakitanga) and reporting cadence openly.',
      '- Add a clear intergenerational lens and record how today’s actions strengthen mauri over time.',
      '- If any critical element is missing (partners, consent, mauri, safeguards), flag it explicitly and propose the next respectful step (hui, co-draft protocol, pause).',

      '',
      'Output:',
      '1) Whakapapa map (people/places/taonga touched; partners named).',
      '2) Mauri plan (indicators, baseline, target state, how measured).',
      '3) Safeguards (rāhui triggers, thresholds, comms, release conditions).',
      '4) Governance (roles, decision rights, escalation, dispute-resolution).',
      '5) Manaakitanga & reciprocity (tangible benefits, capacity-building).',
      '6) Intergenerational horizon and “leave-better-than-found” commitment.',
      '7) Monitoring & public reporting cadence (with co-review by kaitiaki).',
      '8) Non-actions (restraints) and risks explicitly accepted.',
      '9) Next respectful step if any [[MISSING]] remains (who, when, where).'
    ].filter(Boolean).join('\n');
  },
      meta: {
        search_text: "kaitiakitanga — guardianship & stewardship (māori) kaitiakitanga-guardianship a stewardship lens grounded in māori values that centers kinship with place and beings, protection of taonga (treasures), guardians' obligations, and long-term balance. it emphasizes mauri (life force), tikanga (correct practice), and co-governance with kaitiaki. map the taonga, the people/places (whakapapa), the guardians and protocols (tikanga), what strengthens mauri, and the safeguards you’ll use (including rāhui). the output is a practical plan with roles, metrics, reciprocity, and review cadence. this scaffold does not replace iwi/hapū authority; it helps you prepare and show respect. type:framework use:storytelling use:brainstorming topic:matrix phase:apply use:format-guidance use:pattern level:intermediate ethics product-management cultural-frameworks assess long-term responsibilities for places, communities, species, data, or knowledge (taonga) design safeguards (e.g., rāhui triggers) and monitoring with local guardians (kaitiaki) set co-governance, escalation paths, and reciprocity duties with affected groups treat kaitiakitanga as relational and place-based. do not generalize across iwi/hapū; name the specific partners and tikanga you’ll follow. add an intergenerational horizon (25–100 years) and define ‘mauri’ indicators you will uphold. name kaitiaki roles, decision rights, and escalation paths; specify how and when guardians can pause/stop activity (rāhui). state tangible reciprocity (manaakitanga): who benefits, how, and how you’ll remain accountable over time. if any of: partner consent, guardianship roles, or mauri indicators are missing, insert a clear [[missing]] note and a next step. taonga — what are we safeguarding? place & context (where/whose place?) kaitiaki / mana whenua partners your stewarding team (internal) tikanga / protocols & consent mauri indicators — how do we know vitality is upheld? potential impacts (near → long term) intergenerational horizon (years) safeguards — rāhui triggers & thresholds monitoring & reporting cadence manaakitanga — reciprocity & benefits governance & escalation paths knowledge & data protocols (taonga, ip, sovereignty) non-actions (deliberate restraint)"
      }
    },

    {
      id: "kano_model",
      slug: "kano-model",
      label: "Kano Model — Must-be · Performance · Delighters",
      kind: "strategy",
      categories: [
        "planning",
        "product-management",
        "quality",
        "reasoning"
      ],
      tags: [
        "type:framework",
        "use:brainstorming",
        "use:iteration",
        "use:planning",
        "level:intermediate",
        "use:process-improvement",
        "use:pattern"
      ],
      use_cases: [
        "separate table-stakes from differentiators",
        "decide what prevents complaints vs. what creates delight",
        "synthesize survey/interview findings into a build-now list",
        "facilitate feature trade-offs with product, design, and engineering"
      ],
      boosters: [
        "Give a 1–2 sentence rationale per item grounded in a quote, metric, or observation.",
        "Segment explicitly (e.g., newcomers vs. power users); categories can flip by segment.",
        "If you have data, compute Timko CS (customer satisfaction) and DS (dissatisfaction).",
        "Pair categories with feasibility: add Effort and Strategic Fit to avoid “delight myopia.”",
        "Revisit quarterly; Delighters drift toward Performance or Must-be over time.",
          "decide which features are basic expectations",
  "find out what really delights customers",
  "prioritize features from user surveys",
  "separate nice-to-have vs must-have",
  "analyze feedback to spot hidden delighters",
  "plan roadmap based on user satisfaction impact",
  "avoid wasting time on indifferent features",
  "compare user segments to see shifting needs",
  "decide what to build first for MVP",
  "check if a feature prevents complaints or adds joy"
      ],
      definition: "Kano classifies features by how presence/absence affects satisfaction. Buckets: Must-be (basics), Performance (linear value), Delighters (wow), plus Indifferent/Reverse/Questionable. Optionally quantify with Timko coefficients.",
      help: "Enter candidate features, segments (personas), and any evidence. Choose a Study mode (the value is a directive the AI will follow). Pick table/chart preferences; their values are also injected as explicit instructions.",
      fields: [
        {
          label: "Study mode",
          desc: "Select how the AI should analyze and synthesize your inputs.",
          key: "study_mode",
          options: [
            {
              label: "Full Kano + Timko (quantitative synthesis)",
              value: "Study Mode: Run FULL Kano with paired functional/dysfunctional interpretations. If timko_counts are provided, compute Timko coefficients per feature (CS=(A+O)/(A+O+M+I), DS=-(M+O)/(A+O+M+I)). Flag Questionable/Reverse. Split by segments where provided. Produce category calls with 1–2 sentence rationales, then a validation note on wording/sample/reliability."
            },
            {
              label: "Lite Kano from qualitative evidence (directional)",
              value: "Study Mode: Run LITE Kano classification from interviews/observations only. Infer categories directionally from quotes/behaviors. For each feature, include a Confidence tag (High/Med/Low) and at least one supporting quote or observation. Highlight where data is thin and propose 2 validation steps."
            },
            {
              label: "Workshop sort (no data)",
              value: "Study Mode: Facilitate a WORKSHOP sort. Bucket features collaboratively (Must-be/Performance/Delighters/Indifferent/Reverse). After bucketing, ask 3 clarifying questions if any items are ambiguous. Output a quick action plan: what to test next, who to involve, and a suggested survey script."
            }
          ],
          type: "select"
        },
        {
          label: "Stakeholder segments (by persona)",
          autofill: "persona->inline",
          desc: "Add user/customer segments or internal stakeholders; analysis will consider flips by segment.",
          itemLabel: "segment",
          itemType: "typeahead",
          key: "stakeholder_segments",
          ph: "Start typing: New customers · Admins · Compliance · Mobile-only · Low-bandwidth…",
          type: "repeater"
        },
        {
          label: "Candidate features (one per line)",
          desc: "List short, user-facing statements (outcomes, not internal tech).",
          key: "features",
          ph: "One-tap sign-in\nOffline mode\nCSV export\nAuto-categorize receipts",
          type: "textarea"
        },
        {
          label: "Must-be (expected basics)",
          desc: "Absence → strong dissatisfaction; presence → neutral.",
          key: "must_be",
          ph: "Reliable login; Restore password; Export my data",
          type: "textarea"
        },
        {
          label: "Performance (more is better)",
          desc: "Satisfaction scales with level/quality delivered.",
          key: "performance",
          ph: "Page load speed; Battery life; Reporting depth",
          type: "textarea"
        },
        {
          label: "Delighters (unexpected extras)",
          desc: "Presence delights; absence isn’t punished (initially).",
          key: "delighters",
          ph: "1-click migration; Smart defaults; Magical onboarding",
          type: "textarea"
        },
        {
          label: "Indifferent / Reverse",
          desc: "Little impact (Indifferent) or polarizing/negative (Reverse).",
          key: "indifferent",
          ph: "Auto-play videos; Animated splash; Forced tooltips",
          type: "textarea"
        },
        {
          label: "Evidence (quotes, observations, metrics)",
          desc: "Paste key quotes, analytics, or study notes that justify your buckets.",
          key: "evidence",
          ph: "“If I can’t export, I can’t use it.” · 37% bounce on login errors · NPS verbatims…",
          type: "textarea"
        },
        {
          label: "Timko counts (optional, one feature per line)",
          desc: "Format: Feature | A:<n> O:<n> M:<n> I:<n>. AI will compute CS/DS.",
          key: "timko_counts",
          ph: "Offline mode | A:21 O:8 M:4 I:7\nCSV export | A:6 O:12 M:19 I:3",
          type: "textarea"
        },
        {
          label: "Effort / complexity (1–5) per feature",
          desc: "Format: Feature | Effort score (1=trivial … 5=hard).",
          key: "effort_map",
          ph: "Offline mode | 5\nCSV export | 2",
          type: "textarea"
        },
        {
          label: "Strategic fit (1–5) per feature",
          desc: "Format: Feature | Fit score (5=strong alignment to OKRs/mission).",
          key: "strategic_fit",
          ph: "Offline mode | 3\nCSV export | 5",
          type: "textarea"
        },
        {
          label: "ASCII Kano chart",
          desc: "Choose extra chart instructions. If you do nothing, the default sketch below will be rendered.",
          key: "ascii_chart",
          options: [
            {
              label: "Simple curve + annotate top items",
              value: "Chart: Render a SIMPLE Kano curve ASCII sketch with axes labeled (Satisfaction ↑, Feature performance →). Annotate top 3 features per category with bullet labels."
            },
            {
              label: "Quadrant grid + placements",
              value: "Chart: Render a QUADRANT-GRID ASCII with zones for Must-be (lower-left), Performance (diagonal), and Delighters (upper-left). Place top 5 features as short labels; include a legend."
            },
            {
              label: "No chart",
              value: "Chart: Omit ASCII chart."
            }
          ],
          type: "select"
        },
        {
          label: "Prioritization table",
          desc: "Select the table detail level.",
          key: "table_pref",
          options: [
            {
              label: "Full table (Category, CS, DS, Effort, Fit, Tag)",
              value: "Table: Produce a markdown table with columns: Feature | Category | CS | DS | Effort | Fit | Tag. Compute Tag as Build/Explore/Defer using rule-of-thumb: prioritize (CS·Fit)/max(1,Effort); break ties by |DS| then lower Effort. Sort descending by priority."
            },
            {
              label: "Category-only table",
              value: "Table: Produce a compact markdown table with Feature | Category only. No numeric synthesis, just clean buckets."
            },
            {
              label: "No table",
              value: "Table: Omit prioritization table."
            }
          ],
          type: "select"
        },
        {
          label: "Assumptions & risks",
          desc: "Unknowns, sampling caveats, wording issues, or segment biases.",
          key: "assumptions",
          ph: "Small n for admins; wording may have primed “Like”; mobile users under-sampled…",
          type: "textarea"
        },
        {
          label: "Re-check horizon",
          desc: "When to revisit (Kano drift/market shift).",
          key: "horizon",
          ph: "e.g., 6 months",
          type: "text"
        }
      ],
      template: (f) => {
    const toLines = s => (s||'').split(/\n+/).map(x=>x.trim()).filter(Boolean);

    const features = toLines(f.features);
    const M = toLines(f.must_be);
    const P = toLines(f.performance);
    const D = toLines(f.delighters);
    const INDIFF = toLines(f.indifferent);
    const seg = Array.isArray(f.stakeholder_segments) ? f.stakeholder_segments : toLines(f.stakeholder_segments);

    const parseTimko = (line) => {
      const [name, rest] = line.split('|').map(x=>x.trim());
      const grab = k => {
        const m = new RegExp(`${k}\\s*:\\s*(\\d+)`,'i').exec(rest||'');
        return m ? Number(m[1]) : 0;
      };
      const A=grab('A'), O=grab('O'), Mu=grab('M'), I=grab('I');
      const denom = A+O+Mu+I || 1;
      const CS = (A+O)/denom;
      const DS = - (Mu+O)/denom;
      return { name: name||'(unnamed feature)', A, O, M:Mu, I, CS:+CS.toFixed(2), DS:+DS.toFixed(2) };
    };
    const timko = toLines(f.timko_counts).map(parseTimko);

    const parseScalarMap = (s) => {
      const map = {};
      toLines(s).forEach(line => {
        const [name, val] = line.split('|').map(x=>x.trim());
        const n = Number(val);
        map[name||''] = Number.isFinite(n) ? n : '';
      });
      return map;
    };
    const effort = parseScalarMap(f.effort_map);
    const fit    = parseScalarMap(f.strategic_fit);

    const wantFullTable = (f.table_pref||'').toLowerCase().includes('Feature | Category | CS');
    const rows = (wantFullTable ? (timko.length ? timko.map(r => {
      const eff = effort[r.name] ?? '';
      const ft  = fit[r.name] ?? '';
      const priority = (r.CS||0) * (Number(ft)||0) / (Math.max(1, Number(eff)||1));
      let tag = 'Explore';
      if (priority >= 1) tag = 'Build';
      if (!ft || !eff) tag = 'Explore';
      if ((r.CS||0) < 0.15 && Math.abs(r.DS||0) < 0.15) tag = 'Defer';
      return { name:r.name, CS:r.CS, DS:r.DS, Effort:eff, Fit:ft, priority:+priority.toFixed(2), tag };
    }) : []) : []);

    if (rows.length) {
      rows.sort((a,b)=> b.priority - a.priority || Math.abs(b.DS)-Math.abs(a.DS) || (a.Effort||9)-(b.Effort||9));
    }

    const studyDirective = f.study_mode && (''+f.study_mode);
    const chartDirective = f.ascii_chart && (''+f.ascii_chart);
    const tableDirective = f.table_pref && (''+f.table_pref);

    const defaultSketch =
`ASCII Kano sketch (monospace):
Satisfaction ↑
             |        Delighters (Attractive)
             |         /
             |        /
             |       /     Performance (One-dimensional)
   Neutral ---+-----/-----/----------------→ Feature performance
             |    /     /
             |   /     /
             |  /     /
             | /     /
             |/     /
             Must-be (steep drop if absent)
Dissatisfaction ↓`;

    const showDefaultSketch = !(chartDirective && chartDirective.toLowerCase().includes('omit ascii chart'));

    const parts = [
      'Apply the Kano Model to categorize and prioritize features.',
      studyDirective,
      tableDirective,

      // Render default sketch unless explicitly told "No chart"
      showDefaultSketch && defaultSketch,

      // If they selected a chart instruction (not "No chart"), include it too
      (chartDirective && !chartDirective.toLowerCase().includes('omit ascii chart')) ? chartDirective : null,

      f.usecase && `Context: ${f.usecase}`,
      seg.length && ('Segments:\n' + seg.map((s,i)=>`${i+1}. ${s}`).join('\n')),

      features.length && 'Task: Classify each candidate feature into Must-be / Performance / Delighter / Indifferent (note any Reverse/Questionable).',
      features.length && ('Candidates:\n' + features.map((x,i)=>`${i+1}. ${x}`).join('\n')),

      M.length && ('Must-be (basics):\n' + M.map((x,i)=>`${i+1}. ${x}`).join('\n')),
      P.length && ('Performance (linear value):\n' + P.map((x,i)=>`${i+1}. ${x}`).join('\n')),
      D.length && ('Delighters (wow):\n' + D.map((x,i)=>`${i+1}. ${x}`).join('\n')),
      INDIFF.length && ('Indifferent / Reverse:\n' + INDIFF.map((x,i)=>`${i+1}. ${x}`).join('\n')),

      f.evidence && `Evidence:\n${f.evidence}`,
      f.assumptions && `Assumptions & risks:\n${f.assumptions}`,

      (rows.length && [
        'Prioritization table:',
        '| Feature | Category | CS | DS | Effort | Fit | Tag |',
        '|---|---|---:|---:|---:|---:|---|',
        ...rows.map(r=>`| ${r.name} | (auto) | ${r.CS} | ${r.DS} | ${r.Effort} | ${r.Fit} | ${r.tag} |`)
      ].join('\n')) || null,

      'Output:',
      '1) Bucketed lists with 1–2 sentence rationale each (cite quote/metric).',
      '2) If Timko provided: CS/DS per feature; call out top 3 by ↑CS and top 3 by |DS| risk.',
      '3) If full table requested: include Feature | Category | CS | DS | Effort | Fit | Tag, sorted by priority.',
      '4) Chart: default ASCII sketch is included unless “No chart” selected; if chart instruction chosen, also annotate as directed.',
      '5) Risks & next steps: wording fixes, sampling gaps, validation plan, and re-check horizon.'
    ];

    return parts.filter(Boolean).join('\n');
  },
      meta: {
        search_text: "kano model — must-be · performance · delighters kano-model kano classifies features by how presence/absence affects satisfaction. buckets: must-be (basics), performance (linear value), delighters (wow), plus indifferent/reverse/questionable. optionally quantify with timko coefficients. enter candidate features, segments (personas), and any evidence. choose a study mode (the value is a directive the ai will follow). pick table/chart preferences; their values are also injected as explicit instructions. type:framework use:brainstorming use:iteration use:planning level:intermediate use:process-improvement use:pattern planning product-management quality reasoning separate table-stakes from differentiators decide what prevents complaints vs. what creates delight synthesize survey/interview findings into a build-now list facilitate feature trade-offs with product, design, and engineering give a 1–2 sentence rationale per item grounded in a quote, metric, or observation. segment explicitly (e.g., newcomers vs. power users); categories can flip by segment. if you have data, compute timko cs (customer satisfaction) and ds (dissatisfaction). pair categories with feasibility: add effort and strategic fit to avoid “delight myopia.” revisit quarterly; delighters drift toward performance or must-be over time. study mode stakeholder segments (by persona) candidate features (one per line) must-be (expected basics) performance (more is better) delighters (unexpected extras) indifferent / reverse evidence (quotes, observations, metrics) timko counts (optional, one feature per line) effort / complexity (1–5) per feature strategic fit (1–5) per feature ascii kano chart prioritization table assumptions & risks re-check horizon"
      }
    },

    {
      id: "kansei_engineering",
      slug: "kansei-engineering",
      label: "Kansei Engineering (Emotion → Design Mapping)",
      kind: "strategy",
      categories: [
        "design",
        "reasoning",
        "analysis-frameworks"
      ],
      tags: [
        "type:framework",
        "use:pattern",
        "use:discover",
        "topic:values",
        "level:intermediate",
        "use:coding",
        "use:goals",
        "phase:explore"
      ],
      use_cases: [
        "translate target feelings into concrete design parameters",
        "build a testable Emotion → Stimulus map with success criteria",
        "prioritize features and micro-interactions by affective impact",
        "align brand emotions with visual, copy, motion, sound, and material design",
        "validate emotional effects on prototypes before commit",
          "design a product that feels calming",
  "match brand identity to emotions",
  "test if my design feels trustworthy",
  "turn desired feelings into design choices",
  "connect emotions with product features",
  "map how copy or visuals make users feel",
  "measure emotional impact of prototypes",
  "design with sensory cues like sound or texture",
  "check if design creates stress or comfort",
  "align product look and feel with target mood",
  "make UX emotionally consistent across touchpoints",
  "translate abstract feelings into concrete design rules",
  "compare how different features change user emotions",
  "design experiences that evoke joy or confidence",
  "validate if emotional goals are met before launch"
      ],
      boosters: [
        "Limit to ≤5 core emotion goals; define them in users’ native language (avoid translation drift).",
        "Anchor each emotion on 7-point semantic differential scales with clear antonyms (e.g., Calm ↔ Tense).",
        "Map emotions to multi-sensory levers (visual, microcopy, motion/latency, sound/haptics, material).",
        "Pre-test the emotion lexicon; refine with factor analysis or clustering before feature mapping.",
        "Use counterbalanced stimuli and randomization; document base rates and control conditions.",
        "Quantify links (e.g., regression/Quantification Theory I/II); for lean runs, use A/B + SD ratings.",
        "Include accessibility & ethics checks (contrast, motion sensitivity, cultural color/gesture meanings).",
        "Pre-register decision rules (e.g., Trust ≥ +1.0, Clarity no worse than baseline)."
      ],
      definition: "A user-centered method (Nagamachi) that captures target emotions (Kansei), maps them to specific design attributes, and validates the mapping empirically—turning feelings into design data.",
      help: "1) Specify audience, context, and ≤5 emotion goals with antonym anchors. 2) List design levers (stimuli). 3) Propose Emotion → Lever hypotheses with rationale. 4) Define measures and a validation study (method, sample, criteria). 5) Add bias/ethics/accessibility checks, confounds, localization, and a decision rule.",
      fields: [
        {
          label: "Audience / segment",
          desc: "Who will feel these emotions? Include culture/locale if relevant.",
          key: "audience",
          ph: "e.g., First-time fintech users in Japan (20–35)",
          type: "textarea"
        },
        {
          label: "Audience / personas",
          autofill: "persona->inline",
          desc: "Who will experience the emotions? Include culture/locale if relevant.",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "audience",
          ph: "e.g., First-time fintech users in Japan (20–35)",
          type: "repeater"
        },
        {
          label: "Context of use",
          desc: "Scenario, device, constraints, and moments that matter.",
          key: "context",
          ph: "e.g., Mobile onboarding at night; low light; flaky network",
          type: "textarea"
        },
        {
          label: "Target emotion words (≤5, one per line)",
          desc: "Local-language emotion terms; concise and concrete.",
          key: "emotions",
          ph: "Calm\nTrust\nDelight\nClarity",
          type: "textarea",
          ui: {
            repeater: true,
            typeahead: [
              "Calm",
              "Trust",
              "Delight",
              "Confidence",
              "Reassured",
              "Playful",
              "Serene",
              "Excited",
              "Premium",
              "Safe"
            ]
          }
        },
        {
          label: "Semantic differential anchors (one per line)",
          desc: "Opposite poles for 7-point scales per emotion.",
          key: "anchors",
          ph: "Calm ↔ Tense\nTrust ↔ Suspicion\nDelight ↔ Dull\nClarity ↔ Confusion",
          type: "textarea"
        },
        {
          label: "Emotion weights / priorities (optional)",
          desc: "Relative importance for trade-offs.",
          key: "weights",
          ph: "Trust: 0.4, Clarity: 0.3, Calm: 0.2, Delight: 0.1",
          type: "text"
        },
        {
          label: "Design levers / stimuli (one per line)",
          desc: "List levers: visual, microcopy, motion/latency, sound/haptics, material.",
          key: "stimuli",
          ph: "Color palette (muted vs saturated)\nMicrocopy tone (assuring vs playful)\nLatency (TTI under 1000ms)\nMotion (ease-out vs bounce)\nSound (soft chime vs none)",
          type: "textarea"
        },
        {
          label: "Emotion → Feature hypotheses (one per line)",
          desc: "Link each emotion to specific levers with a short rationale.",
          key: "mapping",
          ph: "Trust: neutral palette + precise microcopy + visible encryption icon (signals credibility)\nCalm: longer ease-out motion + reduced cognitive load on forms",
          type: "textarea"
        },
        {
          label: "Measures & scales",
          desc: "How emotions and side-effects will be measured.",
          key: "measures",
          ph: "7-pt SD for each anchor; SUS; task success & time; NASA-TLX; opt-in HRV (optional)",
          type: "textarea"
        },
        {
          label: "Validation plan",
          desc: "Method, sample, counterbalancing, success criteria, analysis.",
          key: "validation",
          ph: "Within-subjects SD ratings on 3 prototypes; n=24; counterbalanced order; α=.05; success = +1.0 on Trust & no drop on Clarity; analysis: QTT-I + paired t-tests",
          type: "textarea"
        },
        {
          label: "Potential confounds & controls",
          desc: "Non-design drivers of emotion you’ll control or record.",
          key: "confounds",
          ph: "Brand familiarity; price salience; network speed; prior negative incidents",
          type: "textarea"
        },
        {
          label: "Localization & translation notes",
          desc: "Cultural/linguistic nuance for emotion words and cues.",
          key: "localization",
          ph: "“Warm” maps to “gentle” in JP microcopy; avoid idioms; verify color symbolism",
          type: "textarea"
        },
        {
          label: "Bias, culture & accessibility checks",
          desc: "Enumerate specific biases/risks to monitor and mitigate.",
          key: "bias_checks",
          ph: "Add one bias per line with a note on mitigation.",
          type: "textarea"
        },
        {
          label: "Bias, culture & accessibility checks (optional)",
          autofill: "bias->inline",
          desc: "Capture specific bias or risk items to check during design and validation.",
          itemLabel: "bias",
          itemType: "typeahead",
          key: "bias_checks",
          ph: "e.g., Color meanings vary by culture; Motion may trigger vestibular discomfort; Gendered microcopy; WEIRD sampling",
          type: "repeater"
        },
        {
          label: "Ethical & safety guardrails",
          desc: "Non-negotiables (e.g., no dark patterns, motion limits, privacy).",
          key: "guardrails",
          ph: "No deceptive urgency; motion respects reduced-motion settings; no fear-priming",
          type: "textarea"
        },
        {
          label: "Risks & mitigations",
          desc: "Top risks to validity or user well-being and how you’ll mitigate.",
          key: "risks",
          ph: "Placebo effects → include sham variant; motion nausea → alternate static path",
          type: "textarea"
        },
        {
          label: "Decision rule",
          desc: "Pre-commit go/no-go or iterate criteria.",
          key: "decision_rule",
          ph: "Ship v2 if Trust ≥ +1.0 and Delight ≥ +0.5 with no metric regressions",
          type: "text"
        }
      ],
      template: ({ audience, context, emotions, anchors, weights, stimuli, mapping, measures, validation, confounds, localization, bias_checks, guardrails, risks, decision_rule, ctx, style, tone }) => [
    'Apply Kansei Engineering: translate emotions into design and validate empirically.',
    ctx && `Context: ${ctx}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    audience && `Audience: ${audience}`,
    context && `Use context:\n${context}`,
    emotions && `Emotion goals (≤5):\n${emotions}`,
    anchors && `Semantic differential anchors:\n${anchors}`,
    weights && `Emotion weights:\n${weights}`,
    stimuli && `Design levers / stimuli:\n${stimuli}`,
    mapping && `Emotion → Feature hypotheses:\n${mapping}`,
    measures && `Measures & scales:\n${measures}`,
    validation && `Validation plan:\n${validation}`,
    confounds && `Potential confounds & controls:\n${confounds}`,
    localization && `Localization & translation notes:\n${localization}`,
    (bias_checks && String(bias_checks).trim().length > 0) && `Bias/culture/accessibility checks:\n${bias_checks}`,
    guardrails && `Ethical & safety guardrails:\n${guardrails}`,
    risks && `Risks & mitigations:\n${risks}`,
    decision_rule && `Decision rule:\n${decision_rule}`,
    'Output:\n1) Kansei lexicon & 7-pt scales\n2) Mapping table (Emotion → Lever → Rationale)\n3) Prioritized backlog (impact × feasibility)\n4) Validation design & analysis plan\n5) Risks, bias & accessibility mitigations\n6) Decision rule & next steps'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "kansei engineering (emotion → design mapping) kansei-engineering a user-centered method (nagamachi) that captures target emotions (kansei), maps them to specific design attributes, and validates the mapping empirically—turning feelings into design data. 1) specify audience, context, and ≤5 emotion goals with antonym anchors. 2) list design levers (stimuli). 3) propose emotion → lever hypotheses with rationale. 4) define measures and a validation study (method, sample, criteria). 5) add bias/ethics/accessibility checks, confounds, localization, and a decision rule. type:framework use:pattern use:discover topic:values level:intermediate use:coding use:goals phase:explore design reasoning analysis-frameworks translate target feelings into concrete design parameters build a testable emotion → stimulus map with success criteria prioritize features and micro-interactions by affective impact align brand emotions with visual, copy, motion, sound, and material design validate emotional effects on prototypes before commit limit to ≤5 core emotion goals; define them in users’ native language (avoid translation drift). anchor each emotion on 7-point semantic differential scales with clear antonyms (e.g., calm ↔ tense). map emotions to multi-sensory levers (visual, microcopy, motion/latency, sound/haptics, material). pre-test the emotion lexicon; refine with factor analysis or clustering before feature mapping. use counterbalanced stimuli and randomization; document base rates and control conditions. quantify links (e.g., regression/quantification theory i/ii); for lean runs, use a/b + sd ratings. include accessibility & ethics checks (contrast, motion sensitivity, cultural color/gesture meanings). pre-register decision rules (e.g., trust ≥ +1.0, clarity no worse than baseline). audience / segment audience / personas context of use target emotion words (≤5, one per line) semantic differential anchors (one per line) emotion weights / priorities (optional) design levers / stimuli (one per line) emotion → feature hypotheses (one per line) measures & scales validation plan potential confounds & controls localization & translation notes bias, culture & accessibility checks bias, culture & accessibility checks (optional) ethical & safety guardrails risks & mitigations decision rule"
      }
    },

    {
      id: "kepner_tregoe",
      slug: "kepner-tregoe-psdm",
      label: "Kepner–Tregoe (Situation · Problem · Decision · Potential Problem)",
      kind: "heuristic",
      categories: [
        "decision",
        "quality",
        "operations",
        "writing"
      ],
      tags: [
        "type:framework",
        "phase:premortem",
        "use:case-study",
        "use:copywriting",
        "use:pattern",
        "phase:apply",
        "use:recipe",
        "level:intermediate",
        "use:brainstorming",
        "use:presentations",
        "use:scope-management",
        "use:evaluation"
      ],
      use_cases: [
        "separate problem analysis from decision analysis",
        "choose among alternatives with explicit must/want criteria",
        "stabilize incidents and find verified root causes",
        "anticipate downstream risks and define prevention/contingency",
        "produce an auditable decision record for stakeholders"
      ],
      boosters: [
        "Timebox each track (SA/PA/DA/PPA) to avoid analysis paralysis; loop if stakes demand.",
        "In PA, write an IS / IS-NOT spec for what, where, when, extent; hunt for distinctions & changes.",
        "In DA, screen options with MUSTs first; score WANTs with weights (0–5 or 0–10), then check risks.",
        "In PPA, for each potential problem, capture cause → preventive action → contingent action → trigger → owner.",
        "Record data sources & assumptions; if weak, add a fast test to upgrade the evidence.",
        "Assign owners and dates for every next step; end with a one-line decision record (Because → Therefore)."
      ],
      definition: "A four-track critical thinking method: Situation Appraisal (prioritize and assign), Problem Analysis (verify root cause), Decision Analysis (select option via must/want criteria and risk), and Potential Problem Analysis (anticipate and mitigate implementation risks).",
      help: "Fill the four tracks succinctly. Keep facts separate from assumptions. Use MUST/WANT criteria and weighted scoring for decisions. Close with a decision record (choice, rationale, risks, next actions, owners, dates).",
      fields: [
        {
          label: "Stakeholders / personas",
          autofill: "persona->inline",
          desc: "Who cares about this outcome? Include approvers, users, operators.",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "audience",
          ph: "e.g., On-call SRE; Product Owner; Compliance Lead; Customer Success Manager",
          type: "repeater"
        },
        {
          label: "Context / scope",
          desc: "Boundaries, constraints, environment, definition of done.",
          key: "context",
          ph: "e.g., Checkout latency incident in EU region; scope: API v2 only; DoD: p95<500ms for 24h",
          type: "textarea"
        },
        {
          label: "SA — List concerns (one per line)",
          desc: "Issues, decisions, plans, risks to consider.",
          key: "sa_concerns",
          ph: "Latency spike after release\nCustomer comms plan\nRollback decision",
          type: "textarea"
        },
        {
          label: "SA — Priority rationale",
          desc: "Impact × urgency × trend; what’s first and why.",
          key: "sa_priorities",
          ph: "1) Latency spike (high impact, rising); 2) Rollback; 3) Comms",
          type: "text"
        },
        {
          label: "SA — Owners & next steps",
          desc: "Who does what by when.",
          key: "sa_next_steps",
          ph: "Infra: assess DB index by 15:00\nComms: status page update now",
          type: "textarea"
        },
        {
          label: "PA — Problem statement",
          desc: "Single-sentence description of the symptom.",
          key: "pa_problem",
          ph: "p95 latency degraded to 2.5s in EU after 14:55",
          type: "text"
        },
        {
          label: "PA — IS / IS-NOT spec (what/where/when/extent)",
          desc: "Contrast to isolate the cause; include patterns and exclusions.",
          key: "pa_is_is_not",
          ph: "WHAT: API v2 IS slow; API v1 IS-NOT\nWHERE: EU IS; US IS-NOT\nWHEN: after 14:55 IS; before 14:55 IS-NOT\nEXTENT: p95=2.5s IS; p99 error rate stable IS-NOT",
          type: "textarea"
        },
        {
          label: "PA — Distinctions & changes",
          desc: "What is different about the IS vs IS-NOT cases; what changed near onset.",
          key: "pa_distinctions",
          ph: "EU DB index rolled out at 14:40; connection pool size reduced in EU only",
          type: "textarea"
        },
        {
          label: "PA — Possible causes (one per line)",
          desc: "Hypotheses that explain ALL facts in IS/IS-NOT.",
          key: "pa_causes",
          ph: "Mis-tuned DB index\nHot code path calling N+1 queries",
          type: "textarea"
        },
        {
          label: "PA — Tests/verification",
          desc: "How you will confirm the true cause quickly.",
          key: "pa_tests",
          ph: "Rollback index in EU; compare latency; trace API v2 for N+1",
          type: "textarea"
        },
        {
          label: "DA — Decision statement",
          desc: "Do what, about what, by when.",
          key: "da_statement",
          ph: "Choose remediation for EU latency by 17:00",
          type: "text"
        },
        {
          label: "DA — MUST criteria (one per line)",
          desc: "Non-negotiables; options failing any must are eliminated.",
          key: "da_musts",
          ph: "No data loss\nNo additional downtime\nCompliant with change policy",
          type: "textarea"
        },
        {
          label: "DA — WANT criteria + weights (one per line)",
          desc: "Desirables with weights in ( ), e.g., 0–5 scale.",
          key: "da_wants",
          ph: "Speed of recovery (5)\nLow user impact (4)\nLow effort (2)",
          type: "textarea"
        },
        {
          label: "DA — Options (one per line)",
          desc: "Feasible alternatives to choose among.",
          key: "da_options",
          ph: "Revert index now\nRetune index live\nHotfix code path\nTraffic shift to US",
          type: "textarea"
        },
        {
          label: "DA — Scoring notes",
          desc: "Which options pass MUSTs; WANT scores & totals; tie-break logic.",
          key: "da_scoring",
          ph: "Revert passes MUSTs; total WANT score = 34 > others; tie-break: risk lower",
          type: "textarea"
        },
        {
          label: "DA — Adverse consequences / mitigations",
          desc: "Identify downside of selected option and how you’ll reduce it.",
          key: "da_risks",
          ph: "Overnight job delay → increase batch window; comms to merchants",
          type: "textarea"
        },
        {
          label: "PPA — Potential problems (one per line)",
          desc: "What could go wrong with the chosen plan.",
          key: "ppa_potential",
          ph: "Rollback fails\nJob overrun\nCustomer confusion",
          type: "textarea"
        },
        {
          label: "PPA — Likely causes (one per line)",
          desc: "What would make each problem occur.",
          key: "ppa_causes",
          ph: "Replica lag\nCron overlap\nAmbiguous status page copy",
          type: "textarea"
        },
        {
          label: "PPA — Preventive actions",
          desc: "Reduce the likelihood of each problem.",
          key: "ppa_preventive",
          ph: "Verify replica health; lock cron windows; rewrite status text",
          type: "textarea"
        },
        {
          label: "PPA — Contingent actions",
          desc: "If it happens, what you’ll do.",
          key: "ppa_contingent",
          ph: "Abort rollback and fail forward; manual job pause; targeted email",
          type: "textarea"
        },
        {
          label: "PPA — Triggers / early warnings",
          desc: "Signals that should fire the contingent action.",
          key: "ppa_triggers",
          ph: "Replica lag > 150ms\nBatch runtime > 30m\nCSAT dip > 10%",
          type: "textarea"
        },
        {
          label: "PPA — Owners & timing",
          desc: "Who owns each preventive/contingent action and when.",
          key: "ppa_owners",
          ph: "DBA: replica checks 16:30\nComms: draft update by 16:15",
          type: "textarea"
        },
        {
          label: "Evidence & data sources",
          desc: "Where facts came from; quality and freshness of data.",
          key: "data_sources",
          ph: "APM traces; DB metrics; release log; customer tickets (last 2h)",
          type: "textarea"
        },
        {
          label: "Assumptions (to validate)",
          desc: "Assumptions still in play; plan a quick test for risky ones.",
          key: "assumptions",
          ph: "Index change caused latency → test by rollback",
          type: "textarea"
        },
        {
          label: "Bias / culture / safety checks",
          autofill: "bias->inline",
          desc: "Specific biases or risks to watch (confirmation, sunk cost, groupthink, etc.).",
          itemLabel: "bias",
          itemType: "typeahead",
          key: "bias_checks",
          ph: "e.g., Confirmation bias; Authority bias; Local maxima bias; HIPPO; Overconfidence",
          type: "repeater"
        },
        {
          label: "Decision record — chosen option",
          desc: "Which option you selected.",
          key: "chosen_option",
          ph: "Revert index now; schedule re-index off-peak",
          type: "text"
        },
        {
          label: "Decision record — rationale (Because → Therefore)",
          desc: "Why this choice best meets MUST/WANT criteria and handles risk.",
          key: "rationale",
          ph: "Because it restores p95 fastest and meets MUSTs with lowest risk, therefore we revert now and re-index later.",
          type: "textarea"
        },
        {
          label: "Next actions & owners",
          desc: "Concrete steps to execute the decision.",
          key: "next_actions",
          ph: "DBA: revert at 16:45\nSRE: monitor p95\nComms: status page + email\nOwner: Ops lead",
          type: "textarea"
        },
        {
          label: "Review date / success metrics",
          desc: "When and how you’ll assess success.",
          key: "review",
          ph: "Post-incident review tomorrow 10:00; success = p95<500ms for 24h; no error spikes",
          type: "text"
        }
      ],
      template: (args) => {
    const {
      audience, context,
      sa_concerns, sa_priorities, sa_next_steps,
      pa_problem, pa_is_is_not, pa_distinctions, pa_causes, pa_tests,
      da_statement, da_musts, da_wants, da_options, da_scoring, da_risks,
      ppa_potential, ppa_causes, ppa_preventive, ppa_contingent, ppa_triggers, ppa_owners,
      data_sources, assumptions, bias_checks,
      chosen_option, rationale, next_actions, review,
      ctx, style, tone
    } = args;

    const toLines = s => String(s || '').split(/\n+/).map(x => x.trim()).filter(Boolean);
    const listBlock = (title, s) => s && `${title}\n` + toLines(s).map((x,i)=>`${i+1}. ${x}`).join('\n');

    const out = [
      'Apply Kepner–Tregoe (SA → PA → DA → PPA).',
      ctx && `Context: ${ctx}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      audience && ('Stakeholders / personas:\n' + (Array.isArray(audience) ? audience.map((p,i)=>`${i+1}. ${p}`).join('\n') : String(audience))),
      context && `Scope & context:\n${context}`,

      // SA
      listBlock('Situation Appraisal — Concerns:', sa_concerns),
      sa_priorities && `SA — Priority rationale: ${sa_priorities}`,
      listBlock('SA — Owners & next steps:', sa_next_steps),

      // PA
      pa_problem && `Problem Analysis — Problem statement: ${pa_problem}`,
      pa_is_is_not && `PA — IS / IS-NOT spec:\n${pa_is_is_not}`,
      listBlock('PA — Distinctions & changes:', pa_distinctions),
      listBlock('PA — Possible causes:', pa_causes),
      listBlock('PA — Tests / verification:', pa_tests),

      // DA
      da_statement && `Decision Analysis — Decision statement: ${da_statement}`,
      listBlock('DA — MUST criteria:', da_musts),
      listBlock('DA — WANT criteria + weights:', da_wants),
      listBlock('DA — Options:', da_options),
      da_scoring && `DA — Scoring notes:\n${da_scoring}`,
      listBlock('DA — Adverse consequences / mitigations:', da_risks),

      // PPA
      listBlock('PPA — Potential problems:', ppa_potential),
      listBlock('PPA — Likely causes:', ppa_causes),
      listBlock('PPA — Preventive actions:', ppa_preventive),
      listBlock('PPA — Contingent actions:', ppa_contingent),
      listBlock('PPA — Triggers / early warnings:', ppa_triggers),
      listBlock('PPA — Owners & timing:', ppa_owners),

      // Evidence & bias
      data_sources && `Evidence & data sources:\n${data_sources}`,
      assumptions && `Assumptions (to validate):\n${assumptions}`,
      bias_checks && ('Bias / culture / safety checks:\n' + (Array.isArray(bias_checks) ? bias_checks.map((b,i)=>`${i+1}. ${b}`).join('\n') : String(bias_checks))),

      // Decision record
      chosen_option && `Decision record — chosen option: ${chosen_option}`,
      rationale && `Decision record — rationale:\n${rationale}`,
      listBlock('Next actions & owners:', next_actions),
      review && `Review date / success metrics: ${review}`,

      'Output:\n1) SA queue with owners & priorities\n2) PA cause verified by IS/IS-NOT + tests\n3) DA choice with MUST/WANT math + risk plan\n4) PPA register (preventive, contingent, triggers, owners)\n5) Decision record & review checkpoint'
    ];

    return out.filter(Boolean).join('\n');
  },
      meta: {
        search_text: "kepner–tregoe (situation · problem · decision · potential problem) kepner-tregoe-psdm a four-track critical thinking method: situation appraisal (prioritize and assign), problem analysis (verify root cause), decision analysis (select option via must/want criteria and risk), and potential problem analysis (anticipate and mitigate implementation risks). fill the four tracks succinctly. keep facts separate from assumptions. use must/want criteria and weighted scoring for decisions. close with a decision record (choice, rationale, risks, next actions, owners, dates). type:framework phase:premortem use:case-study use:copywriting use:pattern phase:apply use:recipe level:intermediate use:brainstorming use:presentations use:scope-management use:evaluation decision quality operations writing separate problem analysis from decision analysis choose among alternatives with explicit must/want criteria stabilize incidents and find verified root causes anticipate downstream risks and define prevention/contingency produce an auditable decision record for stakeholders timebox each track (sa/pa/da/ppa) to avoid analysis paralysis; loop if stakes demand. in pa, write an is / is-not spec for what, where, when, extent; hunt for distinctions & changes. in da, screen options with musts first; score wants with weights (0–5 or 0–10), then check risks. in ppa, for each potential problem, capture cause → preventive action → contingent action → trigger → owner. record data sources & assumptions; if weak, add a fast test to upgrade the evidence. assign owners and dates for every next step; end with a one-line decision record (because → therefore). stakeholders / personas context / scope sa — list concerns (one per line) sa — priority rationale sa — owners & next steps pa — problem statement pa — is / is-not spec (what/where/when/extent) pa — distinctions & changes pa — possible causes (one per line) pa — tests/verification da — decision statement da — must criteria (one per line) da — want criteria + weights (one per line) da — options (one per line) da — scoring notes da — adverse consequences / mitigations ppa — potential problems (one per line) ppa — likely causes (one per line) ppa — preventive actions ppa — contingent actions ppa — triggers / early warnings ppa — owners & timing evidence & data sources assumptions (to validate) bias / culture / safety checks decision record — chosen option decision record — rationale (because → therefore) next actions & owners review date / success metrics"
      }
    },

    {
      id: "kwy_vector",
      slug: "keywords-why-tasks-vector",
      label: "Keywords + Why + Tasks — Vector Priming",
      kind: "technique",
      categories: [
        "prompt-development-techniques",
        "planning"
      ],
      tags: [
        "use:pattern",
        "topic:clarification",
        "phase:apply",
        "use:teaching",
        "level:intermediate",
        "use:content",
        "topic:decomposition"
      ],
      use_cases: [
        "prime the model with topical vectors via keywords",
        "explain situational “why” for better alignment",
        "list actionable tasks and explicit negatives to avoid"
      ],
      boosters: [
        "Normalize keywords to canonical forms (singulars, lowercase) before using them.",
        "Tie each task to at least one keyword.",
        "Call out conflicts between “why” and constraints in one line."
      ],
      definition: "Prime with keywords (vector hinting) and a clear “why,” list tasks, and name what to avoid.",
      help: "Fill the goal, why/context, comma-separated keywords, and tasks (one per line). Add avoid/constraints as needed.",
      fields: [
        {
          label: "Goal / request",
          desc: "The core ask in plain language.",
          key: "goal",
          ph: "e.g., Draft a press release for our seed round.",
          type: "textarea"
        },
        {
          label: "Why / context",
          desc: "Situation, constraints, or motivation that explains the request.",
          key: "why",
          ph: "Positioning shift, investor expectations, embargo timing…",
          type: "textarea"
        },
        {
          label: "Keywords (comma-separated)",
          desc: "Topical terms to prime the model’s “vector space.”",
          key: "keywords",
          ph: "fintech, compliance, SOC2, runway, ARR, seed, product-market-fit",
          type: "text"
        },
        {
          label: "Tasks (one per line)",
          desc: "Concrete actions the model should take.",
          key: "tasks",
          ph: "Draft headline…\nWrite summary paragraph…\nAdd 3 quotes…",
          type: "textarea"
        },
        {
          label: "Avoid (comma-separated negatives)",
          desc: "Phrases, angles, or topics to avoid.",
          key: "avoid",
          ph: "hype, unverified metrics, jargon, inside jokes",
          type: "text"
        },
        {
          label: "Do's (must do)",
          desc: "Positive constraints.",
          key: "dos",
          ph: "Cite sources; 150–250 words; AP style.",
          type: "textarea"
        },
        {
          label: "Don'ts / constraints",
          desc: "Hard limits beyond “Avoid.”",
          key: "donts",
          ph: "Don't mention confidential partners; no sensitive data.",
          type: "textarea"
        }
      ],
      template: ({ goal, why, keywords, tasks, avoid, dos, donts, ctx, audience, style, tone }) => [
    'Use vector priming (keywords) plus explicit why/context and actionable tasks.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    goal && `Goal: ${goal}`,
    why && `Why/context: ${why}`,
    keywords && ('Keywords: ' + String(keywords).split(',').map(s=>s.trim()).filter(Boolean).join(', ')),
    tasks && (
      'Tasks:\n' + String(tasks)
        .split(/\n+/).map(s=>s.trim()).filter(Boolean)
        .map((t,i)=> `${i+1}. ${t}`)
        .join('\n')
    ),
    avoid && ('Avoid: ' + String(avoid).split(',').map(s=>s.trim()).filter(Boolean).join(', ')),
    dos && `Do:\n${dos}`,
    donts && `Don't:\n${donts}`,
    'Execute the tasks, honoring keywords and avoid lists; if conflicts appear, state them briefly before proceeding.'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "keywords + why + tasks — vector priming keywords-why-tasks-vector prime with keywords (vector hinting) and a clear “why,” list tasks, and name what to avoid. fill the goal, why/context, comma-separated keywords, and tasks (one per line). add avoid/constraints as needed. use:pattern topic:clarification phase:apply use:teaching level:intermediate use:content topic:decomposition prompt-development-techniques planning prime the model with topical vectors via keywords explain situational “why” for better alignment list actionable tasks and explicit negatives to avoid normalize keywords to canonical forms (singulars, lowercase) before using them. tie each task to at least one keyword. call out conflicts between “why” and constraints in one line. goal / request why / context keywords (comma-separated) tasks (one per line) avoid (comma-separated negatives) do's (must do) don'ts / constraints"
      }
    },

    {
      id: "least_to_most",
      slug: "least-to-most-ltm",
      label: "Least to Most (LtM)",
      kind: "strategy",
      categories: [
        "reasoning",
        "planning"
      ],
      tags: [
        "use:pattern",
        "use:presentations",
        "use:healing",
        "use:problem-framing",
        "level:intermediate",
        "use:storytelling",
        "topic:matrix",
        "use:goals",
        "use:teaching"
      ],
      use_cases: [
        "tackle problems by escalating from simple to complex",
        "derive a general method from trivial and small cases",
        "surface edge cases after building intuition"
      ],
      boosters: [
        "Keep each rung to one or two sentences.",
        "State the rule learned at each rung before moving up.",
        "End with a single, general solution and a quick edge-case check."
      ],
      definition: "Solve by starting with the simplest instances, generalizing patterns, and stepping up complexity until the full problem is solved.",
      help: "Enter the problem, optionally outline a “complexity ladder” (one per line) from simplest to hardest, and add guardrails.",
      fields: [
        {
          label: "Problem / goal",
          desc: "What should be solved or decided?",
          key: "problem",
          ph: "e.g., Explain and implement a function to validate parentheses.",
          type: "textarea"
        },
        {
          label: "Complexity ladder (one per line, optional)",
          desc: "From simplest to most complex cases.",
          key: "ladder",
          ph: "Trivial case…\nSmall inputs…\nGeneral case…\nEdge cases…",
          type: "textarea"
        },
        {
          label: "Do's (must do)",
          desc: "Positive guardrails.",
          key: "dos",
          ph: "Show the rule discovered at each rung; keep total under 300 words.",
          type: "textarea"
        },
        {
          label: "Don'ts / constraints",
          desc: "Limits to respect.",
          key: "donts",
          ph: "No lengthy proofs; avoid unexplained jumps.",
          type: "textarea"
        }
      ],
      template: ({ problem, ladder, dos, donts, ctx, audience, style, tone }) => [
    'Use Least-to-Most reasoning: start with simple instances, extract a rule, scale up, then solve the full problem.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    problem && `Problem: ${problem}`,
    ladder && (
      'Complexity ladder:\n' + String(ladder)
        .split(/\n+/).map(s=>s.trim()).filter(Boolean)
        .map((r,i)=> `${i+1}. ${r}`).join('\n')
    ),
    dos && `Do:\n${dos}`,
    donts && `Don\'t:\n${donts}`,
    'Output format:\n1) Rungs (least→most) with the rule learned at each\n2) General solution\n3) Quick edge-case check'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "least to most (ltm) least-to-most-ltm solve by starting with the simplest instances, generalizing patterns, and stepping up complexity until the full problem is solved. enter the problem, optionally outline a “complexity ladder” (one per line) from simplest to hardest, and add guardrails. use:pattern use:presentations use:healing use:problem-framing level:intermediate use:storytelling topic:matrix use:goals use:teaching reasoning planning tackle problems by escalating from simple to complex derive a general method from trivial and small cases surface edge cases after building intuition keep each rung to one or two sentences. state the rule learned at each rung before moving up. end with a single, general solution and a quick edge-case check. problem / goal complexity ladder (one per line, optional) do's (must do) don'ts / constraints"
      }
    },

    {
      id: "maslaha_public_interest",
      slug: "maslaha-public-interest-reasoning",
      label: "Maṣlaḥa — Public Interest Reasoning (Islamic Ethics)",
      kind: "strategy",
      categories: [
        "ethics",
        "product-management",
        "cultural-frameworks",
        "prompt-development-techniques"
      ],
      tags: [
        "type:framework",
        "use:content",
        "use:decision-making",
        "use:healing",
        "topic:prompting",
        "use:pattern",
        "level:advanced",
        "use:format-guidance",
        "use:coding"
      ],
      use_cases: [
        "weigh public harms/benefits for a policy or product decision",
        "craft proportionate, transparent justifications with safeguards and sunset reviews",
        "design culturally aware exceptions and appeal processes",
        "align options with the maqāṣid al-sharīʿa (objectives) and legal maxims",
        "bridge Western risk–benefit methods with Middle Eastern ethical reasoning"
      ],
      boosters: [
        "Rank affected goods by tier: ḍarūrī (necessity) > ḥājī (need) > taḥsīnī (refinement).",
        "Screen options with legal maxims (no harm; hardship brings ease; custom is authoritative) before scoring.",
        "Show an explicit lesser-harm choice when no harmless option exists; document conditions/limits.",
        "Quantify severity × likelihood for harms/benefits; note uncertainty and evidence strength.",
        "State precedents and texts that support or constrain your choice; avoid claims of benefit without proof.",
        "Add equity checks for vulnerable groups; define exceptions, appeal paths, and review cadence.",
        "Write a one-line public rationale (Because → Therefore) and a decision rule for future reevaluation."
      ],
      definition: "A public-interest reasoning lens from Islamic legal ethics that prioritizes welfare and harm-minimization within the objectives of the law (maqāṣid). It balances evidence, proportionality, custom, and maxims to select the option that best secures essential goods while averting greater harms.",
      help: "1) State the issue, scope, and stakeholders (personas). 2) Identify maqāṣid impacted and rank by necessity (ḍarūrī/ḥājī/taḥsīnī). 3) List options; screen out those that breach decisive constraints or maxims. 4) For remaining options, compare harms/benefits with severity × likelihood and equity impacts. 5) Propose a proportionate ruling with conditions, safeguards, and a review date. 6) Record precedent, evidence, biases, and a public-facing rationale. Include Western-bridging notes when needed for non-specialist audiences.",
      fields: [
        {
          label: "Issue / decision",
          desc: "What must be decided and why it matters now.",
          key: "issue",
          ph: "e.g., Should we enable biometric login for low-end Android devices to reduce account takeovers?",
          type: "textarea"
        },
        {
          label: "Stakeholders / personas (one per line or typeahead)",
          autofill: "persona->inline",
          desc: "People/groups affected (users, operators, neighbors, regulators, vulnerable groups).",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "stakeholders",
          ph: "Frontline delivery workers\nLow-literacy users\nSecurity team\nLocal regulators",
          type: "repeater"
        },
        {
          label: "Context & scope",
          desc: "Locale, custom (ʿurf), legal environment, constraints, time horizon.",
          key: "context",
          ph: "MENA markets; high SIM swap fraud; budget-limited; Ramadan peak hours",
          type: "textarea"
        },
        {
          label: "Maqāṣid impacted (objectives)",
          desc: "Which objectives are at stake (e.g., life, intellect, property, family/lineage, religion) and how.",
          key: "maqasid",
          ph: "Property (protect users’ funds); Intellect (avoid dark patterns); Life (safety for delivery riders)",
          type: "textarea"
        },
        {
          label: "Priority tier (ḍarūrī / ḥājī / taḥsīnī)",
          desc: "Rank the dominant objective(s) by necessity level.",
          key: "tiering",
          ph: "ḍarūrī (essential) for property protection; ḥājī for convenience",
          type: "text"
        },
        {
          label: "Options under consideration (one per line)",
          desc: "Feasible alternatives, including “do nothing.”",
          key: "options",
          ph: "A) Enable biometrics for all\nB) Biometrics opt-in with education\nC) SMS OTP only (status quo)\nD) Hardware key pilot for high-risk users",
          type: "textarea"
        },
        {
          label: "Constraints / red lines",
          desc: "Non-negotiables (legal, security, accessibility, decisive texts/principles).",
          key: "constraints",
          ph: "No coerced biometrics; must pass accessibility; data storage limits; avoid deception",
          type: "textarea"
        },
        {
          label: "Legal maxims screen",
          desc: "Apply relevant maxims (no harm; hardship begets facility; custom is authoritative; certainty is not overruled by doubt; actions are by intentions). Note any option eliminated.",
          key: "maxims",
          ph: "Option A conflicts with “no harm” for survivors of domestic abuse (coercion risk) → eliminate A",
          type: "textarea"
        },
        {
          label: "Harms / risks (severity × likelihood)",
          desc: "List foreseeable harms per option; rate 1–5 for severity and likelihood; mark uncertainty.",
          key: "harms",
          ph: "B: Coerced unlock — Sev 4, Lik 2 (uncertain); Data breach impact — Sev 5, Lik 1",
          type: "textarea"
        },
        {
          label: "Benefits (magnitude × likelihood)",
          desc: "List benefits per option; rate 1–5 for magnitude and likelihood; mark uncertainty.",
          key: "benefits",
          ph: "B: Reduced ATO — Mag 4, Lik 3; Faster login — Mag 3, Lik 4",
          type: "textarea"
        },
        {
          label: "Equity & vulnerable groups",
          desc: "Who bears the harms? Who gains the benefits? Accessibility and inclusion considerations.",
          key: "equity",
          ph: "Blind users; feature phones; refugees without stable IDs",
          type: "textarea"
        },
        {
          label: "Precedents / principles / evidence",
          desc: "Texts, policies, case analogies, empirical data supporting or constraining action.",
          key: "precedent",
          ph: "Consumer protection regs; prior rulings on coercion; fraud analytics report; industry codes",
          type: "textarea"
        },
        {
          label: "Bias & ethical dilemma checks",
          autofill: "bias->inline",
          desc: "List cognitive/social biases, ethical dilemmas, or cultural blind spots to watch.",
          itemLabel: "bias",
          itemType: "typeahead",
          key: "bias_checks",
          ph: "Confirmation bias; WEIRD sampling; urban bias; stigma risk for certain names/accents",
          type: "repeater"
        },
        {
          label: "Proportionality & lesser-harm reasoning",
          desc: "Explain why the chosen option secures greater goods or averts greater harms with least side-effects.",
          key: "proportionality",
          ph: "B secures property (ḍarūrī) with lower coercion risk than A; conditions mitigate residual risk",
          type: "textarea"
        },
        {
          label: "Safeguards / conditions / exceptions",
          desc: "Preventive measures, carve-outs, consent requirements, rate limits, transparency notices.",
          key: "safeguards",
          ph: "Opt-in + informed consent; easy opt-out; “panic PIN”; rate-limit unlock attempts; audit logs",
          type: "textarea"
        },
        {
          label: "Ruling / decision (Because → Therefore)",
          desc: "Concise, public-facing conclusion linking evidence, maqāṣid, and proportionality.",
          key: "ruling",
          ph: "Because B secures essential property interests with minimal harm and passes maxims, therefore adopt B with safeguards",
          type: "textarea"
        },
        {
          label: "Monitoring plan & metrics",
          desc: "What to track, early-warning triggers, who monitors, cadence.",
          key: "monitoring",
          ph: "Weekly fraud rate; coercion reports; accessibility complaints; trigger: +20% coercion reports",
          type: "textarea"
        },
        {
          label: "Appeal / override & review cadence",
          desc: "How affected parties can contest; scheduled review and sunset.",
          key: "appeals",
          ph: "User appeal channel; external ombud review; 90-day sunset unless renewed",
          type: "textarea"
        },
        {
          label: "Bridge note for Western audiences (optional)",
          desc: "One-paragraph explanation drawing parallels (e.g., proportionality, public interest tests) without erasing differences.",
          key: "western_bridge",
          ph: "This balances goods much like proportionality analysis in constitutional law but is bounded by maqāṣid and legal maxims",
          type: "textarea"
        }
      ],
      template: (args) => {
    const {
      issue, stakeholders, context, maqasid, tiering, options, constraints, maxims,
      harms, benefits, equity, precedent, bias_checks, proportionality,
      safeguards, ruling, monitoring, appeals, western_bridge, ctx, style, tone
    } = args;

    const toLines = (s) => String(s || '').split(/\n+/).map(x => x.trim()).filter(Boolean);
    const list = (title, s) => s && `${title}\n` + toLines(s).map((x,i)=>`${i+1}. ${x}`).join('\n');

    return [
      'Apply Maṣlaḥa (public-interest reasoning) with maqāṣid & maxims.',
      ctx && `Context: ${ctx}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,

      issue && `Issue / decision:\n${issue}`,
      stakeholders && (Array.isArray(stakeholders)
        ? 'Stakeholders / personas:\n' + stakeholders.map((p,i)=>`${i+1}. ${p}`).join('\n')
        : list('Stakeholders / personas:', stakeholders)),
      context && `Context & scope:\n${context}`,

      maqasid && `Maqāṣid impacted:\n${maqasid}`,
      tiering && `Priority tier: ${tiering}`,

      list('Options:', options),
      constraints && `Constraints / red lines:\n${constraints}`,
      maxims && `Legal maxims screen:\n${maxims}`,

      harms && `Harms / risks (severity × likelihood):\n${harms}`,
      benefits && `Benefits (magnitude × likelihood):\n${benefits}`,
      equity && `Equity & vulnerable groups:\n${equity}`,

      precedent && `Precedents / principles / evidence:\n${precedent}`,
      bias_checks && (Array.isArray(bias_checks)
        ? 'Bias & ethical dilemma checks:\n' + bias_checks.map((b,i)=>`${i+1}. ${b}`).join('\n')
        : `Bias & ethical dilemma checks:\n${bias_checks}`),

      proportionality && `Proportionality & lesser-harm reasoning:\n${proportionality}`,
      safeguards && `Safeguards / conditions / exceptions:\n${safeguards}`,
      ruling && `Ruling (Because → Therefore):\n${ruling}`,

      monitoring && `Monitoring plan & metrics:\n${monitoring}`,
      appeals && `Appeal / override & review cadence:\n${appeals}`,
      western_bridge && `Bridge note (Western audience):\n${western_bridge}`,

      'Output:\n1) Screened option set (maxims/constraints)\n2) Ranked harms/benefits with equity notes\n3) Proportionate ruling with safeguards\n4) Monitoring + appeal + review cadence\n5) Public-facing rationale (Because → Therefore)'
    ].filter(Boolean).join('\n');
  },
      meta: {
        search_text: "maṣlaḥa — public interest reasoning (islamic ethics) maslaha-public-interest-reasoning a public-interest reasoning lens from islamic legal ethics that prioritizes welfare and harm-minimization within the objectives of the law (maqāṣid). it balances evidence, proportionality, custom, and maxims to select the option that best secures essential goods while averting greater harms. 1) state the issue, scope, and stakeholders (personas). 2) identify maqāṣid impacted and rank by necessity (ḍarūrī/ḥājī/taḥsīnī). 3) list options; screen out those that breach decisive constraints or maxims. 4) for remaining options, compare harms/benefits with severity × likelihood and equity impacts. 5) propose a proportionate ruling with conditions, safeguards, and a review date. 6) record precedent, evidence, biases, and a public-facing rationale. include western-bridging notes when needed for non-specialist audiences. type:framework use:content use:decision-making use:healing topic:prompting use:pattern level:advanced use:format-guidance use:coding ethics product-management cultural-frameworks prompt-development-techniques weigh public harms/benefits for a policy or product decision craft proportionate, transparent justifications with safeguards and sunset reviews design culturally aware exceptions and appeal processes align options with the maqāṣid al-sharīʿa (objectives) and legal maxims bridge western risk–benefit methods with middle eastern ethical reasoning rank affected goods by tier: ḍarūrī (necessity) > ḥājī (need) > taḥsīnī (refinement). screen options with legal maxims (no harm; hardship brings ease; custom is authoritative) before scoring. show an explicit lesser-harm choice when no harmless option exists; document conditions/limits. quantify severity × likelihood for harms/benefits; note uncertainty and evidence strength. state precedents and texts that support or constrain your choice; avoid claims of benefit without proof. add equity checks for vulnerable groups; define exceptions, appeal paths, and review cadence. write a one-line public rationale (because → therefore) and a decision rule for future reevaluation. issue / decision stakeholders / personas (one per line or typeahead) context & scope maqāṣid impacted (objectives) priority tier (ḍarūrī / ḥājī / taḥsīnī) options under consideration (one per line) constraints / red lines legal maxims screen harms / risks (severity × likelihood) benefits (magnitude × likelihood) equity & vulnerable groups precedents / principles / evidence bias & ethical dilemma checks proportionality & lesser-harm reasoning safeguards / conditions / exceptions ruling / decision (because → therefore) monitoring plan & metrics appeal / override & review cadence bridge note for western audiences (optional)"
      }
    },

    {
      id: "mind_map",
      slug: "mind-map-outline",
      label: "Mind Map — Central Idea with Branches",
      kind: "strategy",
      categories: [
        "creativity",
        "analysis-frameworks"
      ],
      tags: [
        "type:framework",
        "use:decision-making",
        "use:healing",
        "level:beginner",
        "use:brainstorming"
      ],
      use_cases: [
        "quickly brainstorm and organize ideas around a central topic in a visual hierarchy (textually represented)",
        "generate an outline of subtopics and details for a broad subject",
        "assist ADHD or visual thinkers in structuring thoughts without strict linear order"
      ],
      boosters: [
        "Keep each node label short (1-3 words) as in a real mind map, for clarity and focus.",
        "Allow some branches to be unconventional or playful – creative tangents can lead to useful insights."
      ],
      definition: "A visual thinking tool that starts with one central idea, then branches into related subtopics, which further expand into details. Here, the mind map will be presented as an indented text outline.",
      help: "Enter a central topic. Optionally list some main branches. The model will produce a mind map-style outline: the central idea, major branches (first-level nodes), and a few sub-points for each branch.",
      fields: [
        {
          label: "Central topic",
          key: "topic",
          ph: "e.g., Climate Change",
          type: "text"
        },
        {
          label: "Main branches (optional, one per line)",
          key: "branches",
          ph: "e.g., Causes\nImpacts\nSolutions",
          type: "textarea"
        }
      ],
      template: ({ topic, branches, ctx, audience, style, tone }) => [
    'Create a mind map outline for the given topic.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    topic && `Central Topic: ${topic}`,
    branches && (
      'Main Branches:\n' + String(branches)
        .split(/\n+/).map(s => s.trim()).filter(Boolean)
        .map((b,i) => `${i+1}. ${b}`)
        .join('\n')
    ),
    'Output:\n- [Central Topic]\n  - [Branch 1]\n    - Sub-point 1\n    - Sub-point 2\n  - [Branch 2]\n    - Sub-point...\n(etc., an indented list representing the mind map)'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "mind map — central idea with branches mind-map-outline a visual thinking tool that starts with one central idea, then branches into related subtopics, which further expand into details. here, the mind map will be presented as an indented text outline. enter a central topic. optionally list some main branches. the model will produce a mind map-style outline: the central idea, major branches (first-level nodes), and a few sub-points for each branch. type:framework use:decision-making use:healing level:beginner use:brainstorming creativity analysis-frameworks quickly brainstorm and organize ideas around a central topic in a visual hierarchy (textually represented) generate an outline of subtopics and details for a broad subject assist adhd or visual thinkers in structuring thoughts without strict linear order keep each node label short (1-3 words) as in a real mind map, for clarity and focus. allow some branches to be unconventional or playful – creative tangents can lead to useful insights. central topic main branches (optional, one per line)"
      }
    },

    {
      id: "mind_map",
      slug: "mind-mapping",
      label: "Mind Mapping — Visual cluster of ideas",
      kind: "strategy",
      categories: [
        "creativity",
        "planning",
        "critical-thinking",
        "reasoning"
      ],
      tags: [
        "type:technique",
        "use:decision-making",
        "topic:values",
        "use:coding",
        "use:discover",
        "use:pattern",
        "use:planning",
        "level:beginner",
        "use:workshop",
        "use:case-study"
      ],
      use_cases: [
        "brainstorm non-linearly around a central idea and discover hidden clusters",
        "synthesize research/interviews into themes and questions",
        "plan curricula, talks, or documents (export map → outline)",
        "facilitate workshops and converge on top decisions/actions",
        "decompose projects (WBS/site map) and surface dependencies/risks"
      ],
      boosters: [
        "Limit to 4–7 primary branches; keep one keyword per twig (avoid paragraphs).",
        "Add cross-links between branches and label the relation (“blocks”, “enables”).",
        "Code meaning visually: consistent colors per branch, icons for status/risks, and enclosures for subsystems.",
        "End with “Top 3 decisions + owners + dates” so the map drives action.",
        "Include an “Unknowns/Assumptions” branch and a “Counter-map” (missing voices).",
        "Accessibility: pair color with shape; prefer color-blind-safe palettes; keep text large with good contrast.",
        "For workshops: timebox rounds, rotate scribes, finish with dot-vote → converge."
      ],
      definition: "A visual thinking method that radiates from a central topic into labeled branches and sub-branches, using spatial layout, color, and minimal text to reveal structure, gaps, and connections. It supports associative thinking for divergence and quick translation into outlines for convergence.",
      help: "Provide a central topic. Optionally seed primary branches, choose a map type (radial, concept, affinity, fishbone, causal, argument, sitemap/WBS), and set limits (max branches/depth). The model will expand branches, add cross-links, and return an outline/ASCII/JSON—or, if selected, Python code for a chart or an image-generation prompt. Include personas to tailor language and “bias checks” to avoid blind spots.",
      fields: [
        {
          label: "Central topic",
          desc: "Short title that frames scope.",
          key: "topic",
          ph: "e.g., Renewable Energy Transition 2030",
          type: "text"
        },
        {
          label: "Audience / personas",
          autofill: "persona->inline",
          desc: "Who is this for? Influences wording and examples.",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "personas",
          ph: "e.g., City planner; High-school students; CTO; Policy analyst",
          type: "repeater"
        },
        {
          label: "Session goal",
          desc: "Choose whether to explode ideas, converge to choices, or run a two-phase diverge→converge session.",
          key: "goal",
          options: [
            "diverge (ideas)",
            "converge (decisions)",
            "both"
          ],
          ph: "diverge (ideas)",
          type: "select"
        },
        {
          label: "Map type",
          desc: "Pick a structure that matches your task (we will generate detailed, method-specific instructions).",
          key: "map_type",
          options: [
            "radial mind map",
            "concept map (labeled edges)",
            "affinity clusters (KJ)",
            "fishbone (Ishikawa causes)",
            "causal loop (systems)",
            "argument map",
            "sitemap/WBS"
          ],
          ph: "radial mind map",
          type: "select"
        },
        {
          label: "Primary branch seeds (optional, one per line)",
          desc: "Seed 4–7 top categories to guide expansion.",
          key: "branches",
          ph: "Policy\nTechnology\nEconomics\nCommunity\nEnvironment\nRisks",
          type: "textarea"
        },
        {
          label: "Max primary branches",
          desc: "Recommend 4–7 for legibility.",
          key: "branch_limit",
          ph: "6",
          type: "text"
        },
        {
          label: "Max depth",
          desc: "How many sub-levels to expand.",
          key: "depth_limit",
          ph: "2",
          type: "text"
        },
        {
          label: "Cross-links",
          desc: "Whether to add cross-branch connections and label them.",
          key: "cross_links",
          options: [
            "auto (suggest)",
            "always add",
            "skip"
          ],
          ph: "auto (suggest)",
          type: "select"
        },
        {
          label: "Color scheme",
          desc: "Palette guidance for visuals; we will translate this choice into instructions suited to your selected map format.",
          key: "color_scheme",
          options: [
            "neutral",
            "high-contrast",
            "color-blind-safe"
          ],
          ph: "color-blind-safe",
          type: "select"
        },
        {
          label: "Output format",
          desc: "Primary artifact to return (structure vs. code vs. prompt vs. prose).",
          key: "output",
          options: [
            "indented outline",
            "ASCII tree",
            "JSON (nodes & edges)",
            "python code (graph/chart)",
            "image prompt (for an AI image generator)",
            "verbal description"
          ],
          ph: "indented outline",
          type: "select"
        },
        {
          label: "Second Output Format (Optiona)",
          desc: "How the map should be produced. We will generate format-specific instructions (e.g., ASCII drawing rules, Python plotting code spec, or an image-generation prompt).",
          key: "map_format",
          options: [
            "ascii (plain text symbols)",
            "python (generate code for a chart/graph)",
            "image prompt (DALL·E or similar)",
            "verbal description (narrative layout instructions)"
          ],
          ph: "ascii (plain text symbols)",
          type: "select"
        },
        {
          label: "Session mode",
          desc: "Solo = fast personal exploration and synthesis. Workshop = structured group facilitation with rounds, dot-votes, and convergence.",
          key: "facilitation",
          options: [
            "solo",
            "workshop"
          ],
          ph: "solo",
          type: "select"
        },
        {
          label: "Timebox",
          desc: "Duration for the sprint/round.",
          key: "timebox",
          ph: "e.g., 12 minutes",
          type: "text"
        },
        {
          label: "Bias / blind-spot checks",
          autofill: "bias->inline",
          desc: "Inline prompts to broaden perspectives (sampling, cultural, recency, groupthink…).",
          itemLabel: "bias",
          itemType: "typeahead",
          key: "bias_checks",
          ph: "e.g., WEIRD sampling; confirmation bias; urban bias; survivorship bias",
          type: "repeater"
        },
        {
          label: "Constraints & scope notes (optional)",
          desc: "Boundaries, assumptions, known exclusions.",
          key: "constraints",
          ph: "No capex modeling; focus on municipal actions only",
          type: "textarea"
        },
        {
          label: "Follow-on artifact",
          desc: "What the model should produce from the map after thinking.",
          key: "next_artifact",
          options: [
            "outline",
            "task backlog",
            "slide",
            "brief/spec"
          ],
          ph: "outline",
          type: "select"
        },
        {
          label: "Audience explainer (optional)",
          desc: "A 2–3 sentence “what is a mind map” primer for newcomers.",
          key: "explainer",
          ph: "A mind map starts with a central idea and grows branches that hold keywords and connections…",
          type: "textarea"
        }
      ],
      template: (args) => {
    const {
      topic, personas, goal, map_type, branches, branch_limit, depth_limit,
      cross_links, color_scheme, output, map_format, facilitation, timebox,
      bias_checks, constraints, next_artifact, explainer, ctx, style, tone
    } = args;

    const toLines = s => String(s || '').split(/\n+/).map(x => x.trim()).filter(Boolean);
    const list = (title, s) => s && `${title}\n` + toLines(s).map((x,i)=>`${i+1}. ${x}`).join('\n');
    const seeds = toLines(branches);

    // Detailed instruction blocks per map type
    const mapTypeGuide = (t) => {
      switch ((t||'').toLowerCase()) {
        case 'radial mind map':
          return [
            'Map Type — Radial mind map:',
            '- Place a single CENTRAL NODE (title + 2–4 words).',
            '- Create 4–7 PRIMARY BRANCHES radiating outward; one KEYWORD per branch.',
            '- Add 1–2 SUB-LEVELS with short keywords; avoid sentences.',
            '- Add CROSS-LINKS between branches where ideas relate; label links (e.g., “enables”, “conflicts”).'
          ].join('\n');
        case 'concept map (labeled edges)':
          return [
            'Map Type — Concept map (labeled edges):',
            '- Create a NETWORK of nodes where EACH EDGE has a RELATION LABEL (e.g., causes, requires, contrasts).',
            '- Prioritize precise linking phrases; clarify directionality if causal.',
            '- Group related nodes spatially; avoid duplicate nodes by cross-linking.'
          ].join('\n');
        case 'affinity clusters (kj)':
          return [
            'Map Type — Affinity clusters (KJ):',
            '- Start from many small notes; CLUSTER by similarity without predefined categories.',
            '- Name each cluster with a short THEME label; allow multi-membership via cross-links.',
            '- Surface 3–5 top clusters and any outliers needing further research.'
          ].join('\n');
        case 'fishbone (ishikawa causes)':
          return [
            'Map Type — Fishbone (Ishikawa):',
            '- Put the EFFECT/PROBLEM at the head; draw main bones for cause categories (e.g., People/Process/Tech/Env).',
            '- Add secondary bones for specific causes; use short cause phrases.',
            '- Optionally tag each cause with evidence strength or likelihood.'
          ].join('\n');
        case 'causal loop (systems':
        case 'causal loop (systems)':
          return [
            'Map Type — Causal loop (systems):',
            '- Draw variables as nodes; connect with arrows showing influence (+/−).',
            '- Identify REINFORCING (R) and BALANCING (B) loops; annotate delays (||).',
            '- Focus on feedback structure; keep variable names measurable where possible.'
          ].join('\n');
        case 'argument map':
          return [
            'Map Type — Argument map:',
            '- Center on a CLAIM; attach PREMISES; add OBJECTIONS and REBUTTALS.',
            '- Use short, testable statements; cite strongest evidence.',
            '- Mark confidence and the top missing evidence.'
          ].join('\n');
        case 'sitemap/wbs':
          return [
            'Map Type — Sitemap / WBS:',
            '- Build a HIERARCHICAL tree: product/site sections (level 1), pages/features (level 2), components/tasks (level 3).',
            '- Keep sibling granularity consistent; add cross-links for shared components.',
            '- Tag nodes with owner/priority where relevant.'
          ].join('\n');
        default:
          return null;
      }
    };

    // Session goal guidance
    const sessionGoalGuide = (g) => {
      switch ((g||'').toLowerCase()) {
        case 'diverge (ideas)':
          return [
            'Session Goal — Diverge (ideas):',
            '- Generate breadth first: rapid branching, no judgment, no pruning during the sprint.',
            '- Use timeboxed rounds and prompt shifts (SCAMPER, “what if…”) to expand coverage.'
          ].join('\n');
        case 'converge (decisions)':
          return [
            'Session Goal — Converge (decisions):',
            '- Sift and shape: merge duplicates, prune low-value twigs, and elevate 3–5 themes.',
            '- Close with a decision snapshot: Top 3 decisions, owners, dates, and success criteria.'
          ].join('\n');
        case 'both':
          return [
            'Session Goal — Diverge → Converge:',
            '- Phase 1 (Diverge): fast, judgment-free expansion with timebox.',
            '- Phase 2 (Converge): cluster, cross-link, and select Top 3 decisions with owners and dates.'
          ].join('\n');
        default:
          return null;
      }
    };

    // Color scheme guidance (translated to the format later)
    const colorSchemeGuide = (c) => {
      switch ((c||'').toLowerCase()) {
        case 'high-contrast':
          return 'Color Scheme — High-contrast: assign distinct, saturated colors per primary branch; ensure text on dark fills uses light text, and vice versa.';
        case 'color-blind-safe':
          return 'Color Scheme — Color-blind-safe: use a palette like Okabe–Ito; pair each color with a unique marker (icon/shape) to avoid reliance on color alone.';
        case 'neutral':
          return 'Color Scheme — Neutral: minimal color; use line weight, icons, and enclosure shapes to convey hierarchy and status.';
        default:
          return null;
      }
    };

    // Map rendering modality guidance
    const formatGuide = (f, scheme) => {
      const schemeHint = scheme ? colorSchemeGuide(scheme) : null;
      switch ((f||'').toLowerCase()) {
        case 'ascii (plain text symbols)':
          return [
            'Rendering — ASCII:',
            '- Produce a monospaced ASCII diagram using ├─, └─, │ and indentation for hierarchy.',
            '- Label cross-links inline as “(→ see Branch X)”.',
            '- Keep line length ≤ 100 chars; no color—use emoji/icons sparingly if supported.',
            schemeHint && `- Accessibility translation of color scheme: ${schemeHint}`
          ].filter(Boolean).join('\n');
        case 'python (generate code for a chart/graph)':
          return [
            'Rendering — Python code:',
            '- Output runnable Python that builds the map as a graph/tree using matplotlib (and networkx if needed).',
            '- Do NOT use seaborn; one figure only; avoid external files; ensure code runs in a clean environment.',
            '- Add readable node labels; if color scheme is selected, map branches to a safe palette.',
            schemeHint && `- Apply palette guidance: ${schemeHint}`
          ].filter(Boolean).join('\n');
        case 'image prompt (dall·e or similar)':
          return [
            'Rendering — Image-generation prompt:',
            '- Return a concise, explicit prompt that specifies layout (radial/network/fishbone/etc.), labels, hierarchy depth, and styling.',
            '- Include palette/style notes if color scheme is selected; request high contrast and legible typography.',
            schemeHint && `- Palette/accessibility guidance: ${schemeHint}`
          ].filter(Boolean).join('\n');
        case 'verbal description (narrative layout instructions)':
          return [
            'Rendering — Verbal description:',
            '- Provide a clear paragraph describing the final layout: center, branches, notable cross-links, and visual encoding.',
            schemeHint && `- Mention how color/shape encodes categories: ${schemeHint}`
          ].filter(Boolean).join('\n');
        default:
          return null;
      }
    };

    // Output format guidance (additional artifact spec)
    const outputGuide = (o) => {
      switch ((o||'').toLowerCase()) {
        case 'ascii tree':
          return 'Output — ASCII tree: include a clean, monospaced tree with 1–2 sub-levels and inline cross-link notes.';
        case 'indented outline':
          return 'Output — Indented outline: hierarchical bullets, 1–2 sub-levels, cross-links noted as “(→ Branch X)”.';
        case 'json (nodes & edges)':
          return 'Output — JSON: provide nodes [{id,label,type,tags}] and edges [{from,to,label}] with stable ids.';
        case 'python code (graph/chart)':
          return 'Output — Python code: return runnable code that renders the map as a single matplotlib figure; no seaborn; label nodes clearly.';
        case 'image prompt (for an ai image generator)':
          return 'Output — Image prompt: produce a tight, explicit prompt describing layout, labels, hierarchy, and palette for an AI image generator.';
        case 'verbal description':
          return 'Output — Verbal description: a narrative depiction of the final map layout and key relationships.';
        default:
          return null;
      }
    };

    // Session mode expansion
    const facilitationGuide = (m, tb) => {
      switch ((m||'').toLowerCase()) {
        case 'solo':
          return [
            'Session Mode — Solo:',
            `- Work in ${tb || 'short'} sprints: explode → cluster → cross-link → select Top 3 decisions.`,
            '- Capture “Unknowns/Assumptions” and next research prompts; end with a mini action list.'
          ].join('\n');
        case 'workshop':
          return [
            'Session Mode — Workshop:',
            `- Facilitate timeboxed rounds (${tb || 'e.g., 2×8 minutes diverge + 8 minutes converge'}).`,
            '- Rotate scribes, then dot-vote to converge; assign owners/dates for Top 3 outcomes.'
          ].join('\n');
        default:
          return null;
      }
    };

    const boosters = [
      'Use 4–7 primary branches; one keyword per twig.',
      'Add cross-links and label relationships (e.g., “enables”, “blocks”).',
      'Code meaning visually: color per branch, icons for risks/tasks.',
      'End with Top-3 decisions & owners; mark unknowns.'
    ];

    return [
      'Create a Mind Map that balances divergence and clarity.',
      ctx && `Context: ${ctx}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,

      topic && `Central Topic: ${topic}`,
      personas && (Array.isArray(personas)
        ? 'Audience / personas:\n' + personas.map((p,i)=>`${i+1}. ${p}`).join('\n')
        : list('Audience / personas:', personas)),

      goal && sessionGoalGuide(goal),
      map_type && mapTypeGuide(map_type),
      (branch_limit || depth_limit) && `Limits: ${branch_limit ? `branches ≤ ${branch_limit}` : ''}${branch_limit && depth_limit ? '; ' : ''}${depth_limit ? `depth ≤ ${depth_limit}` : ''}`,
      cross_links && `Cross-links preference: ${cross_links}`,
      color_scheme && colorSchemeGuide(color_scheme),
      facilitation && facilitationGuide(facilitation, timebox),
      constraints && `Constraints & scope:\n${constraints}`,
      explainer && `Explainer:\n${explainer}`,

      seeds.length ? 'Primary branches (seeds):\n' + seeds.map((b,i)=>`- ${b}`).join('\n') : 'Primary branches: (generate 4–7 from the topic)',

      'Rules:',
      boosters.map(x => `- ${x}`).join('\n'),

      map_format && formatGuide(map_format, color_scheme),
      output && outputGuide(output),

      'Deliverables:',
      '- A) The map artifact per the selected rendering/output instructions.',
      '- B) “Decisions / Actions / Risks / Unknowns” bullets with owners & dates.',
      next_artifact && `- C) Convert map into: ${next_artifact}.`,

      bias_checks && (Array.isArray(bias_checks)
        ? 'Bias / blind-spot checks:\n' + bias_checks.map((b,i)=>`${i+1}. ${b}`).join('\n')
        : `Bias / blind-spot checks:\n${bias_checks}`)
    ].filter(Boolean).join('\n');
  },
      meta: {
        search_text: "mind mapping — visual cluster of ideas mind-mapping a visual thinking method that radiates from a central topic into labeled branches and sub-branches, using spatial layout, color, and minimal text to reveal structure, gaps, and connections. it supports associative thinking for divergence and quick translation into outlines for convergence. provide a central topic. optionally seed primary branches, choose a map type (radial, concept, affinity, fishbone, causal, argument, sitemap/wbs), and set limits (max branches/depth). the model will expand branches, add cross-links, and return an outline/ascii/json—or, if selected, python code for a chart or an image-generation prompt. include personas to tailor language and “bias checks” to avoid blind spots. type:technique use:decision-making topic:values use:coding use:discover use:pattern use:planning level:beginner use:workshop use:case-study creativity planning critical-thinking reasoning brainstorm non-linearly around a central idea and discover hidden clusters synthesize research/interviews into themes and questions plan curricula, talks, or documents (export map → outline) facilitate workshops and converge on top decisions/actions decompose projects (wbs/site map) and surface dependencies/risks limit to 4–7 primary branches; keep one keyword per twig (avoid paragraphs). add cross-links between branches and label the relation (“blocks”, “enables”). code meaning visually: consistent colors per branch, icons for status/risks, and enclosures for subsystems. end with “top 3 decisions + owners + dates” so the map drives action. include an “unknowns/assumptions” branch and a “counter-map” (missing voices). accessibility: pair color with shape; prefer color-blind-safe palettes; keep text large with good contrast. for workshops: timebox rounds, rotate scribes, finish with dot-vote → converge. central topic audience / personas session goal map type primary branch seeds (optional, one per line) max primary branches max depth cross-links color scheme output format second output format (optiona) session mode timebox bias / blind-spot checks constraints & scope notes (optional) follow-on artifact audience explainer (optional)"
      }
    },

    {
      id: "monroe_sequence",
      slug: "monroes-motivated-sequence",
      label: "Monroe’s Motivated Sequence — Attention · Need · Satisfaction · Visualization · Action",
      kind: "framework",
      categories: [
        "storytelling-frameworks",
        "decision",
        "reasoning",
        "ethics"
      ],
      tags: [
        "type:framework",
        "use:decision-making",
        "use:iteration",
        "use:communication",
        "phase:compose",
        "use:recipe",
        "level:intermediate",
        "use:copywriting",
        "use:value-prop",
        "use:product-value",
        "use:ad-copy",
        "use:content",
        "topic:bias",
        "topic:persuasive-language",
        "topic:communicating-value",
        "use:scope-management"
      ],
      use_cases: [
        "structure persuasive talks and pitches that move an audience to act",
        "craft fundraising, policy, or campaign appeals with clear next steps",
        "generate variants (positive / negative / contrast) of the visualization step for testing",
        "adapt one core argument across channels (speech, landing page, email, video script)"
      ],
      boosters: [
        "Map each Need point to a matching Satisfaction point (1:1) to prove the solution *specifically* fixes what hurts.",
        "Choose a Visualization mode: Positive (benefits realized), Negative (cost of inaction), or Contrast (before vs after).",
        "End with a single, concrete Action (who/what/when/where) and remove friction (link/QR/script/phone line).",
        "Braid evidence (logos), credibility (ethos), and emotion (pathos) across steps—do not rely on fear alone.",
        "Align the Need with human motivations (e.g., safety, belonging, esteem, purpose) without treating them as strictly hierarchical.",
        "Ethics guardrail: represent risks fairly, cite sources, and avoid coercive fear appeals; include alternatives/safeguards where relevant.",
        "Localization & inclusion: tailor examples and idioms to the personas’ culture and access needs; offer accessible formats."
      ],
      definition: "A five-step persuasive pattern (Attention → Need → Satisfaction → Visualization → Action) that first secures attention, then makes the audience *feel and understand* a problem, proposes a credible solution, future-paces the outcome, and ends with a specific, low-friction call to action.",
      help: "Provide the audience, the problem/need, and your proposed solution. Select a Visualization mode (positive/negative/contrast), channel and length, and specify the exact Action you want. The model will generate a structured message with ethical, audience-aware language and friction-reducing details.",
      fields: [
        {
          label: "Audience / personas",
          autofill: "persona->inline",
          desc: "Who are you persuading? Drives tone, examples, and cultural references.",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "personas",
          ph: "Healthcare donors; City council staffer; Busy parent; Field technicians",
          type: "repeater"
        },
        {
          label: "Primary delivery channel",
          desc: "We will tailor structure, sentence length, and pacing to this channel.",
          key: "channel",
          options: [
            "live speech",
            "webinar",
            "landing page",
            "email",
            "short video script (≤60s)",
            "long video script (2–5 min)",
            "social post thread"
          ],
          ph: "live speech",
          type: "select"
        },
        {
          label: "Target length / duration",
          desc: "Controls depth per step and verbosity.",
          key: "length",
          options: [
            "60 seconds",
            "3 minutes",
            "5 minutes",
            "~300 words",
            "~600 words"
          ],
          ph: "3 minutes",
          type: "select"
        },
        {
          label: "Attention (hook)",
          desc: "Opening device: story, startling fact, question, or vivid image tied to audience values.",
          key: "attention",
          ph: "“Last winter, 1 in 6 local families lost heat at least once.”",
          type: "textarea"
        },
        {
          label: "Need — proof points (one per line)",
          desc: "Evidence that a real, relevant problem exists (data, anecdotes, stakes).",
          key: "need_points",
          ph: "Energy shutoffs increased 22%\nKids miss school from cold-related illness\nEnergy debt traps families",
          type: "textarea"
        },
        {
          label: "Underlying motivations (non-hierarchical)",
          desc: "What human motives this problem triggers; used to heighten salience.",
          key: "need_motivation",
          options: [
            "safety & stability",
            "belonging & community",
            "esteem & status",
            "autonomy & mastery",
            "purpose & legacy",
            "other"
          ],
          ph: "safety & stability",
          type: "select"
        },
        {
          label: "Satisfaction — your solution",
          desc: "What exactly should be done; include mechanism-of-action (how it fixes each need point).",
          key: "solution",
          ph: "Warmth Fund covers the arrears gap; auto-enrollment via utility partners; <5% admin overhead",
          type: "textarea"
        },
        {
          label: "Likely objections & pre-buttals (one per line)",
          desc: "Top 3–5 concerns and concise responses.",
          key: "objections",
          ph: "“Overhead is wasteful” → independent audit under 5%\n“People will abuse it” → eligibility checks monthly",
          type: "textarea"
        },
        {
          label: "Ethos / credibility",
          desc: "Why you/this solution is trustworthy (experience, partners, results, certifications).",
          key: "credibility",
          ph: "Partnered with City Housing Office; audited by Smith & Co.; 2,300 families helped last winter",
          type: "textarea"
        },
        {
          label: "Visualization mode",
          desc: "Controls the future-pacing scene in step 4.",
          key: "visualization_mode",
          options: [
            "positive (future if we act)",
            "negative (future if we don’t)",
            "contrast (negative then positive)"
          ],
          ph: "contrast (negative then positive)",
          type: "select"
        },
        {
          label: "Visualization details (sensory cues, characters, setting)",
          desc: "Images/sounds/emotions to make the future concrete; keep respectful and specific.",
          key: "visual_details",
          ph: "A warm kitchen at 6am; kids doing homework at the table; quiet furnace hum",
          type: "textarea"
        },
        {
          label: "Action — call-to-action",
          desc: "One specific action: who should do what, where, and when.",
          key: "cta",
          ph: "Scan the QR code and pledge $25/month before Friday at 6pm",
          type: "textarea"
        },
        {
          label: "Friction removers",
          desc: "Make acting easy: links, QR, phone script, calendar link, default amounts.",
          key: "friction_removers",
          ph: "QR code; one-click Apple/Google Pay; prefilled $25; calendar reminder",
          type: "textarea"
        },
        {
          label: "Ethical safeguards / alternatives",
          desc: "Disclosure, consent, opt-out, alternative actions—avoid coercion and fear-only appeals.",
          key: "safeguards",
          ph: "Provide hotline for questions; suggest non-monetary volunteering alternative",
          type: "textarea"
        },
        {
          label: "Bias & blind-spot checks",
          autofill: "bias->inline",
          desc: "Cognitive or cultural biases to monitor (sampling, confirmation, fear appeal overuse, WEIRD framing).",
          itemLabel: "bias",
          itemType: "typeahead",
          key: "bias_checks",
          ph: "confirmation bias; fear appeal escalation; WEIRD examples",
          type: "repeater"
        },
        {
          label: "Success metrics & measurement window",
          desc: "Define how you’ll know the CTA worked.",
          key: "metrics",
          ph: "Pledges: 200 by Friday; conversion ≥ 8%; unsubscribe rate < 0.5%",
          type: "textarea"
        },
        {
          label: "Localization & inclusion notes (optional)",
          desc: "Language choices, reading level, cultural references, accessibility format needs.",
          key: "localization",
          ph: "US Spanish version; 6th-grade reading level; alt text for images; captions for video",
          type: "textarea"
        }
      ],
      template: (args) => {
    const {
      personas, channel, length, attention, need_points, need_motivation,
      solution, objections, credibility, visualization_mode, visual_details,
      cta, friction_removers, safeguards, bias_checks, metrics, localization,
      ctx, style, tone
    } = args;

    const toLines = s => String(s || '').split(/\n+/).map(x => x.trim()).filter(Boolean);
    const list = (title, s) => s && `${title}\n` + toLines(s).map((x,i)=>`${i+1}. ${x}`).join('\n');

    // Guidance blocks
    const channelGuide = channel ? `Channel: ${channel} — we will match pacing, sentence length, and structure to this medium.` : null;
    const lengthGuide = length ? `Target length: ${length} — adjust depth per step accordingly.` : null;

    const visGuide = (() => {
      const base = visual_details ? `Use these details: ${visual_details}` : 'Use vivid but respectful sensory details.';
      switch ((visualization_mode || '').toLowerCase()) {
        case 'positive (future if we act)':
          return `Visualization (Positive): Show the world *with* the solution in place—benefits realized, harms reduced. ${base}`;
        case 'negative (future if we don’t)':
          return `Visualization (Negative): Show the credible cost of inaction—consequences if we fail to act. Avoid sensationalism. ${base}`;
        case 'contrast (negative then positive)':
          return `Visualization (Contrast): Briefly paint the negative path (if we do nothing), then flip to the positive path (if we act). ${base}`;
        default:
          return 'Visualization: Choose a mode (positive / negative / contrast) and future-pace respectfully.';
      }
    })();

    const ethics = [
      safeguards && `Ethical safeguards: ${safeguards}`,
      bias_checks && (Array.isArray(bias_checks)
        ? 'Bias checks:\n' + bias_checks.map((b,i)=>`${i+1}. ${b}`).join('\n')
        : `Bias checks:\n${bias_checks}`)
    ].filter(Boolean).join('\n');

    return [
      'Use Monroe’s Motivated Sequence to craft a persuasive, ethical message.',
      ctx && `Context: ${ctx}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      personas && (Array.isArray(personas)
        ? 'Audience / personas:\n' + personas.map((p,i)=>`${i+1}. ${p}`).join('\n')
        : list('Audience / personas:', personas)),
      channelGuide,
      lengthGuide,
      localization && `Localization & inclusion: ${localization}`,

      attention && `\nAttention (Hook):\n${attention}`,

      need_points && `\nNeed (Problem & Stakes):\n${toLines(need_points).map((x,i)=>`${i+1}. ${x}`).join('\n')}`,
      need_motivation && `Underlying motivations: ${need_motivation}`,

      solution && `\nSatisfaction (Solution & Mechanism):\n${solution}`,
      objections && `Likely objections & pre-buttals:\n${toLines(objections).map((x,i)=>`${i+1}. ${x}`).join('\n')}`,
      credibility && `Credibility (Ethos):\n${credibility}`,

      `\n${visGuide}`,

      cta && `\nAction (Single, Concrete CTA):\n${cta}`,
      friction_removers && `Friction removers:\n${friction_removers}`,

      metrics && `\nSuccess metrics:\n${metrics}`,
      ethics && `\n${ethics}`,

      '\nOutput:',
      '1) A channel-appropriate script/text following A→N→S→V→A.',
      '2) A 1–2 sentence “Because → Therefore” summary.',
      '3) Optional variant: swap Visualization mode (positive/negative/contrast) for A/B testing.',
      '4) Compliance note: cite data sources inline or in footnotes; avoid manipulative claims.'
    ].filter(Boolean).join('\n');
  },
      meta: {
        search_text: "monroe’s motivated sequence — attention · need · satisfaction · visualization · action monroes-motivated-sequence a five-step persuasive pattern (attention → need → satisfaction → visualization → action) that first secures attention, then makes the audience *feel and understand* a problem, proposes a credible solution, future-paces the outcome, and ends with a specific, low-friction call to action. provide the audience, the problem/need, and your proposed solution. select a visualization mode (positive/negative/contrast), channel and length, and specify the exact action you want. the model will generate a structured message with ethical, audience-aware language and friction-reducing details. type:framework use:decision-making use:iteration use:communication phase:compose use:recipe level:intermediate use:copywriting use:ad-copy use:content topic:bias use:scope-management storytelling-frameworks decision reasoning ethics structure persuasive talks and pitches that move an audience to act craft fundraising, policy, or campaign appeals with clear next steps generate variants (positive / negative / contrast) of the visualization step for testing adapt one core argument across channels (speech, landing page, email, video script) map each need point to a matching satisfaction point (1:1) to prove the solution *specifically* fixes what hurts. choose a visualization mode: positive (benefits realized), negative (cost of inaction), or contrast (before vs after). end with a single, concrete action (who/what/when/where) and remove friction (link/qr/script/phone line). braid evidence (logos), credibility (ethos), and emotion (pathos) across steps—do not rely on fear alone. align the need with human motivations (e.g., safety, belonging, esteem, purpose) without treating them as strictly hierarchical. ethics guardrail: represent risks fairly, cite sources, and avoid coercive fear appeals; include alternatives/safeguards where relevant. localization & inclusion: tailor examples and idioms to the personas’ culture and access needs; offer accessible formats. audience / personas primary delivery channel target length / duration attention (hook) need — proof points (one per line) underlying motivations (non-hierarchical) satisfaction — your solution likely objections & pre-buttals (one per line) ethos / credibility visualization mode visualization details (sensory cues, characters, setting) action — call-to-action friction removers ethical safeguards / alternatives bias & blind-spot checks success metrics & measurement window localization & inclusion notes (optional)"
      }
    },

    {
      id: "moscow",
      slug: "moscow-prioritization",
      label: "MoSCoW — Must · Should · Could · Won’t",
      kind: "strategy",
      categories: [
        "planning",
        "product-management"
      ],
      tags: [
        "type:framework",
        "use:planning",
        "use:process-improvement",
        "level:beginner",
        "use:pattern",
        "use:scope-management"
      ],
      use_cases: [
        "prioritize product features or requirements",
        "ux research",
        "clarify scope during project planning",
        "communicate priorities to stakeholders"
      ],
      boosters: [
        "Keep each category concise (1–2 sentences per item).",
        "Explicitly state why each item is in its category to prevent scope creep."
      ],
      definition: "A prioritization method that groups requirements into Must have, Should have, Could have, and Won’t have for a project or release.",
      help: "List tasks or features under each category. The model will produce a clear prioritization summary.",
      fields: [
        {
          label: "Must have (critical)",
          desc: "Essential items without which the project fails.",
          key: "must",
          ph: "e.g., Secure login system; Payment processing",
          type: "textarea"
        },
        {
          label: "Should have (important but not critical)",
          desc: "High-value items that can be deferred if necessary.",
          key: "should",
          ph: "e.g., Multi-language support; Advanced analytics",
          type: "textarea"
        },
        {
          label: "Could have (nice-to-have)",
          desc: "Desirable features to include if time/resources allow.",
          key: "could",
          ph: "e.g., Dark mode; Customizable dashboards",
          type: "textarea"
        },
        {
          label: "Won’t have (this time)",
          desc: "Items explicitly excluded to manage scope.",
          key: "wont",
          ph: "e.g., Virtual reality interface; Blockchain integration",
          type: "textarea"
        }
      ],
      template: ({ must, should, could, wont, ctx, audience, style, tone }) => [
    'Apply the MoSCoW method to prioritize items.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    must && ('Must have:\n' + must),
    should && ('Should have:\n' + should),
    could && ('Could have:\n' + could),
    wont && ('Won’t have:\n' + wont),
    'Output:\n1) List by MoSCoW categories\n2) Short rationale for each item\n3) Final scope note (clarify exclusions)'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "moscow — must · should · could · won’t moscow-prioritization a prioritization method that groups requirements into must have, should have, could have, and won’t have for a project or release. list tasks or features under each category. the model will produce a clear prioritization summary. type:framework use:planning use:process-improvement level:beginner use:pattern use:scope-management planning product-management prioritize product features or requirements ux research clarify scope during project planning communicate priorities to stakeholders keep each category concise (1–2 sentences per item). explicitly state why each item is in its category to prevent scope creep. must have (critical) should have (important but not critical) could have (nice-to-have) won’t have (this time)"
      }
    },

    {
      id: "musyawarah_mufakat",
      slug: "musyawarah-mufakat-indonesia",
      label: "Musyawarah & Mufakat — Deliberation to Consensus (Indonesia)",
      kind: "strategy",
      categories: [
        "decision",
        "planning",
        "cultural-frameworks",
        "product-management"
      ],
      tags: [
        "type:framework",
        "use:pattern",
        "use:iteration",
        "use:problem-framing",
        "use:recipe",
        "level:intermediate",
        "use:decision-making",
        "use:communication"
      ],
      use_cases: [
        "facilitate inclusive deliberation that leads to a legitimate consensus",
        "surface objections, modify options, and document “can live with” agreements",
        "run village/organizational forums (Musyawarah Desa, coalition meetings)",
        "produce transparent decision records (minutes, consensus text, owners/dates)",
        "facilitate inclusive deliberation", 
        "surface objections and modify options", 
        "craft a consensus statement"
      ],
      boosters: [
        "Representation first: confirm all materially affected groups are present or consulted before seeking consensus.",
        "Use round-robin speaking and “steelman then respond.”",
        "Require one explicit objection-handling pass before closing.",
        "Consent test: “Can you live with option X if we add Y?”—seek explicit assent.",
        "Publish notulen (minutes) + keputusan musyawarah (decision record) with owners/dates and review cadence.",
        "Power checks: rotate facilitation; allow anonymous input; disclose criteria for accepting/rejecting proposals.",
        "Cultural fit: honor adat and gotong royong while staying evidence-informed and accessible."
      ],
      definition: "A culturally grounded, consensus-first decision process: open deliberation (musyawarah) that seeks a mutually acceptable agreement (mufakat), prioritizing dignity, inclusion, and social cohesion over adversarial wins.",
      help: "Provide the issue, participants/personas, options, concerns, and consensus mode. The model will facilitate a musyawarah flow (air views → shape options → test consensus → document mufakat), including objection handling, safeguards, a clear decision record, and follow-up.",
      fields: [
        {
          label: "Issue / decision",
          desc: "What must be decided; scope and constraints.",
          key: "issue",
          ph: "e.g., Priorities for next year’s community budget",
          type: "textarea"
        },
        {
          label: "Participants (names/roles; one per line)",
          desc: "List attendees or groups represented.",
          key: "participants",
          ph: "Rina — youth lead\nPak Budi — neighborhood chair\nClinic nurse rep",
          type: "textarea"
        },
        {
          label: "Audience / personas (for inclusive language & examples)",
          autofill: "persona->inline",
          desc: "Segments that shape tone, examples, and materials.",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "personas",
          ph: "Urban poor households; Small traders; Disability advocates",
          type: "repeater"
        },
        {
          label: "Session mode",
          desc: "Sets procedure, documentation, and escalation paths.",
          key: "session_mode",
          options: [
            "Musyawarah Desa (village assembly) — formal, broad participation, recorded minutes",
            "Musrenbang-style planning forum — proposals ladder upward",
            "Organizational/coalition meeting — internal governance with stakeholders"
          ],
          ph: "Musyawarah Desa (village assembly) — formal, broad participation, recorded minutes",
          type: "select"
        },
        {
          label: "Include Bahasa Indonesia terms & mini-glossary?",
          desc: "English is the default output. Choose “yes” if you want Indonesian terms preserved with brief definitions.",
          key: "include_bahasa",
          options: [
            "no (English only — default)",
            "yes — include key terms (musyawarah, mufakat, gotong royong, adat) and a short glossary"
          ],
          ph: "no (English only — default)",
          type: "select"
        },
        {
          label: "Guiding values / principles (optional)",
          desc: "E.g., Pancasila (especially sila ke-4), adat norms, equity, transparency.",
          key: "values",
          ph: "Pancasila #4 (deliberation/representation); equity; transparency; respect",
          type: "textarea"
        },
        {
          label: "Evidence & lived experience inputs",
          desc: "Key data points and community stories to consider.",
          key: "evidence",
          ph: "Survey: 28% households face water outages; testimony from RT03 caregivers",
          type: "textarea"
        },
        {
          label: "Options (one per line)",
          desc: "Candidate choices; can be adapted during musyawarah.",
          key: "options",
          ph: "Prioritize clean water pumps\nUpgrade clinic night shift\nScholarships for vocational training",
          type: "textarea"
        },
        {
          label: "Decision criteria",
          desc: "How options will be judged (fairness, cost, reach, urgency, feasibility).",
          key: "criteria",
          ph: "Urgency; households helped; cost per household; long-term impact; feasibility this year",
          type: "textarea"
        },
        {
          label: "Concerns / objections (one per line)",
          desc: "Known risks or conflicts to address in objection handling.",
          key: "concerns",
          ph: "Elite capture; affordability; staffing limits; land-use disputes",
          type: "textarea"
        },
        {
          label: "Consensus mode",
          desc: "Defines how agreement is confirmed and what to do if deadlocked.",
          key: "consensus_mode",
          options: [
            "Mufakat (full consensus) — explicit assent from all present",
            "Consent (no strong objection) — “can live with it” standard",
            "Layered: seek mufakat, else consent with recorded reservations",
            "Timebound: seek mufakat; if deadlocked, schedule revisit or pilot"
          ],
          ph: "Layered: seek mufakat, else consent with recorded reservations",
          type: "select"
        },
        {
          label: "Fallback protocol (if no consensus)",
          desc: "Respectful path that preserves relationships and legitimacy.",
          key: "fallback_protocol",
          options: [
            "Revisit after info-gathering (set date & owner)",
            "Pilot a limited option; review before scaling",
            "Escalate to representative body / adat council",
            "Supermajority vote (record minority opinion) — last resort"
          ],
          ph: "Pilot a limited option; review before scaling",
          type: "select"
        },
        {
          label: "Inclusion supports",
          desc: "Practical aids to participation (childcare, stipends, translation, accessibility).",
          key: "inclusion_supports",
          ph: "Childcare; transport voucher; sign-language interpreter; large-print materials",
          type: "textarea"
        },
        {
          label: "Bias / blind-spot checks",
          autofill: "bias->inline",
          desc: "Common risks: elite capture, gender silencing, urban bias, confirmation bias.",
          itemLabel: "bias",
          itemType: "typeahead",
          key: "bias_checks",
          ph: "elite capture; gender dynamics; recency bias; tokenism",
          type: "repeater"
        },
        {
          label: "Consensus statement (draft)",
          desc: "Plain-language draft to refine (what we’re agreeing to and why).",
          key: "consensus",
          ph: "We agree to prioritize clean water pumps in RW 1–5 this year, with…",
          type: "textarea"
        },
        {
          label: "Follow-up actions & owners",
          desc: "Who will do what by when; include monitoring & communication.",
          key: "follow_up",
          ph: "Public works maps pumps (Dina) by 1 Aug; budget request (Arif) by 10 Aug; monthly status post",
          type: "textarea"
        },
        {
          label: "Include cross-cultural explainer?",
          desc: "Controls whether the output includes a ready-made explainer comparing consensus-first Musyawarah to adversarial voting.",
          key: "cross_cultural_note",
          options: [
            "auto (default) — include a short note only if audience is likely unfamiliar",
            "include — always add a concise explainer",
            "include (expanded) — add a brief paragraph with examples",
            "omit — do not include an explainer"
          ],
          ph: "auto (default) — include a short note only if needed",
          type: "select"
        },
        {
          label: "Audience familiarity (if known)",
          desc: "Tuning parameter for the optional explainer.",
          key: "audience_familiarity",
          options: [
            "mixed / unknown",
            "familiar with Indonesian practice",
            "unfamiliar / Western norms"
          ],
          ph: "mixed / unknown",
          type: "select"
        },
        {
          label: "Review date / cadence",
          desc: "When to revisit the decision and assess outcomes.",
          key: "review_date",
          ph: "Quarterly; next review 30 Nov",
          type: "text"
        }
      ],
      template: (args) => {
    const {
      issue, participants, personas, session_mode, include_bahasa, values, evidence,
      options, criteria, concerns, consensus_mode, fallback_protocol,
      inclusion_supports, bias_checks, consensus, follow_up,
      cross_cultural_note, audience_familiarity, review_date,
      ctx, style, tone
    } = args;

    const toLines = s => String(s || '').split(/\n+/).map(x => x.trim()).filter(Boolean);
    const enumList = (title, s) => s && `${title}\n` + toLines(s).map((x,i)=>`${i+1}. ${x}`).join('\n');

    const wantBahasa = (include_bahasa || '').toLowerCase().startsWith('yes');
    const glossary = wantBahasa
      ? 'Glossary: musyawarah = deliberation; mufakat = consensus; gotong royong = mutual aid; adat = customary law/norms.'
      : null;

    const shouldExplain = (() => {
      const mode = (cross_cultural_note || 'auto').toLowerCase();
      const fam  = (audience_familiarity || 'mixed / unknown').toLowerCase();
      if (mode.startsWith('omit')) return false;
      if (mode.startsWith('include')) return true;
      // auto: include iff unfamiliar or mixed/unknown
      return fam.includes('unfamiliar') || fam.includes('mixed');
    })();

    const explainer = shouldExplain
      ? ((cross_cultural_note || '').toLowerCase().includes('expanded')
          ? 'Cross-cultural explainer: In Musyawarah (deliberation), proposals are modified until stakeholders can accept them; Mufakat (consensus) affirms a solution people can live with. Unlike adversarial majority voting, the emphasis is cohesion and dignity—dissent is addressed by adjusting options or adding safeguards, not outvoting.'
          : 'Cross-cultural explainer: Musyawarah = deliberation; Mufakat = consensus. Rather than a majority defeating a minority, proposals are adjusted until participants can accept them, preserving cohesion and legitimacy.')
      : null;

    return [
      'Facilitate a Musyawarah → Mufakat process (deliberation to consensus) in clear English, honoring Indonesian practice while ensuring inclusion and transparency.',
      ctx && `Context: ${ctx}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,

      issue && `\nIssue / Decision:\n${issue}`,
      participants && enumList('Participants:', participants),

      personas && (Array.isArray(personas)
        ? 'Audience / personas:\n' + personas.map((p,i)=>`${i+1}. ${p}`).join('\n')
        : enumList('Audience / personas:', personas)),

      session_mode && `Session mode: ${session_mode}`,
      values && `Guiding values / principles:\n${values}`,

      evidence && `\nEvidence & lived experience:\n${evidence}`,
      options && enumList('Initial options:', options),
      criteria && `Decision criteria:\n${criteria}`,
      concerns && enumList('\nKnown concerns / objections:', concerns),

      consensus_mode && `\nConsensus mode: ${consensus_mode}`,
      fallback_protocol && `Fallback protocol (if no consensus): ${fallback_protocol}`,
      inclusion_supports && `Inclusion supports:\n${inclusion_supports}`,

      bias_checks && (Array.isArray(bias_checks)
        ? 'Bias / blind-spot checks:\n' + bias_checks.map((b,i)=>`${i+1}. ${b}`).join('\n')
        : `Bias / blind-spot checks:\n${bias_checks}`),

      explainer && `\n${explainer}`,
      glossary && `${glossary}`,

      '\nProcess:',
      '- 1) Framing: confirm scope, constraints, and representation of affected groups.',
      '- 2) Musyawarah (deliberation): round-robin speaking; “steelman then respond”; log proposals and rationales.',
      '- 3) Option shaping: adapt/merge options; add safeguards to address concerns; map revisions to criteria.',
      '- 4) Consensus test: use the selected mode (mufakat / consent / layered). Seek explicit assent; avoid treating silence as agreement.',
      '- 5) Objection-handling pass: record objections; modify options or add safeguards; retest consensus.',
      '- 6) Mufakat (agreement): read back the agreement; confirm owners/dates; note reservations if any.',
      '- 7) Documentation: publish minutes (notulen) and the decision record (keputusan musyawarah); share appeal/revisit path.',

      consensus && `\nConsensus statement (draft to refine):\n${consensus}`,
      follow_up && `Follow-up actions & owners:\n${follow_up}`,
      review_date && `Review cadence: ${review_date}`,

      '\nOutput:',
      'A) Final consensus text (plain English) with rationale linked to concerns & criteria.',
      'B) Action list with named owners, dates, and monitoring/communication steps.',
      'C) Minutes + decision record, including any reservations.',
      'D) Inclusion log (who was present/consulted, supports provided) and bias-check notes.'
    ].filter(Boolean).join('\n');
  },
      meta: {
        search_text: "musyawarah & mufakat — deliberation to consensus (indonesia) musyawarah-mufakat-indonesia a culturally grounded, consensus-first decision process: open deliberation (musyawarah) that seeks a mutually acceptable agreement (mufakat), prioritizing dignity, inclusion, and social cohesion over adversarial wins. provide the issue, participants/personas, options, concerns, and consensus mode. the model will facilitate a musyawarah flow (air views → shape options → test consensus → document mufakat), including objection handling, safeguards, a clear decision record, and follow-up. type:framework use:pattern use:iteration use:problem-framing use:recipe level:intermediate use:decision-making use:communication decision planning cultural-frameworks product-management facilitate inclusive deliberation that leads to a legitimate consensus surface objections, modify options, and document “can live with” agreements run village/organizational forums (musyawarah desa, coalition meetings) produce transparent decision records (minutes, consensus text, owners/dates) representation first: confirm all materially affected groups are present or consulted before seeking consensus. use round-robin speaking and “steelman then respond.” require one explicit objection-handling pass before closing. consent test: “can you live with option x if we add y?”—seek explicit assent. publish notulen (minutes) + keputusan musyawarah (decision record) with owners/dates and review cadence. power checks: rotate facilitation; allow anonymous input; disclose criteria for accepting/rejecting proposals. cultural fit: honor adat and gotong royong while staying evidence-informed and accessible. issue / decision participants (names/roles; one per line) audience / personas (for inclusive language & examples) session mode include bahasa indonesia terms & mini-glossary? guiding values / principles (optional) evidence & lived experience inputs options (one per line) decision criteria concerns / objections (one per line) consensus mode fallback protocol (if no consensus) inclusion supports bias / blind-spot checks consensus statement (draft) follow-up actions & owners include cross-cultural explainer? audience familiarity (if known) review date / cadence"
      }
    },

    {
      id: "naive_dialecticism",
      slug: "naive-dialecticism-east-asia",
      label: "Naïve Dialecticism (East Asian Holistic Reasoning)",
      kind: "framework",
      categories: [
        "reasoning",
        "psychology",
        "cultural-frameworks"
      ],
      tags: [
        "type:framework",
        "level:advanced",
        "use:communication",
        "use:healing",
        "phase:explore",
        "level:intermediate",
        "use:problem-framing",
        "use:scope-management",
        "use:pattern"
      ],
      use_cases: [
        "frame tensions as “both true in different respects” and design coexistence",
        "blend stakeholder views into a context-fitted middle (Zhongyong) or complementary pair (Yin–Yang)",
        "plan reversible probes when conditions are in flux; set triggers for pivots",
        "adapt Western analytic cases to East/Southeast Asian consensus practices (e.g., musyawarah → mufakat)",
        "embrace change and contradiction in planning", 
        "craft both/and integrations', 'generate harmony-seeking adjustments"
      ],
      boosters: [
        "Name *where* each side holds: “A holds under ___; ¬A holds under ___.” Scope beats slogans.",
        "Treat contradictions as signals to **broaden context** or **shift time horizon** before forcing a decision.",
        "Design a “small harmonizing step” that reduces friction without erasing difference.",
        "Log at least one **coexistence pattern** (e.g., time-slicing, space-splitting, role-separating) before any merger.",
        "Respect cultural plurality: avoid essentializing “East vs West”; document local practices (adat, gotong royong) and how they shape the solution."
      ],
      definition: "A culturally informed reasoning stance—common across East Asia—that expects change, tolerates contradiction, and reasons holistically across context. It prefers “both–and” integration or respectful coexistence over binary wins, and often locates a fitting middle (Zhongyong), a complement of opposites (Yin–Yang), or a consensus everyone can live with (mufakat).",
      help: "List opposing poles, contextual factors, and where each claim holds. Choose a dialectical lens (e.g., Yin–Yang, Zhongyong, Musyawarah→Mufakat) and a session goal (divergent discovery, convergent harmonization, probe/pilot). The template will produce both-and statements, coexistence/integration moves, and a time-based plan with pivot triggers. Includes optional cross-cultural notes for Western audiences; adds personas and bias checks.",
      fields: [
        {
          label: "Audience / personas",
          autofill: "persona->inline",
          desc: "Stakeholder segments whose values/examples should shape tone and design.",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "personas",
          ph: "e.g., Factory operators; Village elders; Procurement; Climate advocates",
          type: "repeater"
        },
        {
          label: "Dialectical lens",
          desc: "Sets how the “both–and” move is framed and justified.",
          key: "lens",
          options: [
            "Yin–Yang (complementary opposites; maintain dynamic balance)",
            "Zhongyong / Middle Way (fitting mean after weighing extremes)",
            "Buddhist conditionality (truths are contingent; avoid clinging to absolutes)",
            "Musyawarah → Mufakat (deliberation to consensus; Indonesia)",
            "Tri Hita Karana (harmony among people–nature–the transcendent; Bali)",
            "Coexistence patterning (time/space/role separation rather than fusion)"
          ],
          ph: "Musyawarah → Mufakat (deliberation to consensus; Indonesia)",
          type: "select"
        },
        {
          label: "Session goal",
          desc: "Determines whether to open options, harmonize, experiment, or timebox deferral.",
          key: "session_goal",
          options: [
            "Divergent — surface partial truths & contradictions without solving yet",
            "Convergent — craft a coexistence/integration that parties can live with",
            "Probe — design a small, reversible test to learn before committing",
            "Park & watch — define signals and a review window; defer merger"
          ],
          ph: "Convergent — craft a coexistence/integration that parties can live with",
          type: "select"
        },
        {
          label: "Include Bahasa/Indonesian terms & mini-glossary?",
          desc: "Output is in English by default. Select “yes” to preserve Indonesian key terms with a mini-glossary.",
          key: "include_bahasa",
          options: [
            "no (English only — default)",
            "yes — include key terms with brief definitions (e.g., musyawarah, mufakat, gotong royong, adat)"
          ],
          ph: "no (English only — default)",
          type: "select"
        },
        {
          label: "Opposed poles (A vs. ¬A)",
          desc: "Name the tension plainly (no strawmen).",
          key: "poles",
          ph: "e.g., Centralized standards (A) vs. Local autonomy (¬A)",
          type: "textarea"
        },
        {
          label: "Scope where A holds",
          desc: "Contexts, constraints, and time horizons where A is valid/useful.",
          key: "scope_a",
          ph: "High risk; multi-site compliance; new staff; crisis periods",
          type: "textarea"
        },
        {
          label: "Scope where ¬A holds",
          desc: "Contexts where the opposite or alternative is valid/useful.",
          key: "scope_not_a",
          ph: "Mature teams; stable environments; culturally specific practices",
          type: "textarea"
        },
        {
          label: "Context factors (one per line)",
          desc: "Field/relationship variables: people, place, time, norms, dependencies.",
          key: "context",
          ph: "Regulatory cycle\nHarvest season\nRelational hierarchies\nSupply constraints",
          type: "textarea"
        },
        {
          label: "Indonesian lenses (optional)",
          desc: "Adat/custom, gotong royong (mutual aid), musyawarah/mufakat, Pancasila #4, budi (reason–feeling integration).",
          key: "indonesian_practices",
          ph: "Gotong royong for maintenance days; Musyawarah for policy shifts; Tri Hita Karana for land–water use",
          type: "textarea"
        },
        {
          label: "Specific tensions / failure modes",
          desc: "Where do frictions show up (status, face, timing, metrics, authority)?",
          key: "tensions",
          ph: "Face loss in public critique; KPI conflict; vendor lock-in; language register",
          type: "textarea"
        },
        {
          label: "Harmony-seeking moves (coexistence & integration)",
          desc: "Concrete patterns: time-slicing, space-splitting, role separation, layered standards, dual metrics.",
          key: "moves",
          ph: "Time-slice: centralize during audits, localize otherwise\nDual metrics: quality (local) + compliance (central)",
          type: "textarea"
        },
        {
          label: "Both–and statement (single paragraph)",
          desc: "Synthesize without erasing difference; include limits and review window.",
          key: "both_and",
          ph: "We keep a lean central backbone while granting local parametric freedom within guardrails…",
          type: "textarea"
        },
        {
          label: "Probe / pilot plan (if goal = Probe)",
          desc: "Hypothesis, smallest test, success criteria, ethics/safeguards.",
          key: "probe",
          ph: "Run 6-week trial in 2 districts; success if complaint rate ↓20% with ≤2% compliance drift",
          type: "textarea"
        },
        {
          label: "Change triggers & pivot thresholds",
          desc: "Early signals that flip which side should dominate; include time horizon.",
          key: "triggers",
          ph: "Spike in non-compliance >3% (A dominates); staff tenure >18mo (¬A dominates)",
          type: "textarea"
        },
        {
          label: "Bias / blind-spot checks",
          autofill: "bias->inline",
          desc: "E.g., confirmation, WEIRD framing, majority-imposes-consensus, recency.",
          itemLabel: "bias",
          itemType: "typeahead",
          key: "bias_checks",
          ph: "WEIRD examples; elite capture; fear of loss face; false dichotomy",
          type: "repeater"
        },
        {
          label: "Include cross-cultural explainer?",
          desc: "Controls whether the output includes a ready-made explainer comparing “both–and”/consensus reasoning with adversarial, either–or norms.",
          key: "cross_cultural_note",
          options: [
            "auto (default) — include a short note only if audience is likely unfamiliar",
            "include — always add a concise explainer",
            "include (expanded) — add a brief paragraph with examples",
            "omit — do not include an explainer"
          ],
          ph: "auto (default) — include a short note only if needed",
          type: "select"
        },
        {
          label: "Audience familiarity (if known)",
          desc: "Tuning parameter for the optional explainer.",
          key: "audience_familiarity",
          options: [
            "mixed / unknown",
            "familiar with dialectical practice",
            "unfamiliar / Western norms"
          ],
          ph: "mixed / unknown",
          type: "select"
        },
        {
          label: "Review date / cadence",
          desc: "When to revisit the arrangement, with whom, and how.",
          key: "review",
          ph: "Quarterly; Musyawarah-style check-in on 30 Nov",
          type: "text"
        }
      ],
      template: (args) => {
    const {
      personas, lens, session_goal, include_bahasa,
      poles, scope_a, scope_not_a, context, indonesian_practices,
      tensions, moves, both_and, probe, triggers, bias_checks,
      cross_cultural_note, audience_familiarity, review, ctx, style, tone
    } = args;

    const toLines = s => String(s || '').split(/\n+/).map(x => x.trim()).filter(Boolean);
    const listBlock = (title, s) => s && `${title}\n` + toLines(s).map((x,i)=>`${i+1}. ${x}`).join('\n');

    // Lens guidance for the AI
    const lensGuide = (() => {
      const L = (lens || '').toLowerCase();
      if (L.includes('yin')) return 'Lens: Yin–Yang — treat A and ¬A as interdependent. Specify what each guards against, how dominance alternates with context/time, and which feedbacks maintain balance.';
      if (L.includes('zhongyong') || L.includes('middle')) return 'Lens: Zhongyong / Middle Way — fully understand extremes, then justify a context-fitted mean (not an average).';
      if (L.includes('buddhist')) return 'Lens: Buddhist conditionality — state conditions under which each claim holds; avoid absolutes; prefer “when/if” clauses.';
      if (L.includes('musyawarah')) return 'Lens: Musyawarah → Mufakat — modify options until parties can live with them; record reservations; run an objection-handling pass; document the decision record.';
      if (L.includes('tri hita')) return 'Lens: Tri Hita Karana — evaluate impacts across people↔people, people↔nature, and the transcendent/cultural duties; ensure no leg is neglected.';
      if (L.includes('coexistence')) return 'Lens: Coexistence patterning — avoid forced fusion; implement time-slicing, space-splitting, or role-separation with clear interfaces.';
      return 'Lens: Dialectical (general) — expect change, accept scoped contradictions, and fit solutions to context.';
    })();

    // Goal guidance for the AI
    const goalGuide = (() => {
      const G = (session_goal || '').toLowerCase();
      if (G.startsWith('divergent')) return 'Goal mode: Divergent — collect partial truths; write paired “A true when ___ / ¬A true when ___”; do not merge yet.';
      if (G.startsWith('convergent')) return 'Goal mode: Convergent — design a coexistence/integration pattern; run consent tests (“can you live with it if…?”); attach safeguards.';
      if (G.startsWith('probe')) return 'Goal mode: Probe — create a reversible pilot with success metrics and ethics guardrails; set pivot thresholds.';
      if (G.startsWith('park')) return 'Goal mode: Park & watch — document known unknowns, define revisit signals, set a firm review date.';
      return null;
    })();

    // Optional Bahasa/terms mini-glossary
    const wantBahasa = (include_bahasa || '').toLowerCase().startsWith('yes');
    const glossary = wantBahasa
      ? 'Glossary (terms preserved with brief defs): musyawarah = deliberation; mufakat = consensus; gotong royong = mutual aid; adat = customary norms.'
      : null;

    // Cross-cultural explainer auto logic
    const shouldExplain = (() => {
      const mode = (cross_cultural_note || 'auto').toLowerCase();
      const fam  = (audience_familiarity || 'mixed / unknown').toLowerCase();
      if (mode.startsWith('omit')) return false;
      if (mode.startsWith('include')) return true;
      // auto: include iff unfamiliar or mixed/unknown
      return fam.includes('unfamiliar') || fam.includes('mixed');
    })();

    const explainer = shouldExplain
      ? ((cross_cultural_note || '').toLowerCase().includes('expanded')
          ? 'Cross-cultural explainer: Dialectical reasoning treats apparently contradictory claims as conditionally true under different scopes (time/place/role). Rather than eliminating one side, we design coexistence or a fitting middle. In consensus-first practice, proposals are adjusted until parties can accept them; dissent is addressed by revising options or adding safeguards rather than outvoting.'
          : 'Cross-cultural explainer: “Both–and” reasoning scopes truths to context and time. Instead of forcing a binary win, we seek coexistence or a fitted middle, and adjust proposals until stakeholders can accept them.')
      : null;

    const inclusion = personas
      ? (Array.isArray(personas)
          ? 'Audience / personas:\n' + personas.map((p,i)=>`${i+1}. ${p}`).join('\n')
          : listBlock('Audience / personas:', personas))
      : null;

    const bias = bias_checks
      ? (Array.isArray(bias_checks)
          ? 'Bias / blind-spot checks:\n' + bias_checks.map((b,i)=>`${i+1}. ${b}`).join('\n')
          : `Bias / blind-spot checks:\n${bias_checks}`)
      : null;

    return [
      'Apply Naïve Dialecticism (East Asian holistic reasoning) in clear English, with cultural respect and anti-essentialism.',
      ctx && `Context: ${ctx}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      lensGuide,
      goalGuide,
      inclusion,

      poles && `\nTension:\n${poles}`,
      scope_a && `Where A holds:\n${scope_a}`,
      scope_not_a && `Where ¬A holds:\n${scope_not_a}`,

      context && `Context factors:\n${toLines(context).map((x,i)=>`${i+1}. ${x}`).join('\n')}`,
      indonesian_practices && `Indonesian lenses applied:\n${indonesian_practices}`,
      tensions && `Specific tensions / failure modes:\n${tensions}`,

      moves && `Harmony-seeking moves (coexistence & integration):\n${moves}`,
      both_and && `Both–and statement:\n${both_and}`,

      probe && `Probe / pilot plan:\n${probe}`,
      triggers && `Change triggers & pivot thresholds:\n${triggers}`,

      bias,
      explainer && `\n${explainer}`,
      glossary && `${glossary}`,

      '\nOutput:',
      '1) Scoped truths for A and ¬A (contexts & limits).',
      '2) Chosen coexistence/integration pattern with safeguards and owners.',
      '3) If Probe: a reversible pilot with success metrics and ethics notes.',
      '4) Decision record suitable for consensus documentation (where applicable).',
      '5) Review plan with triggers acknowledging change over time.'
    ].filter(Boolean).join('\n');
  },
      meta: {
        search_text: "naïve dialecticism (east asian holistic reasoning) naive-dialecticism-east-asia a culturally informed reasoning stance—common across east asia—that expects change, tolerates contradiction, and reasons holistically across context. it prefers “both–and” integration or respectful coexistence over binary wins, and often locates a fitting middle (zhongyong), a complement of opposites (yin–yang), or a consensus everyone can live with (mufakat). list opposing poles, contextual factors, and where each claim holds. choose a dialectical lens (e.g., yin–yang, zhongyong, musyawarah→mufakat) and a session goal (divergent discovery, convergent harmonization, probe/pilot). the template will produce both-and statements, coexistence/integration moves, and a time-based plan with pivot triggers. includes optional cross-cultural notes for western audiences; adds personas and bias checks. type:framework level:advanced use:communication use:healing phase:explore level:intermediate use:problem-framing use:scope-management use:pattern reasoning psychology cultural-frameworks frame tensions as “both true in different respects” and design coexistence blend stakeholder views into a context-fitted middle (zhongyong) or complementary pair (yin–yang) plan reversible probes when conditions are in flux; set triggers for pivots adapt western analytic cases to east/southeast asian consensus practices (e.g., musyawarah → mufakat) name *where* each side holds: “a holds under ___; ¬a holds under ___.” scope beats slogans. treat contradictions as signals to **broaden context** or **shift time horizon** before forcing a decision. design a “small harmonizing step” that reduces friction without erasing difference. log at least one **coexistence pattern** (e.g., time-slicing, space-splitting, role-separating) before any merger. respect cultural plurality: avoid essentializing “east vs west”; document local practices (adat, gotong royong) and how they shape the solution. audience / personas dialectical lens session goal include bahasa/indonesian terms & mini-glossary? opposed poles (a vs. ¬a) scope where a holds scope where ¬a holds context factors (one per line) indonesian lenses (optional) specific tensions / failure modes harmony-seeking moves (coexistence & integration) both–and statement (single paragraph) probe / pilot plan (if goal = probe) change triggers & pivot thresholds bias / blind-spot checks include cross-cultural explainer? audience familiarity (if known) review date / cadence"
      }
    },

    {
      id: "nyaya_syllogism",
      slug: "nyaya-five-member-syllogism",
      label: "Nyāya — Five-Member Syllogism",
      kind: "strategy",
      categories: [
        "reasoning",
        "psychology",
        "cultural-frameworks"
      ],
      tags: [
        "type:framework",
        "level:beginner",
        "use:problem-framing",
        "topic:prompting",
        "topic:future-self",
        "use:brainstorming",
        "level:intermediate",
        "use:presentations",
        "use:teaching",
        "use:pattern"
      ],
      use_cases: [
        "present a transparent, checkable inference in public or classroom settings",
        "teach warrant + scope (vyāpti) with culturally respectful examples",
        "draft policy/science/legal arguments with explicit conditions and defeater checks",
        "perform critique-only analyses without asserting a counter-thesis (vitaṇḍā mode)",
        "simulate persuasion while remaining evidence-grounded (jalpa mode)",
        "structure explanations with example and application", 
        "justify conclusions with explicit inference steps"
      ],
      boosters: [
        "State the **vyāpti** with scope and at least one positive (**sapakṣa**) and one negative (**vipakṣa**) example.",
        "Run the **trairūpya** (3 marks of a sound reason) and log any **upādhi** (hidden condition).",
        "Add one **tarka** (reductio): what absurdity follows if the rule didn’t hold?",
        "Prefer vāda (truth-seeking). When simulating jalpa/vitaṇḍā, still anchor claims in pramāṇas (valid knowledge sources).",
        "Localize examples to the audience to avoid WEIRD-centric defaults while preserving Nyāya terms."
      ],
      definition: "Classical Indian argument form (pañcāvayava): Pratijñā (thesis), Hetu (reason/mark), Udāharaṇa (universal rule + example, i.e., vyāpti with illustration), Upanaya (application to the case), Nigamana (conclusion). Rooted in Nyāya epistemology (pramāṇa) and ethical debate norms.",
      help: "Fill the five members and the quality checks. Show how the **reason** is reliably connected to the **claim** via **vyāpti** (state rule + example), then **apply** it and **conclude**. Use sapakṣa/vipakṣa and upādhi-hunting to secure the rule. Pick a debate ethic (vāda / jalpa / vitaṇḍā) to set tone, structure, and obligations.",
      fields: [
        {
          label: "Audience / personas",
          autofill: "persona->inline",
          desc: "Stakeholders or readership shaping tone, examples, and formality.",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "audience",
          ph: "e.g., City council; High-school logic class; Community elders",
          type: "repeater"
        },
        {
          label: "Bias / blind-spot checks",
          autofill: "bias->inline",
          desc: "Potential distortions to watch for (e.g., WEIRD examples, confirmation bias).",
          itemLabel: "bias",
          itemType: "typeahead",
          key: "bias_checks",
          ph: "WEIRD examples; elite capture; face-saving pressures; anchoring; false dichotomy",
          type: "repeater"
        },
        {
          label: "Debate ethic (mode of engagement)",
          desc: "Sets tone and obligations. Vāda is the Nyāya ideal; jalpa emphasizes persuasion; vitaṇḍā limits you to critique.",
          key: "debate_ethic",
          options: [
            "vāda — truth-seeking, shared standards, fair conduct",
            "jalpa — win-oriented persuasion (evidence-grounded)",
            "vitaṇḍā — refutation-only (no counter-thesis)"
          ],
          ph: "vāda — truth-seeking, shared standards, fair conduct",
          type: "select"
        },
        {
          label: "Inference mode (vyāpti establishment)",
          desc: "How the universal connection (vyāpti) is secured.",
          key: "mode",
          options: [
            "anvaya–vyatireki — positive agreement + negative concomitance",
            "kevalānvayi — only positive agreement (no true counter-cases)",
            "kevalavyatireki — only negative concomitance (absence pattern)"
          ],
          ph: "anvaya–vyatireki — positive + negative",
          type: "select"
        },
        {
          label: "Direction of inference",
          desc: "How the hetu relates to the sādhya.",
          key: "direction",
          options: [
            "pūrvavat — cause → effect (e.g., clouds ⇒ rain)",
            "śeṣavat — effect → cause (e.g., swollen river ⇒ upstream rain)",
            "sāmānyato dṛṣṭa — constant conjunction (no explicit causal story)"
          ],
          ph: "śeṣavat — effect → cause",
          type: "select"
        },
        {
          label: "Pakṣa (subject under discussion)",
          desc: "What the claim is about.",
          key: "paksa",
          ph: "e.g., This hill / This model / This policy",
          type: "text"
        },
        {
          label: "Sādhya (property to be proved)",
          desc: "Target predicate to establish.",
          key: "sadhya",
          ph: "e.g., has fire / is overfitting / reduces outages",
          type: "text"
        },
        {
          label: "Pratijñā — Thesis/claim",
          desc: "State the thesis about the pakṣa + sādhya.",
          key: "pratijna",
          ph: "The hill has fire.",
          type: "textarea"
        },
        {
          label: "Hetu — Reason/mark (linga)",
          desc: "Observable sign in the pakṣa indicating the sādhya.",
          key: "hetu",
          ph: "Because there is smoke.",
          type: "textarea"
        },
        {
          label: "Vyāpti — Universal rule (with scope/conditions)",
          desc: "Dependable connection between hetu and sādhya, with qualifiers.",
          key: "vyapti",
          ph: "Wherever there is smoke (from combustion in oxygen), there is fire.",
          type: "textarea"
        },
        {
          label: "Sapakṣa — Positive example(s)",
          desc: "Similar cases where hetu and sādhya co-occur.",
          key: "sapaksha",
          ph: "Kitchens with cooking fires; foundry furnace room.",
          type: "textarea"
        },
        {
          label: "Vipakṣa — Negative example(s)",
          desc: "Dissimilar cases where sādhya is absent and so is hetu.",
          key: "vipaksha",
          ph: "Lakes; refrigerated rooms (no fire, no smoke).",
          type: "textarea"
        },
        {
          label: "Upanaya — Application to the case",
          desc: "Show the pakṣa fits the rule’s conditions and the hetu is of the relevant kind.",
          key: "upanaya",
          ph: "This hill has combustion-smoke, not fog.",
          type: "textarea"
        },
        {
          label: "Nigamana — Conclusion",
          desc: "Restate the conclusion succinctly.",
          key: "nigamana",
          ph: "Therefore, the hill has fire.",
          type: "textarea"
        },
        {
          label: "Upādhi — Hidden condition(s)",
          desc: "Qualifiers that, if missing, break the vyāpti.",
          key: "upadhi",
          ph: "Only in oxygenated environments; exclude chemical “smokes” without flame.",
          type: "textarea"
        },
        {
          label: "Trairūpya check (3 marks of a sound hetu)",
          desc: "1) In pakṣa? 2) In sapakṣa? 3) Absent in vipakṣa?",
          key: "trairupya",
          ph: "1) Yes, smoke on hill. 2) Yes, kitchens. 3) Absent on lakes.",
          type: "textarea"
        },
        {
          label: "Tarka — Reductio / probative reasoning",
          desc: "What absurdity follows if the vyāpti failed?",
          key: "tarka",
          ph: "If smoke didn’t imply fire (under stated conditions), kitchens would show cold smoke—contrary to observation.",
          type: "textarea"
        },
        {
          label: "Hetvābhāsa scan — Fallacy risks",
          desc: "Risk of: asiddha, savyabhicāra/anaikāntika, viruddha, satpratipakṣa, bādhita.",
          key: "hetvabhasa",
          ph: "Savyabhicāra risk if “smoke” includes fog; mitigate by specifying combustion-smoke.",
          type: "textarea"
        },
        {
          label: "Opponent Pratijñā (their thesis)",
          desc: "Use for refutation-only mode.",
          key: "opp_pratijna",
          ph: "e.g., The hill has no fire.",
          type: "textarea"
        },
        {
          label: "Opponent Hetu (their reason)",
          desc: "Their sign/reason.",
          key: "opp_hetu",
          ph: "Because the air is moist.",
          type: "textarea"
        },
        {
          label: "Opponent Vyāpti (their rule/example)",
          desc: "Their universal connection.",
          key: "opp_vyapti",
          ph: "Wherever the air is moist, fire is absent…",
          type: "textarea"
        },
        {
          label: "Opponent Upanaya (their application)",
          desc: "Their application to case.",
          key: "opp_upanaya",
          ph: "This hill’s air is moist.",
          type: "textarea"
        },
        {
          label: "Opponent Nigamana (their conclusion)",
          desc: "Their conclusion.",
          key: "opp_nigamana",
          ph: "Therefore, no fire on the hill.",
          type: "textarea"
        },
        {
          label: "Western explainer (optional)",
          desc: "Map Nyāya parts to Toulmin/Aristotelian terms without erasing Nyāya’s extras.",
          key: "western_mapping",
          ph: "Udāharaṇa (vyāpti + example) ≈ warrant + backing; Upanaya ≈ application of warrant.",
          type: "textarea"
        },
        {
          label: "Context (optional)",
          key: "ctx",
          ph: "Setting, constraints, or audience background.",
          type: "textarea"
        },
        {
          label: "Style (optional)",
          key: "style",
          ph: "Plain; academic; policy memo; didactic",
          type: "text"
        },
        {
          label: "Tone (optional)",
          key: "tone",
          ph: "Neutral; courteous; persuasive; forensic",
          type: "text"
        }
      ],
      template: (args) => {
    const {
      audience, bias_checks, debate_ethic, mode, direction,
      paksa, sadhya, pratijna, hetu, vyapti, sapaksha, vipaksha, upanaya, nigamana,
      upadhi, trairupya, tarka, hetvabhasa,
      opp_pratijna, opp_hetu, opp_vyapti, opp_upanaya, opp_nigamana,
      western_mapping, ctx, style, tone
    } = args;

    // Helpers
    const toLines = s => String(s || '').split(/\n+/).map(x => x.trim()).filter(Boolean);
    const list = (title, s) => s ? `${title}\n` + toLines(s).map((x,i)=>`${i+1}. ${x}`).join('\n') : null;

    // Normalize ethic selection
    const ethicRaw = String(debate_ethic || 'vāda').toLowerCase();
    let ethic = 'vāda';
    if (ethicRaw.startsWith('jalpa')) ethic = 'jalpa';
    else if (ethicRaw.startsWith('vita')) ethic = 'vitaṇḍā';

    // Behavior specifications per ethic
    const ethicSpec = {
      'vāda': {
        headline: 'Debate ethic: vāda — truth-seeking, shared standards, fair conduct.',
        rules: [
          'Steelman the opposing view before your thesis.',
          'State vyāpti with scope; include sapakṣa & vipakṣa.',
          'Run upādhi hunt, trairūpya check, and hetvābhāsa scan.',
          'Note limits/uncertainty; invite defeaters and next tests.'
        ],
        warn: null,
        modeTweaks: 'Keep tone neutral and courteous; cite relevant pramāṇas (perception, inference, analogy, testimony).',
        structure: 'standard' // normal five-member order
      },
      'jalpa': {
        headline: 'Debate ethic: jalpa — persuasion-forward (evidence-grounded).',
        rules: [
          'Lead with the conclusion; then present the five members succinctly.',
          'Foreground strongest sapakṣa; pre-empt common objections briefly.',
          'Label valid hetvābhāsa in opposing reasons; avoid fabrications.',
          'Close with a confident call-to-belief or action.'
        ],
        warn: 'Persuasion mode: ensure all claims remain grounded in pramāṇas; avoid rhetorical overreach.',
        modeTweaks: 'Assertive tone; minimize hedging without hiding known limits.',
        structure: 'headline-first' // show conclusion before five-member form
      },
      'vitaṇḍā': {
        headline: 'Debate ethic: vitaṇḍā — refutation-only (no counter-thesis asserted).',
        rules: [
          'Do NOT assert your own positive thesis.',
          'Target trairūpya failures, upādhi, or bādhita conflicts in the opponent’s reasoning.',
          'Use vipakṣa counterexamples to break vyāpti.',
          'Conclude with “thesis not established” and what evidence would repair it.'
        ],
        warn: 'Refutation mode: productive for critique/training; switch to vāda when building solutions.',
        modeTweaks: 'Forensic tone; meticulous fault isolation.',
        structure: 'refutation' // focus on opponent five-member knockdown
      }
    }[ethic];

    // Blocks
    const audBlock =
      (audience && (Array.isArray(audience) ? audience.length : toLines(audience).length))
        ? 'Audience/personas:\n' + (Array.isArray(audience) ? audience : toLines(audience)).map((p,i)=>`${i+1}. ${p}`).join('\n')
        : null;

    const biasBlock =
      (bias_checks && (Array.isArray(bias_checks) ? bias_checks.length : toLines(bias_checks).length))
        ? 'Bias / blind-spot checks:\n' + (Array.isArray(bias_checks) ? bias_checks : toLines(bias_checks)).map((b,i)=>`${i+1}. ${b}`).join('\n')
        : null;

    const vyaptiBlock = (() => {
      const pos = sapaksha ? `Sapakṣa (positive instances):\n` + toLines(sapaksha).map((x,i)=>`  ${i+1}. ${x}`).join('\n') : null;
      const neg = vipaksha ? `Vipakṣa (negative instances):\n` + toLines(vipaksha).map((x,i)=>`  ${i+1}. ${x}`).join('\n') : null;
      return [
        vyapti && `Vyāpti (universal rule + scope):\n${vyapti}`,
        pos,
        neg
      ].filter(Boolean).join('\n') || null;
    })();

    // Core five-member presentation (your argument)
    const fiveMemberYour = [
      paksa && sadhya && `Pakṣa & Sādhya:\n- Subject (pakṣa): ${paksa}\n- Probandum (sādhya): ${sadhya}`,
      pratijna && `1) Pratijñā (Thesis): ${pratijna}`,
      hetu &&     `2) Hetu (Reason/mark): ${hetu}`,
      vyaptiBlock && `3) Udāharaṇa (Universal rule + example):\n${vyaptiBlock}`,
      upanaya &&  `4) Upanaya (Application to the case):\n${upanaya}`,
      (ethic !== 'vitaṇḍā' && nigamana) && `5) Nigamana (Conclusion): ${nigamana}`
    ].filter(Boolean).join('\n');

    // Opponent five-member (for refutation or teaching)
    const fiveMemberOpp =
      (opp_pratijna || opp_hetu || opp_vyapti || opp_upanaya || opp_nigamana)
        ? [
            'Opponent’s five-member (for analysis):',
            opp_pratijna && `• Pratijñā (opponent): ${opp_pratijna}`,
            opp_hetu &&     `• Hetu (opponent): ${opp_hetu}`,
            opp_vyapti &&   `• Vyāpti/Example (opponent): ${opp_vyapti}`,
            opp_upanaya &&  `• Upanaya (opponent): ${opp_upanaya}`,
            opp_nigamana && `• Nigamana (opponent): ${opp_nigamana}`
          ].filter(Boolean).join('\n')
        : null;

    // Headline conclusion for jalpa
    const jalpaHeadline = (ethic === 'jalpa' && nigamana)
      ? `Headline conclusion (for attention): ${nigamana}`
      : null;

    // Mode/direction guidance
    const modeGuide = mode
      ? `Inference mode: ${mode}. Describe how the universal connection (vyāpti) was established.`
      : 'Inference mode: anvaya–vyatireki (positive + negative). Show both co-presence and co-absence.';
    const dirGuide = direction
      ? `Direction: ${direction}. Explain how the hetu relates to the sādhya in this direction.`
      : 'Direction: (specify cause→effect, effect→cause, or constant conjunction).';

    return [
      // Orientation & ethic-driven obligations
      'Use the Nyāya pañcāvayava (five-member) syllogism with cultural fidelity and public checkability.',
      ctx && `Context: ${ctx}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ethicSpec.headline,
      ethicSpec.warn && `Note: ${ethicSpec.warn}`,
      'Conduct rules:\n' + ethicSpec.rules.map((r,i)=>`${i+1}. ${r}`).join('\n'),
      `Mode tweaks: ${ethicSpec.modeTweaks}`,
      modeGuide,
      dirGuide,
      audBlock,
      biasBlock,

      // Structure variations by ethic
      (ethic === 'jalpa') && jalpaHeadline,
      (ethic === 'vitaṇḍā') && fiveMemberOpp && fiveMemberOpp,
      (ethic !== 'vitaṇḍā') && fiveMemberYour,

      // Quality controls (depth depends on ethic, but we always show the fields if provided)
      (ethic !== 'jalpa' && trairupya) && `Trairūpya check (3 marks of a sound hetu):\n${trairupya}`,
      (ethic === 'jalpa' && trairupya) && `Trairūpya (brief): ${trairupya}`,
      upadhi && `Upādhi (hidden condition qualifiers):\n${upadhi}`,
      tarka && `Tarka (reductio/probative reasoning):\n${tarka}`,
      hetvabhasa && `Hetvābhāsa scan (fallacy risks):\n${hetvabhasa}`,

      // Teaching bridge (optional)
      western_mapping && `Western mapping (for teaching only):\n${western_mapping}`,

      // Output contract: what the model should actually produce
      '\nOutput should include:',
      (ethic === 'jalpa')
        ? '- Headline conclusion, then the five members (succinct).'
        : '- The five members in order, with Nyāya terms preserved.',
      '- Vyāpti with explicit scope/conditions and sapakṣa/vipakṣa illustrations.',
      (ethic === 'vitaṇḍā')
        ? '- Refutation summary: identify trairūpya/upādhi/hetvābhāsa failures; conclude “thesis not established” and state evidence needed to repair it.'
        : '- Trairūpya verdict, upādhi notes, and any tarka used.',
      (ethic === 'vāda')
        ? '- Invite defeaters and propose next tests with limits/uncertainty stated.'
        : (ethic === 'jalpa'
            ? '- Persuasion close: confident call-to-belief/action (evidence-grounded).'
            : '- Forensic close: no counter-thesis; list repair conditions.')
    ].filter(Boolean).join('\n');
  },
      meta: {
        search_text: "nyāya — five-member syllogism nyaya-five-member-syllogism classical indian argument form (pañcāvayava): pratijñā (thesis), hetu (reason/mark), udāharaṇa (universal rule + example, i.e., vyāpti with illustration), upanaya (application to the case), nigamana (conclusion). rooted in nyāya epistemology (pramāṇa) and ethical debate norms. fill the five members and the quality checks. show how the **reason** is reliably connected to the **claim** via **vyāpti** (state rule + example), then **apply** it and **conclude**. use sapakṣa/vipakṣa and upādhi-hunting to secure the rule. pick a debate ethic (vāda / jalpa / vitaṇḍā) to set tone, structure, and obligations. type:framework level:beginner use:problem-framing topic:prompting topic:future-self use:brainstorming level:intermediate use:presentations use:teaching use:pattern reasoning psychology cultural-frameworks present a transparent, checkable inference in public or classroom settings teach warrant + scope (vyāpti) with culturally respectful examples draft policy/science/legal arguments with explicit conditions and defeater checks perform critique-only analyses without asserting a counter-thesis (vitaṇḍā mode) simulate persuasion while remaining evidence-grounded (jalpa mode) state the **vyāpti** with scope and at least one positive (**sapakṣa**) and one negative (**vipakṣa**) example. run the **trairūpya** (3 marks of a sound reason) and log any **upādhi** (hidden condition). add one **tarka** (reductio): what absurdity follows if the rule didn’t hold? prefer vāda (truth-seeking). when simulating jalpa/vitaṇḍā, still anchor claims in pramāṇas (valid knowledge sources). localize examples to the audience to avoid weird-centric defaults while preserving nyāya terms. audience / personas bias / blind-spot checks debate ethic (mode of engagement) inference mode (vyāpti establishment) direction of inference pakṣa (subject under discussion) sādhya (property to be proved) pratijñā — thesis/claim hetu — reason/mark (linga) vyāpti — universal rule (with scope/conditions) sapakṣa — positive example(s) vipakṣa — negative example(s) upanaya — application to the case nigamana — conclusion upādhi — hidden condition(s) trairūpya check (3 marks of a sound hetu) tarka — reductio / probative reasoning hetvābhāsa scan — fallacy risks opponent pratijñā (their thesis) opponent hetu (their reason) opponent vyāpti (their rule/example) opponent upanaya (their application) opponent nigamana (their conclusion) western explainer (optional) context (optional) style (optional) tone (optional)"
      }
    },

  {
  id: "oblique_strategies",
  slug: "oblique-strategies-cards",
  label: "Oblique Strategies — Lateral thinking prompt cards",
  kind: "framework",
  categories: ["creativity","brainstorming","design"],
  tags: [
    "type:technique","topic:lateral-thinking","topic:constraints",
    "use:brainstorming","use:creative-block","use:reframing","level:intermediate"
  ],

  use_cases: [
    "break out of creative ruts with structured randomness",
    "reframe problems in music, writing, design, product, research",
    "generate surprising alternatives under tight constraints",
    "facilitate short team sprints with micro-experiments",
    "break out of a creative rut with random prompts", 
    "find new approaches when stuck on an artistic problem"
  ],

  boosters: [
    "Accept the first draw and try a literal micro-action before interpreting metaphorically.",
    "Timebox every card experiment (10–20 minutes) and log Card → Action → Effect.",
    "If a card conveniently agrees with your current plan, discard and redraw once; you’re optimizing for dissonance, not comfort.",
    "Translate poetic prompts into a concrete verb + object instruction (e.g., “emphasize the flaws” → duplicate noisy layer and raise gain)."
  ],

  definition:
    "A ritualized method (originating with Brian Eno & Peter Schmidt) that uses terse, random prompts to disrupt habitual patterns. The value comes from committing to a timeboxed micro-experiment, not from ‘finding the right card’.",

  help:
    "Describe the stuck point and select session options. The model will draw card(s), translate each into literal + metaphorical moves, run timeboxed micro-experiments (conceptually), and return a log, insights, and next actions.",

  fields: [
    {
      key: "situation",
      label: "Creative situation or block",
      type: "textarea",
      desc: "Where are you stuck? State it in one sentence to aim the deck.",
      ph: "e.g., Stuck on the chorus melody; landing page headline feels flat."
    },
    {
      key: "session_goal",
      label: "Session goal",
      type: "select",
      options: [
        "diverge — generate many unusual directions",
        "reframe — change the way the brief is posed",
        "unstick — find one workable next move fast",
        "converge — compare two or three alternatives and pick one"
      ],
      desc: "Sets how the AI uses the card(s): broad exploration (diverge), perspective shift (reframe), quick nudge (unstick), or down-select (converge).",
      ph: "unstick — find one workable next move fast"
    },
    {
      key: "mode",
      label: "Session mode",
      type: "select",
      options: [
        "solo sprint — one person draws; immediate micro-action; quick self-debrief",
        "pair jam — one draws, one translates to 3 concrete options; pick 1 and test",
        "workshop — facilitator draws; team timeboxes a rapid prototype; short share-out"
      ],
      desc: "Changes facilitation instructions and outputs for solo vs. pair vs. group.",
      ph: "solo sprint — one person draws; immediate micro-action; quick self-debrief"
    },
    {
      key: "draws",
      label: "Number of cards to draw",
      type: "text",
      desc: "Usually 1. Use 2 for ‘constraint + focus’ compound prompts.",
      ph: "1"
    },
    {
      key: "redraw_policy",
      label: "Redraw policy",
      type: "select",
      options: [
        "accept-first — commit to the first card; no shopping",
        "attempt-then-one-redraw — try literally for 3–5 minutes, then allow 1 redraw",
        "best-of-three-with-log — draw 3, briefly test each, keep the highest-yield"
      ],
      desc: "Controls randomness discipline and prevents card shopping.",
      ph: "attempt-then-one-redraw — try, then allow 1 redraw"
    },
    {
      key: "interpretation_style",
      label: "Interpretation style",
      type: "select",
      options: [
        "literal-first — enact a concrete, small move that matches the words",
        "metaphor-first — rephrase card as a metaphor then choose an action",
        "alternate — run one literal pass, then one metaphorical pass"
      ],
      desc: "Determines how the model translates the card into actions.",
      ph: "literal-first — enact a concrete, small move"
    },
    {
      key: "timebox_minutes",
      label: "Timebox per card (minutes)",
      type: "text",
      desc: "Micro-experiment duration per card.",
      ph: "15"
    },
    {
      key: "deck_mode",
      label: "Deck / prompt source",
      type: "select",
      options: [
        "classic-random — draw from a general oblique deck",
        "mode-filtered — draw from a chosen prompt mode (expand / subtract / invert / randomize / humanize)",
        "domain-deck — use a domain-specific pack (music, writing, design, research)",
        "custom-list — use your own seed cards (see ‘Custom cards’ below)"
      ],
      desc: "Alters how prompts are selected and described in the instructions.",
      ph: "classic-random — draw from a general oblique deck"
    },
    {
      key: "mode_filters",
      label: "Mode filters (if using mode-filtered)",
      type: "repeater",
      itemType: "select",
      itemLabel: "filter",
      options: ["expand","subtract","invert","randomize","humanize","silence/noise","chance/dice"],
      desc: "Pick 1–2 prompt modes to bias the draw when ‘mode-filtered’ is selected."
    },
    {
      key: "custom_cards",
      label: "Custom cards (if using custom-list)",
      type: "repeater",
      itemType: "text",
      itemLabel: "card",
      desc: "One prompt per line; terse and action-suggestive.",
      ph: "e.g., Remove the spine; Start from silence; Swap the protagonist"
    },
    {
      key: "constraints",
      label: "Constraints to respect (optional)",
      type: "textarea",
      desc: "Non-negotiables: deadlines, safety, brand, legal, scope.",
      ph: "Ship by Friday; no new dependencies; keep accessibility AA"
    },
    {
      key: "materials",
      label: "Materials / artifacts at hand (optional)",
      type: "textarea",
      desc: "What you’re working with now: sketches, stems, copy, data.",
      ph: "Two melody stems; draft headline; Figma wireframe; dataset v3"
    },

    // Persona & bias typeaheads (inline autofill)
    {
      key: "audience",
      label: "Personas / audience (optional)",
      type: "repeater",
      itemType: "typeahead",
      itemLabel: "persona",
      autofill: "persona->inline",
      desc: "Who this work is ultimately for; informs how prompts are applied.",
      ph: "novice songwriter; SMB owner; teen learner; procurement manager"
    },
    {
      key: "bias_checks",
      label: "Bias checks (optional)",
      type: "repeater",
      itemType: "typeahead",
      itemLabel: "bias",
      autofill: "bias->inline",
      desc: "Cognitive tendencies to guard against during interpretation.",
      ph: "confirmation bias; sunk-cost; status-quo; availability"
    },

    {
      key: "application_scope",
      label: "Where to apply the card",
      type: "select",
      options: [
        "whole — apply to the entire work/process",
        "element — apply to a single component (pick one)",
        "process — apply to workflow (ordering, roles, tools)",
        "constraints — apply to rules/limits themselves"
      ],
      desc: "Directs the AI to target the card at a scope level.",
      ph: "element — apply to a single component"
    },
    {
      key: "success_metric",
      label: "Success metric (optional)",
      type: "text",
      desc: "How we’ll judge if the card helped.",
      ph: "Produce 3 viable variants; reduce edit time by 20%"
    },
{
  key: "output_format",
  label: "Output format",
  type: "select",
  options: [
    "ascii — bullets with branches for each card",
    "json — structured log of card→actions→effects",
    "action-plan — prioritized next steps with owners/timing",
    "card-log-table — markdown table summarizing the session",
    "ai-image — generate an image prompt for an image model",
    "verbal-visual — written visual description of the result",
    "python-graph — Python code to plot a simple chart/graph"
  ],
  desc: "Shapes the final deliverable and schema. New options include an image-generation prompt, a prose visual description, and Python plotting code.",
  ph: "json — structured log of card→actions→effects"
}

  ],

  template: ({
    situation, session_goal, mode, draws, redraw_policy, interpretation_style,
    timebox_minutes, deck_mode, mode_filters, custom_cards, constraints, materials,
    audience, bias_checks, application_scope, success_metric, output_format, ctx
  }) => {
    const list = (s) => String(s||"").split(/\n+/).map(x=>x.trim()).filter(Boolean);
    const bullets = (arr,prefix="• ") => (arr||[]).map(x=>`${prefix}${x}`).join("\n");

    const personas = Array.isArray(audience) ? audience.map(p=>`- ${p}`).join("\n") : null;
    const biases = Array.isArray(bias_checks) ? bias_checks.map(b=>`- ${b}`).join("\n") : null;
    const filters = Array.isArray(mode_filters) ? mode_filters.map(f=>`- ${f}`).join("\n") : null;
    const custom = Array.isArray(custom_cards) ? custom_cards.map(c=>`- ${c}`).join("\n") : null;

    const goalInstr = {
      "diverge": "Bias toward quantity and variety. For each card, produce at least 5 quick variants. No critique during generation; critique after the timebox.",
      "reframe": "Translate the card into a new statement of the brief, then propose 2–3 solutions that only make sense under that reframed brief.",
      "unstick": "Aim for the smallest concrete move that creates momentum. Produce exactly one next action per card and do not over-optimize.",
      "converge": "Use the card to create contrast between 2–3 candidate solutions. Compare against constraints and the success metric; pick one and justify."
    }[String(session_goal||"unstick").split(" ")[0]];

    const modeInstr = {
      "solo sprint": "Solo sprint: draw, enact one literal micro-action immediately, then note effect in one sentence.",
      "pair jam": "Pair jam: drawer reads card; partner proposes three concrete actions; pick one; enact; swap roles if repeating.",
      "workshop": "Workshop: facilitator draws; team timeboxes a 10–15min prototype; 2-minute show-and-tell; log insights; optionally repeat once."
    };

    const redrawInstr = {
      "accept-first": "Redraw policy: accept the first card. No shopping. Commit to a literal attempt for the full timebox.",
      "attempt-then-one-redraw": "Redraw policy: attempt the first card literally for 3–5 minutes. If sterile, allow exactly one redraw and commit.",
      "best-of-three-with-log": "Redraw policy: draw three cards up front. Run 5-minute micro-tests for each. Keep the highest-yield and discard the rest, logging why."
    };

    const interpInstr = {
      "literal-first": "Interpretation: start literal. Translate the words into a concrete verb + object change, then optionally a metaphorical variant.",
      "metaphor-first": "Interpretation: start metaphorical. Re-express the card as a framing, then derive one concrete action consistent with that frame.",
      "alternate": "Interpretation: run two passes per card—first literal (small concrete change), then metaphorical (reframe), compare effects."
    };

    const deckInstr = {
      "classic-random": "Deck: classic random. Draw blindly from a general oblique set; do not browse for favorites.",
      "mode-filtered": `Deck: mode-filtered. Bias draws toward:\n${filters || "- expand"}`,
      "domain-deck": "Deck: domain-specific. Use prompts phrased for your domain (music/writing/design/research); examples should reference domain artifacts.",
      "custom-list": `Deck: custom. Use only the provided seed cards:\n${custom || "- (add custom cards)"}`
    };

    const scopeInstr = {
      "whole": "Scope: apply the card to the entire work/process; expect large shifts; keep changes reversible.",
      "element": "Scope: apply to one named element only (e.g., headline, bassline, hero image, onboarding step).",
      "process": "Scope: apply to workflow—sequence, roles, or tool choices—rather than the artifact itself.",
      "constraints": "Scope: apply to the constraints—remove, swap, or invert a rule—then re-attempt the task under the new rule."
    };

    const outInstr = {
  "ascii":
    "Output format: ASCII. For each card, return bullets:\n- Card text\n- Literal micro-action (≤2 sentences)\n- Metaphorical variant (≤2)\n- Timebox and what happened\n- Keep / discard / iterate",
  "json":
    "Output format: JSON. Return an array of objects with keys: card, literal_action, metaphor_action, timebox_minutes, effect, decision, lesson.",
  "action-plan":
    "Output format: Action plan. Return a prioritized list of next steps with owners/dates, each traced back to the originating card.",
  "card-log-table":
    "Output format: Card log table (Markdown). Columns: Card | Literal action | Metaphor action | Timebox | Effect | Decision | Lesson.",
  "ai-image":
    "Output format: AI Image Prompt. Produce a single, well-structured image-generation prompt that renders the best post-card concept. Include:\n- Subject & key scene elements\n- Style & medium (e.g., ink illustration, cinematic still, isometric UI mock)\n- Composition (framing, focal point, camera/angle)\n- Lighting and mood\n- Palette or tonal guidance (optional)\n- Aspect ratio\n- Negative cues (what to avoid)\nAlso provide a one-line rationale mapping elements back to the card(s). Do NOT include copyrighted characters/styles by name.",
  "verbal-visual":
    "Output format: Verbal visual description. Write a vivid, concrete description of the final concept as if describing a finished image to someone who cannot see it. Include:\n- Foreground, midground, background\n- Spatial relationships and movement\n- Texture, scale, light/shadow, and color language\n- Key focal points and why they matter\nOptionally add an ASCII mini-layout (no fancy box-drawing) to sketch composition.",
  "python-graph":
    "Output format: Python plotting code. Generate a single, self-contained Python snippet that creates a simple chart reflecting the experiment's key comparison (e.g., baseline vs. card variant counts, option scores, or time savings). Requirements:\n- Use matplotlib only\n- Exactly one figure (no subplots)\n- Do not set custom colors or styles\n- Include a tiny inline dummy dataset if user data is absent (clearly label it as sample)\n- Add axis labels and a concise title referencing the card\nReturn the code in a fenced block and briefly state what the chart communicates."
};

    const tb = Number.parseInt(timebox_minutes||"15",10) || 15;
    const n = Number.parseInt(draws||"1",10) || 1;

    return [
      "Use Oblique Strategies to generate lateral moves via timeboxed micro-experiments.",
      ctx && `Context: ${ctx}`,
      situation && `Stuck point: ${situation}`,
      constraints && `Constraints to respect:\n${constraints}`,
      materials && `Materials on hand:\n${materials}`,
      audience && `Personas / audience:\n${personas}`,
      bias_checks && `Bias checks to watch for:\n${biases}`,

      // Operating doctrine
      `Session goal: ${goalInstr}`,
      mode && (modeInstr[mode.split(" — ")[0]] || modeInstr[String(mode||"").split(" ")[0]]),
      redraw_policy && (redrawInstr[redraw_policy.split(" ")[0]] || redrawInstr["attempt-then-one-redraw"]),
      interpretation_style && (interpInstr[interpretation_style.split(" ")[0]] || interpInstr["literal-first"]),
      deck_mode && deckInstr[deck_mode.split(" ")[0]] || deckInstr["classic-random"],
      application_scope && (scopeInstr[application_scope.split(" ")[0]] || scopeInstr["element"]),
      success_metric && `Success metric: ${success_metric}`,

      // Draw & apply
      `Draw ${n} card(s). For each card, run a ${tb}-minute micro-experiment following the selected interpretation style.`,
      "For every card, produce BOTH:\n- A literal micro-action (concrete, reversible, 1–2 sentences)\n- A metaphorical variant (reframing or sideways move, 1–2 sentences)\nThen enact one; record effect and a keep/discard decision.",

      // Output format specification
      outInstr[output_format?.split(" ")[0] || "json"]
    ].filter(Boolean).join("\n");
  },

  meta: {
    search_text:
      "Oblique Strategies framework lateral thinking prompts Brian Eno Peter Schmidt creative block randomness ritual timebox micro-experiment deck mode filters custom seed cards solo pair workshop redraw policy literal metaphorical actions JSON log action plan personas bias checks"
  }
},
{
  id: "okr",
  slug: "okr-goal-setting",
  label: "OKR — Objective & Key Results",
  kind: "framework",
  categories: ["strategy", "planning", "measurement"],
  tags: [
    "type:framework",
    "topic:goal-setting",
    "topic:alignment",
    "topic:metrics",
    "phase:plan",
    "level:beginner",
    "use:scope-management",
    "use:execution",
    "use:review"
  ],

  use_cases: [
    "translate strategy into a small set of measurable outcomes",
    "align teams and individuals around a shared destination",
    "separate outcomes (KRs) from initiatives (the work)",
    "review progress with honest scoring and learning, not blame",
    "define clear organizational or personal goals with measurable outcomes", "break down a vision into concrete targets", "evaluate progress by looking at quantifiable results tied to objectives"
  ],

  boosters: [
    "Keep 1–3 Objectives per scope; 2–5 Key Results per Objective.",
    "Make every KR outcome-based with a metric, baseline, target, and timeframe.",
    "Declare stretch policy: committed (must hit) vs aspirational (aim ~0.7 score).",
    "Add Goodhart guardrails (a balancing metric or qualitative check) for any KR that could be gamed.",
    "Publish owners and a weekly/biweekly check-in ritual (date, agenda, next steps)."
  ],

  definition:
    "OKRs pair a qualitative Objective (the inspiring ‘what’) with 2–5 quantitative Key Results (the measurable ‘how we’ll know’). They create focus, alignment, and learning through periodic check-ins and end-of-cycle review.",

  help:
    "Provide an Objective and any draft KRs. The model will refine KRs (metric, baseline→target, timeframe), propose guardrails, suggest initiatives (separate from KRs), and define check-ins and scoring. Use persona and bias typeaheads to tailor wording and reduce pitfalls.",

  fields: [
    {
      key: "objective",
      label: "Objective (qualitative goal)",
      type: "textarea",
      desc: "A concise, inspiring destination. Avoid embedding metrics or tasks.",
      ph: "e.g., Delight new customers with a frictionless onboarding experience."
    },

    // Personas (per your spec)
    {
      key: "audience",
      label: "Primary personas / stakeholders",
      type: "repeater",
      itemType: "typeahead",
      itemLabel: "persona",
      autofill: "persona->inline",
      desc: "Who this Objective serves or must persuade (drives language and trade-offs).",
      ph: "e.g., New SMB admins; Support agents; Compliance reviewer"
    },

    // Bias checks (per your spec)
    {
      key: "bias_checks",
      label: "Bias & risk checks",
      type: "repeater",
      itemType: "typeahead",
      itemLabel: "bias",
      autofill: "bias->inline",
      desc: "Known pitfalls to watch (e.g., Goodhart’s law, sandbagging, survivorship).",
      ph: "e.g., Goodhart’s law; Outcome reporting bias; Selection bias"
    },

    {
      key: "mission_link",
      label: "Mission / strategy link",
      type: "textarea",
      desc: "How this Objective advances the mission or annual strategy. ‘Why this now?’",
      ph: "e.g., Supports FY25 strategy pillar: Customer trust & retention"
    },

    {
      key: "time_horizon",
      label: "Time horizon",
      type: "select",
      options: [
        "Q (quarter — ~13 weeks)",
        "H1/H2 (half-year)",
        "FY (annual)",
        "Custom (specify dates in notes)"
      ],
      desc: "Sets cadence expectations for KRs and reviews.",
      ph: "Q (quarter — ~13 weeks)"
    },

    {
      key: "owners",
      label: "Owners / stewards",
      type: "repeater",
      itemType: "typeahead",
      itemLabel: "persona",
      autofill: "persona->inline",
      desc: "People accountable for the Objective/KRs; cross-functional as needed.",
      ph: "e.g., Growth PM; Design lead; Data analyst"
    },

    // Structured KRs with baselines/targets, etc.
    {
      key: "key_results",
      label: "Key Results",
      type: "repeater",
      itemType: "group",
      itemLabel: "KR",
      desc: "2–5 outcome metrics that prove progress on the Objective.",
      fields: [
        { key: "metric",       label: "Metric (name & formula)", type: "text",     ph: "e.g., Onboarding time = avg days signup→‘first value’" },
        { key: "baseline",     label: "Baseline (current value)", type: "text",    ph: "e.g., 14 days (Q2 actual)" },
        { key: "target",       label: "Target (end-of-cycle)",    type: "text",    ph: "e.g., ≤ 4 days by Q4" },
        { key: "type",         label: "Type",                     type: "select",  options: ["leading (predictive/behavioral)", "lagging (outcome/impact)"], ph: "leading or lagging" },
        { key: "timeframe",    label: "Timeframe",                type: "text",    ph: "e.g., by end of Q3; monthly readout" },
        { key: "owner",        label: "KR owner",                 type: "text",    ph: "e.g., Onboarding PM" },
        { key: "instrument",   label: "Instrumentation / data source", type: "textarea", ph: "e.g., Product analytics event ‘first_success’; survey CSAT item Q3" },
        { key: "guardrail",    label: "Goodhart guardrail (balancing metric)", type: "text", ph: "e.g., CSAT ≥ 4.5 while time drops" },
        { key: "risks",        label: "Risks & assumptions",      type: "textarea", ph: "e.g., Data latency; seasonality; staffing limits" },
        { key: "initiatives",  label: "Candidate initiatives (tasks/projects)", type: "textarea", ph: "e.g., Guided setup; checklist; 1:1 concierge for first 50 users" }
      ]
    },

    {
      key: "non_goals",
      label: "Non-goals / out of scope",
      type: "textarea",
      desc: "What we will not pursue this cycle (prevents scope creep).",
      ph: "e.g., No pricing experiments during onboarding redesign"
    },

    {
      key: "scoring_method",
      label: "Scoring method",
      type: "select",
      options: [
        "0.0–1.0 (Google style: ~0.7 = ambitious success)",
        "RAG (Red/Amber/Green with numeric mapping: R=0.3/A=0.6/G=1.0)",
        "Binary (Met / Not met, for committed KRs)"
      ],
      desc: "Defines how progress is graded at check-ins and end-cycle.",
      ph: "0.0–1.0 (Google style: ~0.7 = ambitious success)"
    },

    {
      key: "checkins",
      label: "Check-in cadence & agenda",
      type: "textarea",
      desc: "When and how you’ll review (and what gets updated each time).",
      ph: "e.g., Fridays biweekly: update KR data, blockers, next actions"
    },

    {
      key: "dependencies",
      label: "Dependencies & resources",
      type: "textarea",
      desc: "Cross-team needs, budget/tools, approvals that affect success.",
      ph: "e.g., Data pipeline from Analytics; 2 eng sprints; Legal sign-off"
    },

    {
      key: "visibility",
      label: "Visibility",
      type: "select",
      options: ["Public (org-wide)", "Team", "Private (draft)"],
      desc: "Who can see the OKR; default to transparency.",
      ph: "Public (org-wide)"
    }
  ],

  template: ({ objective, audience, bias_checks, mission_link, time_horizon, owners, key_results, non_goals, scoring_method, checkins, dependencies, visibility, ctx, style, tone }) => {
    const list = (arr, bullet = "- ") =>
      String(arr || "")
        .split(/\n+/)
        .map(s => s.trim())
        .filter(Boolean)
        .map(s => `${bullet}${s}`)
        .join("\n");

    const personas = Array.isArray(audience) ? audience : (audience ? [audience] : []);
    const biases   = Array.isArray(bias_checks) ? bias_checks : (bias_checks ? [bias_checks] : []);
    const ownersL  = Array.isArray(owners) ? owners : (owners ? [owners] : []);

    // Render structured KRs if provided
    const renderKRs = () => {
      if (!Array.isArray(key_results) || key_results.length === 0) return null;
      const rows = key_results.map((kr, i) => {
        const idx = i + 1;
        const metric = kr?.metric ? `Metric: ${kr.metric}` : "Metric: (define)";
        const baseline = kr?.baseline ? `Baseline: ${kr.baseline}` : "Baseline: (define)";
        const target = kr?.target ? `Target: ${kr.target}` : "Target: (define)";
        const type = kr?.type ? `Type: ${kr.type}` : "Type: (leading/lagging?)";
        const timeframe = kr?.timeframe ? `Timeframe: ${kr.timeframe}` : "Timeframe: (define)";
        const owner = kr?.owner ? `Owner: ${kr.owner}` : "Owner: (assign)";
        const instrument = kr?.instrument ? `Instrumentation: ${kr.instrument}` : "Instrumentation: (source & formula)";
        const guardrail = kr?.guardrail ? `Guardrail: ${kr.guardrail}` : "Guardrail: (balancing metric if risk of gaming)";
        const risks = kr?.risks ? `Risks: ${kr.risks}` : "Risks: (note major assumptions)";
        const inits = kr?.initiatives ? `Initiatives: ${kr.initiatives}` : "Initiatives: (2–3 candidate projects)";
        return [
          `KR${idx}:`,
          `  ${metric}`,
          `  ${baseline} → ${target}`,
          `  ${type}; ${timeframe}; ${owner}`,
          `  ${instrument}`,
          `  ${guardrail}`,
          `  ${risks}`,
          `  ${inits}`
        ].join("\n");
      });
      return rows.join("\n");
    };

    return [
      "Design a high-quality OKR with guardrails and a working cadence.",
      ctx && `Context: ${ctx}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,

      objective && `\nObjective:\n${objective}`,

      mission_link && `\nMission / Strategy link:\n${mission_link}`,

      personas.length ? `\nPrimary personas / stakeholders:\n${list(personas)}` : null,

      time_horizon && `\nTime horizon: ${time_horizon}`,

      ownersL.length ? `\nOwners / stewards:\n${list(ownersL)}` : null,

      "\nKey Results (make them outcome-based; include metric, baseline→target, timeframe):",
      renderKRs() || "- (define 2–5 KRs with metric, baseline, target, timeframe, owner, instrumentation, guardrail, risks, initiatives)",

      non_goals && `\nNon-goals / out of scope:\n${non_goals}`,

      dependencies && `\nDependencies & resources:\n${dependencies}`,

      scoring_method && `\nScoring method: ${scoring_method}`,

      checkins && `\nCheck-in cadence & agenda:\n${checkins}`,

      visibility && `\nVisibility: ${visibility}`,

      biases.length ? `\nBias & risk checks to apply:\n${list(biases)}` : null,

      "\nInstruction to the AI:",
      "- Validate the Objective (inspiring, user-impact oriented, time-bounded in scope, no embedded metrics).",
      "- For each KR: ensure a clear metric definition (formula & source), current baseline, specific target, timeframe, and owner.",
      "- Classify KR as leading or lagging; if likely to be gamed, propose a Goodhart guardrail.",
      "- Distinguish initiatives (work) from KRs (outcomes). Propose 1–3 initiatives per KR, but do not turn initiatives into KRs.",
      "- Define a simple scoring rubric based on the selected method (e.g., 0.0–1.0 with example thresholds).",
      "- Outline the check-in ritual (who, when, updates, blockers, next actions).",
      "- Provide a short risks & assumptions note (measurement validity, seasonality, data latency, resourcing).",
      "- Provide a one-line ‘Because–Therefore’ summary tying KRs to the Objective.",
      "- Return a compact JSON summary at the end with keys: objective, krs[], guardrails[], initiatives[], checkins, scoring, risks, dependencies, personas, visibility.",

      "\nOutput:",
      "1) Refined Objective (1–2 lines).",
      "2) KR set (2–5), each with metric, baseline→target, timeframe, owner, instrumentation, guardrail.",
      "3) Initiatives per KR (bulleted).",
      "4) Scoring rubric & check-in plan.",
      "5) Risks/assumptions & bias checks applied.",
      "6) Final JSON summary (schema described above)."
    ]
    .filter(Boolean)
    .join("\n");
  },

  meta: {
    search_text:
      "OKR Objective & Key Results framework goals alignment metrics baselines targets scoring cadence guardrails Goodhart personas bias sandbagging quarter check-in initiatives outcome vs output transparency"
  }
},

  {
  id: "ooda_loop",
  slug: "ooda-loop",
  label: "OODA Loop (Observe–Orient–Decide–Act)",
  kind: "strategy",
  categories: ["decision", "strategy", "operations"],
  tags: [
    "type:framework",
    "topic:ooda",
    "topic:fast-loop",
    "use:pattern",
    "use:coding",
    "use:decision-making",
    "use:incident-response",
    "use:product-discovery",
    "use:design-decisions",
    "level:beginner"
  ],
  use_cases: [
    "cut through indecision with a tight OODA pass",
    "establish a clear next action under uncertainty",
    "stabilize incidents with fast, instrumented probes",
    "accelerate product discovery with reversible experiments",
    "adapt strategy against a live competitor (get inside their loop)",
    "make time-boxed choices when information is incomplete"
  ],
  boosters: [
    "Name a testable hypothesis in Decide (If we do X, we expect Y within Z time).",
    "Prefer reversible moves first; pre-define rollback/kill criteria.",
    "Add a quick feedback note: how you’ll check results after acting.",
    "Diversify sensors (qual + quant) to reduce blind spots in Observe.",
    "Limit Observe/Orient to facts relevant to the next step; defer the rest."
  ],
  definition: "A rapid decision cadence that learns faster than the environment or opponent: Observe (gather signals) → Orient (update mental models, surface assumptions) → Decide (pick a hypothesis to try) → Act (run a small, instrumented move) → feed results back into the loop.",
  help: "Use this when speed + learning matter. Keep stages concise, set a decision timebox, prefer small reversible actions with clear metrics, and route results back into your model.",
  fields: [
    {
      label: "Session goal (divergent vs. convergent)",
      key: "session_goal",
      type: "select",
      options: [
        "Divergent scan — widen aperture: seek new signals, generate multiple options, postpone commitment.",
        "Convergent commit — narrow choices: compare options against intent/constraints, pick one, timebox execution."
      ],
      desc: "Sets the stance of the loop: ideation vs. decision. Drives how broad Observe/Orient should be and how assertive Decide/Act should be.",
      ph: "Convergent commit — narrow choices…"
    },
    {
      label: "Mission intent (what ‘winning’ looks like)",
      key: "intent",
      type: "textarea",
      desc: "One or two lines on desired end-state / focus of effort to align decentralized action.",
      ph: "Restore service for Tier-1 customers within 2h with minimal data loss."
    },
    {
      label: "Time horizon / tempo",
      key: "tempo",
      type: "select",
      options: [
        "Fast transient (hours) — prioritize speed, run probes, accept partial info.",
        "Tactical (days) — short sprints, staged rollouts, daily learning.",
        "Operational (weeks) — cadence reviews, multiple probes in parallel.",
        "Strategic (quarters) — broad sensing, higher proof bar, fewer irreversible moves."
      ],
      desc: "Influences how much evidence you need before Decide, and the size of Acts.",
      ph: "Fast transient (hours)…"
    },
    {
      label: "Decision type",
      key: "decision_type",
      type: "select",
      options: [
        "Two-way door (reversible) — bias to action; smaller probe; quicker timebox.",
        "One-way door (hard to reverse) — raise evidence threshold; expand Observe/Orient; add pre-mortem."
      ],
      desc: "Guides risk posture and evidence bar.",
      ph: "Two-way door (reversible)…"
    },
    {
      label: "Observe — What’s the situation / facts?",
      key: "observe",
      type: "textarea",
      desc: "Crisp, decision-relevant signals only (telemetry, user reports, constraints). Call out uncertainty.",
      ph: "Key metrics, recent events, constraints, notable anomalies…"
    },
    {
      label: "Orient — What matters most right now?",
      key: "orient",
      type: "textarea",
      desc: "Interpretation/model update: priorities, assumptions, risks, context shifts. Note competing hypotheses.",
      ph: "Our best model is… Assumptions: … Risks: …"
    },
    {
      label: "Hypothesis (optional)",
      key: "hypothesis",
      type: "textarea",
      desc: "Decision as a testable claim: If we do X, we expect Y within Z (measure: M).",
      ph: "If we ship guided checklist to 20% mobile users, TTV ↓ 30% within 48h (metric: median TTV)."
    },
    {
      label: "Decide — What’s the next best step?",
      key: "decide",
      type: "textarea",
      desc: "One sentence choice aligned to intent and current orientation. Mention confidence level if useful.",
      ph: "Roll out fix A to region-1 behind a flag; monitor error rate."
    },
    {
      label: "Act — What will we actually do now?",
      key: "act",
      type: "textarea",
      desc: "Concrete action, owner, start time. Keep it small, observable, and reversible when possible.",
      ph: "Owner: Priya; Start: 10:15; Steps: enable flag, run smoke tests, watch dashboards."
    },
    {
      label: "Metrics & feedback window",
      key: "metrics",
      type: "textarea",
      desc: "Success/failure signals, thresholds, and timebox to evaluate.",
      ph: "SLO error rate < 1% within 30m; if > 2% for 10m, rollback."
    },
    {
      label: "Kill switch / rollback criteria",
      key: "killswitch",
      type: "textarea",
      desc: "Pre-agreed conditions to stop or reverse the action to limit blast radius.",
      ph: "If p95 latency > 400ms for 5 consecutive minutes → auto-disable feature flag."
    },
    {
      label: "Stakeholder personas (for orientation & comms)",
      key: "audience",
      type: "repeater",
      itemType: "typeahead",
      itemLabel: "persona",
      autofill: "persona->inline",
      desc: "Whose perspectives/signals matter here (customers, SRE, finance, regulator, etc.)?",
      ph: "Add relevant personas…"
    },
    {
      label: "Bias checks (common pitfalls to watch)",
      key: "bias_checks",
      type: "repeater",
      itemType: "typeahead",
      itemLabel: "bias",
      autofill: "bias->inline",
      desc: "Inline reminders (e.g., confirmation bias, sunk-cost, anchoring) to improve Orientation quality.",
      ph: "Add bias checks…"
    },
    {
      label: "Risks & countermeasures (optional)",
      key: "risks",
      type: "textarea",
      desc: "Foreseeable downsides and the small safeguards you’ll add now.",
      ph: "Risk: noisy alert storms → Countermeasure: raise threshold + dedupe rule."
    },
    {
      label: "Comms plan (optional)",
      key: "comms",
      type: "textarea",
      desc: "Who needs to know what and when (especially if Act affects them)?",
      ph: "Status to #incident; customer notice if >30m impact."
    }
  ],
  template: ({
    session_goal,
    intent,
    tempo,
    decision_type,
    observe,
    orient,
    hypothesis,
    decide,
    act,
    metrics,
    killswitch,
    audience,
    bias_checks,
    risks,
    comms,
    ctx,
    audience: aud, // legacy
    style,
    tone
  }) => {
    const listify = (s) => String(s||"").split(/\n+/).map(x=>x.trim()).filter(Boolean);
    const personas = Array.isArray(audience) ? audience : [];
    const biases = Array.isArray(bias_checks) ? bias_checks : [];

    const lines = [
      "Run an OODA pass to unblock a decision.",
      ctx && `Context: ${ctx}`,
      aud && `Audience: ${aud}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      intent && `Mission intent (focus of effort): ${intent}`,
      tempo && `Tempo: ${tempo}`,
      session_goal && `Session goal: ${session_goal}`,
      decision_type && `Decision type: ${decision_type}`,

      // Behavior implications of selects (embedded instructions, not just echo):
      decision_type && (decision_type.startsWith("Two-way")
        ? "Guidance: Favor speed and small, reversible Acts; accept partial info; set short feedback windows and explicit rollback."
        : "Guidance: Raise evidence bar; expand Observe/Orient; run pre-mortem and add safeguards before committing."),

      session_goal && (session_goal.startsWith("Divergent")
        ? "Mode: Divergent scan — broaden Observe (add at least one new signal), list ≥3 options during Orient, and delay commitment until options are compared against intent."
        : "Mode: Convergent commit — narrow to 1–2 options, compare against intent/constraints, pick one, and timebox execution."),

      tempo && (tempo.startsWith("Fast")
        ? "Tempo note: Optimize for short cycles (hours). Keep actions minimal and instrumented; prefer flags and quick rollbacks."
        : null),

      observe && ("Observe (facts):\n" + observe),
      orient && ("Orient (model & what matters):\n" + orient),
      hypothesis && ("Hypothesis:\n" + hypothesis),
      decide && ("Decide (next best step):\n" + decide),
      act && ("Act (now):\n" + act),
      metrics && ("Metrics & feedback window:\n" + metrics),
      killswitch && ("Kill switch / rollback:\n" + killswitch),

      personas.length ? ("Stakeholder personas:\n" + personas.map((p,i)=>`${i+1}. ${p}`).join("\n")) : null,
      biases.length ? ("Bias checks:\n" + biases.map((b,i)=>`${i+1}. ${b}`).join("\n")) : null,
      risks && ("Risks & countermeasures:\n" + risks),
      comms && ("Comms plan:\n" + comms),

      "Output:",
      "1) Key facts (Observe) limited to decision-relevant signals.",
      "2) Priority frame & assumptions (Orient), including any competing hypotheses.",
      "3) Decision as a hypothesis with a clear timebox (Decide).",
      "4) Immediate, instrumented action with owner (Act).",
      "5) Metrics, feedback window, and rollback criteria.",
      "6) Notes on biases guarded against and stakeholders informed."
    ].filter(Boolean);

    return lines.join("\n");
  },
  meta: {
    search_text: "OODA loop observe orient decide act fast learning tempo mission command hypothesis small reversible actions instrumented feedback incident response product discovery strategy maneuver get inside their loop"
  }
},

{
  id: "opportunity_scoring",
  slug: "opportunity-scoring-gap-analysis",
  label: "Opportunity Scoring — Importance vs. Satisfaction",
  kind: "framework",
  categories: ["reasoning", "planning", "product-management"],
  tags: [
    "type:framework","topic:odi","topic:jtbd","topic:clarification","topic:prioritization",
    "use:pattern","use:segmentation","use:roadmap","level:intermediate"
  ],
  use_cases: [
    "surface unmet needs",
    "turn surveys into priorities",
    "prioritize a roadmap from JTBD outcome statements",
    "compare opportunity by segment/persona and geography",
    "post-launch re-measure to verify lift in satisfaction",
    "triage discovery findings and allocate research/design effort",
    "portfolio planning across multiple products or lines of service"
  ],
  boosters: [
    "Write items as outcome statements (solution-agnostic, measurable).",
    "Segment results; compute scores per persona/segment before averaging.",
    "Pick a clear scale (e.g., 1–10) and anchor labels; keep wording consistent.",
    "Use a scoring rule (Ulwick: I + max(I−S,0)) and sort descending; annotate the high-importance/low-satisfaction zone.",
    "Visualize Importance (x) vs. Satisfaction (y); highlight upper-left points and note confidence/± error if available.",
    "Propose 1 experiment per top opportunity and the outcome metric it should move."
  ],
  definition: "Quantitatively rank unmet needs by pairing each outcome’s Importance with current Satisfaction. High-importance, low-satisfaction outcomes indicate larger opportunities to improve or differentiate.",
  help: "Enter outcome items and (optionally) their Importance and Satisfaction scores. Choose a scale and scoring rule. You can add personas/segments to see differences, plus bias checks to guard against sampling/measurement artifacts.",
  fields: [
    {
      key: "items",
      label: "Items (one per line, with optional scores and segment)",
      type: "textarea",
      desc: "Use the pattern “Outcome | Importance | Satisfaction | [Segment]”. Leave scores blank to have the model estimate or request them.",
      ph: "Reduce time to reconcile invoices | 9 | 5 | SMB\nIncrease first-attempt resolution rate | 8 | 4 | Enterprise\nLower variance in page load time | 7 | 6"
    },
    {
      key: "method",
      label: "Research method (optional)",
      type: "text",
      desc: "Brief provenance and sample notes (n, sampling, mode).",
      ph: "Survey n=214 (job executors) + 8 interviews; randomized item order; 1–10 scales"
    },
    {
      key: "scale",
      label: "Scale & anchors",
      type: "select",
      options: [
        "1–5 (1=not important/satisfied, 5=extremely important/satisfied)",
        "1–7 (Likert-style anchors)",
        "1–10 (fine resolution; common in ODI)",
        "Top-2-box (%) on 5-point scale"
      ],
      desc: "Select the response scale and anchor meanings the analysis should assume.",
      ph: "1–10 (fine resolution; common in ODI)"
    },
    {
      key: "scoring",
      label: "Scoring rule",
      type: "select",
      options: [
        "Ulwick: Opportunity = I + max(I − S, 0)",
        "2×I − S (linear approximation)",
        "Gap only: I − S (diagnostic, no clamp)",
        "Custom weights (set below)"
      ],
      desc: "Choose how to translate Importance/Satisfaction into an opportunity score.",
      ph: "Ulwick: Opportunity = I + max(I − S, 0)"
    },
    {
      key: "weights",
      label: "Custom weights (optional)",
      type: "text",
      desc: "If using Custom: provide a formula or weights, e.g., Opportunity = 1.5*I − 0.5*S.",
      ph: "Opportunity = 1.5*I − 0.5*S"
    },
    {
      key: "thresholds",
      label: "Prioritization thresholds (optional)",
      type: "text",
      desc: "Heuristics for what counts as a top opportunity.",
      ph: "Flag if I≥8 AND S≤5 OR Opportunity≥15"
    },
    {
      key: "audience",
      label: "Personas/segments (typeahead repeater)",
      type: "repeater",
      itemType: "typeahead",
      itemLabel: "persona",
      autofill: "persona->inline",
      desc: "List personas/segments to cut the analysis by (will produce per-segment tables)."
    },
    {
      key: "bias_checks",
      label: "Bias checks (typeahead repeater)",
      type: "repeater",
      itemType: "typeahead",
      itemLabel: "bias",
      autofill: "bias->inline",
      desc: "Common risks to watch (sampling bias, acquiescence bias, scale-use differences, cultural/translation drift)."
    },
    {
      key: "notes",
      label: "Notes (optional)",
      type: "textarea",
      desc: "Caveats, anomalies, or segmentation hints the analysis should honor.",
      ph: "High variance across power users; LATAM uses scale more conservatively; device mix differs by segment."
    },
    {
      key: "output_format",
      label: "Output format",
      type: "select",
      options: [
        "ASCII table & ranked list",
        "JSON (machine-readable results)",
        "Python — generate scatterplot and ranked table",
        "Verbal narrative summary",
        "Generate AI image — prompt for an opportunity landscape"
      ],
      desc: "Controls how results are rendered. The model will tailor instructions and output accordingly.",
      ph: "ASCII table & ranked list"
    }
  ],
  template: ({
    items, method, scale, scoring, weights, thresholds, audience, bias_checks, notes,
    output_format, ctx, style, tone
  }) => {
    const personas = Array.isArray(audience) ? audience : [];
    const biases = Array.isArray(bias_checks) ? bias_checks : [];
    const fmt = (arr, lead) => (arr && arr.length)
      ? `${lead}:\n` + arr.map((x,i)=>`${i+1}. ${x}`).join('\n')
      : null;

    const scoringLine = scoring === "Custom weights (set below)" && weights
      ? `Scoring rule: ${weights}.`
      : scoring
        ? `Scoring rule: ${scoring}.`
        : "Scoring rule: Ulwick (I + max(I−S,0)).";

    const scaleLine = scale ? `Scale: ${scale}.` : "Scale: 1–10 with clear anchors.";
    const threshLine = thresholds ? `Prioritization thresholds: ${thresholds}.` : null;

    const renderDirective =
      output_format === "JSON (machine-readable results)"
        ? "Render JSON: [{ item, importance, satisfaction, opportunity, segment? }], plus { top_opportunities: [...], method, scale, scoring }."
      : output_format === "Python — generate scatterplot and ranked table"
        ? [
            "Return Python code that:",
            "- Uses matplotlib (no seaborn/styles) to plot Importance (x) vs Satisfaction (y).",
            "- Labels points by item (and segment if provided).",
            "- Draws a reference diagonal y=x and shades the upper-left opportunity zone.",
            "- Prints a ranked table of item, I, S, Opportunity.",
            "Do not fetch external data; parse from the provided lines."
          ].join('\n')
      : output_format === "Generate AI image — prompt for an opportunity landscape"
        ? "Return a concise, evocative prompt for an AI image generator that depicts an ‘opportunity landscape’ scatterplot (high-importance/low-satisfaction quadrant emphasized), including style and color guidance."
      : output_format === "Verbal narrative summary"
        ? "Write a crisp narrative: key segments, top 3 opportunities (why), notable overserved areas, and 1–2 next experiments per opportunity."
      : "Produce an ASCII table with columns: Item | Importance | Satisfaction | Opportunity | Segment, followed by a ranked Top-5 list with rationales.";

    return [
      "Perform Opportunity Scoring (Importance vs. Satisfaction) to find unmet needs and prioritize action.",
      ctx && `Context: ${ctx}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      method && `Research method:\n${method}`,
      scaleLine,
      scoringLine,
      threshLine,
      personas.length ? fmt(personas, "Personas/segments (cuts to compute") : null,
      biases.length ? fmt(biases, "Bias checks to apply") : null,
      notes && `Notes:\n${notes}`,
      items && `Raw items (parse “Outcome | Importance | Satisfaction | [Segment]”):\n${items}`,
      "Instructions to the model:",
      "- Parse each line. If scores are missing, flag the item and do not fabricate; suggest a minimal survey instead.",
      "- Normalize to the selected scale; keep anchors consistent.",
      "- Compute Opportunity per the scoring rule. Never reward overserved items (S≥I) when using Ulwick.",
      "- Compute results per persona/segment first (if provided), then overall.",
      "- Visualize/format according to Output format.",
      "- Identify the Top-5 opportunities with brief rationales (why high I/low S, any segment concentration).",
      "- For each Top-5, propose one experiment or design change and the outcome metric it should move.",
      "- Call out measurement caveats (e.g., sample size, known biases).",
      renderDirective
    ].filter(Boolean).join('\n');
  },
  meta: {
    search_text:
      "opportunity scoring importance satisfaction ulwick odi jobs to be done segmentation prioritization roadmap scatterplot importance-satisfaction gap analysis formula I + max(I−S,0) 2I−S"
  }
},

{
  id: "par",
  slug: "par-problem-action-result",
  label: "PAR — Problem · Action · Result",
  kind: "framework",
  categories: ["storytelling-frameworks", "prompt-development-techniques"],
  tags: [
    "type:framework","use:storytelling","phase:apply","level:beginner",
    "use:recipe","use:case-study","use:planning","use:pattern",
    "use:resume","use:pitch","use:postmortem","use:status-update"
  ],
  use_cases: [
    "summarize work experience on resumes",
    "write concise case study or incident summaries",
    "prepare performance review notes",
    "give crisp updates in team reports",
    // additional (expanded) use cases:
    "open sales pitches or investor memos with impact-first lines",
    "create postmortem snapshots with verifiable outcomes",
    "draft grant or proposal impact statements",
    "produce agile sprint demo highlights and changelogs",
    "generate LinkedIn headlines or portfolio captions",
    "refine past work experience"
  ],
  boosters: [
    "Quantify results with metrics or proxies (%, $, Δ, time saved). If exact data is missing, propose a plausible proxy and mark it (est.).",
    "Make the Problem concrete and consequential (baseline, scope, timeframe).",
    "Emphasize your specific contribution in Action (verbs + scope + levers).",
    "Adapt voice to audience: factual (ATS resume), reflective (review), persuasive (case study/pitch).",
    "If confidentiality applies, mask proper nouns and sensitive figures (± ranges).",
    "Offer one alt rendition (short/long) when space or tone differs across channels."
  ],
  definition: "A concise storytelling pattern that frames a challenge (Problem), your intervention (Action), and the measurable outcome (Result). Can be converted to RAP (impact-first) or expanded to STAR (adds Situation & Task).",
  help: "Fill Problem, Action, and Result as specifically as you can. Choose an Instruction Mode to keep PAR, convert to RAP, expand to STAR, ask for clarifying questions, or output both PAR+RAP.",
  fields: [
    { label: "Problem (situation & stakes)", key: "problem", type: "textarea",
      desc: "Obstacle/gap with baseline, scope, timeframe, and why it mattered.",
      ph: "e.g., Trial-to-paid conversion stalled at 3.2% (Q2), endangering runway." },

    { label: "Action (your levers & role)", key: "action", type: "textarea",
      desc: "What YOU did (verbs), scale/scope, methods/tools, decisions.",
      ph: "e.g., Designed 5-step onboarding, added in-app tips, ran A/B, partnered with CS." },

    { label: "Result (outcome & metric)", key: "result", type: "textarea",
      desc: "Measurable outcome with delta, baseline, time horizon; add proxy if needed.",
      ph: "e.g., Conversion +1.9 pp (3.2%→5.1%) in 6 weeks; support tickets −18%." },

    // Optional detail knobs to raise evidence quality:
    { label: "Baseline / timeframe (optional)", key: "timeframe", type: "text",
      desc: "When/how long; include before/after if not in Problem/Result.",
      ph: "e.g., Apr–May; baseline from Q1 cohort." },

    { label: "Scope / scale (optional)", key: "scope", type: "text",
      desc: "Team size, budget, users affected, market segment.",
      ph: "e.g., 3-person squad; 42k MAU; SMB US." },

    { label: "Tools / methods (optional)", key: "tools", type: "text",
      desc: "Stacks, methods, or playbooks used (keep concise).",
      ph: "e.g., Mixpanel, Braze, Optimizely, JTBD interviews." },

    // Audience + persona & bias guidance
    { label: "Audience (reader/consumer)", key: "audience", type: "text",
      desc: "Who this is for informs tone and jargon.",
      ph: "e.g., Recruiter (ATS), Sales VP, Engineering leadership." },

    { label: "Personas (inform tone; typeahead)", key: "personas",
      type: "repeater", itemType: "typeahead", itemLabel: "persona", autofill: "persona->inline",
      desc: "Add personas to tailor diction (e.g., hiring manager, technical buyer)." },

    { label: "Bias checks (language hygiene; typeahead)", key: "bias_checks",
      type: "repeater", itemType: "typeahead", itemLabel: "bias", autofill: "bias->inline",
      desc: "Inline checks to avoid biased or exclusionary phrasing (e.g., gendered verbs, cultural clichés, overclaiming)." },

    // Output controls
    { label: "Instruction Mode", key: "mode", type: "select",
      options: [
        "PAR — keep Problem→Action→Result",
        "RAP — convert to Result→Action→Problem (impact-first)",
        "STAR — expand with Situation & Task (derive from Problem/Action)",
        "Ask-Refine — generate clarifying questions to improve each slot",
        "Dual — output both PAR and RAP"
      ],
      desc: "Changes ordering and the level of scaffolding the model will produce.",
      ph: "Select how to render and/or refine the narrative." },

    { label: "Output format", key: "format", type: "select",
      options: [
        "Resume bullet (ATS-safe, no emojis)",
        "Short paragraph (2–3 sentences)",
        "Case study snippet (3–5 bullets)",
        "One-line headline (RAP style)",
        "Status update (concise, action-forward)"
      ],
      desc: "Controls length, tone, and structure of the final artifact.",
      ph: "Resume bullet (ATS-safe, no emojis)" },

    { label: "Tone (optional)", key: "tone", type: "select",
      options: ["factual", "persuasive", "reflective", "technical", "executive"],
      desc: "Tones map to diction (verbs, qualifiers, jargon tolerance).",
      ph: "factual" },

    { label: "Confidentiality", key: "confidentiality", type: "select",
      options: ["normal — keep names/numbers", "redact — anonymize orgs, bound numbers"],
      desc: "If redact, replace names with roles and numbers with ranges (±).",
      ph: "redact — anonymize orgs, bound numbers" }
  ],
  template: ({ problem, action, result, timeframe, scope, tools, audience, personas = [], bias_checks = [], mode, format, tone, confidentiality, ctx }) => {
    // Helpers
    const nl = s => (s||"").trim();
    const has = s => nl(s).length > 0;
    const list = arr => (arr||[]).map(x => typeof x === "string" ? x.trim() : x).filter(Boolean);
    const joinLines = (label, val) => has(val) ? `${label}: ${val}` : null;

    // Build core PAR pieces
    const P = has(problem) ? `Problem: ${nl(problem)}` : null;
    const A = has(action) ? `Action: ${nl(action)}` : null;
    const R = has(result) ? `Result: ${nl(result)}` : null;

    // Evidence boosters / context cues (only included if provided)
    const boosters = [
      joinLines("Timeframe", timeframe),
      joinLines("Scope", scope),
      joinLines("Methods/Tools", tools)
    ].filter(Boolean);

    // Persona & bias guidance
    const personaGuide = list(personas).length
      ? `Personas to address: ${list(personas).join("; ")}. Tailor jargon and benefits to these readers.`
      : null;

    const biasGuide = list(bias_checks).length
      ? `Apply bias checks: ${list(bias_checks).join("; ")}. Prefer neutral, specific, verifiable language; avoid overclaiming.`
      : null;

    // Mode logic: ordering + scaffolds
    let body;
    const parBlock = [P, A, R].filter(Boolean).join("\n");
    const rapBlock = [R, A, P].filter(Boolean).join("\n");
    const starBlock = [
      "STAR expansion:",
      has(problem) ? `Situation: ${nl(problem)}` : "Situation: (derive concise context from the Problem)",
      "Task: (state the responsibility/expectation implied by the role)",
      A || "Action: (what you did; specify levers, decisions, collaborators)",
      R || "Result: (quantify impact; add timeframe/baseline)"
    ].join("\n");

    const refineQs = [
      !has(problem) && "What specific baseline, scope, and stakes define the Problem?",
      !has(action) && "Which actions did YOU take (verbs, levers, tools), and what was your role?",
      !has(result) && "What outcome can be quantified (Δ%, $, time, quality/risk)? If none, what proxy metric is credible?",
      !has(timeframe) && "Over what timeframe did the change occur (start→end)?",
      !has(scope) && "What was the scope/scale (team size, users, budget, segment)?",
      !has(tools) && "Which methods/tools/processes were pivotal?"
    ].filter(Boolean);

    switch ((mode||"PAR — keep Problem→Action→Result").split(" — ")[0].toLowerCase()) {
      case "rap": body = rapBlock; break;
      case "star": body = `${parBlock}\n\n${starBlock}`.trim(); break;
      case "ask-refine": body = [
          "Clarify the following to strengthen PAR:",
          ...refineQs.map((q,i)=>`${i+1}. ${q}`)
        ].join("\n"); break;
      case "dual": body = [
          "PAR:",
          parBlock,
          "",
          "RAP (impact-first):",
          rapBlock
        ].join("\n"); break;
      default: body = parBlock; // PAR
    }

    // Format & tone instructions
    const toneNote = tone ? `Tone: ${tone}.` : null;
    const audienceNote = audience ? `Audience: ${audience}.` : null;
    const confNote = confidentiality && confidentiality.startsWith("redact")
      ? "Confidentiality: redact proper nouns; bound sensitive numbers as ranges (e.g., ~10–15%)."
      : null;

    const formatInstr = (() => {
      switch ((format||"Resume bullet (ATS-safe, no emojis)")) {
        case "Resume bullet (ATS-safe, no emojis)":
          return "Render as 1–2 ATS-safe bullets. Avoid emojis/symbols; keep to ASCII; lead with verbs; include a number.";
        case "Short paragraph (2–3 sentences)":
          return "Render as a 2–3 sentence paragraph: P(1) → A(1) → R(1) with one clear metric.";
        case "Case study snippet (3–5 bullets)":
          return "Render as 3–5 bullets with headers: Problem, Action(s), Result(s), Evidence (baseline/timeframe).";
        case "One-line headline (RAP style)":
          return "Render a single RAP line: Result → Action → Problem (max ~28 words, one number).";
        case "Status update (concise, action-forward)":
          return "Render as a status line: Action done → Result so far → Next step (≤2 lines).";
        default:
          return "Render concisely with clear structure and one quantified outcome.";
      }
    })();

    // Final instruction assembly
    return [
      "Construct the narrative per settings below.",
      ctx && `Context: ${ctx}`,
      audienceNote,
      personaGuide,
      biasGuide,
      toneNote,
      confNote,
      boosters.length ? `Evidence context: ${boosters.join(" | ")}` : null,
      `Instruction Mode: ${mode || "PAR — keep Problem→Action→Result"} (reorder/expand as specified).`,
      `Output format: ${format || "Resume bullet (ATS-safe, no emojis)"}. ${formatInstr}`,
      "",
      body,
      "",
      "Quality checks:",
      "- Show causality A→R explicitly; avoid passive voice where possible.",
      "- Include at least one concrete metric or a clearly labeled proxy (est.).",
      "- Keep the actor (you/your team) visible; avoid vague “responsible for…” phrasing.",
      "- If numbers are redacted, supply ranges and rationale in parentheses."
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text:
      "PAR problem action result resume bullet case study RAP STAR convert impact-first ATS concise quantified outcomes persona bias checks confidentiality redact"
  }
},

{
  id: "parts_work",
  slug: "parts-work-dialogue",
  label: "Parts Work Dialogue (IFS therapy)",
  kind: "framework",
  categories: ["psychology", "self-reflection", "coaching"],
  tags: [
    "type:framework","topic:parts-work","topic:IFS","level:intermediate",
    "use:conflict-resolution","use:self-compassion","use:values-alignment",
    "use:creative-blocks","use:habits","use:decision-support"
  ],
  use_cases: [
    "resolve internal conflicts by giving each part a voice",
    "understand the needs and fears of your inner “family” members",
    "foster self-compassion by mediating between your inner voices",
    "negotiate behavior change (e.g., procrastination, perfectionism) with protectors",
    "de-escalate polarized parts before high-stakes work (presentations, performance)",
    "unblock creativity by meeting the inner critic and playful maker",
    "need mental help", "looking for therapy", "struggle with mental health",
    "prepare for therapy/coaching by mapping parts, roles, and requests"
  ],
  boosters: [
    "Unblend: speak as “a part of me…”; let Self (calm, curious, compassionate) lead.",
    "Greet protectors first; ask permission before approaching painful exiles.",
    "Ask each part its positive intent and fear: “What are you trying to do for me? What are you afraid would happen if you didn’t?”",
    "Keep agreements tiny, time-bound, and reversible; log any promises you make to parts.",
    "Pause if flooded; use grounding (5-senses check, breath, feet on floor) before continuing."
  ],
  definition: "A gentle dialogue method (from Internal Family Systems) that treats the mind as a community of parts—protectors, exiles, and a core Self. By unblending, listening, and renegotiating roles, you reduce inner conflict and increase Self-leadership without pathologizing any part.",
  help: "Name your parts, the tension, and your session goal. Choose a mode, grounding tools, and cultural framing. The template instructs the model to be safety-aware, permission-based, and culturally respectful, then to deliver your chosen output (dialogue, prompts, or summary).",
  fields: [
    // Core parts (names/roles)
    { label: "Part A (name/role)", key: "part_a", type: "text",
      desc: "A protector, exile, or other inner role.", ph: "e.g., Inner Critic (manager)" },
    { label: "Part A (persona)", key: "part_a_persona", type: "repeater",
      itemType: "typeahead", itemLabel: "persona", autofill: "persona->inline",
      desc: "Personas/archetypes that color Part A’s voice.", ph: "e.g., Perfectionist • Auditor • Strict teacher" },

    { label: "Part B (name/role)", key: "part_b", type: "text",
      desc: "Another distinct part with a different aim.", ph: "e.g., Playful Creator (firefighter/creative)" },
    { label: "Part B (persona)", key: "part_b_persona", type: "repeater",
      itemType: "typeahead", itemLabel: "persona", autofill: "persona->inline",
      desc: "Personas/archetypes that color Part B’s voice.", ph: "e.g., Artist • Trickster • Explorer" },

    // Optional: additional parts (free-form, not persona typeahead)
    { label: "Additional parts (optional)", key: "more_parts", type: "repeater",
      itemType: "text", itemLabel: "part",
      desc: "List more parts to acknowledge or briefly include.", ph: "e.g., Pragmatist • Worrier • Caretaker" },

    // Self + Reptilian/Unconscious
    { label: "Self (name/role)", key: "self_name", type: "text",
      desc: "How you want to reference core Self leadership.", ph: "e.g., Calm Witness, Compassionate Self" },
    { label: "Self (persona)", key: "self_persona", type: "repeater",
      itemType: "typeahead", itemLabel: "persona", autofill: "persona->inline",
      desc: "Descriptors for your Self’s tone (compassionate, curious, confident).", ph: "e.g., Compassionate mentor • Wise friend" },

    { label: "Reptilian/Unconscious (name/role)", key: "survival_name", type: "text",
      desc: "Metaphor for the survival/automatic system; not literal neuroanatomy.",
      ph: "e.g., The Sentinel (survival system)" },
    { label: "Reptilian/Unconscious (persona)", key: "survival_persona", type: "repeater",
      itemType: "typeahead", itemLabel: "persona", autofill: "persona->inline",
      desc: "Metaphoric traits (safety-first, vigilant, threat-scanner).", ph: "e.g., Guardian • Lookout • Bodyguard" },

    // Tension & goal
    { label: "Conflict or concern between parts", key: "issue", type: "textarea",
      desc: "What’s the friction? What do they disagree about?", ph: "e.g., Risking a public post vs. staying safe from criticism" },
    { label: "Session goal", key: "goal", type: "text",
      desc: "What you want by the end (one sentence).", ph: "e.g., A small, safe first step both parts accept" },

    // Personas (audience) & bias checks
    { label: "Audience/personas (optional)", key: "audience", type: "repeater",
      itemType: "typeahead", itemLabel: "persona", autofill: "persona->inline",
      desc: "Who this is for (tailors tone).", ph: "e.g., Myself • Therapist • Coach • Partner" },
    { label: "Bias checks (optional)", key: "bias_checks", type: "repeater",
      itemType: "typeahead", itemLabel: "bias", autofill: "bias->inline",
      desc: "Biases to avoid (moralizing, ableism, cultural erasure).",
      ph: "e.g., Confirmation bias • All-or-nothing thinking • Cultural stereotyping" },

    // Mode/scope with instructional options
    { label: "Session mode", key: "mode", type: "select",
      options: [
        "Stabilize only — prioritize grounding, unblending, and protector rapport; avoid trauma narratives; end with one tiny agreement.",
        "Light dialogue — brief, permission-based conversation with protectors; approach vulnerable content only if protectors consent; keep timebox.",
        "Guided journaling — produce prompts for me to answer; pause if distress rises; summarize agreements at end.",
        "With clinician — assume a licensed therapist present; still seek permission from protectors; therapist sets pace."
      ],
      desc: "Sets scope and safety boundaries for the session.",
      ph: "Stabilize only — grounding first, no trauma processing" },

    // Cultural/spiritual framing (now more robust + details)
{
  label: "Cultural/spiritual framing",
  key: "culture",
  type: "select",
  options: [
    "Secular language — everyday psychology; avoid spiritual terms and clinical jargon.",
    "Layman/casual — friendly, colloquial phrasing; plain metaphors; no jargon.",
    "Spiritual language — Self as compassionate awareness/Buddha-nature/fitra; use gentle spiritual metaphors on consent.",
    "Faith-integrated — reference my faith respectfully (use my terms from details); no doctrinal claims; emphasize mercy/dignity.",
    "New-age spiritual — optional metaphors of energy/inner light/chakras; keep grounded and consent-based.",
    "Clinical language — official psychology terms; use clinical jargon and avoid spiritual terms.",
    "Fantasy/mythic — creative, metaphor-rich framing; speak in imagery of quests, guardians, realms, and elemental forces."
  ],
  desc: "Choose how Self/parts are described to fit your worldview and tone.",
  ph: "Layman/casual — friendly, colloquial phrasing"
},  
    { label: "Cultural/spiritual details (optional)", key: "culture_details", type: "textarea",
      desc: "Your faith/culture/terms to respect (e.g., phrases, boundaries).",
      ph: "e.g., Muslim; prefer ‘rahma/mercy’; avoid doctrine debate; use “heart” instead of “Self”" },

    // Safety & grounding
    { label: "Safety limits & triggers (optional)", key: "safety", type: "textarea",
      desc: "Content to avoid or pace slowly; include ground rules for pausing.",
      ph: "Avoid detailed trauma memories; pause if heart rate spikes; return to breath & 5-senses" },

    { label: "Grounding tools (multi-select)", key: "grounding_presets", type: "multiselect",
      options: [
        "5–4–3–2–1 senses — name things you see/hear/feel/smell/taste",
        "Box breathing — inhale/hold/exhale/hold (4–4–4–4)",
        "Extended exhale — inhale 4, exhale 6–8",
        "Feet on floor — press and notice support",
        "Progressive muscle release — brief tense–release scan",
        "Orienting — look around, find 3 colors and 3 shapes",
        "Soothing touch — hand on heart, slow breath",
        "Temperature shift — cool water on wrists, face",
        "Movement — shoulder roll, neck turn, stand–sit",
        "Naming supports — recall one safe person/place"
      ],
      desc: "Common stabilizers the model may suggest as needed.",
      ph: "Select one or more grounding tools" },

    { label: "Grounding tools (custom, one per line)", key: "grounding", type: "textarea",
      desc: "Add your own practices.", ph: "Humming\nBreath with counting\nSipping warm tea" },

    { label: "Timebox (optional)", key: "timebox", type: "text",
      desc: "Total minutes for the dialogue.", ph: "e.g., 12 minutes" },

    // Somatic/context cues
    { label: "Somatic cues (optional)", key: "somatic", type: "textarea",
      desc: "Where/how parts show up in body sensations, images, impulses.",
      ph: "Tight jaw (Critic), fluttery chest (Exile), urge to scroll (Firefighter)" },

    // Output format with instruction-bearing options
    { label: "Output format", key: "output", type: "select",
      options: [
        "Scripted dialogue — alternate lines for Part A, Part B, Self (and optionally Survival System); include consent checks, brief pauses, and grounding inserts.",
        "Coach prompts — a sequenced checklist of short prompts the user answers; include timing (60–90s each) and grounding cues between steps.",
        "Summary & plan — a parts-map table (Part | Role | Positive intent | Fear | Somatic cue | Requests), one tiny agreement, aftercare checklist, and 24–72h follow-up reminder."
      ],
      desc: "How the response should be delivered.",
      ph: "Scripted dialogue — with consent checks" }
  ],
  template: (args => {
    const {
      part_a, part_a_persona = [], part_b, part_b_persona = [], more_parts = [],
      self_name, self_persona = [], survival_name, survival_persona = [],
      issue, goal, audience = [], bias_checks = [], mode, culture, culture_details,
      safety, grounding_presets = [], grounding, timebox, somatic, output,
      ctx, style, tone
    } = args || {};
    const toLines = s => (s||"").split(/\n+/).map(x=>x.trim()).filter(Boolean);
    const bullets = (arr, lead="• ") => arr && arr.length ? arr.map(x=>`${lead}${x}`).join("\n") : null;

    const culture_instructions = (() => {
      switch (culture) {
        case "Secular language — everyday psychology; avoid spiritual terms and clinical jargon.":
          return "Cultural framing: Use everyday psychological language; avoid spiritual terms and heavy jargon. Explain concepts plainly.";
        case "Layman/casual — friendly, colloquial phrasing; plain metaphors; no jargon.":
          return "Cultural framing: Speak casually and warmly, using plain metaphors; avoid jargon; keep it conversational.";
        case "Spiritual language — Self as compassionate awareness/Buddha-nature/fitra; use gentle spiritual metaphors on consent.":
          return "Cultural framing: You may refer to Self as compassionate awareness/Buddha-nature/fitra; use gentle spiritual metaphors only as supportive language.";
        case "Faith-integrated — reference my faith respectfully (use my terms from details); no doctrinal claims; emphasize mercy/dignity.":
          return "Cultural framing: Integrate the user’s faith respectfully using their terms; do not make doctrinal claims; emphasize mercy, dignity, and compassion.";
        case "New-age spiritual — optional metaphors of energy/inner light/chakras; keep grounded and consent-based.":
          return "Cultural framing: You may use light energy-based metaphors (inner light/chakras) sparingly and keep guidance grounded and consent-based.";
          case "Clinical language — official psychology terms; use clinical jargon and avoid spiritual terms.":
  return "Cultural framing: Use clinical psychology and psychiatric terminology (e.g., affect regulation, cognitive appraisal, defensive strategies). Avoid metaphorical language. Reference established constructs (hyperarousal, avoidance, cognitive distortions). Provide Provisional, Differential, and Working diagnoses; maintain precision and clinical tone.";
  case "Fantasy/mythic — creative, metaphor-rich framing; speak in imagery of quests, guardians, realms, and elemental forces.":
  return "Cultural framing: Use vivid fantasy metaphors. Describe parts of the Self as adventurers, guardians, or elemental beings within an inner realm. Frame struggles as quests, choices as crossroads, and healing as forging artifacts of resilience. Keep imaginative but coherent; honor consent as sacred law of the realm.";
        default:
          return null;
      }
    })();

    const output_instructions = (() => {
      switch (output) {
        case "Scripted dialogue — alternate lines for Part A, Part B, Self (and optionally Survival System); include consent checks, brief pauses, and grounding inserts.":
          return "Output: Provide a scripted dialogue alternating lines for Part A, Part B, Self, and (if relevant) the Survival System. Include explicit consent checks before contacting vulnerable content, short pauses, and grounding inserts when intensity rises. Keep lines concise and kind.";
        case "Coach prompts — a sequenced checklist of short prompts the user answers; include timing (60–90s each) and grounding cues between steps.":
          return "Output: Provide numbered coach prompts the user can answer. Each step 60–90 seconds. Insert small grounding cues between steps. End with a recap and one tiny agreement.";
        case "Summary & plan — a parts-map table (Part | Role | Positive intent | Fear | Somatic cue | Requests), one tiny agreement, aftercare checklist, and 24–72h follow-up reminder.":
          return "Output: Provide a parts-map table (Part | Role | Positive intent | Fear | Somatic cue | Requests), a one-line tiny agreement (who/what/when), an aftercare checklist, and a 24–72h follow-up reminder.";
        default:
          return null;
      }
    })();

    return [
      "Facilitate a Parts Work (IFS-informed) dialogue that is safety-aware, permission-based, and culturally respectful.",
      ctx && `Context: ${ctx}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,

      mode && `Session mode: ${mode}`,
      timebox && `Timebox: ${timebox}`,

      // Participants
      part_a && `Part A: ${part_a}` ,
      part_a_persona.length ? `Part A personas: ${part_a_persona.join(" • ")}` : null,
      part_b && `Part B: ${part_b}`,
      part_b_persona.length ? `Part B personas: ${part_b_persona.join(" • ")}` : null,
      more_parts.length ? `Additional parts: ${more_parts.join(" • ")}` : null,
      self_name && `Self reference: ${self_name}`,
      self_persona.length ? `Self qualities: ${self_persona.join(" • ")}` : null,
      survival_name && `Survival system (metaphor): ${survival_name}`,
      survival_persona.length ? `Survival system traits: ${survival_persona.join(" • ")}` : null,

      issue && `Presenting tension:\n${issue}`,
      goal && `Session goal: ${goal}`,
      somatic && `Somatic/imagery cues: ${somatic}`,

      (audience.length > 0) && ("Audience/personas: " + audience.join(" • ")),
      (bias_checks.length > 0) && ("Bias checks to avoid: " + bias_checks.join(" • ")),

      culture_instructions,
      culture_details && `Cultural/spiritual details to respect: ${culture_details}`,

      safety && `Safety limits: ${safety}`,
      grounding_presets.length ? `Grounding tools (selected):\n${bullets(grounding_presets)}` : null,
      grounding && `Grounding tools (custom):\n${toLines(grounding).map(x=>"• "+x).join("\n")}`,

      // Operating instructions for the model
      "Model instructions:",
      "- Lead with Self energy (calm, curious, compassionate). Do not diagnose or pathologize. Do not force disclosure.",
      "- Unblend language: use “a part of me…” rather than totalizing identity.",
      "- Meet protectors first. Ask explicit permission before contacting vulnerable/exile content; honor a No.",
      "- If distress or dissociation appears, pause and offer a selected grounding tool; return to protectors or end safely.",
      "- Treat “Reptilian/Unconscious” as a metaphor for survival/automatic responses; do not make neuroanatomical claims.",
      "- Keep steps brief and kind; close with a small, consensual agreement and aftercare.",

      // Flow (concise)
      "Flow:",
      "1) Find & Focus: Notice Part A and Part B (and any named parts) in sensations/images/impulses.",
      "2) Feel toward: Check user’s feeling toward each; if not curious/compassionate, a protector is blended—meet that part first.",
      "3) Befriend & Function: Ask each part its positive intent and fear (what it protects, what it worries will happen).",
      "4) Permission: Ask protectors for a small, safe step toward the goal; accept constraints.",
      "5) Tiny Agreement: Co-create one time-bound, low-risk commitment both parts accept.",
      "6) Aftercare: Thank parts; suggest a calming close; set a 24–72h check-in.",

      output_instructions || "Output: Provide a gentle, structured response (dialogue/prompts/summary) with consent checks, grounding, and a tiny agreement.",
      "If the user indicates acute risk or overwhelming distress: pause and recommend contacting a qualified professional or crisis support appropriate to their region."
    ].filter(Boolean).join("\n");
  }),
  meta: {
    search_text: "IFS parts work dialogue Self leadership protectors exiles managers firefighters unblending survival system metaphor grounding multiselect cultural framing secular layman casual spiritual faith integrated new age personas bias checks consent safety journaling scripted dialogue summary plan"
  }
},

{
  id: 'pas',
  slug: 'pas-copywriting',
  label: 'PAS — Problem · Agitate · Solution',
  kind: 'framework',
  categories: ['storytelling frameworks','writing','marketing'],
  tags: [
    'type:framework','use:copywriting','phase:compose','level:beginner',
    'use:ad-copy','use:task-brief','use:email','use:landing','use:pitch',
    'topic:persuasion','topic:problem-framing'
  ],
  use_cases: [
    'write persuasive copy by addressing the reader’s pain and offering relief',
    'structure marketing messages or support tickets by focusing on problem then solution',
    'craft introductions for pitches or blogs that hook with a problem and promise a solution',
    'generate ad headlines/subheads that connect pain → relief',
    'summarize customer insight into crisp, action-oriented copy blocks',
    'draft landing hero content',
    'produce variants for A/B testing (problem angle, agitation depth, proof type, CTA)'
  ],
  boosters: [
    'Name one primary problem (not three). Specificity beats breadth.',
    'In Agitate, quantify near-term and compounding costs (time, money, risk, morale).',
    'Tie Solution steps directly to each agitated pain; remove one friction per sentence.',
    'Add minimal proof (metric, testimonial, guarantee) to de-risk the promise.',
    'Match CTA to readiness: “Learn more” < “Try free” < “Buy now”.',
    'Ethics: be accurate, avoid fear-mongering; include accessibility/inclusion cues when relevant.'
  ],
  definition: 'A copywriting formula that presents a Problem, amplifies it (Agitate), then provides a Solution to resolve the discomfort.',
  help: 'Provide the audience’s problem and your solution. Optionally add agitation details, proof, CTA, and constraints. Choose a transform to output PAS, SAP, PAR, RAP, or STAR; or select “Refine PAS” to have the model ask focused questions and then draft.',
  fields: [
    {
      key: 'problem',
      label: 'Problem',
      type: 'textarea',
      desc: 'The core pain point in audience language; include stakes.',
      ph: 'e.g., Project managers chase updates; status is always stale at review time.'
    },
    {
      key: 'agitate',
      label: 'Agitate (pain details, optional)',
      type: 'textarea',
      desc: 'Make costs vivid (time, $$, risk, morale). Add a near-term + compounding cost.',
      ph: 'e.g., 6–8 hours/week lost; missed dependencies cause weekend fire drills.'
    },
    {
      key: 'solution',
      label: 'Solution',
      type: 'text',
      desc: 'Your product/idea/process that resolves the problem; one line.',
      ph: 'e.g., SyncMaster auto-updates project status in real time.'
    },
    {
      key: 'action_steps',
      label: 'Actions you took / will take (optional)',
      type: 'textarea',
      desc: 'Useful when transforming to PAR/RAP/STAR; list concrete actions.',
      ph: 'e.g., Implemented webhook ingestion; added SLA dashboards; trained PMs.'
    },
    {
      key: 'result',
      label: 'Result / outcome (optional)',
      type: 'textarea',
      desc: 'Quantified outcomes/proxies; supports PAR/RAP/STAR.',
      ph: 'e.g., Churn ↓ from 14%→8% in 3 months; CSAT ↑ to 4.6/5.'
    },
    {
      key: 'situation',
      label: 'Situation (STAR, optional)',
      type: 'textarea',
      desc: 'Context/constraints that set the scene (for STAR transform).',
      ph: 'e.g., Series B stage; 3 PMs; fragmented tooling across 4 teams.'
    },
    {
      key: 'task',
      label: 'Task (STAR, optional)',
      type: 'textarea',
      desc: 'Objective or responsibility (for STAR transform).',
      ph: 'e.g., Deliver reliable exec status weekly without adding PM burden.'
    },
    {
      key: 'audience_insight',
      label: 'Audience insight (optional)',
      type: 'textarea',
      desc: 'Objections, desires, triggers; informs tone and proof.',
      ph: 'e.g., Skeptical of black-box automation; responds to ROI and peer proof.'
    },
    {
      key: 'audience',
      label: 'Audience personas (optional)',
      type: 'repeater',
      itemType: 'typeahead',
      itemLabel: 'persona',
      autofill: 'persona->inline',
      desc: 'Who you are addressing; select one or more personas.',
      ph: 'e.g., VP Operations; Solo founder; Nonprofit ED'
    },
    {
      key: 'bias_checks',
      label: 'Bias/ethics checks (optional)',
      type: 'repeater',
      itemType: 'typeahead',
      itemLabel: 'bias',
      autofill: 'bias->inline',
      desc: 'Inline reminders to avoid stereotypes/exclusion or fear-mongering.',
      ph: 'e.g., Accessibility; Fear appeals; Cultural sensitivity'
    },
    {
      key: 'proof',
      label: 'Proof (optional)',
      type: 'textarea',
      desc: 'Evidence that reduces risk: data, testimonial, certification.',
      ph: 'e.g., “Cut close time by 62% at Acme (case study)”; SOC 2 Type II.'
    },
    {
      key: 'cta',
      label: 'Call-to-action (optional)',
      type: 'text',
      desc: 'Exact next step language.',
      ph: 'e.g., Start a 14-day trial'
    },
    {
      key: 'channel',
      label: 'Channel (optional)',
      type: 'select',
      options: [
        'Landing hero — headline + subhead',
        'Email — short body + CTA',
        'Ad — headline + body (≤90 chars body)',
        'Pitch deck — single slide copy',
        'Support macro — problem/solution reply',
        'Social post — 1–2 sentences'
      ],
      desc: 'Shapes voice, length, and CTA strength.'
    },
    {
      key: 'constraints',
      label: 'Constraints (optional)',
      type: 'text',
      desc: 'Word/char limits, style rules, compliance notes.',
      ph: 'e.g., ≤70 chars headline; avoid superlatives; plain language'
    },
    {
      key: 'transform',
      label: 'Output pattern / assistance',
      type: 'select',
      options: [
        'PAS — Problem→Agitate→Solution (default persuasive copy)',
        'SAP — Solution→Agitate→Problem (solution-first for low attention)',
        'PAR — Problem→Action→Result (resume/case style)',
        'RAP — Result→Action→Problem (impact-first hook)',
        'STAR — Situation→Task→Action→Result (interview/story)',
        'Refine PAS — Ask clarifying questions, then draft PAS'
      ],
      desc: 'Controls structure and instruction set used in the output.'
    }
  ],
  template: ({
    problem, agitate, solution,
    action_steps, result, situation, task,
    audience_insight, audience, bias_checks,
    proof, cta, channel, constraints, transform,
    ctx, style, tone
  }) => {
    const t = String(transform || 'PAS').toLowerCase();
    const personas = Array.isArray(audience) ? audience : [];
    const biases = Array.isArray(bias_checks) ? bias_checks : [];
    return [
      'Use a persuasion pattern with explicit structure and ethical guardrails.',
      ctx && `Context: ${ctx}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      personas.length ? 'Audience personas:\n' + personas.map((p,i)=>`${i+1}. ${p}`).join('\n') : null,
      personas.length ? 'Instruction: tailor vocabulary, objections, and proof to the personas above.' : null,
      biases.length ? 'Bias/ethics checks to apply:\n' + biases.map(b=>`- ${b}`).join('\n') : null,
      biases.length ? 'Instruction: avoid stereotypes, manipulative fear appeals, and inaccessible language.' : null,
      audience_insight && `Audience insight:\n${audience_insight}`,
      constraints && `Constraints: ${constraints}`,
      channel && `Channel: ${channel}`,
      'General rules: be specific; prefer concrete numbers; map each pain → relief; one primary idea per message.',
      t.includes('refine') ? 'Mode: Refine PAS — first ask focused questions, then draft PAS.' : null,
      t.includes('refine') ? 'Ask:\n1) Primary outcome (time, $$, risk, status)?\n2) Strongest symptom story (recent)?\n3) Smallest credible proof (metric/quote/guarantee)?\n4) Accessibility or inclusion cues?\n5) CTA that matches readiness?' : null,
      t.includes('pas') ? 'Pattern: PAS — Problem → Agitate → Solution.' : null,
      t.includes('pas') && problem ? 'Problem:\n' + problem : null,
      t.includes('pas') && agitate ? 'Agitate (costs & consequences):\n' + agitate : null,
      t.includes('pas') && solution ? 'Solution:\n' + solution : null,
      t.includes('pas') && proof ? 'Proof:\n' + proof : null,
      t.includes('pas') && cta ? 'CTA: ' + cta : null,
      t.includes('sap') ? 'Pattern: SAP — Solution → Agitate → Problem (solution-first).' : null,
      t.includes('sap') && solution ? 'Solution (lead):\n' + solution : null,
      t.includes('sap') && agitate ? 'Agitate (pains without it):\n' + agitate : null,
      t.includes('sap') && problem ? 'Problem (named last):\n' + problem : null,
      t.includes('sap') && proof ? 'Proof:\n' + proof : null,
      t.includes('sap') && cta ? 'CTA: ' + cta : null,
      t.includes('par') ? 'Pattern: PAR — Problem → Action → Result.' : null,
      t.includes('par') && problem ? 'Problem:\n' + problem : null,
      t.includes('par') && (action_steps || solution) ? 'Action:\n' + (action_steps || solution) : null,
      t.includes('par') && (result || 'Result: <proxy metric>'),
      t.includes('rap') ? 'Pattern: RAP — Result → Action → Problem.' : null,
      t.includes('rap') && (result || 'Result (lead): <impact or proxy>'),
      t.includes('rap') && (action_steps || solution) ? 'Action:\n' + (action_steps || solution) : null,
      t.includes('rap') && problem ? 'Problem (context):\n' + problem : null,
      t.includes('star') ? 'Pattern: STAR — Situation → Task → Action → Result.' : null,
      t.includes('star') && (situation || problem) ? 'Situation:\n' + (situation || problem) : null,
      t.includes('star') && (task || 'Task: <objective/responsibility>'),
      t.includes('star') && (action_steps || solution) ? 'Action:\n' + (action_steps || solution) : null,
      t.includes('star') && (result || 'Result: <quantified impact or qualitative outcome>'),
      'Quality checks: 1) Concrete numbers present? 2) Jargon minimized? 3) CTA matches readiness? 4) Bias/ethics checks applied?'
    ].filter(Boolean).join('\n');
  },
  meta: {
    search_text: 'PAS Problem Agitate Solution transform SAP PAR RAP STAR refine personas bias ethics CTA proof audience inclusion accessibility resume case study landing email ad headline persuasion framework'
  }
},

    {
      id: "paul-elder",
      slug: "paul-elder",
      label: "Paul–Elder — Elements of Thought + Standards",
      kind: "strategy",
      categories: [
        "critical-thinking",
        "prompt-development-techniques"
      ],
      tags: [
        "type:framework",
        "use:copywriting",
        "phase:apply",
        "level:intermediate",
        "use:presentations",
        "use:decision-making",
        "use:pattern"
      ],
      use_cases: [
        "Argument/brief critique",
        "Decision memos",
        "Policy/position analysis",
        "Lesson planning checks"
      ],
      boosters: [
        "Give a 3-sentence synthesis and 2 sharper follow-up questions that would most improve the reasoning."
      ],
      definition: "Structure reasoning via the Elements of Thought (purpose, question, info, concepts, assumptions, implications, point of view, inference) and judge it with Intellectual Standards (clarity, accuracy, precision, relevance, depth, breadth, logic, significance, fairness).",
      help: "Fill what you know for each element; pick standards to apply; get a structured critique and improvement.",
      fields: [
        {
          label: "Purpose",
          desc: "Goal/why this reasoning?",
          key: "purpose",
          ph: "e.g., Decide if we should ship feature X this quarter",
          type: "textarea"
        },
        {
          label: "Central question",
          desc: "Main question being answered",
          key: "key_question",
          ph: "e.g., Should we ship feature X in Q4?",
          type: "text"
        },
        {
          label: "Information",
          desc: "Key facts/data/sources",
          key: "information",
          ph: "e.g., user studies, cost estimates, incident data",
          type: "textarea"
        },
        {
          label: "Concepts",
          desc: "Theories/principles/models",
          key: "concepts",
          ph: "e.g., opportunity cost, risk tolerance, SLA/SLO",
          type: "textarea"
        },
        {
          label: "Assumptions",
          desc: "What is taken for granted",
          key: "assumptions",
          ph: "e.g., adoption rate, partner readiness",
          type: "textarea"
        },
        {
          label: "Point(s) of view",
          desc: "Perspectives considered",
          key: "pov",
          ph: "e.g., users, SRE, legal, finance",
          type: "textarea"
        },
        {
          label: "Inferences",
          desc: "Conclusions drawn",
          key: "inferences",
          ph: "e.g., delaying reduces churn risk",
          type: "textarea"
        },
        {
          label: "Implications",
          desc: "Consequences of conclusions",
          key: "implications",
          ph: "e.g., revenue impact, reliability",
          type: "textarea"
        },
        {
          label: "Alternatives",
          desc: "Options/competing claims",
          key: "alternatives",
          ph: "e.g., partial rollout, behind flag",
          type: "textarea"
        },
        {
          label: "Standards to apply",
          desc: "Comma-sep list of standards",
          key: "standards",
          ph: "clarity, accuracy, precision, relevance, depth, breadth, logic, significance, fairness",
          type: "text"
        }
      ],
      template: ({purpose,key_question,information,concepts,assumptions,pov,inferences,implications,alternatives,standards,ctx,audience,style,tone})=>[
    'Apply the Paul–Elder framework to analyze reasoning.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    purpose && `Purpose: ${purpose}`,
    key_question && `Question: ${key_question}`,
    information && `Information: ${information}`,
    concepts && `Concepts: ${concepts}`,
    assumptions && `Assumptions: ${assumptions}`,
    pov && `Points of view: ${pov}`,
    inferences && `Inferences: ${inferences}`,
    implications && `Implications: ${implications}`,
    alternatives && `Alternatives: ${alternatives}`,
    standards && `Intellectual standards to apply: ${standards}`,
    'Output:',
    '1) Brief map of the eight elements (1–2 lines each).',
    '2) Critique using the listed standards (name the standard → note → fix).',
    '3) Revised conclusion with rationale.',
    '4) Evidence or info that would most change the answer.'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "paul–elder — elements of thought + standards paul-elder structure reasoning via the elements of thought (purpose, question, info, concepts, assumptions, implications, point of view, inference) and judge it with intellectual standards (clarity, accuracy, precision, relevance, depth, breadth, logic, significance, fairness). fill what you know for each element; pick standards to apply; get a structured critique and improvement. type:framework use:copywriting phase:apply level:intermediate use:presentations use:decision-making use:pattern critical-thinking prompt-development-techniques argument/brief critique decision memos policy/position analysis lesson planning checks give a 3-sentence synthesis and 2 sharper follow-up questions that would most improve the reasoning. purpose central question information concepts assumptions point(s) of view inferences implications alternatives standards to apply"
      }
    },

    {
      id: "pdca_cycle",
      slug: "pdca-deming-cycle",
      label: "PDCA — Plan · Do · Check · Act",
      kind: "strategy",
      categories: [
        "quality",
        "operations",
        "teaching"
      ],
      tags: [
        "type:framework",
        "use:iteration",
        "level:beginner",
        "use:process-improvement",
        "use:pattern"
      ],
      use_cases: [
        "design small learning or improvement loops",
        "close the feedback loop on changes"
      ],
      boosters: [
        "Timebox each loop and define a “check” metric.",
        "Always propose the next PDCA cycle."
      ],
      definition: "A continuous improvement loop for planning, executing, checking outcomes, and acting on learnings.",
      help: "Keep cycles tight; pick a single metric for Check.",
      fields: [
        {
          label: "Plan",
          key: "plan",
          ph: "Hypothesis; steps; metric.",
          type: "textarea"
        },
        {
          label: "Do",
          key: "do",
          ph: "Execute; note deviations.",
          type: "textarea"
        },
        {
          label: "Check",
          key: "check",
          ph: "Results vs. metric; surprises.",
          type: "textarea"
        },
        {
          label: "Act",
          key: "act",
          ph: "Adjustments; next cycle.",
          type: "textarea"
        }
      ],
      template: ({ plan, do: do_step, check, act, ctx }) => [
    'Run a PDCA loop.',
    ctx && `Context: ${ctx}`,
    plan && `Plan:\n${plan}`,
    do_step && `Do:\n${do_step}`,
    check && `Check:\n${check}`,
    act && `Act:\n${act}`,
    'End with a scheduled next cycle.'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "pdca — plan · do · check · act pdca-deming-cycle a continuous improvement loop for planning, executing, checking outcomes, and acting on learnings. keep cycles tight; pick a single metric for check. type:framework use:iteration level:beginner use:process-improvement use:pattern quality operations teaching design small learning or improvement loops close the feedback loop on changes timebox each loop and define a “check” metric. always propose the next pdca cycle. plan do check act"
      }
    },

    {
      id: "peas",
      slug: "peas-framework",
      label: "PEAS — Performance measure · Environment · Actuators · Sensors",
      kind: "framework",
      categories: [
        "design",
        "analysis-frameworks"
      ],
      tags: [
        "type:framework",
        "use:process-improvement",
        "use:pattern",
        "level:intermediate",
        "use:scope-management",
        "use:task-brief",
        "use:teaching"
      ],
      use_cases: [
        "agent specification",
        "requirements doc",
        "benchmark design",
        "task environment mapping",
        "simulation setup"
      ],
      boosters: [
        "Summarize as a PEAS tuple and include two evaluation scenarios with success/failure traces."
      ],
      definition: "A canonical way to specify intelligent agents by defining success metrics, the environment, possible actions, and percepts.",
      help: "Use to design/evaluate agents or tools before building.",
      fields: [
        {
          label: "Performance measure",
          desc: "Metrics, goals, constraints.",
          key: "performance",
          ph: "e.g., Success@K, latency < 500ms, ≤2% hallucination rate",
          type: "textarea"
        },
        {
          label: "Environment",
          desc: "World, resources, interfaces.",
          key: "environment",
          ph: "e.g., Web browser + internal docs + API with rate-limits",
          type: "textarea"
        },
        {
          label: "Actuators",
          desc: "Actions the agent can take.",
          key: "actuators",
          ph: "e.g., Click, type, call API, write file",
          type: "textarea"
        },
        {
          label: "Sensors",
          desc: "Observations/inputs.",
          key: "sensors",
          ph: "e.g., DOM snapshot, API responses, tool outputs",
          type: "textarea"
        },
        {
          label: "Assumptions (opt.)",
          desc: "Assumptions/risks/trust model.",
          key: "assumptions",
          ph: "e.g., Auth tokens valid; pages stable; tool outputs reliable",
          type: "textarea"
        }
      ],
      template: ({performance,environment,actuators,sensors,assumptions,ctx})=>[
    `Define the agent using the PEAS framework.`,
    ctx&&`Context: ${ctx}`,
    performance&&`Performance measure: ${performance}`,
    environment&&`Environment: ${environment}`,
    actuators&&`Actuators: ${actuators}`,
    sensors&&`Sensors: ${sensors}`,
    assumptions&&`Assumptions/risks: ${assumptions}`
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "peas — performance measure · environment · actuators · sensors peas-framework a canonical way to specify intelligent agents by defining success metrics, the environment, possible actions, and percepts. use to design/evaluate agents or tools before building. type:framework use:process-improvement use:pattern level:intermediate use:scope-management use:task-brief use:teaching design analysis-frameworks agent specification requirements doc benchmark design task environment mapping simulation setup summarize as a peas tuple and include two evaluation scenarios with success/failure traces. performance measure environment actuators sensors assumptions (opt.)"
      }
    },

    {
      id: "persona",
      slug: "persona-actas",
      label: "Persona — ActAs / Simulate",
      kind: "technique",
      categories: [
        "prompt-development-techniques",
        "reasoning"
      ],
      tags: [
        "use:pattern",
        "use:goals",
        "phase:apply",
        "level:beginner",
        "topic:clarification",
        "use:scope-management"
      ],
      boosters: [
        "Stay in-character. Prefer precise, domain-correct terminology. Cite trade-offs briefly before final answer."
      ],
      definition: "Simulate a specific persona (role) with domain skills, vocabulary, and constraints; then apply it to the user’s end goal.",
      help: "Type to search a persona. Picking one autofills the rest; or type your own persona free-form.",
      fields: [
        {
          label: "End goal / Task to Complete",
          key: "end",
          ph: "e.g., Draft a 5-step onboarding plan",
          type: "text"
        },
        {
          label: "Persona (who the AI will be)",
          key: "persona_name",
          ph: "e.g., UX designer, Data scientist, PM",
          type: "typeahead"
        },
        {
          label: "Profession",
          key: "profession",
          ph: "e.g., Designer",
          type: "text"
        },
        {
          label: "Summary",
          key: "summary",
          ph: "1–2 lines that define this persona",
          type: "textarea"
        },
        {
          label: "Additional Description (optional)",
          key: "description",
          ph: "Longer narrative if available",
          type: "textarea"
        },
        {
          label: "Core tasks (one per line)",
          key: "core_tasks",
          ph: "Plan tests\nWireframe flows\nSynthesize insights",
          type: "textarea"
        },
        {
          label: "Skills (comma or one per line)",
          key: "skills",
          ph: "Wireframing, Prototyping, IA",
          type: "textarea"
        },
        {
          label: "Vocabulary (comma or one per line)",
          key: "vocabulary",
          ph: "affordance, heuristic, persona",
          type: "textarea"
        },
        {
          label: "Goals (one per line)",
          key: "goals",
          ph: "Improve task success\nReduce friction",
          type: "textarea"
        },
        {
          label: "Pain points (one per line)",
          key: "pain_points",
          ph: "Stakeholder misalignment\nLegacy systems",
          type: "textarea"
        },
        {
          label: "Tools (comma or one per line)",
          key: "tools",
          ph: "Figma, Lookback, Maze",
          type: "textarea"
        }
      ],
      template: ({ end, persona_name, profession, summary, description, core_tasks, skills, vocabulary, goals, pain_points, tools, ctx })=>{
    const asList = s => String(s||'').split(/[\n,]+/).map(v=>v.trim()).filter(Boolean);
    const asCSV  = s => asList(s).join(', ');
    const asBul  = s => asList(s).map(x=>'• ' + x).join('\n');

    return [
      ctx && `Context: ${ctx}`,
      (persona_name || profession) && `You are ${persona_name || 'the requested persona'}${profession ? `, a ${profession}` : ''}.`,
      summary && `Persona Summary: ${summary}`,
      description && `Persona Description: ${description}`,
      core_tasks && `You commonly do:\n${asBul(core_tasks)}`,
      skills && `Core skills: ${asCSV(skills)}`,
      vocabulary && `Vocabulary keywords: ${asCSV(vocabulary)}`,
      goals && `Common goals:\n${asBul(goals)}`,
      pain_points && `Common pain points:\n${asBul(pain_points)}`,
      tools && `Tools: ${asCSV(tools)}`,
      end && `\nUnderstanding your persona, complete this end goal objective: ${end}`
    ].filter(Boolean).join('\n');
  },
      meta: {
        search_text: "persona — actas / simulate persona-actas simulate a specific persona (role) with domain skills, vocabulary, and constraints; then apply it to the user’s end goal. type to search a persona. picking one autofills the rest; or type your own persona free-form. use:pattern use:goals phase:apply level:beginner topic:clarification use:scope-management prompt-development-techniques reasoning stay in-character. prefer precise, domain-correct terminology. cite trade-offs briefly before final answer. end goal / task to complete persona (who the ai will be) profession summary additional description (optional) core tasks (one per line) skills (comma or one per line) vocabulary (comma or one per line) goals (one per line) pain points (one per line) tools (comma or one per line)"
      }
    },

    {
      id: "pestle",
      slug: "pestle-analysis",
      label: "PESTLE — Political · Economic · Social · Technological · Legal · Environmental",
      kind: "strategy",
      categories: [
        "analysis-frameworks",
        "strategy"
      ],
      tags: [
        "type:framework",
        "use:scope-management",
        "use:discover",
        "level:intermediate",
        "use:pattern"
      ],
      use_cases: [
        "analyze external factors affecting a business or project",
        "scan the macro-environment before launching an initiative",
        "identify opportunities and threats in the broader context"
      ],
      boosters: [
        "For each category, include at least one specific factor and its potential impact on the subject.",
        "Differentiate clearly between internal issues (not included here) and these external factors."
      ],
      definition: "A strategic analysis framework examining six external factors — Political, Economic, Social, Technological, Legal, and Environmental — that can impact an organization or initiative.",
      help: "Specify the subject (project, company, strategy, etc.) and, if desired, any known factors under each PESTLE category. The model will produce an analysis touching on each category.",
      fields: [
        {
          label: "Subject of analysis",
          desc: "The project, company, or scenario being analyzed.",
          key: "subject",
          ph: "e.g., Expansion of ACME Corp into Asian markets",
          type: "text"
        },
        {
          label: "Political factors (optional, one per line)",
          desc: "Government, policy, or regulatory factors to consider.",
          key: "political",
          ph: "Trade regulations...\nStability of local governments...",
          type: "textarea"
        },
        {
          label: "Economic factors (optional, one per line)",
          desc: "Market or financial conditions to consider.",
          key: "economic",
          ph: "Currency exchange rate volatility...\nLocal labor cost trends...",
          type: "textarea"
        },
        {
          label: "Social factors (optional, one per line)",
          desc: "Cultural, demographic, or consumer trends to consider.",
          key: "social",
          ph: "Population’s tech-savviness...\nShifts in consumer preferences...",
          type: "textarea"
        },
        {
          label: "Technological factors (optional, one per line)",
          desc: "Relevant technology trends or barriers.",
          key: "technological",
          ph: "Internet infrastructure quality...\nAdoption of smartphones...",
          type: "textarea"
        },
        {
          label: "Legal factors (optional, one per line)",
          desc: "Laws, regulations, or legal risks to consider.",
          key: "legal",
          ph: "Data protection laws...\nPatent or licensing issues...",
          type: "textarea"
        },
        {
          label: "Environmental factors (optional, one per line)",
          desc: "Ecological or environmental considerations.",
          key: "environmental",
          ph: "Climate-related risks...\nLocal environmental regulations...",
          type: "textarea"
        }
      ],
      template: ({ subject, political, economic, social, technological, legal, environmental, ctx }) => [
      `Conduct a PESTLE analysis${subject ? ` of ${subject}` : ''}.`,
      ctx && `Context: ${ctx}`,
      political && (
        'Political:\n' + String(political).split(/\n+/).map(s => s.trim()).filter(Boolean).map((x,i) => `${i+1}. ${x}`).join('\n')
      ),
      economic && (
        'Economic:\n' + String(economic).split(/\n+/).map(s => s.trim()).filter(Boolean).map((x,i) => `${i+1}. ${x}`).join('\n')
      ),
      social && (
        'Social:\n' + String(social).split(/\n+/).map(s => s.trim()).filter(Boolean).map((x,i) => `${i+1}. ${x}`).join('\n')
      ),
      technological && (
        'Technological:\n' + String(technological).split(/\n+/).map(s => s.trim()).filter(Boolean).map((x,i) => `${i+1}. ${x}`).join('\n')
      ),
      legal && (
        'Legal:\n' + String(legal).split(/\n+/).map(s => s.trim()).filter(Boolean).map((x,i) => `${i+1}. ${x}`).join('\n')
      ),
      environmental && (
        'Environmental:\n' + String(environmental).split(/\n+/).map(s => s.trim()).filter(Boolean).map((x,i) => `${i+1}. ${x}`).join('\n')
      ),
      'Output:\nProvide insights under each PESTLE category, noting key opportunities or threats in each.'
    ].filter(Boolean).join('\n'),
      meta: {
        search_text: "pestle — political · economic · social · technological · legal · environmental pestle-analysis a strategic analysis framework examining six external factors — political, economic, social, technological, legal, and environmental — that can impact an organization or initiative. specify the subject (project, company, strategy, etc.) and, if desired, any known factors under each pestle category. the model will produce an analysis touching on each category. type:framework use:scope-management use:discover level:intermediate use:pattern analysis-frameworks strategy analyze external factors affecting a business or project scan the macro-environment before launching an initiative identify opportunities and threats in the broader context for each category, include at least one specific factor and its potential impact on the subject. differentiate clearly between internal issues (not included here) and these external factors. subject of analysis political factors (optional, one per line) economic factors (optional, one per line) social factors (optional, one per line) technological factors (optional, one per line) legal factors (optional, one per line) environmental factors (optional, one per line)"
      }
    },

    {
      id: "plan_solve",
      slug: "plan-and-solve-ps",
      label: "Plan and Solve (P&S)",
      kind: "strategy",
      categories: [
        "reasoning",
        "planning"
      ],
      tags: [
        "use:pattern",
        "topic:clarification",
        "use:problem-framing",
        "level:intermediate",
        "topic:matrix",
        "use:coding",
        "use:process-improvement"
      ],
      use_cases: [
        "create a short plan before executing a solution",
        "separate planning from working to reduce errors",
        "verify results against explicit checks"
      ],
      boosters: [
        "Keep the plan to 2–5 concise steps.",
        "Separate planning text from solution text.",
        "Verify against explicit checks; note any discrepancies."
      ],
      definition: "Draft a minimal plan, execute it, and verify the result against stated checks.",
      help: "Enter the problem. Optionally provide a plan (one per line) and verification checks (one per line). The model will plan → solve → verify.",
      fields: [
        {
          label: "Problem / question",
          desc: "What needs to be solved?",
          key: "problem",
          ph: "e.g., Given an array, return indices of two numbers that add up to target.",
          type: "textarea"
        },
        {
          label: "Plan (one per line, optional)",
          desc: "High-level steps before solving.",
          key: "plan",
          ph: "Understand inputs…\nOutline approach…\nExecute steps…\nValidate…",
          type: "textarea"
        },
        {
          label: "Verification checks (one per line, optional)",
          desc: "Tests or criteria to validate the result.",
          key: "checks",
          ph: "Test with empty input…\nCheck off-by-one…\nTime complexity ≤ O(n log n)…",
          type: "textarea"
        },
        {
          label: "Do's (must do)",
          desc: "Positive guardrails.",
          key: "dos",
          ph: "State assumptions; keep total under 300 words.",
          type: "textarea"
        },
        {
          label: "Don'ts / constraints",
          desc: "Limits to respect.",
          key: "donts",
          ph: "No hidden reasoning; avoid unnecessary jargon.",
          type: "textarea"
        }
      ],
      template: ({ problem, plan, checks, dos, donts, ctx, audience, style, tone }) => [
    'Use Plan-and-Solve: draft a minimal plan, execute it, then verify the result.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    problem && `Problem: ${problem}`,
    plan && (
      'Plan:\n' + String(plan)
        .split(/\n+/).map(s=>s.trim()).filter(Boolean)
        .map((p,i)=> `${i+1}. ${p}`).join('\n')
    ),
    checks && (
      'Verification checks:\n' + String(checks)
        .split(/\n+/).map(s=>s.trim()).filter(Boolean)
        .map((c,i)=> `${i+1}. ${c}`).join('\n')
    ),
    dos && `Do:\n${dos}`,
    donts && `Don\'t:\n${donts}`,
    'Output format:\n1) Plan\n2) Solution/working\n3) Verification (reference the checks)'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "plan and solve (p&s) plan-and-solve-ps draft a minimal plan, execute it, and verify the result against stated checks. enter the problem. optionally provide a plan (one per line) and verification checks (one per line). the model will plan → solve → verify. use:pattern topic:clarification use:problem-framing level:intermediate topic:matrix use:coding use:process-improvement reasoning planning create a short plan before executing a solution separate planning from working to reduce errors verify results against explicit checks keep the plan to 2–5 concise steps. separate planning text from solution text. verify against explicit checks; note any discrepancies. problem / question plan (one per line, optional) verification checks (one per line, optional) do's (must do) don'ts / constraints"
      }
    },

    {
      id: "pomodoro",
      slug: "pomodoro-scaffold",
      label: "Pomodoro Scaffold",
      kind: "framework",
      categories: [
        "creativity",
        "operations"
      ],
      tags: [
        "use:pattern",
        "phase:premortem",
        "use:presentations",
        "level:beginner"
      ],
      use_cases: [
        "frame a single 25-minute focus sprint",
        "pair a micro-goal with a reward and next step"
      ],
      boosters: [
        "Hide distractions: list top 3 and how you’ll block them.",
        "Write an “opening move” you’ll do in the first 60 seconds."
      ],
      definition: "25-minute focused work block with short breaks.",
      help: "Pick one task and a tiny goal for this block; name your break reward; plan the next block.",
      fields: [
        {
          label: "Task to tackle",
          key: "task",
          type: "textarea"
        },
        {
          label: "One 25-min micro-goal",
          key: "micro",
          type: "textarea"
        },
        {
          label: "Break reward",
          key: "reward",
          type: "textarea"
        },
        {
          label: "Next Pomodoro step",
          key: "next_step",
          type: "textarea"
        }
      ],
      template: ({ task, micro, reward, next_step, ctx, audience, style, tone }) => [
    'Plan a Pomodoro to get moving.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    task && ('Task:\n' + task),
    micro && ('Micro-goal (25 min):\n' + micro),
    reward && ('Break reward:\n' + reward),
    next_step && ('Next Pomodoro step:\n' + next_step),
    'Output:\n1) Task + micro-goal\n2) First 60-sec move\n3) Reward\n4) Next block'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "pomodoro scaffold pomodoro-scaffold 25-minute focused work block with short breaks. pick one task and a tiny goal for this block; name your break reward; plan the next block. use:pattern phase:premortem use:presentations level:beginner creativity operations frame a single 25-minute focus sprint pair a micro-goal with a reward and next step hide distractions: list top 3 and how you’ll block them. write an “opening move” you’ll do in the first 60 seconds. task to tackle one 25-min micro-goal break reward next pomodoro step"
      }
    },

    {
      id: "pramana",
      slug: "pramana-means-of-knowledge",
      label: "Pramāṇa — Means of Knowledge",
      kind: "framework",
      categories: [
        "reasoning",
        "psychology"
      ],
      tags: [
        "type:framework",
        "use:healing",
        "topic:values",
        "level:advanced",
        "use:presentations"
      ],
      use_cases: [
        "audit evidence types supporting a claim",
        "decide what new evidence would change the answer"
      ],
      boosters: [
        "Name the weakest link and how to strengthen it.",
        "Add a “what would falsify this?” line."
      ],
      definition: "Classical Indian epistemology enumerating means of knowledge (e.g., perception, inference, analogy, testimony, postulation, non-apprehension).",
      help: "Select applicable pramāṇas for the claim; summarize their strength.",
      fields: [
        {
          label: "Claim under review",
          key: "claim",
          type: "textarea"
        },
        {
          label: "Applicable pramāṇas (one per line)",
          key: "pramanas",
          ph: "Perception…\nInference…\nAnalogy…\nTestimony…\nPostulation…\nNon-apprehension…",
          type: "textarea"
        },
        {
          label: "Evidence summary",
          key: "evidence",
          type: "textarea"
        },
        {
          label: "Gaps/uncertainties",
          key: "gaps",
          type: "textarea"
        }
      ],
      template: ({claim,pramanas,evidence,gaps,ctx})=>[
      'Run a Pramāṇa evidence audit.',
      ctx && `Context: ${ctx}`,
      claim && `Claim:\n${claim}`,
      pramanas && ('Means of knowledge:\n' + String(pramanas).split(/\n+/).map(s=>s.trim()).filter(Boolean).map((x,i)=>`${i+1}. ${x}`).join('\n')),
      evidence && `Evidence summary:\n${evidence}`,
      gaps && `Gaps/uncertainties:\n${gaps}`,
      'Close with: additional evidence that would most change the conclusion.'
    ].filter(Boolean).join('\n'),
      meta: {
        search_text: "pramāṇa — means of knowledge pramana-means-of-knowledge classical indian epistemology enumerating means of knowledge (e.g., perception, inference, analogy, testimony, postulation, non-apprehension). select applicable pramāṇas for the claim; summarize their strength. type:framework use:healing topic:values level:advanced use:presentations reasoning psychology audit evidence types supporting a claim decide what new evidence would change the answer name the weakest link and how to strengthen it. add a “what would falsify this?” line. claim under review applicable pramāṇas (one per line) evidence summary gaps/uncertainties"
      }
    },

    {
      id: "premortem",
      slug: "pre-mortem-scaffold",
      label: "Pre-Mortem Scaffold",
      kind: "strategy",
      categories: [
        "writing",
        "planning",
        "decision"
      ],
      tags: [
        "use:pattern",
        "phase:premortem",
        "level:beginner"
      ],
      use_cases: [
        "surface failure modes before committing",
        "turn risks into preventive steps and immediate actions"
      ],
      boosters: [
        "Force at least 3 realistic failure causes.",
        "Assign owners and a check date for each preventive step."
      ],
      definition: "Imagine the project failed and ask why, so you can prevent it.",
      help: "Name the decision/project, list plausible failure causes, define prevention, then pick one immediate move.",
      fields: [
        {
          label: "Decision / project at hand",
          key: "decision",
          ph: "Name + scope.",
          type: "textarea"
        },
        {
          label: "Imagine it failed — what went wrong? (one per line)",
          key: "failed",
          ph: "3–5 failure causes.",
          type: "textarea"
        },
        {
          label: "Preventive step(s)",
          key: "prevent",
          ph: "Countermeasures mapped to causes.",
          type: "textarea"
        },
        {
          label: "Immediate action",
          key: "immediate",
          ph: "What starts today.",
          type: "textarea"
        }
      ],
      template: ({ decision, failed, prevent, immediate, ctx, audience, style, tone }) => [
    'Run a pre-mortem to convert risks into action.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    decision && ('Decision / project:\n' + decision),
    failed && (
      'Failure causes (envisioned):\n' + String(failed).split(/\n+/).map(s=>s.trim()).filter(Boolean).map((x,i)=>`${i+1}. ${x}`).join('\n')
    ),
    prevent && ('Preventive steps:\n' + prevent),
    immediate && ('Immediate action:\n' + immediate),
    'Output:\n1) Top risks\n2) Mapped preventions\n3) Today’s move\n4) Owners + dates'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "pre-mortem scaffold pre-mortem-scaffold imagine the project failed and ask why, so you can prevent it. name the decision/project, list plausible failure causes, define prevention, then pick one immediate move. use:pattern phase:premortem level:beginner writing planning decision surface failure modes before committing turn risks into preventive steps and immediate actions force at least 3 realistic failure causes. assign owners and a check date for each preventive step. decision / project at hand imagine it failed — what went wrong? (one per line) preventive step(s) immediate action"
      }
    },

    {
      id: "prompt_augmentation",
      slug: "prompt-augmentation-demonstration-learning",
      label: "Prompt Augmentation (Demonstration Learning)",
      kind: "framework",
      categories: [
        "prompt-development-techniques"
      ],
      tags: [
        "use:pattern",
        "phase:explore",
        "use:presentations",
        "phase:apply",
        "level:intermediate",
        "use:format-guidance",
        "use:storytelling"
      ],
      use_cases: [
        "teach the model a Q→A pattern by example",
        "lock in output format and tone via paired demonstrations",
        "evaluate consistency against provided answers"
      ],
      boosters: [
        "Keep pairs short and high-signal; avoid ambiguity.",
        "Use consistent structure across all answers.",
        "If counts mismatch, ignore extra lines."
      ],
      definition: "Provide multiple prompt→answer pairs so the model infers and follows the desired pattern.",
      help: "Enter your current brief (optional), then list prompts and answers line-by-line in parallel.",
      fields: [
        {
          label: "Brief / request (optional)",
          desc: "What you want now, guided by the examples.",
          key: "main",
          ph: "e.g., Classify the following support ticket.",
          type: "textarea"
        },
        {
          label: "Example prompts (one per line)",
          desc: "Each line is a prompt/question.",
          key: "prompts",
          ph: "Prompt A…\nPrompt B…\nPrompt C…",
          type: "textarea"
        },
        {
          label: "Example answers (one per line)",
          desc: "Each line is the corresponding answer. Keep counts aligned with prompts.",
          key: "answers",
          ph: "Answer A…\nAnswer B…\nAnswer C…",
          type: "textarea"
        },
        {
          label: "Do's (must do)",
          desc: "Positive guardrails.",
          key: "dos",
          ph: "Follow the demonstrated headings exactly.",
          type: "textarea"
        },
        {
          label: "Don'ts / constraints",
          desc: "Limits to respect.",
          key: "donts",
          ph: "No extra commentary; ≤150 words per answer.",
          type: "textarea"
        }
      ],
      template: ({ main, prompts, answers, dos, donts, ctx, audience, style, tone }) => [
    'Use demonstration learning: infer the desired format and tone from the prompt→answer pairs, then apply consistently.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    main && `Brief: ${main}`,
    (prompts || answers) && (function(){
      const ps = String(prompts||'').split(/\n+/).map(s=>s.trim()).filter(Boolean);
      const as = String(answers||'').split(/\n+/).map(s=>s.trim()).filter(Boolean);
      const n = Math.min(ps.length, as.length);
      if (!n) return null;
      return 'Demonstrations:\n' + ps.slice(0,n).map((p,i)=>`${i+1}. Prompt: ${p}\n   Answer: ${as[i]}`).join('\n');
    })(),
    dos && `Do:\n${dos}`,
    donts && `Don\'t:\n${donts}`,
    'After the demonstrations, respond in the same pattern.'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "prompt augmentation (demonstration learning) prompt-augmentation-demonstration-learning provide multiple prompt→answer pairs so the model infers and follows the desired pattern. enter your current brief (optional), then list prompts and answers line-by-line in parallel. use:pattern phase:explore use:presentations phase:apply level:intermediate use:format-guidance use:storytelling prompt-development-techniques teach the model a q→a pattern by example lock in output format and tone via paired demonstrations evaluate consistency against provided answers keep pairs short and high-signal; avoid ambiguity. use consistent structure across all answers. if counts mismatch, ignore extra lines. brief / request (optional) example prompts (one per line) example answers (one per line) do's (must do) don'ts / constraints"
      }
    },

    {
      id: "qiyas_analogy",
      slug: "qiyas-analogical-reasoning",
      label: "Qiyās — Analogical Reasoning (Islamic Jurisprudence)",
      kind: "strategy",
      categories: [
        "reasoning",
        "psychology",
        "cultural-frameworks"
      ],
      tags: [
        "type:framework",
        "use:pattern",
        "phase:apply",
        "level:advanced",
        "use:healing"
      ],
      use_cases: [
        "extend rulings by identifying effective cause",
        "structure analogies between known and novel cases"
      ],
      boosters: [
        "Make the effective cause explicit and test for relevant differences.",
        "State conditions that would break the analogy."
      ],
      definition: "Infer a ruling for a new case by analogy to a known case that shares the effective cause.",
      help: "Fill original case, new case, effective cause, ruling, and differences.",
      fields: [
        {
          label: "Original case (aṣl)",
          key: "original",
          type: "textarea"
        },
        {
          label: "New case (far‘)",
          key: "newcase",
          type: "textarea"
        },
        {
          label: "Effective cause (ʿillah)",
          key: "cause",
          type: "textarea"
        },
        {
          label: "Ruling to extend (ḥukm)",
          key: "ruling",
          type: "textarea"
        },
        {
          label: "Relevant differences/limits",
          key: "differences",
          type: "textarea"
        }
      ],
      template: ({original,newcase,cause,ruling,differences,ctx})=>[
      'Apply Qiyās (analogical reasoning).',
      ctx && `Context: ${ctx}`,
      original && `Original case:\n${original}`,
      newcase && `New case:\n${newcase}`,
      cause && `Effective cause:\n${cause}`,
      ruling && `Proposed ruling:\n${ruling}`,
      differences && `Relevant differences:\n${differences}`,
      'Add a test or precedent that could invalidate the analogy.'
    ].filter(Boolean).join('\n'),
      meta: {
        search_text: "qiyās — analogical reasoning (islamic jurisprudence) qiyas-analogical-reasoning infer a ruling for a new case by analogy to a known case that shares the effective cause. fill original case, new case, effective cause, ruling, and differences. type:framework use:pattern phase:apply level:advanced use:healing reasoning psychology cultural-frameworks extend rulings by identifying effective cause structure analogies between known and novel cases make the effective cause explicit and test for relevant differences. state conditions that would break the analogy. original case (aṣl) new case (far‘) effective cause (ʿillah) ruling to extend (ḥukm) relevant differences/limits"
      }
    },

    {
      id: "raccca",
      slug: "raccca-framework",
      label: "RACCCA — Relevance · Accuracy · Completeness · Clarity · Coherence · Appropriateness",
      kind: "heuristic",
      categories: [
        "teaching",
        "prompt-development-techniques"
      ],
      tags: [
        "type:framework",
        "use:evaluation",
        "level:beginner",
        "use:coding",
        "use:pattern",
        "phase:compose"
      ],
      use_cases: [
        "quality review",
        "rubric evaluation",
        "model comparison",
        "content audit",
        "risk screening"
      ],
      boosters: [
        "Return a table with RACCCA scores (on your scale) + 1-line justifications, a weighted overall score, and top-3 fixes. If suitable, include a revised draft."
      ],
      definition: "A rubric to evaluate generative outputs across six dimensions: relevance, accuracy, completeness, clarity, coherence, and appropriateness.",
      help: "Use to score or compare outputs and identify concrete fixes.",
      fields: [
        {
          label: "Artifact to evaluate",
          desc: "Paste or describe the output.",
          key: "artifact",
          ph: "e.g., The draft blog intro…",
          type: "textarea"
        },
        {
          label: "Scale",
          desc: "Scoring scale.",
          key: "scale",
          ph: "e.g., 1–5",
          type: "text"
        },
        {
          label: "Weights (opt.)",
          desc: "Criterion weights.",
          key: "weights",
          ph: "e.g., R:1,A:2,C:2,Cl:1,Co:1,Ap:1",
          type: "text"
        },
        {
          label: "Context/requirements",
          desc: "Intended use and constraints.",
          key: "context",
          ph: "e.g., Audience: Dev managers; tone: practical",
          type: "textarea"
        },
        {
          label: "Improvement goal",
          desc: "Desired fix or target quality.",
          key: "improvement_goal",
          ph: "e.g., Make it accurate and concise",
          type: "textarea"
        }
      ],
      template: ({artifact,scale,weights,context,improvement_goal,ctx})=>[
    `Evaluate using the RACCCA framework.`,
    ctx&&`Context: ${ctx}`,
    artifact&&`Artifact: ${artifact}`,
    scale&&`Scale: ${scale}`,
    weights&&`Weights: ${weights}`,
    context&&`Requirements: ${context}`,
    improvement_goal&&`Improvement goal: ${improvement_goal}`
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "raccca — relevance · accuracy · completeness · clarity · coherence · appropriateness raccca-framework a rubric to evaluate generative outputs across six dimensions: relevance, accuracy, completeness, clarity, coherence, and appropriateness. use to score or compare outputs and identify concrete fixes. type:framework use:evaluation level:beginner use:coding use:pattern phase:compose teaching prompt-development-techniques quality review rubric evaluation model comparison content audit risk screening return a table with raccca scores (on your scale) + 1-line justifications, a weighted overall score, and top-3 fixes. if suitable, include a revised draft. artifact to evaluate scale weights (opt.) context/requirements improvement goal"
      }
    },

    {
      id: "random_assoc",
      slug: "random-association",
      label: "Random Association — Combine unrelated ideas",
      kind: "framework",
      categories: [
        "creativity",
        "brainstorming"
      ],
      tags: [
        "type:technique",
        "use:brainstorming",
        "level:beginner"
      ],
      use_cases: [
        "break creative block with random prompts",
        "discover unconventional ideas by forced connections"
      ],
      boosters: [
        "Pick truly unrelated elements for bigger creativity leaps.",
        "Encourage humorous or absurd connections; even silly ideas can contain a seed of insight."
      ],
      definition: "A method to introduce two random, unrelated items or concepts and force a connection between them, spurring innovative thinking by linking disparate ideas.",
      help: "Provide a short description of your problem or topic. Optionally, suggest two random elements (objects, concepts) to connect. The model will find creative ways to link these with your problem, generating novel ideas.",
      fields: [
        {
          label: "Problem or topic",
          key: "problem",
          ph: "e.g., Improving public transportation",
          type: "textarea"
        },
        {
          label: "Random element 1 (optional)",
          key: "random1",
          ph: "e.g., Coffee mug",
          type: "text"
        },
        {
          label: "Random element 2 (optional)",
          key: "random2",
          ph: "e.g., Jellyfish",
          type: "text"
        }
      ],
      template: ({ problem, random1, random2, ctx }) => [
    'Apply Random Association to spur new ideas.',
    ctx && `Context: ${ctx}`,
    problem && `Problem: ${problem}`,
    random1 && `Random element 1: ${random1}`,
    random2 && `Random element 2: ${random2}`,
    !random1 && !random2 && 'Pick two unrelated concepts and connect them to the problem.',
    'List creative ideas combining these elements with the problem context.'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "random association — combine unrelated ideas random-association a method to introduce two random, unrelated items or concepts and force a connection between them, spurring innovative thinking by linking disparate ideas. provide a short description of your problem or topic. optionally, suggest two random elements (objects, concepts) to connect. the model will find creative ways to link these with your problem, generating novel ideas. type:technique use:brainstorming level:beginner creativity brainstorming break creative block with random prompts discover unconventional ideas by forced connections pick truly unrelated elements for bigger creativity leaps. encourage humorous or absurd connections; even silly ideas can contain a seed of insight. problem or topic random element 1 (optional) random element 2 (optional)"
      }
    },

    {
      id: "rap",
      slug: "rap-result-action-problem",
      label: "RAP — Result · Action · Problem",
      kind: "framework",
      categories: [
        "storytelling-frameworks",
        "prompt-development-techniques"
      ],
      tags: [
        "type:framework",
        "use:storytelling",
        "phase:apply",
        "level:beginner",
        "use:recipe",
        "use:planning",
        "use:discover"
      ],
      use_cases: [
        "write resume bullets that hook with impact first",
        "open sales or investor pitches with outcomes before context",
        "frame cover letters with results up front",
        "craft concise, high-impact marketing copy"
      ],
      boosters: [
        "Lead with a strong, quantified Result as the hook.",
        "Keep Action phrasing tight and use power verbs.",
        "Frame the Problem/Backdrop in one crisp line for context, not complaint.",
        "Adapt tone for audience (resume = factual; pitch = persuasive)."
      ],
      definition: "An impact-first storytelling pattern. Start with the outcome, show the action taken, and close with the problem that made it necessary. Useful when attention is scarce.",
      help: "Use RAP when you need brevity and impact. Start with what was achieved, then show how you did it, then give the backdrop that made it matter.",
      fields: [
        {
          label: "Result (hook)",
          desc: "The measurable or impressive outcome (numbers if possible).",
          key: "result",
          ph: "e.g., Increased revenue by $1M (12% YoY)",
          type: "textarea"
        },
        {
          label: "Action (what you did)",
          desc: "Your role, decisions, or steps that produced the result.",
          key: "action",
          ph: "e.g., Led cross-functional mid-market campaign",
          type: "textarea"
        },
        {
          label: "Backdrop / Problem",
          desc: "The challenge, gap, or need that drove the action.",
          key: "problem",
          ph: "e.g., Pipeline relied only on enterprise; mid-market gap",
          type: "textarea"
        },
        {
          label: "Audience (optional)",
          desc: "Who the output is for (recruiter, investor, manager, customer).",
          key: "audience",
          ph: "e.g., Hiring manager reviewing resume",
          type: "text"
        },
        {
          label: "Output format (optional)",
          desc: "Preferred style: bullet point, short paragraph, or headline.",
          key: "format",
          ph: "e.g., Resume bullet",
          type: "text"
        }
      ],
      template: ({ result, action, problem, audience, format, ctx }) => [
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    result && `Result: ${result}`,
    action && `Action: ${action}`,
    problem && `Problem/Backdrop: ${problem}`,
    format && `Format: ${format}`,
    'Output: concise bullets or short statement starting with the Result.'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "rap — result · action · problem rap-result-action-problem an impact-first storytelling pattern. start with the outcome, show the action taken, and close with the problem that made it necessary. useful when attention is scarce. use rap when you need brevity and impact. start with what was achieved, then show how you did it, then give the backdrop that made it matter. type:framework use:storytelling phase:apply level:beginner use:recipe use:planning use:discover storytelling-frameworks prompt-development-techniques write resume bullets that hook with impact first open sales or investor pitches with outcomes before context frame cover letters with results up front craft concise, high-impact marketing copy lead with a strong, quantified result as the hook. keep action phrasing tight and use power verbs. frame the problem/backdrop in one crisp line for context, not complaint. adapt tone for audience (resume = factual; pitch = persuasive). result (hook) action (what you did) backdrop / problem audience (optional) output format (optional)"
      }
    },

    {
      id: "rapid_decision_rights",
      slug: "rapid-decision-rights",
      label: "RAPID — Recommend · Agree · Perform · Input · Decide",
      kind: "strategy",
      categories: [
        "decision",
        "operations",
        "product-management"
      ],
      tags: [
        "type:framework",
        "use:decision-making",
        "use:pattern",
        "level:beginner",
        "use:presentations"
      ],
      use_cases: [
        "clarify who does what in a decision",
        "speed up approvals by defining roles"
      ],
      boosters: [
        "Name individuals by role; include dates and escalation path.",
        "Add “disagree and commit” rule where needed."
      ],
      definition: "A roles framework that assigns decision rights and contributions to avoid bottlenecks.",
      help: "Fill each letter with names and responsibilities.",
      fields: [
        {
          label: "Recommend (R)",
          key: "recommend",
          ph: "Propose options with rationale.",
          type: "textarea"
        },
        {
          label: "Agree (A)",
          key: "agree",
          ph: "Those who must sign off.",
          type: "textarea"
        },
        {
          label: "Perform (P)",
          key: "perform",
          ph: "Owners who will execute.",
          type: "textarea"
        },
        {
          label: "Input (I)",
          key: "input",
          ph: "Who supplies facts/perspectives.",
          type: "textarea"
        },
        {
          label: "Decide (D)",
          key: "decide",
          ph: "Final decision authority.",
          type: "textarea"
        },
        {
          label: "Timeline & checkpoints",
          key: "timeline",
          type: "textarea"
        }
      ],
      template: ({recommend,agree,perform,input,decide,timeline,ctx})=>[
      'Set decision roles with RAPID.',
      ctx && `Context: ${ctx}`,
      recommend && `Recommend (R):\n${recommend}`,
      agree && `Agree (A):\n${agree}`,
      perform && `Perform (P):\n${perform}`,
      input && `Input (I):\n${input}`,
      decide && `Decide (D):\n${decide}`,
      timeline && `Timeline:\n${timeline}`,
      'Return a one-line decision statement and next steps.'
    ].filter(Boolean).join('\n'),
      meta: {
        search_text: "rapid — recommend · agree · perform · input · decide rapid-decision-rights a roles framework that assigns decision rights and contributions to avoid bottlenecks. fill each letter with names and responsibilities. type:framework use:decision-making use:pattern level:beginner use:presentations decision operations product-management clarify who does what in a decision speed up approvals by defining roles name individuals by role; include dates and escalation path. add “disagree and commit” rule where needed. recommend (r) agree (a) perform (p) input (i) decide (d) timeline & checkpoints"
      }
    },

    {
      id: "rapid_ideation",
      slug: "rapid-ideation",
      label: "Rapid Ideation — Timed idea sprint",
      kind: "framework",
      categories: [
        "creativity",
        "brainstorming"
      ],
      tags: [
        "type:technique",
        "use:brainstorming",
        "use:healing",
        "level:beginner"
      ],
      use_cases: [
        "generate lots of ideas under time pressure",
        "overcome creative block by not overthinking"
      ],
      boosters: [
        "Suspend judgment during the idea sprint – no idea is too silly initially.",
        "Set a clear timer or target idea count; the constraint can boost focus and output."
      ],
      definition: "A brainstorming approach focusing on quantity over quality: set a short time limit and produce as many ideas as possible without filtering. The goal is to bypass your inner critic and get a broad list of thoughts, which can later be reviewed for viable options or refined ideas.",
      help: "State the problem or question. Optionally specify a time limit or target number of ideas. The model will simulate a rapid ideation session, listing a high number of quick ideas, then help highlight the most promising ones for further exploration.",
      fields: [
        {
          label: "Problem or question",
          key: "problem",
          ph: "e.g., New app features to engage users",
          type: "textarea"
        },
        {
          label: "Time/quantity constraint (optional)",
          key: "time",
          ph: "e.g., 5 minutes or 20 ideas",
          type: "text"
        }
      ],
      template: ({ problem, time, ctx }) => [
    'Conduct Rapid Ideation to generate many ideas quickly.',
    ctx && `Context: ${ctx}`,
    problem && `Focus: ${problem}`,
    time && `Constraint: ${time}`,
    'Brainstorm as many ideas as possible without self-censorship or evaluation.',
    'Afterwards, review the list and highlight a few of the most promising or intriguing ideas for development.'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "rapid ideation — timed idea sprint rapid-ideation a brainstorming approach focusing on quantity over quality: set a short time limit and produce as many ideas as possible without filtering. the goal is to bypass your inner critic and get a broad list of thoughts, which can later be reviewed for viable options or refined ideas. state the problem or question. optionally specify a time limit or target number of ideas. the model will simulate a rapid ideation session, listing a high number of quick ideas, then help highlight the most promising ones for further exploration. type:technique use:brainstorming use:healing level:beginner creativity brainstorming generate lots of ideas under time pressure overcome creative block by not overthinking suspend judgment during the idea sprint – no idea is too silly initially. set a clear timer or target idea count; the constraint can boost focus and output. problem or question time/quantity constraint (optional)"
      }
    },

    {
      id: "ratio",
      slug: "ratio-framework",
      label: "RATIO — Role · Audience · Task · Instructions · Output",
      kind: "framework",
      categories: [
        "prompt-development-techniques"
      ],
      tags: [
        "use:pattern",
        "topic:prompting",
        "phase:apply",
        "level:beginner",
        "use:task-brief"
      ],
      use_cases: [
        "prompt specification",
        "instructional prompt",
        "task brief",
        "agent/system prompt",
        "handoff brief",
        "template for graded output"
      ],
      boosters: [
        "Validate format exactly (schema first, then fill); if schema can’t be met, output a minimal valid stub and list missing fields."
      ],
      definition: "An audience-centered prompt that captures role, target audience, the task, guiding instructions, and the required output shape.",
      help: "Audience-centered prompt with explicit output spec.",
      fields: [
        {
          label: "Role",
          desc: "Who the model should emulate.",
          key: "role",
          ph: "e.g., Product marketer",
          type: "text"
        },
        {
          label: "Audience",
          desc: "Who this is for.",
          key: "audience",
          ph: "e.g., New parents",
          type: "text"
        },
        {
          label: "Task",
          desc: "What should be produced.",
          key: "task",
          ph: "e.g., Write a landing-page headline and 3 benefit bullets.",
          type: "textarea"
        },
        {
          label: "Instructions",
          desc: "Constraints/steps to follow.",
          key: "instructions",
          ph: "e.g., Avoid jargon; use active voice; 120 words max.",
          type: "textarea"
        },
        {
          label: "Output",
          desc: "Exact deliverable shape.",
          key: "output",
          ph: "e.g., 1 headline + 3 bullets + CTA",
          type: "text"
        }
      ],
      template: ({role,audience,task,instructions,output,ctx})=>[
      role&&`You are ${role}.`,
      ctx&&`Context: ${ctx}`,
      audience&&`Target audience: ${audience}`,
      task&&`Task: ${task}`,
      instructions&&`Instructions: ${instructions}`,
      output&&`Output: ${output}`,
      `Use the RATIO pattern. Validate assumptions briefly before final output.`
    ].filter(Boolean).join('\n'),
      meta: {
        search_text: "ratio — role · audience · task · instructions · output ratio-framework an audience-centered prompt that captures role, target audience, the task, guiding instructions, and the required output shape. audience-centered prompt with explicit output spec. use:pattern topic:prompting phase:apply level:beginner use:task-brief prompt-development-techniques prompt specification instructional prompt task brief agent/system prompt handoff brief template for graded output validate format exactly (schema first, then fill); if schema can’t be met, output a minimal valid stub and list missing fields. role audience task instructions output"
      }
    },

    {
      id: "reflect_bias",
      slug: "reflect-bias-scaffold",
      label: "REFLECT (bias reflection)",
      kind: "framework",
      categories: [
        "ethics",
        "operations",
        "critical-thinking"
      ],
      tags: [
        "use:pattern",
        "topic:bias",
        "use:brainstorming",
        "level:beginner",
        "use:discover"
      ],
      use_cases: [
        "spot potential bias during interviews, analysis, or synthesis",
        "reframe a problem from multiple perspectives",
        "turn reflection into concrete next steps"
      ],
      boosters: [
        "Keep tone neutral and specific; avoid moralizing.",
        "Return a bulleted summary + 3 concrete changes and 1 monitoring check."
      ],
      definition: "A structured reflection scaffold to identify, check, and transform bias in your approach.",
      help: "Move through Recognize → Evaluate → Frame → Listen → Empathize → Check → Transform.",
      fields: [
        {
          label: "Recognize — What bias might be at play?",
          key: "recognize",
          ph: "e.g., Confirmation bias; availability bias…",
          type: "textarea"
        },
        {
          label: "Evaluate — How does it influence my thinking?",
          key: "evaluate",
          ph: "e.g., Overweighting a single user quote…",
          type: "textarea"
        },
        {
          label: "Frame — Restate the problem from a different perspective",
          key: "frame",
          ph: "e.g., From a low-vision user; from operations…",
          type: "textarea"
        },
        {
          label: "Listen — Whose voices are missing?",
          key: "listen",
          ph: "e.g., Non-English speakers; caregivers…",
          type: "textarea"
        },
        {
          label: "Empathize — How would it feel in that missing perspective?",
          key: "empathize",
          ph: "Short, concrete description.",
          type: "textarea"
        },
        {
          label: "Check — What assumption should I test?",
          key: "check",
          ph: "List 1–3 assumptions with test ideas.",
          type: "textarea"
        },
        {
          label: "Transform — How will I change my approach?",
          key: "transform",
          ph: "e.g., Add recruitment quotas; change success metric…",
          type: "textarea"
        }
      ],
      template: ({ recognize, evaluate, frame, listen, empathize, check, transform, ctx, audience, style, tone }) => [
    'Use the REFLECT scaffold to surface and mitigate bias.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    recognize && ('Recognize:\n' + recognize),
    evaluate && ('Evaluate:\n' + evaluate),
    frame && ('Frame (alt perspective):\n' + frame),
    listen && (
      'Listen (missing voices):\n' + String(listen).split(/\n+/).map(s=>s.trim()).filter(Boolean).map((x,i)=>`${i+1}. ${x}`).join('\n')
    ),
    empathize && ('Empathize (experience sketch):\n' + empathize),
    check && (
      'Check (assumptions + tests):\n' + String(check).split(/\n+/).map(s=>s.trim()).filter(Boolean).map((x,i)=>`${i+1}. ${x}`).join('\n')
    ),
    transform && ('Transform (changes to approach):\n' + transform),
    'Output:\n1) Key bias risks\n2) Reframed problem\n3) Missing voices to include\n4) 3 action changes + 1 monitoring check'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "reflect (bias reflection) reflect-bias-scaffold a structured reflection scaffold to identify, check, and transform bias in your approach. move through recognize → evaluate → frame → listen → empathize → check → transform. use:pattern topic:bias use:brainstorming level:beginner use:discover ethics operations critical-thinking spot potential bias during interviews, analysis, or synthesis reframe a problem from multiple perspectives turn reflection into concrete next steps keep tone neutral and specific; avoid moralizing. return a bulleted summary + 3 concrete changes and 1 monitoring check. recognize — what bias might be at play? evaluate — how does it influence my thinking? frame — restate the problem from a different perspective listen — whose voices are missing? empathize — how would it feel in that missing perspective? check — what assumption should i test? transform — how will i change my approach?"
      }
    },

    {
      id: "rice_scoring",
      slug: "rice-scoring",
      label: "RICE — Reach × Impact × Confidence ÷ Effort",
      kind: "strategy",
      categories: [
        "planning",
        "product-management"
      ],
      tags: [
        "type:framework",
        "use:coding",
        "use:planning",
        "use:pattern"
      ],
      use_cases: [
        "rank features quantitatively",
        "allocate scarce resources"
      ],
      boosters: [
        "Show the formula and numbers; round to 2 decimals."
      ],
      definition: "RICE prioritizes by Reach, Impact, Confidence, and Effort. Score = (R × I × C) / E.",
      help: "Enter the estimates. The prompt will compute and explain the score.",
      fields: [
        {
          label: "Feature / item name",
          key: "item",
          ph: "e.g., In-app onboarding checklist",
          type: "text"
        },
        {
          label: "Reach (users / period)",
          key: "reach",
          ph: "e.g., 1200 / month",
          type: "text"
        },
        {
          label: "Impact (e.g., 0.25/0.5/1/2/3)",
          key: "impact",
          ph: "e.g., 1.5",
          type: "text"
        },
        {
          label: "Confidence (0–1)",
          key: "confidence",
          ph: "e.g., 0.7",
          type: "text"
        },
        {
          label: "Effort (person-months)",
          key: "effort",
          ph: "e.g., 2.5",
          type: "text"
        },
        {
          label: "Notes (assumptions, caveats)",
          key: "notes",
          ph: "Surveys n=312; data last quarter",
          type: "textarea"
        }
      ],
      template: (f) => {
    const toN = x => {
      const n = Number(String(x||'').replace(/[^0-9.\-]/g,''));
      return Number.isFinite(n) ? n : NaN;
    };
    const R = toN(f.reach), I = toN(f.impact), C = toN(f.confidence), E = toN(f.effort);
    const score = (Number.isFinite(R) && Number.isFinite(I) && Number.isFinite(C) && Number.isFinite(E) && E>0)
      ? ((R*I*C)/E) : null;
    const fmt = n => (n==null ? '' : n.toFixed(2));
    return [
      'Prioritize using RICE (Reach × Impact × Confidence ÷ Effort).',
      f.usecase && `Context: ${f.usecase}`,
      f.audience && `Audience: ${f.audience}`,
      f.style && `Style: ${f.style}`,
      f.tone && `Tone: ${f.tone}`,
      f.item && `Item: ${f.item}`,
      (f.reach||f.impact||f.confidence||f.effort) && `Estimates:\nReach: ${f.reach}\nImpact: ${f.impact}\nConfidence: ${f.confidence}\nEffort: ${f.effort}`,
      (score!=null) && `RICE Score: ${fmt(score)}`,
      f.notes && ('Notes:\n' + f.notes),
      'Output:\n1) RICE breakdown + computed score\n2) Rationale for each estimate\n3) Sensitivity: how score changes if E↑ or C↓\n4) Recommendation: ship/next/park'
    ].filter(Boolean).join('\n');
  },
      meta: {
        search_text: "rice — reach × impact × confidence ÷ effort rice-scoring rice prioritizes by reach, impact, confidence, and effort. score = (r × i × c) / e. enter the estimates. the prompt will compute and explain the score. type:framework use:coding use:planning use:pattern planning product-management rank features quantitatively allocate scarce resources show the formula and numbers; round to 2 decimals. feature / item name reach (users / period) impact (e.g., 0.25/0.5/1/2/3) confidence (0–1) effort (person-months) notes (assumptions, caveats)"
      }
    },

    {
      id: "risen",
      slug: "risen-framework",
      label: "RISEN — Role · Instructions · Steps · End goal · Narrowing",
      kind: "strategy",
      categories: [
        "prompt-development-techniques"
      ],
      tags: [
        "use:pattern",
        "topic:prompting",
        "level:intermediate"
      ],
      use_cases: [
        "project plan",
        "research plan",
        "workflow design",
        "content production plan",
        "experiment plan",
        "learning plan"
      ],
      boosters: [
        "State the 1–2 biggest tradeoffs; confirm the narrowed scope."
      ],
      definition: "A plan-then-focus scaffold: set role and instructions, outline steps, state the end goal, then narrow scope and priorities.",
      help: "Good for complex tasks with stepwise planning then focus.",
      fields: [
        {
          label: "Role",
          desc: "Who the model should be.",
          key: "role",
          ph: "e.g., Program manager",
          type: "text"
        },
        {
          label: "Instructions",
          desc: "Rules/constraints to honor.",
          key: "instructions",
          ph: "e.g., Prioritize clarity; reference internal style guide.",
          type: "textarea"
        },
        {
          label: "Steps",
          desc: "High-level plan or checklist.",
          key: "steps",
          ph: "e.g., Research → Outline → Draft → Review → Finalize",
          type: "textarea"
        },
        {
          label: "End goal",
          desc: "Definition of success.",
          key: "end_goal",
          ph: "e.g., Publishable first draft by Friday EOD",
          type: "text"
        },
        {
          label: "Narrowing",
          desc: "Prioritization/scope cuts.",
          key: "narrowing",
          ph: "e.g., Focus on onboarding, skip billing edge cases",
          type: "textarea"
        }
      ],
      template: ({role,instructions,steps,end_goal,narrowing,ctx})=>[
      role&&`You are ${role}.`,
      ctx&&`Context: ${ctx}`,
      instructions&&`Instructions: ${instructions}`,
      steps&&`Proposed steps: ${steps}`,
      end_goal&&`End goal: ${end_goal}`,
      narrowing&&`Focus/narrowing: ${narrowing}`,
      `Follow RISEN. Reflect on tradeoffs before final.`
    ].filter(Boolean).join('\n'),
      meta: {
        search_text: "risen — role · instructions · steps · end goal · narrowing risen-framework a plan-then-focus scaffold: set role and instructions, outline steps, state the end goal, then narrow scope and priorities. good for complex tasks with stepwise planning then focus. use:pattern topic:prompting level:intermediate prompt-development-techniques project plan research plan workflow design content production plan experiment plan learning plan state the 1–2 biggest tradeoffs; confirm the narrowed scope. role instructions steps end goal narrowing"
      }
    },

    {
      id: "rodes",
      slug: "rodes-framework",
      label: "RODES — Role · Objective · Details · Examples · Sense check",
      kind: "framework",
      categories: [
        "prompt-development-techniques"
      ],
      tags: [
        "use:pattern",
        "topic:prompting",
        "phase:apply",
        "level:intermediate",
        "use:copywriting",
        "use:healing"
      ],
      use_cases: [
        "example-guided rewriting",
        "UX microcopy",
        "tone/style adaptation",
        "product messaging variants",
        "quality check against criteria",
        "rubric-guided output"
      ],
      boosters: [
        "Run the sense-check as a bullet list tied to the acceptance criteria, then deliver Final."
      ],
      definition: "Evidence-guided production: set role and objective, supply details and examples, then perform a brief sense-check before delivery.",
      help: "When you have exemplars and want a final self-check.",
      fields: [
        {
          label: "Role",
          desc: "Who the model should be.",
          key: "role",
          ph: "e.g., UX writer",
          type: "text"
        },
        {
          label: "Objective",
          desc: "Primary goal of the output.",
          key: "objective",
          ph: "e.g., Improve sign-up microcopy",
          type: "text"
        },
        {
          label: "Details",
          desc: "Key facts, constraints, resources.",
          key: "details",
          ph: "e.g., Product is mobile-only; support link must appear once.",
          type: "textarea"
        },
        {
          label: "Examples",
          desc: "Short exemplars to imitate.",
          key: "examples",
          ph: "e.g., “Welcome aboard!” → concise, friendly tone",
          type: "textarea"
        },
        {
          label: "Sense check",
          desc: "Acceptance criteria/guardrails.",
          key: "sense_check",
          ph: "e.g., At most 25 words; no slang; include link text",
          type: "textarea"
        }
      ],
      template: ({role,objective,details,examples,sense_check,ctx})=>[
      role&&`You are ${role}.`,
      ctx&&`Context: ${ctx}`,
      objective&&`Objective: ${objective}`,
      details&&`Details: ${details}`,
      examples&&`Examples: ${examples}`,
      sense_check&&`Sense-check before final: ${sense_check}`,
      `Apply RODES. Show brief reasoning if uncertain.`
    ].filter(Boolean).join('\n'),
      meta: {
        search_text: "rodes — role · objective · details · examples · sense check rodes-framework evidence-guided production: set role and objective, supply details and examples, then perform a brief sense-check before delivery. when you have exemplars and want a final self-check. use:pattern topic:prompting phase:apply level:intermediate use:copywriting use:healing prompt-development-techniques example-guided rewriting ux microcopy tone/style adaptation product messaging variants quality check against criteria rubric-guided output run the sense-check as a bullet list tied to the acceptance criteria, then deliver final. role objective details examples sense check"
      }
    },

    {
      id: "role_storming",
      slug: "role-storming",
      label: "Role Storming — Ideation as different personas",
      kind: "framework",
      categories: [
        "creativity",
        "brainstorming"
      ],
      tags: [
        "type:technique",
        "phase:apply",
        "use:brainstorming",
        "level:beginner"
      ],
      use_cases: [
        "get fresh ideas by changing perspective",
        "uncover insights via imaginary roles"
      ],
      boosters: [
        "Adopt extreme or unusual personas to push boundaries of thinking.",
        "Stay in character for each role to fully explore its viewpoint before switching."
      ],
      definition: "A brainstorming variation where you imagine yourself (or your team) in a different role or persona and generate ideas from that perspective. By role-playing as someone else (e.g., a customer, a famous innovator), you can gain new insights and break habitual thinking.",
      help: "Describe your problem or goal. Optionally list specific roles to adopt (one per line). The model will generate ideas from the perspective of each role in turn.",
      fields: [
        {
          label: "Problem or goal",
          key: "problem",
          ph: "e.g., Increase recycling participation",
          type: "textarea"
        },
        {
          label: "Roles or personas (one per line)",
          key: "roles",
          ph: "e.g., Environmental activist\nCity mayor\nElementary school student",
          type: "textarea"
        }
      ],
      template: ({ problem, roles, ctx }) => [
    'Apply Role Storming to generate ideas from different perspectives.',
    ctx && `Context: ${ctx}`,
    problem && `Problem: ${problem}`,
    roles
      ? 'Roles:\n' + String(roles).split(/\n+/).map(r => `- ${r}`).join('\n')
      : 'Role: (the assistant will assume an imaginative persona if none provided)',
    'For each role, imagine how that persona would approach the problem and list their ideas or solutions.'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "role storming — ideation as different personas role-storming a brainstorming variation where you imagine yourself (or your team) in a different role or persona and generate ideas from that perspective. by role-playing as someone else (e.g., a customer, a famous innovator), you can gain new insights and break habitual thinking. describe your problem or goal. optionally list specific roles to adopt (one per line). the model will generate ideas from the perspective of each role in turn. type:technique phase:apply use:brainstorming level:beginner creativity brainstorming get fresh ideas by changing perspective uncover insights via imaginary roles adopt extreme or unusual personas to push boundaries of thinking. stay in character for each role to fully explore its viewpoint before switching. problem or goal roles or personas (one per line)"
      }
    },

    {
      id: "root_cause",
      slug: "root-cause-analysis",
      label: "Root Cause Analysis",
      kind: "framework",
      categories: [
        "quality",
        "operations",
        "reasoning"
      ],
      tags: [
        "use:pattern",
        "phase:apply",
        "use:brainstorming",
        "level:intermediate",
        "level:beginner",
        "use:process-improvement"
      ],
      use_cases: [
        "identify primary causes vs symptoms",
        "propose targeted countermeasures",
        "document verification steps"
      ],
      boosters: [
        "Run at least 3–5 “Why?” steps until causes stop being actionable.",
        "Tie each countermeasure to a specific cause.",
        "Include verification and owner for each action."
      ],
      definition: "Identify the underlying cause of a problem (e.g., via 5 Whys), then propose countermeasures and checks.",
      help: "State the problem, list observed symptoms/evidence, and any guardrails.",
      fields: [
        {
          label: "Problem statement",
          desc: "What went wrong or what is undesired?",
          key: "problem",
          ph: "App crash rate spiked after v1.2…",
          type: "textarea"
        },
        {
          label: "Symptoms / evidence (one per line)",
          desc: "Observed facts supporting the problem.",
          key: "symptoms",
          ph: "Crash logs show null ptr at …\nSpike at 10:42 UTC…",
          type: "textarea"
        },
        {
          label: "Do's (must do)",
          desc: "Positive guardrails.",
          key: "dos",
          ph: "Quantify impact; assign owners.",
          type: "textarea"
        },
        {
          label: "Don'ts / constraints",
          desc: "Limits to respect.",
          key: "donts",
          ph: "No blame; ≤400 words.",
          type: "textarea"
        }
      ],
      template: ({ problem, symptoms, dos, donts, ctx, audience, style, tone }) => [
    'Perform Root Cause Analysis using the 5 Whys and propose targeted countermeasures.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    problem && `Problem: ${problem}`,
    symptoms && (
      'Symptoms / evidence:\n' + String(symptoms)
        .split(/\n+/).map(s=>s.trim()).filter(Boolean)
        .map((s,i)=> `${i+1}. ${s}`).join('\n')
    ),
    dos && `Do:\n${dos}`,
    donts && `Don\'t:\n${donts}`,
    'Output:\n1) 5 Whys chain\n2) Root cause(s)\n3) Countermeasures (owner, due, verification)\n4) Residual risks'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "root cause analysis root-cause-analysis identify the underlying cause of a problem (e.g., via 5 whys), then propose countermeasures and checks. state the problem, list observed symptoms/evidence, and any guardrails. use:pattern phase:apply use:brainstorming level:intermediate level:beginner use:process-improvement quality operations reasoning identify primary causes vs symptoms propose targeted countermeasures document verification steps run at least 3–5 “why?” steps until causes stop being actionable. tie each countermeasure to a specific cause. include verification and owner for each action. problem statement symptoms / evidence (one per line) do's (must do) don'ts / constraints"
      }
    },

    {
      id: "rtf",
      slug: "rtf-framework",
      label: "RTF — Role · Task · Format",
      kind: "framework",
      categories: [
        "prompt-development-techniques"
      ],
      tags: [
        "use:pattern",
        "topic:prompting",
        "phase:apply",
        "level:beginner",
        "use:goals",
        "use:format-guidance",
        "use:storytelling"
      ],
      use_cases: [
        "general-purpose prompting",
        "format enforcement",
        "role simulation",
        "structured data output",
        "template scaffold",
        "API-doc-style response",
        "quickstarter prompt"
      ],
      boosters: [
        "Validate format exactly (schema first, then fill); if schema can’t be met, output a minimal valid stub and list missing fields."
      ],
      definition: "A general-purpose scaffold that specifies who the model is, what to do, and how to format the answer.",
      help: "General-purpose scaffold: define who the model is, what to do, and the response shape.",
      fields: [
        {
          label: "Role",
          desc: "Who the model should act as.",
          key: "role",
          ph: "e.g., Senior technical writer",
          type: "text"
        },
        {
          label: "Task",
          desc: "Describe the work to be done.",
          key: "task",
          ph: "e.g., Draft a user guide section explaining 2FA setup.",
          type: "textarea"
        },
        {
          label: "Format",
          desc: "The structure/shape of the output.",
          key: "format",
          ph: "e.g., Markdown with H2s and code blocks",
          type: "text"
        }
      ],
      template: ({role,task,format,ctx})=>[
      role&&`You are ${role}.`,
      ctx&&`Context: ${ctx}`,
      task&&`Task: ${task}`,
      format&&`Respond in this format: ${format}`,
      `Follow the RTF pattern. Ask concise clarifying questions if needed.`
    ].filter(Boolean).join('\n'),
      meta: {
        search_text: "rtf — role · task · format rtf-framework a general-purpose scaffold that specifies who the model is, what to do, and how to format the answer. general-purpose scaffold: define who the model is, what to do, and the response shape. use:pattern topic:prompting phase:apply level:beginner use:goals use:format-guidance use:storytelling prompt-development-techniques general-purpose prompting format enforcement role simulation structured data output template scaffold api-doc-style response quickstarter prompt validate format exactly (schema first, then fill); if schema can’t be met, output a minimal valid stub and list missing fields. role task format"
      }
    },

    {
      id: "rubber_duck",
      slug: "rubber-duck-debugging",
      label: "Rubber Duck Debugging — Explain to Understand",
      kind: "framework",
      categories: [
        "analysis-frameworks",
        "creativity"
      ],
      tags: [
        "use:pattern",
        "phase:explore",
        "topic:bias",
        "level:beginner",
        "use:problem-framing",
        "topic:clarification"
      ],
      use_cases: [
        "work through a tricky problem by explaining it step-by-step as if to a complete novice (or a rubber duck)",
        "clarify your understanding of a bug or question by articulating every detail and assumption",
        "discover gaps in logic or missing pieces by teaching the problem to an imaginary listener"
      ],
      boosters: [
        "Imagine the “duck” is totally new to the subject – define even basic terms as you explain.",
        "Have the duck ask simple clarification questions if something isn’t clear, and then answer them."
      ],
      definition: "A problem-solving technique where you explain your issue or question aloud in simple terms (often to an inanimate object or imaginary friend). The act of explaining reveals gaps in understanding and often leads to the solution.",
      help: "Describe the problem you’re trying to solve, including relevant details. The model will have you explain it clearly (as if to a rubber duck), possibly ask a couple of clarifying questions, and then guide you toward a solution or next step.",
      fields: [
        {
          label: "Problem or question to explain",
          key: "problem",
          ph: "Describe the issue in detail as if teaching someone with no background.",
          type: "textarea"
        }
      ],
      template: ({ problem, ctx, audience, style, tone }) => [
    'Employ Rubber Duck Debugging on the described problem.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    problem && `Problem:\n${problem}`,
    'Output:\n1) A simple, step-by-step rephrasing of the problem (as if explaining to a novice)\n2) Identification of any unclear or problematic steps/assumptions (the “duck” asks questions, and you answer)\n3) A potential solution or next action based on the newfound understanding'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "rubber duck debugging — explain to understand rubber-duck-debugging a problem-solving technique where you explain your issue or question aloud in simple terms (often to an inanimate object or imaginary friend). the act of explaining reveals gaps in understanding and often leads to the solution. describe the problem you’re trying to solve, including relevant details. the model will have you explain it clearly (as if to a rubber duck), possibly ask a couple of clarifying questions, and then guide you toward a solution or next step. use:pattern phase:explore topic:bias level:beginner use:problem-framing topic:clarification analysis-frameworks creativity work through a tricky problem by explaining it step-by-step as if to a complete novice (or a rubber duck) clarify your understanding of a bug or question by articulating every detail and assumption discover gaps in logic or missing pieces by teaching the problem to an imaginary listener imagine the “duck” is totally new to the subject – define even basic terms as you explain. have the duck ask simple clarification questions if something isn’t clear, and then answer them. problem or question to explain"
      }
    },

    {
      id: "scamper",
      slug: "scamper-framework",
      label: "SCAMPER (idea expansion)",
      kind: "framework",
      categories: [
        "creativity",
        "brainstorming"
      ],
      tags: [
        "use:pattern",
        "use:storytelling",
        "level:beginner"
      ],
      use_cases: [
        "systematically generate variants of an idea",
        "unstick creative exploration"
      ],
      boosters: [
        "Demand at least 2 candidates per move (bullet them).",
        "End with one “crazy but testable” option."
      ],
      definition: "Seven moves to push an idea: Substitute, Combine, Adapt, Modify, Put to other use, Eliminate, Reverse.",
      help: "Start with a current idea; write brief prompts for each SCAMPER move.",
      fields: [
        {
          label: "Current idea",
          key: "current",
          ph: "Describe the starting point.",
          type: "textarea"
        },
        {
          label: "Substitute — what element could you replace?",
          key: "sub",
          type: "textarea"
        },
        {
          label: "Combine — what can be merged?",
          key: "comb",
          type: "textarea"
        },
        {
          label: "Adapt — what can be borrowed?",
          key: "adapt",
          type: "textarea"
        },
        {
          label: "Modify — exaggerated/minimized?",
          key: "mod",
          type: "textarea"
        },
        {
          label: "Put to other use — where else could it apply?",
          key: "use",
          type: "textarea"
        },
        {
          label: "Eliminate — what can you cut?",
          key: "elim",
          type: "textarea"
        },
        {
          label: "Reverse — what if you flipped it?",
          key: "rev",
          type: "textarea"
        }
      ],
      template: ({ current, sub, comb, adapt, mod, use, elim, rev, ctx, audience, style, tone }) => [
    'Run SCAMPER to expand the idea space.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    current && ('Current idea:\n' + current),
    sub && ('Substitute:\n' + sub),
    comb && ('Combine:\n' + comb),
    adapt && ('Adapt:\n' + adapt),
    mod && ('Modify:\n' + mod),
    use && ('Put to other use:\n' + use),
    elim && ('Eliminate:\n' + elim),
    rev && ('Reverse:\n' + rev),
    'Output:\n1) 7 move list\n2) Top 3 candidates\n3) One testable “wild” option'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "scamper (idea expansion) scamper-framework seven moves to push an idea: substitute, combine, adapt, modify, put to other use, eliminate, reverse. start with a current idea; write brief prompts for each scamper move. use:pattern use:storytelling level:beginner creativity brainstorming systematically generate variants of an idea unstick creative exploration demand at least 2 candidates per move (bullet them). end with one “crazy but testable” option. current idea substitute — what element could you replace? combine — what can be merged? adapt — what can be borrowed? modify — exaggerated/minimized? put to other use — where else could it apply? eliminate — what can you cut? reverse — what if you flipped it?"
      }
    },

    {
      id: "scenario_deliberative",
      slug: "scenario-based-deliberative",
      label: "Scenario-based Prompting — Deliberative reasoning",
      kind: "framework",
      categories: [
        "prompt-development-techniques",
        "reasoning"
      ],
      tags: [
        "type:framework",
        "topic:prompting",
        "phase:compose",
        "level:intermediate",
        "use:pattern",
        "topic:matrix",
        "use:iteration",
        "use:case-study"
      ],
      use_cases: [
        "coaching & advice",
        "policy-sensitive responses",
        "support empathy",
        "edge-case analysis"
      ],
      boosters: [
        "Take a deep breath. Think step by step. First list assumptions and unknowns; then reason in numbered steps; then propose actions; end with a short checklist.",
        "Separate “Reasoning” from “Recommendation” using clear headings. Flag trade-offs and edge cases."
      ],
      definition: "Grounds the model in a concrete situation and explicitly asks it to reason deliberately before answering.",
      help: "Set a vivid scenario and desired outcome. The framework slows the model down and separates thinking from the final recommendation.",
      fields: [
        {
          label: "Role (optional)",
          desc: "Perspective to adopt.",
          key: "role",
          ph: "e.g., Emergency operations lead",
          type: "text"
        },
        {
          label: "Scenario (specific, even extreme)",
          desc: "Describe actors, stakes, and context.",
          key: "scenario",
          ph: "e.g., ICU power outage during a heatwave; backups at 60 minutes…",
          type: "textarea"
        },
        {
          label: "Outcome goal",
          desc: "What success looks like.",
          key: "goal",
          ph: "e.g., Keep all patients safe until mains power returns",
          type: "text"
        },
        {
          label: "Constraints",
          desc: "Non-negotiables, policies, risks.",
          key: "constraints",
          ph: "e.g., No transport; limited staff; HIPAA-safe comms only",
          type: "textarea"
        },
        {
          label: "Response format (optional)",
          desc: "Headings/checklists to structure the output.",
          key: "format",
          ph: "e.g., 1) Immediate actions 2) Comms plan 3) Risks & mitigations",
          type: "textarea"
        }
      ],
      template: ({role,scenario,goal,constraints,format,ctx})=>[
      'Engage in deliberate reasoning before answering.',
      ctx&&`Context: ${ctx}`,
      role&&`Role: ${role}`,
      scenario&&`Scenario: ${scenario}`,
      goal&&`Primary goal: ${goal}`,
      constraints&&`Constraints: ${constraints}`,
      'Deliberate: Take a deep breath; think step by step; state assumptions and unknowns; evaluate trade-offs.',
      format&&`Format: ${format}`,
      'Return:\n1) Reasoning\n2) Recommendation\n3) Checklist'
    ].filter(Boolean).join('\n'),
      meta: {
        search_text: "scenario-based prompting — deliberative reasoning scenario-based-deliberative grounds the model in a concrete situation and explicitly asks it to reason deliberately before answering. set a vivid scenario and desired outcome. the framework slows the model down and separates thinking from the final recommendation. type:framework topic:prompting phase:compose level:intermediate use:pattern topic:matrix use:iteration use:case-study prompt-development-techniques reasoning coaching & advice policy-sensitive responses support empathy edge-case analysis take a deep breath. think step by step. first list assumptions and unknowns; then reason in numbered steps; then propose actions; end with a short checklist. separate “reasoning” from “recommendation” using clear headings. flag trade-offs and edge cases. role (optional) scenario (specific, even extreme) outcome goal constraints response format (optional)"
      }
    },

    {
      id: "scientific_method",
      slug: "scientific-method",
      label: "Scientific Method — Question · Hypothesis · Method · Data · Analysis · Conclusion",
      kind: "heuristic",
      categories: [
        "reasoning",
        "teaching"
      ],
      tags: [
        "type:framework",
        "use:pattern",
        "use:content",
        "level:beginner",
        "use:iteration"
      ],
      use_cases: [
        "design an experiment or A/B test",
        "replicate a result with clear hypotheses"
      ],
      boosters: [
        "Include falsifiable predictions and a pre-commit metric.",
        "Plan replication or follow-up."
      ],
      definition: "A structured cycle for investigating questions via testable hypotheses and evidence.",
      help: "Fill each step; specify variables, controls, and success criteria.",
      fields: [
        {
          label: "Research question",
          key: "question",
          type: "textarea"
        },
        {
          label: "Hypothesis (falsifiable)",
          key: "hypothesis",
          type: "textarea"
        },
        {
          label: "Method / protocol",
          key: "method",
          type: "textarea"
        },
        {
          label: "Data to collect",
          key: "data",
          type: "textarea"
        },
        {
          label: "Analysis plan",
          key: "analysis",
          type: "textarea"
        },
        {
          label: "Expected interpretation / decision rule",
          key: "conclusion",
          type: "textarea"
        }
      ],
      template: ({question,hypothesis,method,data,analysis,conclusion,ctx})=>[
      'Run a Scientific Method plan.',
      ctx && `Context: ${ctx}`,
      question && `Question:\n${question}`,
      hypothesis && `Hypothesis (falsifiable):\n${hypothesis}`,
      method && `Method:\n${method}`,
      data && `Data:\n${data}`,
      analysis && `Analysis plan:\n${analysis}`,
      conclusion && `Decision rule / conclusion:\n${conclusion}`
    ].filter(Boolean).join('\n'),
      meta: {
        search_text: "scientific method — question · hypothesis · method · data · analysis · conclusion scientific-method a structured cycle for investigating questions via testable hypotheses and evidence. fill each step; specify variables, controls, and success criteria. type:framework use:pattern use:content level:beginner use:iteration reasoning teaching design an experiment or a/b test replicate a result with clear hypotheses include falsifiable predictions and a pre-commit metric. plan replication or follow-up. research question hypothesis (falsifiable) method / protocol data to collect analysis plan expected interpretation / decision rule"
      }
    },

    {
      id: "scqa",
      slug: "scqa-situation-complication-question-answer",
      label: "SCQA — Situation · Complication · Question · Answer",
      kind: "framework",
      categories: [
        "storytelling-frameworks",
        "analysis-frameworks"
      ],
      tags: [
        "type:framework",
        "topic:future-self",
        "phase:compose",
        "level:beginner",
        "use:task-brief",
        "topic:matrix",
        "use:presentations"
      ],
      use_cases: [
        "structure memos or executive summaries",
        "turn research into a compelling arc"
      ],
      boosters: [
        "Keep each section to 1–3 sentences.",
        "End with one explicit decision or ask."
      ],
      definition: "A narrative logic that sets context, introduces the tension, asks the key question, and delivers the answer.",
      help: "Fill each part briefly; prefer high-signal prose.",
      fields: [
        {
          label: "Situation",
          key: "situation",
          type: "textarea"
        },
        {
          label: "Complication",
          key: "complication",
          type: "textarea"
        },
        {
          label: "Key question",
          key: "question",
          type: "text"
        },
        {
          label: "Answer",
          key: "answer",
          type: "textarea"
        }
      ],
      template: ({situation,complication,question,answer,ctx})=>[
      'Use SCQA to structure the message.',
      ctx && `Context: ${ctx}`,
      situation && `Situation:\n${situation}`,
      complication && `Complication:\n${complication}`,
      question && `Question:\n${question}`,
      answer && `Answer:\n${answer}`
    ].filter(Boolean).join('\n'),
      meta: {
        search_text: "scqa — situation · complication · question · answer scqa-situation-complication-question-answer a narrative logic that sets context, introduces the tension, asks the key question, and delivers the answer. fill each part briefly; prefer high-signal prose. type:framework topic:future-self phase:compose level:beginner use:task-brief topic:matrix use:presentations storytelling-frameworks analysis-frameworks structure memos or executive summaries turn research into a compelling arc keep each section to 1–3 sentences. end with one explicit decision or ask. situation complication key question answer"
      }
    },

    {
      id: "sentipensar",
      slug: "sentipensar-thinking-feeling",
      label: "Sentipensar — Thinking-Feeling Integration (Latin America)",
      kind: "strategy",
      categories: [
        "reasoning",
        "design",
        "cultural-frameworks"
      ],
      tags: [
        "type:framework",
        "topic:decomposition",
        "use:pattern",
        "level:intermediate"
      ],
      use_cases: [
        "integrate analytic and experiential knowledge",
        "design with empathy and evidence side-by-side"
      ],
      boosters: [
        "Document divergences between data and felt sense.",
        "End with a decision that honors both."
      ],
      definition: "A method to braid rational analysis with lived experience and emotion for wiser action.",
      help: "Capture analytic facts and felt perspectives; reconcile deliberately.",
      fields: [
        {
          label: "Rational analysis (facts/metrics)",
          key: "analysis",
          type: "textarea"
        },
        {
          label: "Felt sense (stories/experiences)",
          key: "felt",
          type: "textarea"
        },
        {
          label: "Where they diverge",
          key: "divergence",
          type: "textarea"
        },
        {
          label: "How to converge responsibly",
          key: "convergence",
          type: "textarea"
        }
      ],
      template: ({analysis,felt,divergence,convergence,ctx})=>[
      'Apply Sentipensar (thinking-feeling integration).',
      ctx && `Context: ${ctx}`,
      analysis && `Analysis:\n${analysis}`,
      felt && `Felt sense:\n${felt}`,
      divergence && `Divergences:\n${divergence}`,
      convergence && `Convergence plan:\n${convergence}`,
      'Return: integrated decision + small experiment to validate.'
    ].filter(Boolean).join('\n'),
      meta: {
        search_text: "sentipensar — thinking-feeling integration (latin america) sentipensar-thinking-feeling a method to braid rational analysis with lived experience and emotion for wiser action. capture analytic facts and felt perspectives; reconcile deliberately. type:framework topic:decomposition use:pattern level:intermediate reasoning design cultural-frameworks integrate analytic and experiential knowledge design with empathy and evidence side-by-side document divergences between data and felt sense. end with a decision that honors both. rational analysis (facts/metrics) felt sense (stories/experiences) where they diverge how to converge responsibly"
      }
    },

    {
      id: "shadow_work",
      slug: "shadow-work-dialogue",
      label: "Shadow Work Dialogue — Conscious Self · Shadow Self",
      kind: "framework",
      categories: [
        "psychology",
        "self-reflection"
      ],
      tags: [
        "use:pattern",
        "use:brainstorming",
        "use:presentations",
        "level:advanced",
        "level:beginner",
        "topic:future-self",
        "use:healing"
      ],
      use_cases: [
        "confront a “shadow” side of yourself (traits or emotions you’ve repressed) by personifying it",
        "gain insight into negative patterns by dialoguing with the part of you that acts them out",
        "integrate and heal shame or anger by compassionately engaging with your darker side"
      ],
      boosters: [
        "Approach the shadow with curiosity, not hostility – it often protects a hurt part of you in a misguided way.",
        "Let the Shadow Self speak bluntly. Have your Conscious Self acknowledge its points before gently offering an alternative perspective."
      ],
      definition: "A Jungian-inspired exercise where you have a written conversation between your everyday conscious self and your “Shadow” (the hidden, negative, or feared aspects of you) to acknowledge and integrate these aspects.",
      help: "Pick a shadow feeling from the list or type your own. Optionally attach personas to both your Shadow Self and your Conscious Self (these use the same typeahead+autofill you already have). The model will script a dialogue, then summarize insights.",
      fields: [
        {
          label: "Shadow feeling (common list)",
          key: "shadow_feeling",
          options: [
            {
              label: "— Select feeling —",
              value: ""
            },
            "anger",
            "anxiety",
            "apathy",
            "avoidance",
            "bitterness",
            "burnout",
            "conflict-seeking",
            "confusion",
            "control-fixation",
            "defensiveness",
            "despair",
            "disgust",
            "distrust",
            "envy",
            "fear",
            "frustration",
            "guilt",
            "hopelessness",
            "imposter feelings",
            "inadequacy",
            "insecurity",
            "jealousy",
            "judgment",
            "loneliness",
            "melancholy",
            "numbness",
            "perfectionism",
            "procrastination",
            "rage",
            "regret",
            "resentment",
            "self-criticism",
            "self-loathing",
            "shame",
            "spite",
            "stress",
            "withdrawal",
            "acceptance",
            "affection",
            "awe",
            "calm",
            "caring",
            "compassion",
            "confidence",
            "contentment",
            "curiosity",
            "empathy",
            "enthusiasm",
            "excitement",
            "forgiveness",
            "freedom",
            "friendliness",
            "fun",
            "generosity",
            "gratitude",
            "happiness",
            "hope",
            "inspiration",
            "joy",
            "kindness",
            "laughter",
            "love",
            "motivation",
            "optimism",
            "peace",
            "playfulness",
            "pride",
            "relief",
            "relaxation",
            "satisfaction",
            "security",
            "serenity",
            "trust",
            "wonder",
            "zest"
          ],
          type: "select"
        },
        {
          label: "Shadow traits/feelings",
          desc: "Write freely. It’s safe to name whatever surfaces — clarity grows when you give the shadow a voice.",
          key: "shadow_trait",
          ph: "e.g., jealousy, rage, self-sabotage",
          type: "textarea"
        },
        {
          label: "Name your Shadow",
          desc: "Trust what comes up — no right or wrong answers.",
          key: "shadow_name",
          ph: "e.g., The Saboteur, The Critic, Trickster, UX designer, Stoic philosopher",
          type: "text"
        },
        {
          label: "Shadow persona (type to search personas)",
          autofill: "persona->inline",
          desc: "Type to search personas",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "shadow_persona",
          ph: "e.g., The Saboteur, The Critic, Trickster, UX designer, Stoic philosopher",
          type: "repeater"
        },
        {
          label: "Shadow persona details (optional)",
          desc: "Write freely. It’s safe to name whatever surfaces — clarity grows when you give the shadow a voice.",
          key: "shadow_text",
          ph: "Optionally add more persona details",
          type: "textarea"
        },
        {
          label: "Opposite feeling (common list)",
          key: "you_feeling",
          options: [
            {
              label: "— Select feeling —",
              value: ""
            },
            "anger",
            "anxiety",
            "apathy",
            "avoidance",
            "bitterness",
            "burnout",
            "conflict-seeking",
            "confusion",
            "control-fixation",
            "defensiveness",
            "despair",
            "disgust",
            "distrust",
            "envy",
            "fear",
            "frustration",
            "guilt",
            "hopelessness",
            "imposter feelings",
            "inadequacy",
            "insecurity",
            "jealousy",
            "judgment",
            "loneliness",
            "melancholy",
            "numbness",
            "perfectionism",
            "procrastination",
            "rage",
            "regret",
            "resentment",
            "self-criticism",
            "self-loathing",
            "shame",
            "spite",
            "stress",
            "withdrawal",
            "acceptance",
            "affection",
            "awe",
            "calm",
            "caring",
            "compassion",
            "confidence",
            "contentment",
            "curiosity",
            "empathy",
            "enthusiasm",
            "excitement",
            "forgiveness",
            "freedom",
            "friendliness",
            "fun",
            "generosity",
            "gratitude",
            "happiness",
            "hope",
            "inspiration",
            "joy",
            "kindness",
            "laughter",
            "love",
            "motivation",
            "optimism",
            "peace",
            "playfulness",
            "pride",
            "relief",
            "relaxation",
            "satisfaction",
            "security",
            "serenity",
            "trust",
            "wonder",
            "zest"
          ],
          type: "select"
        },
        {
          label: "Conscious Self traits/feelings",
          desc: "Write freely. It’s safe to name whatever surfaces — clarity grows when you give the Conscious Self a voice.",
          key: "you_trait",
          ph: "e.g., supportive, happy, content",
          type: "textarea"
        },
        {
          label: "Name your Conscious Self",
          desc: "Trust what comes up — no right or wrong answers.",
          key: "you_name",
          ph: "e.g., Compassionate Coach, Pragmatic PM, Therapist, Mentor",
          type: "text"
        },
        {
          label: "Conscious Self persona (type to search personas)",
          autofill: "persona->inline",
          desc: "Type to search personas",
          itemLabel: "persona",
          itemType: "typeahead",
          key: "you_persona",
          ph: "e.g., Compassionate Coach, Pragmatic PM, Therapist, Mentor",
          type: "repeater"
        },
        {
          label: "Conscious persona details (optional)",
          desc: "Write freely. It’s safe to name whatever surfaces — clarity grows when you give the Conscious Self a voice.",
          key: "you_text",
          ph: "Optionally add more persona details",
          type: "textarea"
        },
        {
          label: "Triggering scenario (optional)",
          desc: "Trust what comes up — no right or wrong answers.",
          key: "scenario",
          ph: "When or why does this shadow usually appear?",
          type: "textarea"
        }
      ],
      template: ({
  shadow_feeling, shadow_trait, shadow_name, shadow_persona, shadow_text,
  you_feeling, you_trait, you_name, you_persona, you_text,
  scenario, ctx, audience, style, tone
}) => {
  const clean = v => (v && String(v).trim()) || '';
  const oneLine = s => String(s||'').replace(/\s*\n+\s*/g,' ').replace(/\s{2,}/g,' ').trim();

  // Gather feelings/traits (never overridden by persona details)
  const shadowFeelings = [clean(shadow_feeling), clean(shadow_trait)].filter(Boolean).join(', ');
  const youFeelings    = [clean(you_feeling), clean(you_trait)].filter(Boolean).join(', ');

  // Gather persona info
  const shadowBlock = [
    shadow_name && `Shadow persona: ${clean(shadow_name)}`,
    shadow_persona && `Additional persona(s): ${Array.isArray(shadow_persona) ? shadow_persona.join(', ') : clean(shadow_persona)}`,
    shadow_text && `Details: ${oneLine(shadow_text)}`
  ].filter(Boolean).join('\n');

  const youBlock = [
    you_name && `Conscious persona: ${clean(you_name)}`,
    you_persona && `Additional persona(s): ${Array.isArray(you_persona) ? you_persona.join(', ') : clean(you_persona)}`,
    you_text && `Details: ${oneLine(you_text)}`
  ].filter(Boolean).join('\n');

  return [
    'Initiate a Shadow Work dialogue between the conscious self and the shadow self.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    shadowFeelings && `Shadow feelings/traits: ${shadowFeelings}`,
    youFeelings && `Conscious feelings/traits: ${youFeelings}`,
    scenario && `Trigger:\n${scenario}`,
    shadowBlock && shadowBlock,
    youBlock && youBlock,
    'Output:\n1) Dialogue exchange where “You” (Conscious Self) and “Shadow” each speak\n' +
    '2) The Shadow explains its perspective/need; You respond with empathy but firmness\n' +
    '3) A final reflection or agreement indicating some healing or integration'
  ].filter(Boolean).join('\n');
},
      meta: {
        search_text: "shadow work dialogue — conscious self · shadow self shadow-work-dialogue a jungian-inspired exercise where you have a written conversation between your everyday conscious self and your “shadow” (the hidden, negative, or feared aspects of you) to acknowledge and integrate these aspects. pick a shadow feeling from the list or type your own. optionally attach personas to both your shadow self and your conscious self (these use the same typeahead+autofill you already have). the model will script a dialogue, then summarize insights. use:pattern use:brainstorming use:presentations level:advanced level:beginner topic:future-self use:healing psychology self-reflection confront a “shadow” side of yourself (traits or emotions you’ve repressed) by personifying it gain insight into negative patterns by dialoguing with the part of you that acts them out integrate and heal shame or anger by compassionately engaging with your darker side approach the shadow with curiosity, not hostility – it often protects a hurt part of you in a misguided way. let the shadow self speak bluntly. have your conscious self acknowledge its points before gently offering an alternative perspective. shadow feeling (common list) shadow traits/feelings name your shadow shadow persona (type to search personas) shadow persona details (optional) opposite feeling (common list) conscious self traits/feelings name your conscious self conscious self persona (type to search personas) conscious persona details (optional) triggering scenario (optional)"
      }
    },

    {
      id: "six_hats",
      slug: "six-thinking-hats",
      label: "Six Thinking Hats",
      kind: "framework",
      categories: [
        "decision",
        "brainstorming"
      ],
      tags: [
        "use:pattern",
        "use:decision-making",
        "use:iteration",
        "phase:explore",
        "level:beginner",
        "use:workshop",
        "use:brainstorming"
      ],
      use_cases: [
        "explore multiple perspectives on a topic",
        "structure a discussion or solo reasoning",
        "surface risks, data, feelings, creativity, control"
      ],
      boosters: [
        "Keep each hat’s notes to 2–3 bullets.",
        "End with a Blue hat summary decision.",
        "If no order is given, use White→Red→Black→Yellow→Green→Blue."
      ],
      definition: "A role-play model (White, Red, Black, Yellow, Green, Blue) to examine a topic from six perspectives.",
      help: "Provide the topic and (optionally) the hat order (one per line).",
      fields: [
        {
          label: "Topic / decision",
          desc: "What are we evaluating or deciding?",
          key: "topic",
          ph: "Should we sunset Feature X?",
          type: "textarea"
        },
        {
          label: "Hat order (one per line, optional)",
          desc: "Any subset/order of: White, Red, Black, Yellow, Green, Blue.",
          key: "order",
          ph: "White\nRed\nBlack\nYellow\nGreen\nBlue",
          type: "textarea"
        },
        {
          label: "Do's (must do)",
          desc: "Positive guardrails.",
          key: "dos",
          ph: "2–3 bullets per hat; be concrete.",
          type: "textarea"
        },
        {
          label: "Don'ts / constraints",
          desc: "Limits to respect.",
          key: "donts",
          ph: "No digressions; ≤350 words total.",
          type: "textarea"
        }
      ],
      template: ({ topic, order, dos, donts, ctx, audience, style, tone }) => [
    'Use Six Thinking Hats to examine the topic from multiple perspectives, then conclude.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    topic && `Topic: ${topic}`,
    order && (
      'Hat order:\n' + String(order)
        .split(/\n+/).map(s=>s.trim()).filter(Boolean)
        .map((h,i)=> `${i+1}. ${h}`).join('\n')
    ),
    dos && `Do:\n${dos}`,
    donts && `Don\'t:\n${donts}`,
    'Output each hat with 2–3 bullets, then a Blue-hat summary decision.'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "six thinking hats six-thinking-hats a role-play model (white, red, black, yellow, green, blue) to examine a topic from six perspectives. provide the topic and (optionally) the hat order (one per line). use:pattern use:decision-making use:iteration phase:explore level:beginner use:workshop use:brainstorming decision brainstorming explore multiple perspectives on a topic structure a discussion or solo reasoning surface risks, data, feelings, creativity, control keep each hat’s notes to 2–3 bullets. end with a blue hat summary decision. if no order is given, use white→red→black→yellow→green→blue. topic / decision hat order (one per line, optional) do's (must do) don'ts / constraints"
      }
    },

    {
      id: "smart",
      slug: "smart-goals",
      label: "SMART Goals — Specific · Measurable · Achievable · Relevant · Time-bound",
      kind: "strategy",
      categories: [
        "planning",
        "creativity"
      ],
      tags: [
        "type:framework",
        "use:goals",
        "use:pattern",
        "level:beginner"
      ],
      use_cases: [
        "refine vague goals into actionable statements",
        "ensure project objectives have clear success criteria and timelines",
        "evaluate if a goal is well-defined or needs adjustment"
      ],
      boosters: [
        "If any SMART element is missing (e.g., no timeframe), the model will propose one to complete the goal definition.",
        "Present the output as 5 brief points (S, M, A, R, T) to clearly delineate each aspect."
      ],
      definition: "A goal-setting checklist ensuring an objective is Specific, Measurable, Achievable, Relevant, and Time-bound.",
      help: "Enter a general goal. The model will break it down into the five SMART components, helping to make the goal clear and trackable.",
      fields: [
        {
          label: "General goal",
          desc: "A short description of what you want to accomplish.",
          key: "goal",
          ph: "e.g., Grow the mailing list for our newsletter.",
          type: "textarea"
        }
      ],
      template: ({ goal, ctx, audience, style, tone }) => [
      'Convert the goal into a SMART format.',
      ctx && `Context: ${ctx}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      goal && `Goal: ${goal}`,
      'Output each SMART element with details:\n- Specific: <what exactly will be done?>\n- Measurable: <quantify or measure success>\n- Achievable: <is it realistic/how to attain?>\n- Relevant: <why it matters/aligns>\n- Time-bound: <deadline or timeframe>'
    ].filter(Boolean).join('\n'),
      meta: {
        search_text: "smart goals — specific · measurable · achievable · relevant · time-bound smart-goals a goal-setting checklist ensuring an objective is specific, measurable, achievable, relevant, and time-bound. enter a general goal. the model will break it down into the five smart components, helping to make the goal clear and trackable. type:framework use:goals use:pattern level:beginner planning creativity refine vague goals into actionable statements ensure project objectives have clear success criteria and timelines evaluate if a goal is well-defined or needs adjustment if any smart element is missing (e.g., no timeframe), the model will propose one to complete the goal definition. present the output as 5 brief points (s, m, a, r, t) to clearly delineate each aspect. general goal"
      }
    },

    {
      id: "soar",
      slug: "soar-analysis",
      label: "SOAR Analysis",
      kind: "strategy",
      categories: [
        "strategy",
        "planning"
      ],
      tags: [
        "use:pattern",
        "topic:decomposition",
        "level:beginner",
        "topic:clarification",
        "use:decision-making"
      ],
      use_cases: [
        "forward-looking strategic discussion",
        "align aspirations with measurable results",
        "find opportunity in strengths"
      ],
      boosters: [
        "Tie each Aspiration to at least one Strength and Opportunity.",
        "Make Results measurable (metric, target, date).",
        "End with next steps."
      ],
      definition: "Strengths, Opportunities, Aspirations, Results—an appreciative, forward-looking alternative to SWOT.",
      help: "Provide context (optional) and list SOAR elements (one per line each).",
      fields: [
        {
          label: "Context (optional)",
          desc: "Brief background or scope.",
          key: "context",
          ph: "Q4 planning for self-serve growth…",
          type: "textarea"
        },
        {
          label: "Strengths (one per line)",
          desc: "What we already do well.",
          key: "strengths",
          ph: "Fast release cadence…\nHighly engaged community…",
          type: "textarea"
        },
        {
          label: "Opportunities (one per line)",
          desc: "External possibilities to leverage.",
          key: "opportunities",
          ph: "Partnership with …\nUntapped EDU market…",
          type: "textarea"
        },
        {
          label: "Aspirations (one per line)",
          desc: "Where we want to go.",
          key: "aspirations",
          ph: "Be the default for …\nNPS ≥ 50…",
          type: "textarea"
        },
        {
          label: "Results (one per line)",
          desc: "Measurable outcomes (metric & target).",
          key: "results",
          ph: "ARR $5M by Q4; DAU 50k…",
          type: "textarea"
        },
        {
          label: "Do's (must do)",
          desc: "Positive guardrails.",
          key: "dos",
          ph: "Be specific and measurable.",
          type: "textarea"
        },
        {
          label: "Don'ts / constraints",
          desc: "Limits to respect.",
          key: "donts",
          ph: "Avoid vague aspirations.",
          type: "textarea"
        }
      ],
      template: ({ context, strengths, opportunities, aspirations, results, dos, donts, ctx, audience, style, tone }) => [
    'Run a SOAR analysis (forward-looking strategy).',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    context && `Scope/context: ${context}`,
    strengths && (
      'Strengths:\n' + String(strengths)
        .split(/\n+/).map(s=>s.trim()).filter(Boolean)
        .map((x,i)=> `${i+1}. ${x}`).join('\n')
    ),
    opportunities && (
      'Opportunities:\n' + String(opportunities)
        .split(/\n+/).map(s=>s.trim()).filter(Boolean)
        .map((x,i)=> `${i+1}. ${x}`).join('\n')
    ),
    aspirations && (
      'Aspirations:\n' + String(aspirations)
        .split(/\n+/).map(s=>s.trim()).filter(Boolean)
        .map((x,i)=> `${i+1}. ${x}`).join('\n')
    ),
    results && (
      'Results (measurable):\n' + String(results)
        .split(/\n+/).map(s=>s.trim()).filter(Boolean)
        .map((x,i)=> `${i+1}. ${x}`).join('\n')
    ),
    dos && `Do:\n${dos}`,
    donts && `Don\'t:\n${donts}`,
    'Close with 3 next steps linked to the SOAR items.'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "soar analysis soar-analysis strengths, opportunities, aspirations, results—an appreciative, forward-looking alternative to swot. provide context (optional) and list soar elements (one per line each). use:pattern topic:decomposition level:beginner topic:clarification use:decision-making strategy planning forward-looking strategic discussion align aspirations with measurable results find opportunity in strengths tie each aspiration to at least one strength and opportunity. make results measurable (metric, target, date). end with next steps. context (optional) strengths (one per line) opportunities (one per line) aspirations (one per line) results (one per line) do's (must do) don'ts / constraints"
      }
    },

    {
      id: "socratic",
      slug: "socratic-method",
      label: "Socratic Questioning Method",
      kind: "strategy",
      categories: [
        "reasoning",
        "critical-thinking"
      ],
      tags: [
        "use:pattern",
        "use:communication",
        "use:presentations",
        "phase:explore",
        "level:beginner",
        "use:teaching",
        "topic:bias"
      ],
      use_cases: [
        "interrogate claims and assumptions",
        "separate knowledge from belief",
        "surface implications and alternatives"
      ],
      boosters: [
        "Keep questions sharp and answerable.",
        "Avoid leading or loaded wording.",
        "End with a synthesis and next inquiry."
      ],
      definition: "A disciplined questioning method to clarify, probe assumptions, test evidence, explore viewpoints, and examine implications.",
      help: "Provide a claim/topic, plus any assumptions, evidence, or alternatives (one per line).",
      fields: [
        {
          label: "Claim / topic",
          desc: "What are we questioning?",
          key: "claim",
          ph: "“We must pivot to enterprise immediately.”",
          type: "textarea"
        },
        {
          label: "Assumptions (one per line, optional)",
          desc: "Suspected premises.",
          key: "assumptions",
          ph: "SMB cannot pay…\nSales cycle is too long…",
          type: "textarea"
        },
        {
          label: "Evidence (one per line, optional)",
          desc: "Facts or data offered.",
          key: "evidence",
          ph: "Churn 12%…\n2/5 enterprise pilots failed…",
          type: "textarea"
        },
        {
          label: "Alternatives (one per line, optional)",
          desc: "Other viewpoints/paths.",
          key: "alternatives",
          ph: "PLG focus…\nMid-market first…",
          type: "textarea"
        },
        {
          label: "Do's (must do)",
          desc: "Positive guardrails.",
          key: "dos",
          ph: "Neutral tone; concrete questions.",
          type: "textarea"
        },
        {
          label: "Don'ts / constraints",
          desc: "Limits to respect.",
          key: "donts",
          ph: "No ad hominem; ≤300 words.",
          type: "textarea"
        }
      ],
      template: ({ claim, assumptions, evidence, alternatives, dos, donts, ctx, audience, style, tone }) => [
    'Apply Socratic questioning to probe the topic and synthesize a position.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    claim && `Topic: ${claim}`,
    assumptions && (
      'Assumptions:\n' + String(assumptions)
        .split(/\n+/).map(s=>s.trim()).filter(Boolean)
        .map((x,i)=> `${i+1}. ${x}`).join('\n')
    ),
    evidence && (
      'Evidence:\n' + String(evidence)
        .split(/\n+/).map(s=>s.trim()).filter(Boolean)
        .map((x,i)=> `${i+1}. ${x}`).join('\n')
    ),
    alternatives && (
      'Alternatives:\n' + String(alternatives)
        .split(/\n+/).map(s=>s.trim()).filter(Boolean)
        .map((x,i)=> `${i+1}. ${x}`).join('\n')
    ),
    dos && `Do:\n${dos}`,
    donts && `Don\'t:\n${donts}`,
    'Output:\n1) Clarification questions\n2) Probe assumptions\n3) Test evidence\n4) Explore viewpoints\n5) Implications\n6) Synthesis & next inquiry'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "socratic questioning method socratic-method a disciplined questioning method to clarify, probe assumptions, test evidence, explore viewpoints, and examine implications. provide a claim/topic, plus any assumptions, evidence, or alternatives (one per line). use:pattern use:communication use:presentations phase:explore level:beginner use:teaching topic:bias reasoning critical-thinking interrogate claims and assumptions separate knowledge from belief surface implications and alternatives keep questions sharp and answerable. avoid leading or loaded wording. end with a synthesis and next inquiry. claim / topic assumptions (one per line, optional) evidence (one per line, optional) alternatives (one per line, optional) do's (must do) don'ts / constraints"
      }
    },

    {
      id: "somatic_focusing",
      slug: "somatic-focusing-felt-sense",
      label: "Somatic Focusing — Feel · Ask · Listen",
      kind: "framework",
      categories: [
        "psychology",
        "self-reflection"
      ],
      tags: [
        "use:pattern",
        "use:communication",
        "topic:future-self",
        "level:intermediate",
        "use:scope-management",
        "level:beginner",
        "topic:prompting"
      ],
      use_cases: [
        "tune into a bodily sensation to discover the message or emotion it holds",
        "reduce overwhelm by patiently listening to what your body is telling you",
        "clarify vague feelings by describing them and “asking” them questions"
      ],
      boosters: [
        "Describe the sensation with metaphor (e.g., “a knot of fire in my belly”) to capture its quality.",
        "After describing, gently ask the sensation what it wants or needs, and wait for an intuitive answer."
      ],
      definition: "A mindfulness-based introspection where you focus on a physical feeling (“felt sense”), describe it, and then dialogue with it to reveal insights or relief.",
      help: "Note what you feel in your body (location, quality of sensation) and any context for your feelings. The model will guide you through noticing the sensation, describing it vividly, and intuitively questioning it for understanding.",
      fields: [
        {
          label: "Bodily sensation (location & quality)",
          key: "sensation",
          ph: "e.g., A heavy tightness in my chest.",
          type: "textarea"
        },
        {
          label: "Context or emotion (optional)",
          key: "context",
          ph: "What’s happening or what emotion might be tied to this sensation?",
          type: "textarea"
        }
      ],
      template: ({ sensation, context, ctx, audience, style, tone }) => [
    'Engage in somatic focusing to interpret a bodily felt sense.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    sensation && `Felt sensation:\n${sensation}`,
    context && `Context:\n${context}`,
    'Output:\n1) Guided description of the sensation (size, shape, color, mood, etc.)\n2) An inquiry where you “ask” the sensation what it signifies or needs\n3) A reflective answer that arises, providing insight or easing the feeling'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "somatic focusing — feel · ask · listen somatic-focusing-felt-sense a mindfulness-based introspection where you focus on a physical feeling (“felt sense”), describe it, and then dialogue with it to reveal insights or relief. note what you feel in your body (location, quality of sensation) and any context for your feelings. the model will guide you through noticing the sensation, describing it vividly, and intuitively questioning it for understanding. use:pattern use:communication topic:future-self level:intermediate use:scope-management level:beginner topic:prompting psychology self-reflection tune into a bodily sensation to discover the message or emotion it holds reduce overwhelm by patiently listening to what your body is telling you clarify vague feelings by describing them and “asking” them questions describe the sensation with metaphor (e.g., “a knot of fire in my belly”) to capture its quality. after describing, gently ask the sensation what it wants or needs, and wait for an intuitive answer. bodily sensation (location & quality) context or emotion (optional)"
      }
    },

    {
      id: "star",
      slug: "star-technique",
      label: "STAR — Situation · Task · Action · Result",
      kind: "framework",
      categories: [
        "storytelling-frameworks",
        "prompt-development-techniques"
      ],
      tags: [
        "type:framework",
        "use:storytelling",
        "phase:apply",
        "level:beginner",
        "use:format-guidance",
        "use:recipe",
        "use:case-study"
      ],
      use_cases: [
        "behavioral interview answer",
        "resume bullet",
        "case study write-up",
        "performance self-review",
        "success story for stakeholders",
        "incident/postmortem story"
      ],
      boosters: [
        "Quantify results where possible (%, Δ, time); if no metrics given, propose proxy metrics."
      ],
      definition: "A structured storytelling method for accomplishments and case studies.",
      help: "Great for case studies, resumes, performance stories.",
      fields: [
        {
          label: "Situation",
          desc: "Context and constraints.",
          key: "situation",
          ph: "e.g., Missed quarterly target; low trial conversions",
          type: "textarea"
        },
        {
          label: "Task",
          desc: "Goal or responsibility.",
          key: "task",
          ph: "e.g., Improve conversion rate by 20%",
          type: "textarea"
        },
        {
          label: "Action",
          desc: "What you did.",
          key: "action",
          ph: "e.g., Ran pricing test; rewrote trial emails",
          type: "textarea"
        },
        {
          label: "Result",
          desc: "Outcome/impact.",
          key: "result",
          ph: "e.g., +24% conversions; +18% MRR",
          type: "textarea"
        }
      ],
      template: ({situation,task,action,result,ctx,audience})=>[
      ctx&&`Context: ${ctx}`,
      audience&&`Target reader: ${audience}`,
      `Narrative using STAR:`,
      situation&&`• Situation: ${situation}`,
      task&&`• Task: ${task}`,
      action&&`• Action: ${action}`,
      result&&`• Result: ${result}`
    ].filter(Boolean).join('\n'),
      meta: {
        search_text: "star — situation · task · action · result star-technique a structured storytelling method for accomplishments and case studies. great for case studies, resumes, performance stories. type:framework use:storytelling phase:apply level:beginner use:format-guidance use:recipe use:case-study storytelling-frameworks prompt-development-techniques behavioral interview answer resume bullet case study write-up performance self-review success story for stakeholders incident/postmortem story quantify results where possible (%, δ, time); if no metrics given, propose proxy metrics. situation task action result"
      }
    },

    {
      id: "swot",
      slug: "swot-analysis",
      label: "SWOT — Strengths · Weaknesses · Opportunities · Threats",
      kind: "strategy",
      categories: [
        "analysis-frameworks",
        "prompt-development-techniques"
      ],
      tags: [
        "type:framework",
        "use:pattern",
        "use:discover",
        "level:beginner"
      ],
      use_cases: [
        "competitive analysis",
        "market scan",
        "product strategy snapshot",
        "business strategy review",
        "go-to-market assessment",
        "campaign planning snapshot"
      ],
      boosters: [
        "Sort each list most-specific → least; avoid duplicates; flag any misclassified items (internal vs external)."
      ],
      definition: "A 2×2 strategic scan that separates internal factors (S/W) from external forces (O/T).",
      help: "Strategic scan of an idea, product, or org.",
      fields: [
        {
          label: "Subject",
          desc: "What we are analyzing.",
          key: "subject",
          ph: "e.g., New B2B email tool",
          type: "text"
        },
        {
          label: "Known strengths",
          desc: "Optional seed inputs.",
          key: "strengths",
          ph: "e.g., Easy setup; strong analytics",
          type: "textarea"
        },
        {
          label: "Known weaknesses",
          desc: "Optional seed inputs.",
          key: "weaknesses",
          ph: "e.g., Limited integrations",
          type: "textarea"
        },
        {
          label: "Known opportunities",
          desc: "Optional seed inputs.",
          key: "opportunities",
          ph: "e.g., Growing SMB market",
          type: "textarea"
        },
        {
          label: "Known threats",
          desc: "Optional seed inputs.",
          key: "threats",
          ph: "e.g., Mailbox policy changes",
          type: "textarea"
        }
      ],
      template: ({subject,strengths,weaknesses,opportunities,threats,ctx})=>[
      `Conduct a SWOT analysis${subject?` of ${subject}`:''}.`,
      ctx&&`Context: ${ctx}`,
      (strengths||weaknesses||opportunities||threats)?`Seed facts to consider:`:null,
      strengths&&`• Strengths (given): ${strengths}`,
      weaknesses&&`• Weaknesses (given): ${weaknesses}`,
      opportunities&&`• Opportunities (given): ${opportunities}`,
      threats&&`• Threats (given): ${threats}`,
      `Return as four labeled lists with 3–6 bullets each, most specific first.`
    ].filter(Boolean).join('\n'),
      meta: {
        search_text: "swot — strengths · weaknesses · opportunities · threats swot-analysis a 2×2 strategic scan that separates internal factors (s/w) from external forces (o/t). strategic scan of an idea, product, or org. type:framework use:pattern use:discover level:beginner analysis-frameworks prompt-development-techniques competitive analysis market scan product strategy snapshot business strategy review go-to-market assessment campaign planning snapshot sort each list most-specific → least; avoid duplicates; flag any misclassified items (internal vs external). subject known strengths known weaknesses known opportunities known threats"
      }
    },

    {
      id: "synectics",
      slug: "synectics-analogies",
      label: "Synectics — Analogies & Problem Transfer",
      kind: "framework",
      categories: [
        "creativity",
        "reasoning"
      ],
      tags: [
        "type:framework",
        "phase:apply",
        "level:intermediate",
        "level:advanced"
      ],
      use_cases: [
        "find solutions by drawing analogies from unrelated domains",
        "unstick a problem by reframing it in a different context"
      ],
      boosters: [
        "Encourage wild analogies – even if the link is tenuous, it may spark a novel idea.",
        "After solving the analogy problem, carefully map the insights back to the original problem to ensure relevance."
      ],
      definition: "A creative problem-solving approach that \"joins together different and apparently irrelevant elements\" by using analogies. In Synectics, you reframe the problem into an analogous situation in a distant or unrelated context (using direct, personal, symbolic, or fantasy analogies), brainstorm solutions for that analogy, and then translate those solutions back to the original problem. This leverages the mind’s ability to find connections and can yield truly novel solutions.",
      help: "Describe your problem. Optionally suggest a domain or scenario to use as an analogy. The model will rephrase your problem as an analogy in another context, solve that analogous problem, and then map the insights back to your original situation.",
      fields: [
        {
          label: "Original problem",
          key: "problem",
          ph: "e.g., Improving team communication",
          type: "textarea"
        },
        {
          label: "Analogy scenario (optional)",
          key: "analogy",
          ph: "e.g., An ant colony coordinating tasks",
          type: "text"
        }
      ],
      template: ({ problem, analogy, ctx }) => [
    'Use Synectics to solve the problem via analogies.',
    ctx && `Context: ${ctx}`,
    problem && `Original Problem: ${problem}`,
    analogy
      ? `Analogy: Imagine the problem in a different context — ${analogy}.`
      : 'Analogy: Transform the problem into a different context (choose an unrelated scenario with a similar core issue).',
    'In that analogy scenario, brainstorm solutions to the analogous problem.',
    'Now translate those solutions back to the original context and suggest how they can apply to the original problem.'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "synectics — analogies & problem transfer synectics-analogies a creative problem-solving approach that \"joins together different and apparently irrelevant elements\" by using analogies. in synectics, you reframe the problem into an analogous situation in a distant or unrelated context (using direct, personal, symbolic, or fantasy analogies), brainstorm solutions for that analogy, and then translate those solutions back to the original problem. this leverages the mind’s ability to find connections and can yield truly novel solutions. describe your problem. optionally suggest a domain or scenario to use as an analogy. the model will rephrase your problem as an analogy in another context, solve that analogous problem, and then map the insights back to your original situation. type:framework phase:apply level:intermediate level:advanced creativity reasoning find solutions by drawing analogies from unrelated domains unstick a problem by reframing it in a different context encourage wild analogies – even if the link is tenuous, it may spark a novel idea. after solving the analogy problem, carefully map the insights back to the original problem to ensure relevance. original problem analogy scenario (optional)"
      }
    },

    {
      id: "synesthetic_brainstorm",
      slug: "synesthetic-brainstorm",
      label: "Synesthetic Brainstorm — Color · Sound · Texture",
      kind: "framework",
      categories: [
        "creativity",
        "brainstorming"
      ],
      tags: [
        "use:pattern",
        "use:workshop",
        "use:storytelling",
        "level:beginner",
        "use:brainstorming",
        "use:decision-making"
      ],
      use_cases: [
        "generate fresh ideas by translating an abstract problem into sensory metaphors",
        "unlock intuition about a concept by describing its color, sound, texture, or taste",
        "use cross-sensory analogies to discover surprising angles on a design or story challenge"
      ],
      boosters: [
        "Include at least three senses (e.g., sight, sound, touch) in your exploration; the more variety, the more insights.",
        "After listing sensory metaphors, reflect on why each metaphor might resonate and what new ideas it suggests."
      ],
      definition: "A creative thinking exercise that treats an idea or problem through multiple sensory lenses (color, sound, texture, etc.), using synesthesia-like metaphors to spark new insights.",
      help: "Provide a problem, idea, or theme. The model will assign it a color, a sound, a texture, etc., explaining each choice, to help you think about the concept in new ways.",
      fields: [
        {
          label: "Problem or concept to explore",
          key: "concept",
          ph: "e.g., “Time management” or “My novel’s hero”.",
          type: "text"
        }
      ],
      template: ({ concept, ctx, audience, style, tone }) => [
    'Use a synesthetic brainstorm to explore the concept through different senses.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    concept && `Concept: ${concept}`,
    'Output:\n1) Color – What color best represents the concept, and why?\n2) Sound – If it had a sound or music, what would it be?\n3) Texture – Describe its texture or physical feel metaphorically\n(Optionally include taste or smell if relevant)\n4) Brief insight: how these metaphors shed new light on the concept'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "synesthetic brainstorm — color · sound · texture synesthetic-brainstorm a creative thinking exercise that treats an idea or problem through multiple sensory lenses (color, sound, texture, etc.), using synesthesia-like metaphors to spark new insights. provide a problem, idea, or theme. the model will assign it a color, a sound, a texture, etc., explaining each choice, to help you think about the concept in new ways. use:pattern use:workshop use:storytelling level:beginner use:brainstorming use:decision-making creativity brainstorming generate fresh ideas by translating an abstract problem into sensory metaphors unlock intuition about a concept by describing its color, sound, texture, or taste use cross-sensory analogies to discover surprising angles on a design or story challenge include at least three senses (e.g., sight, sound, touch) in your exploration; the more variety, the more insights. after listing sensory metaphors, reflect on why each metaphor might resonate and what new ideas it suggests. problem or concept to explore"
      }
    },

    {
      id: "talanoa_dialogue",
      slug: "talanoa-dialogue",
      label: "Talanoa Dialogue (Pacific)",
      kind: "strategy",
      categories: [
        "planning",
        "cultural-frameworks",
        "decision"
      ],
      tags: [
        "type:framework",
        "use:storytelling",
        "use:content",
        "phase:explore",
        "level:beginner",
        "use:pattern"
      ],
      use_cases: [
        "build empathy and trust before negotiating",
        "surface shared issues via story-first dialogue"
      ],
      boosters: [
        "Open with story; only then move to issues and solutions.",
        "End with clear commitments and owners."
      ],
      definition: "An inclusive, story-led dialogue method emphasizing empathy, relationship, and consensus building.",
      help: "Capture stories, shared issues, co-created solutions, and commitments.",
      fields: [
        {
          label: "Stories (what matters, in participants’ words)",
          key: "stories",
          type: "textarea"
        },
        {
          label: "Shared issues (one per line)",
          key: "shared",
          type: "textarea"
        },
        {
          label: "Co-created solutions",
          key: "solutions",
          type: "textarea"
        },
        {
          label: "Commitments & owners",
          key: "commitments",
          type: "textarea"
        }
      ],
      template: ({stories,shared,solutions,commitments,ctx})=>[
      'Run a Talanoa-style dialogue.',
      ctx && `Context: ${ctx}`,
      stories && `Stories:\n${stories}`,
      shared && ('Shared issues:\n' + String(shared).split(/\n+/).map(s=>s.trim()).filter(Boolean).map((x,i)=>`${i+1}. ${x}`).join('\n')),
      solutions && `Co-created solutions:\n${solutions}`,
      commitments && `Commitments & owners:\n${commitments}`
    ].filter(Boolean).join('\n'),
      meta: {
        search_text: "talanoa dialogue (pacific) talanoa-dialogue an inclusive, story-led dialogue method emphasizing empathy, relationship, and consensus building. capture stories, shared issues, co-created solutions, and commitments. type:framework use:storytelling use:content phase:explore level:beginner use:pattern planning cultural-frameworks decision build empathy and trust before negotiating surface shared issues via story-first dialogue open with story; only then move to issues and solutions. end with clear commitments and owners. stories (what matters, in participants’ words) shared issues (one per line) co-created solutions commitments & owners"
      }
    },

{
  id: "tarot_spread",
  slug: "tarot-spread-reflection",
  label: "Tarot Spread Reflection — Past · Present · Future",
  kind: "framework",
  categories: ["creativity", "self-reflection", "journaling", "wellbeing"],
  tags: [
    "type:framework",
    "use:content",
    "use:storytelling",
    "use:reflection",
    "use:coaching",
    "use:goals",
    "use:brainstorming",
    "topic:tarot",
    "topic:archetypes",
    "level:intermediate",
    "mode:quick",
    "mode:deep"
  ],
  use_cases: [
    "gain personal insight by interpreting a situation through symbolic cards",
    "use archetypal imagery to brainstorm solutions or perspectives on a problem",
    "practice creative storytelling or introspection using a 3-card tarot format",
    "produce a concise takeaway and one concrete action to test over a set horizon"
  ],
  boosters: [
    "If you do not know card meanings, narrate the imagery in plain language, then map it to your question.",
    "When a card reads negative, add an empowering reframe and one low-risk next step.",
    "Avoid fate talk. Treat Future as trajectory under current conditions and name the smallest lever that could bend it.",
    "Close with a 1-sentence theme and a 48-hour action; add a check-back date to reduce the Forer effect."
  ],
  definition: "A three-card spread used as a reflective tool. Cards are interpreted metaphorically and translated into a short narrative, a concrete next action, and an optional check-back to compare interpretation vs reality.",
  help: "Enter a question or topic. Optionally list three cards. You can tweak positions, lens, and horizon. The output will give a tight story, a concrete 48-hour action, and an optional check-back.",
  fields: [
    {
      label: "Question or situation for guidance",
      key: "question",
      ph: "e.g., What should I focus on in my career right now?",
      type: "textarea",
      required: true
    },
    {
      label: "Drawn cards (optional, one per line)",
      key: "cards",
      ph: "Past: The Tower\nPresent: Two of Cups\nFuture: The Star\n(Use 'reversed' or '(R)' to mark reversals.)",
      type: "textarea"
    },
    {
      label: "Positions",
      key: "positions",
      type: "select",
      options: [
        "past-present-future",
        "past-obstacle-outcome",
        "past-present-trajectory",
        "past-present-future-advice"
      ],
      def: "past-present-future"
    },
    {
      label: "Use reversals",
      key: "reversals",
      type: "checkbox",
      def: false
    },
    {
      label: "Interpretation lens",
      key: "lens",
      type: "multiselect",
      options: ["coaching", "cbt", "jungian", "stoic", "systems", "creative"],
      def: ["coaching"]
    },
    {
      label: "Mode",
      key: "mode",
      type: "select",
      options: ["quick", "deep"],
      def: "quick"
    },
    {
      label: "Horizon for Future",
      key: "horizon",
      type: "select",
      options: ["48 hours", "1–2 weeks", "1–3 months"],
      def: "1–2 weeks"
    },
    {
      label: "Include an action step",
      key: "action_bias",
      type: "checkbox",
      def: true
    },
    {
      label: "Include confidence and check-back",
      key: "confidence_block",
      type: "checkbox",
      def: true
    },
    {
      label: "Output format",
      key: "output_format",
      type: "select",
      options: ["markdown", "json"],
      def: "markdown"
    },
    {
      label: "Language (optional, ISO or name)",
      key: "language",
      type: "text",
      ph: "e.g., English, Español, fr-FR"
    }
  ],
  template: ({
    question,
    cards,
    positions = "past-present-future",
    reversals = false,
    lens = [],
    mode = "quick",
    horizon = "1–2 weeks",
    action_bias = true,
    confidence_block = true,
    output_format = "markdown",
    language,
    ctx,
    audience,
    style,
    tone
  }) => {
    const posMap = {
      "past-present-future": ["Past", "Present", "Future"],
      "past-obstacle-outcome": ["Past", "Obstacle", "Outcome"],
      "past-present-trajectory": ["Past", "Present", "Trajectory"],
      "past-present-future-advice": ["Past", "Present", "Future", "Advice"]
    };
    const pos = posMap[positions] || posMap["past-present-future"];
    const lensTxt = Array.isArray(lens) && lens.length ? `Lens: ${lens.join(", ")}` : "";
    const modeTxt = mode === "deep"
      ? "Depth: deep. Use 3–5 sentences per position with one concrete example."
      : "Depth: quick. Use 1–2 sentences per position.";
    const revTxt = reversals ? "If a card is reversed or marked (R), read as blocked or internalized energy." : "Ignore reversals.";
    const cardsTxt = cards
      ? `Cards:\n${cards}`
      : "No cards provided. Draw three fitting archetypes from the Major Arcana. Avoid fatalism. Explain imagery briefly before meaning.";
    const actionTxt = action_bias ? "Close with one specific 48-hour action tied to Present and a smallest-lever micro-pivot for Future." : "";
    const confTxt = confidence_block ? `Add a confidence 1–5 and propose a check-back date within ${horizon}.` : "";
    const langTxt = language ? `Language: ${language}` : "";
    const metaTxt = [
      ctx && `Context: ${ctx}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      langTxt
    ].filter(Boolean).join("\n");

    const common = [
      "You are performing a practical, evidence-minded tarot-style reflection.",
      modeTxt,
      `Positions: ${pos.join(" · ")}`,
      `Horizon for the final position: ${horizon}.`,
      revTxt,
      lensTxt,
      "Treat the final position as trajectory under current conditions, not fixed fate.",
      "Avoid vague platitudes. Tie each sentence back to the question. Use plain language."
    ].filter(Boolean).join("\n");

    const mdOutput = [
      "# Theme in one line:",
      "",
      pos.map(p => `## ${p}\n- Card: {name}\n- Interpretation: …\n- Implication for the question: …`).join("\n\n"),
      actionTxt && "## Action\n- One specific 48-hour step and how to start.",
      confidence_block && "## Calibration\n- Confidence: 1–5\n- Check-back date:",
      "## Skeptic’s corner\n- One possible bias or blind spot to watch for."
    ].filter(Boolean).join("\n");

    const jsonSchema = `Output only valid JSON with this shape:
{
  "theme": "string",
  "positions": [
    {"name": "${pos[0]}", "card": "string", "interpretation": "string", "implication": "string"},
    {"name": "${pos[1]}", "card": "string", "interpretation": "string", "implication": "string"}${pos[2] ? `,
    {"name": "${pos[2]}", "card": "string", "interpretation": "string", "implication": "string"}` : ""}${pos[3] ? `,
    {"name": "${pos[3]}", "card": "string", "interpretation": "string", "implication": "string"}` : ""}
  ]${action_bias ? `,
  "action_48h": "string"` : ""}${confidence_block ? `,
  "confidence": 1,
  "check_back_date": "YYYY-MM-DD"` : ""},
  "skeptics_corner": "string"
}`;

    const header = [
      "Perform a 3-card tarot-style reflection for guidance.",
      metaTxt,
      `Question:\n${question}`,
      cardsTxt,
      common
    ].filter(Boolean).join("\n");

    if (output_format === "json") {
      return [
        header,
        jsonSchema
      ].join("\n\n");
    }

    return [
      header,
      "Output format: Markdown.",
      mdOutput
    ].join("\n\n");
  },
  meta: {
    search_text: [
      "tarot spread reflection past present future",
      "three card spread journaling coaching archetypes",
      "trajectory not fate check-back bias mitigation quick deep modes",
      "json output option reversals positions obstacle outcome trajectory advice",
      "action step 48 hours horizon"
    ].join(" ")
  }
},

    {
      id: "task_breakdown",
      slug: "task-recipe-cot",
      label: "Task Prompt Breakdown — Task/Recipe + Do/Don’t (CoT)",
      kind: "technique",
      categories: [
        "prompt-development-techniques",
        "planning"
      ],
      tags: [
        "use:pattern",
        "use:teaching",
        "use:healing",
        "level:beginner",
        "use:process-improvement",
        "use:recipe",
        "use:brainstorming",
        "use:iteration"
      ],
      use_cases: [
        "break a goal into concrete steps",
        "write a procedural recipe",
        "handoff a task with crisp Do/Don’t guardrails",
        "guide short “explain-your-steps” reasoning"
      ],
      boosters: [
        "Show the step plan as a numbered list before the final deliverable.",
        "Keep reasoning concise and procedural (no hidden chain-of-thought).",
        "List assumptions in one line if any are required."
      ],
      definition: "Decompose a goal into explicit steps (tasks), with optional Do/Don’t constraints, then produce the deliverable.",
      help: "Provide a main brief, enumerate tasks (add as many as needed), then add Do/Don’t guardrails.",
      fields: [
        {
          label: "Main brief / goal",
          desc: "High-level objective or problem statement.",
          key: "main",
          ph: "e.g., Create a study plan for a 6-week data structures course.",
          type: "textarea"
        },
        {
          label: "Tasks (one per line)",
          desc: "Enter one task/step per line.",
          key: "tasks",
          ph: "Task 1…\nTask 2…\nTask 3…",
          type: "textarea"
        },
        {
          label: "Do’s (must do)",
          desc: "Positive guardrails the output must follow.",
          key: "dos",
          ph: "e.g., Use simple language; include references; keep under 500 words.",
          type: "textarea"
        },
        {
          label: "Don’ts / Constraints",
          desc: "Negative guardrails or constraints.",
          key: "donts",
          ph: "e.g., Don’t assume prior knowledge; avoid vendor-specific terms.",
          type: "textarea"
        }
      ],
      template: ({ main, tasks, dos, donts, ctx, audience, style, tone }) => [
    'Use task/recipe chain of thought reasoning to break the goal into explicit steps, then produce the deliverable.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    main && `Goal: ${main}`,
    tasks && (
      'Tasks:\n' + String(tasks)
        .split(/\n+/)
        .map(s => s.trim())
        .filter(Boolean)
        .map((t, i) => `${i + 1}. ${t}`)
        .join('\n')
    ),
    dos && `Do:\n${dos}`,
    donts && `Don’t:\n${donts}`,
    'First show the numbered plan, then execute it to produce the final output. Keep reasoning concise (procedural, verifiable).'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "task prompt breakdown — task/recipe + do/don’t (cot) task-recipe-cot decompose a goal into explicit steps (tasks), with optional do/don’t constraints, then produce the deliverable. provide a main brief, enumerate tasks (add as many as needed), then add do/don’t guardrails. use:pattern use:teaching use:healing level:beginner use:process-improvement use:recipe use:brainstorming use:iteration prompt-development-techniques planning break a goal into concrete steps write a procedural recipe handoff a task with crisp do/don’t guardrails guide short “explain-your-steps” reasoning show the step plan as a numbered list before the final deliverable. keep reasoning concise and procedural (no hidden chain-of-thought). list assumptions in one line if any are required. main brief / goal tasks (one per line) do’s (must do) don’ts / constraints"
      }
    },
    
    {
  id: "three_vaults_practice",
  slug: "three-vaults-practice",
  label: "Three Vaults — Facts → Stories → Essence",
  kind: "framework",

  // Discovery taxonomy
  categories: [
    "self-reflection",
    "wellbeing",
    "personal-development",
    "communication",
    "facilitation",
    "coaching"
  ],
  tags: [
    "type:practice",
    "use:check-in",
    "use:facilitation",
    "use:coaching",
    "use:journaling",
    "topic:vulnerability",
    "topic:communication",
    "topic:mindfulness",
    "origin:MEA",
    "level:beginner"
  ],

  // Why to use it
  use_cases: [
    "1:1 or team check-ins that move beyond small talk (with consent)",
    "group kickoffs and retreats to build trust progressively",
    "coaching conversations that honor safety and depth",
    "personal journaling: ladder from facts to essence",
    "conflict repair or post-mortems with careful pacing"
  ],

  // Helpful nudges
  boosters: [
    "Ladder up, don’t teleport: V1 (facts, 2 minutes) → V2 (one short story) → V3 (one sentence of embodied essence).",
    "Ask for consent before V3: “Are you open to going past facts into what’s true for me right now?”",
    "Timebox V1 and V2; keep V2 to one story to avoid identity armor.",
    "In V3 use present tense and body sense: “What feels most true in my body right now is…”",
    "Deep listening: no fixing, no advising, no rescuing; reflect words, not diagnoses.",
    "If trust wobbles, stop at V2 today. You can always return later.",
    "Clarify confidentiality separately (BRAVING’s ‘Vault’) so people know how what’s shared is held."
  ],

  // Short, professional description + origin note
  definition:
    "A paced conversation practice that climbs through three ‘vaults’: V1 Facts (mind, low vulnerability), V2 Stories (heart, medium vulnerability), V3 Essence (soul, present-moment truth, high vulnerability). Adapted for facilitation and self-reflection.",
  help:
    "Set the container (consent, purpose, time). Run V1→V2→V3 in order, never jumping straight to V3. Use clear consent language and timeboxes. Important: Brené Brown’s BRAVING ‘Vault’ = keeping confidences; this Three Vaults practice (taught at Modern Elder Academy) = depth of sharing. Different concepts; similar metaphor.",

  notice:
    "Attribution: The ‘Three Vaults’ framing is taught at Modern Elder Academy (MEA). This template adapts the practice for facilitation and journaling. Disambiguation: BRAVING’s ‘Vault’ (Brené Brown) refers to confidentiality—distinct from this depth-of-sharing ladder.",

  // Fields
  fields: [
    // Container & safety
    { label: "Purpose (why we’re doing this)", key: "purpose", type: "text",
      ph: "e.g., ‘Deeper check-in for today’s retreat’" },
    { label: "Timebox (minutes total)", key: "timebox_total", type: "text",
      ph: "e.g., 10" },
    { label: "Consent language you’ll use", key: "consent_script", type: "textarea",
      ph: "“Are you open to going past facts into what’s true for me right now?”" },
    { label: "Confidentiality agreement (if any)", key: "confidentiality_note", type: "textarea",
      ph: "State how shares will be held. (This covers BRAVING’s ‘Vault’. )" },
    { label: "Roles / participants", key: "roles", type: "text",
      ph: "e.g., ‘Speaker: A; Listener: B’ or ‘Circle of 6’" },

    // Vault 1 — Facts (mind)
    { label: "V1 — Facts (2 minutes, polite surface facts)", key: "v1_facts", type: "textarea",
      ph: "Bullet points: résumé facts, headlines, current status. Keep it clean and short." },

    // Vault 2 — Stories (heart)
    { label: "V2 — One short story behind the facts", key: "v2_story", type: "textarea",
      ph: "Why these facts matter; what’s the personal meaning or motivation?" },

    // Vault 3 — Essence (soul, right now)
    { label: "V3 — Essence (one sentence, present tense)", key: "v3_essence", type: "text",
      ph: "“What feels most true in my body right now is…”" },

    // Guardrails & support
    { label: "If V3 consent isn’t there, stop at…", key: "v3_boundary", type: "select",
      options: ["V1", "V2"], ph: "Choose the safe stopping point" },
    { label: "Support request (optional)", key: "support_ask", type: "text",
      ph: "A small, concrete ask from listeners/teammates" },
    { label: "Facilitator notes (optional)", key: "fac_notes", type: "textarea",
      ph: "Timing, order, who goes first, reflection prompts…" },

    // Reflection/closure
    { label: "Close-out: gratitude or takeaway (one sentence)", key: "close_note", type: "text",
      ph: "Name one thing you’re thankful for or learned" }
  ],

  // Rendered output
  template: ({
    purpose, timebox_total, consent_script, confidentiality_note, roles,
    v1_facts, v2_story, v3_essence, v3_boundary, support_ask, fac_notes, close_note,
    ctx, audience, style, tone
  }) => [
    "Three Vaults — Facilitation Card",
    "— Adapted for safe, paced depth: V1 Facts → V2 Stories → V3 Essence —",
    "Attribution: practice taught at Modern Elder Academy (MEA).",
    "Note: BRAVING’s ‘Vault’ (Brené Brown) = confidentiality; distinct from this depth ladder.",
    "",
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    purpose && `Purpose: ${purpose}`,
    timebox_total && `Timebox: ${timebox_total} min`,
    roles && `Participants/Roles: ${roles}`,
    confidentiality_note && `Confidentiality: ${confidentiality_note}`,
    consent_script && `Consent: ${consent_script}`,
    "",
    "Run it in order — ladder up, don’t teleport:",
    "",
    "V1 — Facts (mind; low vulnerability; ~2 min)",
    v1_facts && `• Facts:\n${v1_facts}`,
    "",
    "V2 — Stories (heart; medium vulnerability; one short story)",
    v2_story && `• Story behind the facts:\n${v2_story}`,
    "",
    "V3 — Essence (soul; present-moment truth; high vulnerability)",
    v3_essence && `• Essence (present tense): ${v3_essence}`,
    "",
    v3_boundary && `Boundary: If consent/trust wobbles, stop at ${v3_boundary}.`,
    support_ask && `Support request: ${support_ask}`,
    fac_notes && `Facilitator notes:\n${fac_notes}`,
    close_note && `Close-out (gratitude/takeaway): ${close_note}`,
    "",
    "Listener stance: no fixing, no advising, no rescuing. Reflect words and thank the share."
  ].filter(Boolean).join("\n"),

  meta: {
    search_text:
      "three vaults practice facts stories essence modern elder academy MEA braving vault confidentiality consent vulnerability facilitation check-in coaching deep listening ladder up not therapy present-moment truth"
  }
},


    {
      id: "time_machine",
      slug: "time-machine-perspectives",
      label: "Time Machine Advice — Past Self & Future Self",
      kind: "strategy",
      categories: [
        "self-reflection",
        "planning"
      ],
      tags: [
        "use:pattern",
        "topic:future-self",
        "use:brainstorming",
        "level:beginner",
        "topic:clarification",
        "use:goals",
        "use:decision-making"
      ],
      use_cases: [
        "gain wisdom on a current challenge by imagining advice from your younger and older self",
        "practice self-compassion by viewing your situation through the eyes of a past you and a future you",
        "clarify your next steps by hearing what your hopeful future self would tell you to do"
      ],
      boosters: [
        "Visualize your past self vividly (age, surroundings, mindset) to ground their voice. Do the same for your future self at, say, 20 years from now.",
        "Have the future self focus on encouragement and long-term perspective, while the past self might offer innocence or fundamental values you had."
      ],
      definition: "A reflective exercise where you imagine your past self and future self giving their perspectives on your current situation. The past self offers a reminder of where you came from, and the future self gives guidance looking back with wisdom.",
      help: "Optionally specify an age or time for your past self, and describe your current challenge. The model will produce two voices: one from your past self (reacting to the present you) and one from your future self (offering advice), helping you see your situation in a new light.",
      fields: [
        {
          label: "Past self (age or year, optional)",
          key: "past",
          ph: "e.g., 15 or “college senior year”",
          type: "text"
        },
        {
          label: "Current situation or problem",
          key: "situation",
          ph: "Describe what you are dealing with now.",
          type: "textarea"
        }
      ],
      template: ({ past, situation, ctx, audience, style, tone }) => [
    'Seek guidance by imagining perspectives from your past and future selves.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    past && `Past self timeframe: ${past}`,
    situation && `Current situation:\n${situation}`,
    'Output:\n1) Past Self – a message or reaction from your younger self upon seeing your current situation\n2) Future Self – advice or reassurance from an older, wiser you to your present self\n(Each in a distinct voice, followed by a brief reflection on the guidance.)'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "time machine advice — past self & future self time-machine-perspectives a reflective exercise where you imagine your past self and future self giving their perspectives on your current situation. the past self offers a reminder of where you came from, and the future self gives guidance looking back with wisdom. optionally specify an age or time for your past self, and describe your current challenge. the model will produce two voices: one from your past self (reacting to the present you) and one from your future self (offering advice), helping you see your situation in a new light. use:pattern topic:future-self use:brainstorming level:beginner topic:clarification use:goals use:decision-making self-reflection planning gain wisdom on a current challenge by imagining advice from your younger and older self practice self-compassion by viewing your situation through the eyes of a past you and a future you clarify your next steps by hearing what your hopeful future self would tell you to do visualize your past self vividly (age, surroundings, mindset) to ground their voice. do the same for your future self at, say, 20 years from now. have the future self focus on encouragement and long-term perspective, while the past self might offer innocence or fundamental values you had. past self (age or year, optional) current situation or problem"
      }
    },

    {
      id: "tote",
      slug: "tote-test-operate-test-exit",
      label: "TOTE — Test · Operate · Test · Exit",
      kind: "heuristic",
      categories: [
        "planning",
        "brainstorming"
      ],
      tags: [
        "use:pattern",
        "use:communication",
        "use:iteration",
        "level:beginner",
        "topic:prompting"
      ],
      use_cases: [
        "build a minimal control loop for a task",
        "decide when to stop iterating"
      ],
      boosters: [
        "Define exit criteria upfront (avoid endless loops).",
        "Log each test quickly with pass/fail."
      ],
      definition: "A simple cybernetic loop: test the state, operate to change it, test again, then exit when criteria are met.",
      help: "State tests, operations, and exit rule before starting.",
      fields: [
        {
          label: "Initial test (state/criteria)",
          key: "test",
          type: "textarea"
        },
        {
          label: "Operate (action)",
          key: "operate",
          type: "textarea"
        },
        {
          label: "Re-test (check)",
          key: "retest",
          type: "textarea"
        },
        {
          label: "Exit criteria",
          key: "exit",
          type: "textarea"
        }
      ],
      template: ({test,operate,retest,exit,ctx})=>[
      'Use TOTE for a tight feedback loop.',
      ctx && `Context: ${ctx}`,
      test && `Test:\n${test}`,
      operate && `Operate:\n${operate}`,
      retest && `Re-test:\n${retest}`,
      exit && `Exit criteria:\n${exit}`
    ].filter(Boolean).join('\n'),
      meta: {
        search_text: "tote — test · operate · test · exit tote-test-operate-test-exit a simple cybernetic loop: test the state, operate to change it, test again, then exit when criteria are met. state tests, operations, and exit rule before starting. use:pattern use:communication use:iteration level:beginner topic:prompting planning brainstorming build a minimal control loop for a task decide when to stop iterating define exit criteria upfront (avoid endless loops). log each test quickly with pass/fail. initial test (state/criteria) operate (action) re-test (check) exit criteria"
      }
    },

    {
      id: "toulmin",
      slug: "toulmin-argument-model",
      label: "Toulmin’s Argument Model — Claim · Grounds · Warrant · Backing · Qualifier · Rebuttal",
      kind: "strategy",
      categories: [
        "reasoning",
        "critical-thinking",
        "design",
        "psychology",
        "ethics"
      ],
      tags: [
        "type:framework",
        "use:presentations",
        "use:teaching",
        "topic:future-self",
        "level:intermediate",
        "phase:premortem",
        "use:pattern",
        "use:copywriting"
      ],
      use_cases: [
        "debate prep and competitive argumentation",
        "legal briefs and litigation strategy",
        "ux/product design debates",
        "policy briefs and position papers",
        "academic essays and research arguments",
        "negotiation and conflict resolution"
      ],
      boosters: [
        "State at least one explicit warrant that bridges grounds to claim.",
        "Support the warrant with credible backing (data, authority, mechanism).",
        "Add a realistic qualifier (scope, probability, or conditions).",
        "Name a plausible rebuttal and address how you’d handle it."
      ],
      definition: "Breaks an argument into six parts: Claim, Grounds, Warrant, Backing, Qualifier, Rebuttal. Exposes assumptions, clarifies evidence, and adds nuance.",
      help: "Fill what helps; empty fields are omitted. The Qualifier and Rebuttal keep arguments credible and context-aware.",
      fields: [
        {
          label: "Claim",
          desc: "Your main conclusion or thesis.",
          key: "claim",
          ph: "e.g., We should ban single-use plastic bags.",
          type: "textarea"
        },
        {
          label: "Grounds (Evidence)",
          desc: "Facts, observations, or data supporting the claim.",
          key: "grounds",
          ph: "e.g., Plastic bags contribute to ocean pollution and harm wildlife.",
          type: "textarea"
        },
        {
          label: "Warrant",
          desc: "Assumption or principle that links grounds to claim.",
          key: "warrant",
          ph: "e.g., If something causes serious environmental harm, society should regulate or ban it.",
          type: "textarea"
        },
        {
          label: "Backing",
          desc: "Additional support for the warrant (authority, mechanism, precedent).",
          key: "backing",
          ph: "e.g., Studies show sea turtles and seabirds ingest plastic at high rates, increasing mortality.",
          type: "textarea"
        },
        {
          label: "Qualifier",
          desc: "Strength/conditions of the claim (probability, scope, constraints).",
          key: "qualifier",
          ph: "e.g., In most cases… / Generally… / Except where biodegradable alternatives aren’t feasible.",
          type: "text"
        },
        {
          label: "Rebuttal / Reservations",
          desc: "Counterarguments or conditions where the claim may not hold, plus how you’d address them.",
          key: "rebuttal",
          ph: "e.g., Some argue bans hurt low-income communities; provide subsidies for reusables.",
          type: "textarea"
        }
      ],
      template: ({claim,grounds,warrant,backing,qualifier,rebuttal,ctx})=>[
    'Structure an argument using Toulmin’s model.',
    ctx && `Context: ${ctx}`,
    claim     && `Claim:\n${claim}`,
    grounds   && `Grounds (Evidence):\n${grounds}`,
    warrant   && `Warrant:\n${warrant}`,
    backing   && `Backing:\n${backing}`,
    qualifier && `Qualifier:\n${qualifier}`,
    rebuttal  && `Rebuttal / Reservations:\n${rebuttal}`
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "toulmin’s argument model — claim · grounds · warrant · backing · qualifier · rebuttal toulmin-argument-model breaks an argument into six parts: claim, grounds, warrant, backing, qualifier, rebuttal. exposes assumptions, clarifies evidence, and adds nuance. fill what helps; empty fields are omitted. the qualifier and rebuttal keep arguments credible and context-aware. type:framework use:presentations use:teaching topic:future-self level:intermediate phase:premortem use:pattern use:copywriting reasoning critical-thinking design psychology ethics debate prep and competitive argumentation legal briefs and litigation strategy ux/product design debates policy briefs and position papers academic essays and research arguments negotiation and conflict resolution state at least one explicit warrant that bridges grounds to claim. support the warrant with credible backing (data, authority, mechanism). add a realistic qualifier (scope, probability, or conditions). name a plausible rebuttal and address how you’d handle it. claim grounds (evidence) warrant backing qualifier rebuttal / reservations"
      }
    },

    {
      id: "tot_brainstorm",
      slug: "tree-of-thought-brainstorm",
      label: "Tree of Thought — Brainstorm & Evaluate",
      kind: "strategy",
      categories: [
        "reasoning",
        "planning"
      ],
      tags: [
        "use:pattern",
        "use:healing",
        "use:teaching",
        "phase:explore",
        "level:advanced",
        "use:brainstorming",
        "use:decision-making"
      ],
      use_cases: [
        "generate multiple solution paths before deciding",
        "compare tradeoffs across ideas using a scoring rubric",
        "pick a best path with justification and a reflect pass"
      ],
      boosters: [
        "Keep branches shallow (depth 2–3) to avoid overthinking.",
        "Use explicit labels: Branch A, A1, A2… Branch B… Branch C…",
        "Score on 1–5 with one-line justifications per criterion.",
        "Run a quick reflect pass: math/terms/bias/constraints.",
        "If the user supplied criteria, use them; otherwise use the default rubric included below."
      ],
      definition: "Explore three distinct reasoning branches (fast/minimal; thorough/future-proof; creative alternative), score them with a rubric, select/synthesize, deliver, then reflect.",
      help: "Describe the task, constraints, and what “good” looks like. Optionally paste custom evaluation criteria (one per line). Guardrails include arithmetic checks, terminology clarity, source-of-truth checks for time-varying info, and bias/inclusion calls.",
      fields: [
        {
          label: "Task / problem",
          desc: "What should be solved or decided?",
          key: "problem",
          ph: "e.g., Choose a pricing model for a new SaaS.",
          type: "textarea"
        },
        {
          label: "Constraints (time/tools/tone/privacy)",
          desc: "Limits to respect; hard requirements.",
          key: "constraints",
          ph: "e.g., Launch in 2 weeks; no paid ads; tone: friendly/expert.",
          type: "textarea"
        },
        {
          label: "Success criteria (what “good” looks like)",
          desc: "How the output will be judged.",
          key: "success",
          ph: "e.g., Clear pricing tiers, easy to A/B test, predictable revenue.",
          type: "textarea"
        },
        {
          label: "Evaluation criteria (optional, one per line)",
          desc: "If empty, a default rubric will be used.",
          key: "criteria",
          ph: "Plausibility…\nEvidence…\nConstraint fit…\nRisk profile…\nInclusivity…\nSimplicity…\nNovelty…",
          type: "textarea"
        }
      ],
      template: ({ problem, constraints, success, criteria, ctx, audience, style, tone }) => {
    const rubricLines = String(criteria||'').split(/\n+/).map(s=>s.trim()).filter(Boolean);
    const rubric = rubricLines.length
      ? 'Evaluation criteria:\n' + rubricLines.map((c,i)=>`${i+1}. ${c}`).join('\n')
      : [
          'Default scoring rubric (1–5 each):',
          '1) Plausibility — internally coherent and realistic.',
          '2) Evidence — verifiable facts; cite when needed.',
          '3) Constraint fit — matches time, tools, and tone.',
          '4) Risk profile — failure modes, ambiguity, hidden costs.',
          '5) Inclusivity — avoid Western-centric defaults; note lenses.',
          '6) Simplicity — minimum moving parts.',
          '7) Novelty — useful creativity without hand-waving.'
        ].join('\n');

    return [
      'You are in Tree-of-Thought mode.',
      ctx && `Context: ${ctx}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      problem && `Task: ${problem}`,
      constraints && `Constraints: ${constraints}`,
      success && `Success criteria: ${success}`,
      rubric,
      'Procedure:',
      '1) Generate 3 branches with different assumptions:',
      '   • Branch A: fast/minimal solution',
      '   • Branch B: thorough/future-proof solution',
      '   • Branch C: creative alternative',
      '   For each branch, list: assumptions, 3–5 steps, facts needed, risks, brief cost/benefit.',
      '2) Expand only the 2 most promising steps per branch to avoid overthinking.',
      '3) Score each branch on the rubric (1–5) with one-line justifications.',
      '4) Select the winning branch or synthesize a blend (2–4 lines on why).',
      '5) Produce the final deliverable.',
      '6) Reflect pass: check math (digit-by-digit if any), clarify terminology on first use, verify time-varying info against a source of truth, call out potential bias/assumptions, and list trade-offs in 3 bullets.',
      'Output format:',
      'Root',
      '├─ Branch A',
      '│  ├─ A1 …',
      '│  ├─ A2 …',
      '│  └─ …',
      '├─ Branch B',
      '│  ├─ B1 …',
      '│  ├─ B2 …',
      '│  └─ …',
      '└─ Branch C',
      '   ├─ C1 …',
      '   ├─ C2 …',
      '   └─ …',
      '→ Scores table → Selected path/synthesis → Final answer → Reflect pass.'
    ].filter(Boolean).join('\n');
  },
      meta: {
        search_text: "tree of thought — brainstorm & evaluate tree-of-thought-brainstorm explore three distinct reasoning branches (fast/minimal; thorough/future-proof; creative alternative), score them with a rubric, select/synthesize, deliver, then reflect. describe the task, constraints, and what “good” looks like. optionally paste custom evaluation criteria (one per line). guardrails include arithmetic checks, terminology clarity, source-of-truth checks for time-varying info, and bias/inclusion calls. use:pattern use:healing use:teaching phase:explore level:advanced use:brainstorming use:decision-making reasoning planning generate multiple solution paths before deciding compare tradeoffs across ideas using a scoring rubric pick a best path with justification and a reflect pass keep branches shallow (depth 2–3) to avoid overthinking. use explicit labels: branch a, a1, a2… branch b… branch c… score on 1–5 with one-line justifications per criterion. run a quick reflect pass: math/terms/bias/constraints. if the user supplied criteria, use them; otherwise use the default rubric included below. task / problem constraints (time/tools/tone/privacy) success criteria (what “good” looks like) evaluation criteria (optional, one per line)"
      }
    },

    {
      id: "tot_decompose",
      slug: "tree-of-thought-decomposition",
      label: "Tree of Thought — Decomposition",
      kind: "strategy",
      categories: [
        "reasoning",
        "planning"
      ],
      tags: [
        "use:pattern",
        "topic:decomposition",
        "use:teaching",
        "level:advanced",
        "use:brainstorming"
      ],
      use_cases: [
        "break a complex goal into a branching plan with alternatives",
        "surface trade-offs at ambiguous nodes with scoring",
        "select a minimal viable critical path with checkpoints"
      ],
      boosters: [
        "Show a numbered hierarchy (1, 1.1, 1.1.1).",
        "Offer 2–3 alternative sub-steps at ambiguous nodes.",
        "Label dependencies and the critical path.",
        "End with a smallest-next-action checklist and a reflect pass."
      ],
      definition: "Decompose a complex goal into a branching hierarchy with alternative sub-steps, score branch strategies, select a critical path, then reflect.",
      help: "Provide the goal, constraints, and any focus areas or risks. The model will build a numbered tree, compare strategies, choose a minimal viable path, and list next actions.",
      fields: [
        {
          label: "Goal / complex task",
          desc: "What should be decomposed?",
          key: "goal",
          ph: "e.g., Launch a developer portal in 6 weeks.",
          type: "textarea"
        },
        {
          label: "Constraints (time/tools/tone/privacy)",
          desc: "Limits to respect; hard requirements.",
          key: "constraints",
          ph: "e.g., 2 engineers, budget $5k, HIPAA data.",
          type: "textarea"
        },
        {
          label: "Success criteria (what “good” looks like)",
          desc: "How the outcome will be judged.",
          key: "success",
          ph: "e.g., Docs coverage ≥80%, SSO, <200ms P95.",
          type: "textarea"
        },
        {
          label: "Focus areas (one per line, optional)",
          desc: "Dimensions to branch on (e.g., people, process, tooling).",
          key: "facets",
          ph: "Docs…\nAuth…\nDX metrics…\nContent strategy…",
          type: "textarea"
        },
        {
          label: "Known risks & assumptions (one per line, optional)",
          desc: "Things that could change the plan.",
          key: "risks",
          ph: "Limited writer bandwidth…\nPending legal review…",
          type: "textarea"
        },
        {
          label: "Evaluation criteria (optional, one per line)",
          desc: "If empty, a default rubric will be used.",
          key: "criteria",
          ph: "Plausibility…\nEvidence…\nConstraint fit…\nRisk profile…\nInclusivity…\nSimplicity…\nNovelty…",
          type: "textarea"
        }
      ],
      template: ({ goal, constraints, success, facets, risks, criteria, ctx, audience, style, tone }) => {
    const rubricLines = String(criteria||'').split(/\n+/).map(s=>s.trim()).filter(Boolean);
    const rubric = rubricLines.length
      ? 'Evaluation criteria:\n' + rubricLines.map((c,i)=>`${i+1}. ${c}`).join('\n')
      : [
          'Default scoring rubric (1–5 each):',
          '1) Plausibility — internally coherent and realistic.',
          '2) Evidence — verifiable facts; cite when needed.',
          '3) Constraint fit — matches time, tools, and tone.',
          '4) Risk profile — failure modes, ambiguity, hidden costs.',
          '5) Inclusivity — avoid Western-centric defaults; note lenses.',
          '6) Simplicity — minimum moving parts.',
          '7) Novelty — useful creativity without hand-waving.'
        ].join('\n');

    const facetsBlock = String(facets||'').split(/\n+/).map(s=>s.trim()).filter(Boolean);
    const risksBlock = String(risks||'').split(/\n+/).map(s=>s.trim()).filter(Boolean);

    return [
      'You are in Tree-of-Thought mode.',
      ctx && `Context: ${ctx}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      goal && `Goal: ${goal}`,
      constraints && `Constraints: ${constraints}`,
      success && `Success criteria: ${success}`,
      facetsBlock.length && ('Focus areas:\n' + facetsBlock.map((f,i)=>`${i+1}. ${f}`).join('\n')),
      risksBlock.length && ('Known risks & assumptions:\n' + risksBlock.map((r,i)=>`${i+1}. ${r}`).join('\n')),
      rubric,
      'Procedure:',
      '1) Build a branching decomposition as a numbered tree (depth 2–3). Where a node is ambiguous, show 2–3 alternative sub-steps with brief pros/cons.',
      '2) Propose 3 branch strategies at the top level:',
      '   • Branch A: fast/minimal deliverable',
      '   • Branch B: thorough/future-proof deliverable',
      '   • Branch C: creative or non-obvious approach',
      '   For each, list assumptions, 3–5 major steps, key dependencies, and risks.',
      '3) Score the 3 branches on the rubric (1–5) with one-line justifications and a short cost/benefit.',
      '4) Select the critical path (minimal viable plan) and label it in the tree. Include dependencies and 2–4 checkpoints.',
      '5) Next actions: a checklist of 5–8 smallest steps to start in the next 1–2 days.',
      '6) Reflect pass: check math (digit-by-digit if any), clarify terminology on first use, verify time-varying info against a source of truth, call out potential bias/assumptions, and list any trade-offs in 3 bullets.',
      'Output format:',
      '1) Numbered tree (1, 1.1, 1.1.1) with alternatives annotated',
      '2) Branch A/B/C summaries',
      '3) Scores table',
      '4) Selected critical path with dependencies + checkpoints',
      '5) Next-actions checklist',
      '6) Reflect pass notes'
    ].filter(Boolean).join('\n');
  },
      meta: {
        search_text: "tree of thought — decomposition tree-of-thought-decomposition decompose a complex goal into a branching hierarchy with alternative sub-steps, score branch strategies, select a critical path, then reflect. provide the goal, constraints, and any focus areas or risks. the model will build a numbered tree, compare strategies, choose a minimal viable path, and list next actions. use:pattern topic:decomposition use:teaching level:advanced use:brainstorming reasoning planning break a complex goal into a branching plan with alternatives surface trade-offs at ambiguous nodes with scoring select a minimal viable critical path with checkpoints show a numbered hierarchy (1, 1.1, 1.1.1). offer 2–3 alternative sub-steps at ambiguous nodes. label dependencies and the critical path. end with a smallest-next-action checklist and a reflect pass. goal / complex task constraints (time/tools/tone/privacy) success criteria (what “good” looks like) focus areas (one per line, optional) known risks & assumptions (one per line, optional) evaluation criteria (optional, one per line)"
      }
    },

    {
      id: "triangulation",
      slug: "triangulation-methods",
      label: "Triangulation Methods",
      kind: "framework",
      categories: [
        "reasoning",
        "ethics",
        "operations"
      ],
      tags: [
        "use:pattern",
        "use:presentations",
        "topic:values",
        "level:intermediate",
        "phase:apply",
        "use:workshop"
      ],
      use_cases: [
        "reduce single-method bias by cross-checking findings",
        "document alignment/divergence across methods",
        "decide where to deepen research"
      ],
      boosters: [
        "Label each method with its sampling limits.",
        "End with a “What we’ll do next” line for resolving divergences."
      ],
      definition: "Use multiple methods/sources to converge on more reliable findings and reduce researcher bias.",
      help: "Capture A/B (and optional C) methods + findings; then cross-check alignment and note dominance risks.",
      fields: [
        {
          label: "Question being investigated",
          key: "question",
          ph: "Research focus / decision at stake.",
          type: "textarea"
        },
        {
          label: "Method A",
          key: "method_a",
          ph: "Survey / Interview / Analytics…",
          type: "text"
        },
        {
          label: "Findings from A",
          key: "findings_a",
          ph: "Bullets; one per line.",
          type: "textarea"
        },
        {
          label: "Method B",
          key: "method_b",
          ph: "Different lens",
          type: "text"
        },
        {
          label: "Findings from B",
          key: "findings_b",
          ph: "Bullets; one per line.",
          type: "textarea"
        },
        {
          label: "Method C (optional)",
          key: "method_c",
          ph: "Third lens",
          type: "text"
        },
        {
          label: "Findings from C (optional)",
          key: "findings_c",
          ph: "Bullets; one per line.",
          type: "textarea"
        },
        {
          label: "Cross-check — where do findings align/diverge?",
          key: "cross",
          ph: "Note convergences and tensions.",
          type: "textarea"
        },
        {
          label: "Bias risk — which perspective dominates?",
          key: "bias_risk",
          ph: "Recruitment, sampling, analyst bias…",
          type: "textarea"
        }
      ],
      template: ({ question, method_a, findings_a, method_b, findings_b, method_c, findings_c, cross, bias_risk, ctx, audience, style, tone }) => [
    'Run a triangulation summary to reduce single-method bias.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    question && ('Question:\n' + question),
    (method_a || findings_a) && [
      `Method A: ${method_a||''}`,
      findings_a && ('Findings A:\n' + String(findings_a).split(/\n+/).map(s=>s.trim()).filter(Boolean).map((x,i)=>`- ${x}`).join('\n'))
    ].filter(Boolean).join('\n'),
    (method_b || findings_b) && [
      `Method B: ${method_b||''}`,
      findings_b && ('Findings B:\n' + String(findings_b).split(/\n+/).map(s=>s.trim()).filter(Boolean).map((x,i)=>`- ${x}`).join('\n'))
    ].filter(Boolean).join('\n'),
    (method_c || findings_c) && [
      `Method C: ${method_c||''}`,
      findings_c && ('Findings C:\n' + String(findings_c).split(/\n+/).map(s=>s.trim()).filter(Boolean).map((x,i)=>`- ${x}`).join('\n'))
    ].filter(Boolean).join('\n'),
    cross && ('Cross-check:\n' + cross),
    bias_risk && ('Bias risk:\n' + bias_risk),
    'Output:\n1) Convergences\n2) Divergences\n3) Dominance risks\n4) Next research step'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "triangulation methods triangulation-methods use multiple methods/sources to converge on more reliable findings and reduce researcher bias. capture a/b (and optional c) methods + findings; then cross-check alignment and note dominance risks. use:pattern use:presentations topic:values level:intermediate phase:apply use:workshop reasoning ethics operations reduce single-method bias by cross-checking findings document alignment/divergence across methods decide where to deepen research label each method with its sampling limits. end with a “what we’ll do next” line for resolving divergences. question being investigated method a findings from a method b findings from b method c (optional) findings from c (optional) cross-check — where do findings align/diverge? bias risk — which perspective dominates?"
      }
    },

    {
      id: "trigger_storming",
      slug: "trigger-storming",
      label: "Trigger Storming — Prompt-based brainstorming",
      kind: "framework",
      categories: [
        "creativity",
        "brainstorming"
      ],
      tags: [
        "type:technique",
        "topic:prompting",
        "use:brainstorming",
        "level:intermediate"
      ],
      use_cases: [
        "spark discussion with provocative prompts",
        "generate ideas from abstract or incomplete statements"
      ],
      boosters: [
        "Use unusual or even provocative triggers to jolt thinking in new directions.",
        "Build on whatever associations the trigger evokes, no matter how tangential or odd they seem."
      ],
      definition: "A brainstorming method where you use specific prompts or \"triggers\" – such as open-ended sentences or abstract statements – to inspire new thoughts. The triggers are designed to provoke or challenge assumptions, helping the group or individual break out of conventional ideas.",
      help: "Provide your problem or topic. Optionally include some trigger prompts (one per line). The model will either use your triggers or generate its own, then explore ideas that arise from responding to each trigger.",
      fields: [
        {
          label: "Problem or topic",
          key: "problem",
          ph: "e.g., Low participation in community events",
          type: "textarea"
        },
        {
          label: "Custom triggers (optional, one per line)",
          key: "triggers",
          ph: "e.g., \"What if nobody had cars?\"\n\"Imagine this problem 50 years in the future...\"",
          type: "textarea"
        }
      ],
      template: ({ problem, triggers, ctx }) => [
    'Apply Trigger Storming with prompts to spur ideas.',
    ctx && `Context: ${ctx}`,
    problem && `Problem: ${problem}`,
    triggers
      ? 'Triggers:\n' + String(triggers).split(/\n+/).map(t => `- ${t}`).join('\n')
      : 'Trigger: (the assistant will provide provocative prompts related to the topic)',
    'For each trigger, respond with ideas or insights it inspires. Finally, compile the most useful ideas from these responses.'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "trigger storming — prompt-based brainstorming trigger-storming a brainstorming method where you use specific prompts or \"triggers\" – such as open-ended sentences or abstract statements – to inspire new thoughts. the triggers are designed to provoke or challenge assumptions, helping the group or individual break out of conventional ideas. provide your problem or topic. optionally include some trigger prompts (one per line). the model will either use your triggers or generate its own, then explore ideas that arise from responding to each trigger. type:technique topic:prompting use:brainstorming level:intermediate creativity brainstorming spark discussion with provocative prompts generate ideas from abstract or incomplete statements use unusual or even provocative triggers to jolt thinking in new directions. build on whatever associations the trigger evokes, no matter how tangential or odd they seem. problem or topic custom triggers (optional, one per line)"
      }
    },

    {
      id: "triz",
      slug: "triz-inventive-problem-solving",
      label: "TRIZ (Theory of Inventive Problem Solving)",
      kind: "framework",
      categories: [
        "brainstorming",
        "writing",
        "reasoning"
      ],
      tags: [
        "use:pattern",
        "use:communication",
        "use:brainstorming",
        "use:content",
        "level:intermediate",
        "use:workshop",
        "type:technique"
      ],
      use_cases: [
        "resolve contradictions without trade-offs",
        "generate inventive principles to explore",
        "aim toward an Ideal Final Result (IFR)"
      ],
      boosters: [
        "Map each contradiction to candidate inventive principles.",
        "Offer at least 3 distinct concepts referencing principles.",
        "Briefly test each concept against constraints/resources."
      ],
      definition: "A method that analyzes contradictions and patterns of invention to propose principle-driven solutions toward an ideal outcome.",
      help: "State the problem, list contradictions and available resources, and describe the Ideal Final Result (IFR).",
      fields: [
        {
          label: "Problem statement",
          desc: "What needs an inventive solution?",
          key: "problem",
          ph: "We need high throughput without increasing cost…",
          type: "textarea"
        },
        {
          label: "Contradictions (one per line)",
          desc: "Conflicts like speed vs quality.",
          key: "contradictions",
          ph: "Increase speed vs maintain accuracy…\nReduce cost vs keep reliability…",
          type: "textarea"
        },
        {
          label: "Available resources (one per line)",
          desc: "Internal/external resources, fields, effects.",
          key: "resources",
          ph: "Idle CPU cycles…\nUser-generated data…\nCapacitors…",
          type: "textarea"
        },
        {
          label: "Ideal Final Result (IFR)",
          desc: "Describe the near-perfect outcome.",
          key: "ifr",
          ph: "Zero defects at current cost and time…",
          type: "textarea"
        },
        {
          label: "Do's (must do)",
          desc: "Positive guardrails.",
          key: "dos",
          ph: "Reference named principles; give 3+ concepts.",
          type: "textarea"
        },
        {
          label: "Don'ts / constraints",
          desc: "Limits to respect.",
          key: "donts",
          ph: "Avoid vague “be more efficient”.",
          type: "textarea"
        }
      ],
      template: ({ problem, contradictions, resources, ifr, dos, donts, ctx, audience, style, tone }) => [
    'Apply TRIZ: analyze contradictions, aim for the Ideal Final Result, propose principle-based concepts.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    problem && `Problem: ${problem}`,
    contradictions && (
      'Contradictions:\n' + String(contradictions)
        .split(/\n+/).map(s=>s.trim()).filter(Boolean)
        .map((c,i)=> `${i+1}. ${c}`).join('\n')
    ),
    resources && (
      'Resources:\n' + String(resources)
        .split(/\n+/).map(s=>s.trim()).filter(Boolean)
        .map((r,i)=> `${i+1}. ${r}`).join('\n')
    ),
    ifr && `Ideal Final Result (IFR): ${ifr}`,
    dos && `Do:\n${dos}`,
    donts && `Don\'t:\n${donts}`,
    'Output:\n1) Map contradictions → candidate inventive principles\n2) 3–5 concepts referencing principles\n3) Quick feasibility/impact check'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "triz (theory of inventive problem solving) triz-inventive-problem-solving a method that analyzes contradictions and patterns of invention to propose principle-driven solutions toward an ideal outcome. state the problem, list contradictions and available resources, and describe the ideal final result (ifr). use:pattern use:communication use:brainstorming use:content level:intermediate use:workshop type:technique brainstorming writing reasoning resolve contradictions without trade-offs generate inventive principles to explore aim toward an ideal final result (ifr) map each contradiction to candidate inventive principles. offer at least 3 distinct concepts referencing principles. briefly test each concept against constraints/resources. problem statement contradictions (one per line) available resources (one per line) ideal final result (ifr) do's (must do) don'ts / constraints"
      }
    },

    {
      id: "value_effort_matrix",
      slug: "value-effort-matrix",
      label: "Value vs. Effort — 2×2 Quick Wins Matrix",
      kind: "strategy",
      categories: [
        "planning",
        "operations",
        "product-management"
      ],
      tags: [
        "type:framework",
        "topic:matrix",
        "use:workshop",
        "level:intermediate"
      ],
      use_cases: [
        "visualize trade-offs",
        "identify quick wins",
        "kill time sinks"
      ],
      boosters: [
        "Sort final list by “Quick Wins” first."
      ],
      definition: "Plot backlog items on High/Low Value vs. High/Low Effort. Prioritize Quick Wins.",
      help: "List items (one per line). If you have rough scores, include them like \"Item | value | effort\".",
      fields: [
        {
          label: "Items (one per line)",
          key: "items",
          ph: "Feature A | 5 | 2\nFeature B | 2 | 5\nFeature C",
          type: "textarea"
        },
        {
          label: "Scale hint (optional)",
          key: "scales",
          ph: "Value & Effort scale: 1 (low) – 5 (high)",
          type: "text"
        },
        {
          label: "Notes (optional)",
          key: "notes",
          ph: "Constraints, deadlines, dependencies",
          type: "textarea"
        }
      ],
      template: ({ items, scales, notes, usecase: ctx, audience, style, tone }) => [
    'Classify backlog with a Value vs. Effort 2×2.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    items && ('Items:\n' + items),
    scales && ('Scale:\n' + scales),
    notes && ('Notes:\n' + notes),
    'Output:\n1) Quadrants: Quick Wins (High V, Low E), Major Projects (High V, High E), Fill-ins (Low V, Low E), Time Sinks (Low V, High E)\n2) Rationale per placement\n3) Top 5 action list with owners & next step'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "value vs. effort — 2×2 quick wins matrix value-effort-matrix plot backlog items on high/low value vs. high/low effort. prioritize quick wins. list items (one per line). if you have rough scores, include them like \"item | value | effort\". type:framework topic:matrix use:workshop level:intermediate planning operations product-management visualize trade-offs identify quick wins kill time sinks sort final list by “quick wins” first. items (one per line) scale hint (optional) notes (optional)"
      }
    },

    {
      id: "vroom_yetton",
      slug: "vroom-yetton-jago-decision",
      label: "Vroom–Yetton–Jago Decision Model",
      kind: "strategy",
      categories: [
        "decision",
        "brainstorming",
        "operations"
      ],
      tags: [
        "type:framework",
        "use:pattern",
        "topic:clarification",
        "level:intermediate",
        "use:decision-making"
      ],
      use_cases: [
        "choose an autocratic, consultative, or group style",
        "balance decision quality vs. speed and commitment"
      ],
      boosters: [
        "Answer each diagnostic question explicitly; show the path to the style.",
        "Note risks if a faster/slower style is chosen."
      ],
      definition: "A diagnostic tree to select the appropriate decision style given quality, expertise, commitment, and time constraints.",
      help: "Fill the diagnostics; get a recommended style and rationale.",
      fields: [
        {
          label: "Problem/decision",
          key: "problem",
          type: "textarea"
        },
        {
          label: "Importance of decision quality",
          key: "quality",
          ph: "low | medium | high",
          type: "text"
        },
        {
          label: "Leader expertise on this problem",
          key: "expertise",
          ph: "low | medium | high",
          type: "text"
        },
        {
          label: "Need for team commitment",
          key: "commitment",
          ph: "low | medium | high",
          type: "text"
        },
        {
          label: "Time constraints",
          key: "time",
          ph: "tight | normal",
          type: "text"
        }
      ],
      template: ({problem,quality,expertise,commitment,time,ctx})=>[
      'Use the Vroom–Yetton–Jago decision style diagnostic.',
      ctx && `Context: ${ctx}`,
      problem && `Problem:\n${problem}`,
      quality && `Quality importance: ${quality}`,
      expertise && `Leader expertise: ${expertise}`,
      commitment && `Team commitment needed: ${commitment}`,
      time && `Time constraints: ${time}`,
      'Return: recommended style (AI, AII, CI, CII, GII) with rationale and next step.'
    ].filter(Boolean).join('\n'),
      meta: {
        search_text: "vroom–yetton–jago decision model vroom-yetton-jago-decision a diagnostic tree to select the appropriate decision style given quality, expertise, commitment, and time constraints. fill the diagnostics; get a recommended style and rationale. type:framework use:pattern topic:clarification level:intermediate use:decision-making decision brainstorming operations choose an autocratic, consultative, or group style balance decision quality vs. speed and commitment answer each diagnostic question explicitly; show the path to the style. note risks if a faster/slower style is chosen. problem/decision importance of decision quality leader expertise on this problem need for team commitment time constraints"
      }
    },

    {
      id: "weighted_mini_matrix",
      slug: "weighted-mini-matrix",
      label: "Weighted Mini-Matrix (quick score)",
      kind: "strategy",
      categories: [
        "decision",
        "planning"
      ],
      tags: [
        "use:pattern",
        "topic:matrix",
        "use:planning",
        "level:intermediate"
      ],
      use_cases: [
        "compare up to 3 options against 2–3 criteria",
        "force a transparent, quick pick"
      ],
      boosters: [
        "If a criterion matters more, duplicate it (acts as a simple weight).",
        "Break ties with a 5-minute spike test you’ll define at the end."
      ],
      definition: "Tiny decision matrix: options × criteria with 1–5 ratings; totals pick the frontrunner.",
      help: "Enter options (one per line) and criteria (one per line). In “Quick ratings,” add one line per option like “Option Name: 4, 3, 5” matching criteria order.",
      fields: [
        {
          label: "Options (≤3, one per line)",
          key: "options",
          ph: "Option A\nOption B\nOption C",
          type: "textarea"
        },
        {
          label: "Criteria (2–3, one per line)",
          key: "criteria",
          ph: "Impact\nEffort\nRisk",
          type: "textarea"
        },
        {
          label: "Quick ratings (1–5) — one line per option",
          key: "ratings",
          ph: "Option A: 5,2,4\nOption B: 4,3,5",
          type: "textarea"
        }
      ],
      template: ({ options, criteria, ratings, ctx, audience, style, tone }) => {
    const opts = String(options||'').split(/\n+/).map(s=>s.trim()).filter(Boolean).slice(0,3);
    const crit = String(criteria||'').split(/\n+/).map(s=>s.trim()).filter(Boolean).slice(0,3);
    const rateLines = String(ratings||'').split(/\n+/).map(s=>s.trim()).filter(Boolean);
    const scoreMap = {};
    rateLines.forEach(line=>{
      const parts = line.split(':');
      const name = (parts[0]||'').trim();
      const nums = (parts[1]||'').split(/[, \t]+/).map(n=>parseFloat(n)).filter(n=>!isNaN(n)).slice(0,crit.length);
      if(name) scoreMap[name]=nums;
    });
    const totals = opts.map(name=>{
      const arr = (scoreMap[name]||[]);
      const total = arr.reduce((a,b)=>a+b,0);
      return { name, arr, total };
    });
    const best = totals.reduce((a,b)=> (b.total>(a?.total??-Infinity)?b:a), null);

    const header = [
      'Run a quick weighted mini-matrix.',
      ctx && `Context: ${ctx}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      opts.length && ('Options:\n' + opts.map((o,i)=>`${i+1}. ${o}`).join('\n')),
      crit.length && ('Criteria (order = rating order):\n' + crit.map((c,i)=>`${i+1}. ${c}`).join('\n'))
    ].filter(Boolean).join('\n');

    const table = totals.length ? [
      'Ratings & totals:',
      ...totals.map(t => {
        const cells = t.arr.map((n,i)=>`${crit[i]??`C${i+1}`}=${n}`).join(', ');
        return `- ${t.name}: ${cells} | Total=${t.total||0}`;
      })
    ].join('\n') : '';

    const pick = best ? `Highest score → Next action: ${best.name}` : 'Highest score → Next action: (insufficient ratings)';

    return [header, table, pick, 'Output:\n1) Matrix summary\n2) Pick + one 5-min spike to validate'].filter(Boolean).join('\n');
  },
      meta: {
        search_text: "weighted mini-matrix (quick score) weighted-mini-matrix tiny decision matrix: options × criteria with 1–5 ratings; totals pick the frontrunner. enter options (one per line) and criteria (one per line). in “quick ratings,” add one line per option like “option name: 4, 3, 5” matching criteria order. use:pattern topic:matrix use:planning level:intermediate decision planning compare up to 3 options against 2–3 criteria force a transparent, quick pick if a criterion matters more, duplicate it (acts as a simple weight). break ties with a 5-minute spike test you’ll define at the end. options (≤3, one per line) criteria (2–3, one per line) quick ratings (1–5) — one line per option"
      }
    },

    {
      id: "what_if",
      slug: "what-if-scenarios",
      label: "What If — Scenario reframing questions",
      kind: "framework",
      categories: [
        "creativity",
        "brainstorming"
      ],
      tags: [
        "type:technique",
        "use:problem-framing",
        "use:brainstorming",
        "level:beginner"
      ],
      use_cases: [
        "reframe a problem by changing context or constraints",
        "explore alternative outcomes or perspectives"
      ],
      boosters: [
        "Pose wild \"what if\" questions beyond realistic bounds to expand thinking.",
        "After exploring an imagined scenario, extract any ideas that could be applied (even partially) to the real situation."
      ],
      definition: "A technique of reframing problems by asking \"What if...?\" questions that introduce new scenarios or constraints. By imagining how the issue would look under different circumstances (e.g., different people, times, or rules), you gain fresh perspectives that can lead to innovative solutions.",
      help: "Describe your problem. Optionally provide a specific \"What if\" scenario to explore. The model will propose its own additional \"What if\" questions, examine each hypothetical scenario, and then connect insights back to your actual problem.",
      fields: [
        {
          label: "Problem or topic",
          key: "problem",
          ph: "e.g., Difficulty in remote team collaboration",
          type: "textarea"
        },
        {
          label: "What-if scenario (optional)",
          key: "scenario",
          ph: "e.g., All communication had to be asynchronous",
          type: "text"
        }
      ],
      template: ({ problem, scenario, ctx }) => [
    'Use the "What If" method to rethink the problem via alternate scenarios.',
    ctx && `Context: ${ctx}`,
    problem && `Problem: ${problem}`,
    scenario && `Scenario to explore: What if ${scenario}?`,
    'Propose a few other "What if...?" questions that dramatically change some aspect of the problem.',
    'For each hypothetical question, explore how the situation and solutions might differ.',
    'Finally, identify any useful insights from these scenarios that could inform real-world solutions.'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "what if — scenario reframing questions what-if-scenarios a technique of reframing problems by asking \"what if...?\" questions that introduce new scenarios or constraints. by imagining how the issue would look under different circumstances (e.g., different people, times, or rules), you gain fresh perspectives that can lead to innovative solutions. describe your problem. optionally provide a specific \"what if\" scenario to explore. the model will propose its own additional \"what if\" questions, examine each hypothetical scenario, and then connect insights back to your actual problem. type:technique use:problem-framing use:brainstorming level:beginner creativity brainstorming reframe a problem by changing context or constraints explore alternative outcomes or perspectives pose wild \"what if\" questions beyond realistic bounds to expand thinking. after exploring an imagined scenario, extract any ideas that could be applied (even partially) to the real situation. problem or topic what-if scenario (optional)"
      }
    },

    {
      id: "wishing",
      slug: "wishing-technique",
      label: "Wishing — Imagine ideal solutions",
      kind: "framework",
      categories: [
        "creativity",
        "brainstorming"
      ],
      tags: [
        "type:technique",
        "use:brainstorming",
        "level:beginner"
      ],
      use_cases: [
        "think beyond realistic constraints",
        "identify features of an ideal outcome"
      ],
      boosters: [
        "Encourage even absurd or impossible wishes; they can spark real ideas.",
        "After listing wishes, examine each to find elements you *can* actually implement."
      ],
      definition: "An ideation method where you freely wish for the perfect or even impossible solutions to a problem. By articulating “magic wand” wishes without restraint, you can then work backward to figure out how to incorporate aspects of those ideal solutions into practical reality.",
      help: "Describe your problem or goal. The model will generate a list of \"I wish...\" statements – ideal, unconstrained solutions – and then suggest ways to adapt elements of those wishes into feasible ideas or actions.",
      fields: [
        {
          label: "Problem or goal",
          key: "problem",
          ph: "e.g., Traffic congestion in city center",
          type: "textarea"
        }
      ],
      template: ({ problem, ctx }) => [
    'Use the Wishing technique to generate ideal solutions.',
    ctx && `Context: ${ctx}`,
    problem && `Problem: ${problem}`,
    'First, list several "I wish..." statements describing perfect-world solutions, even if they are impractical.',
    'Then, for each wish, suggest how a part of it could be adapted into a realistic solution or plan.'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "wishing — imagine ideal solutions wishing-technique an ideation method where you freely wish for the perfect or even impossible solutions to a problem. by articulating “magic wand” wishes without restraint, you can then work backward to figure out how to incorporate aspects of those ideal solutions into practical reality. describe your problem or goal. the model will generate a list of \"i wish...\" statements – ideal, unconstrained solutions – and then suggest ways to adapt elements of those wishes into feasible ideas or actions. type:technique use:brainstorming level:beginner creativity brainstorming think beyond realistic constraints identify features of an ideal outcome encourage even absurd or impossible wishes; they can spark real ideas. after listing wishes, examine each to find elements you *can* actually implement. problem or goal"
      }
    },

    {
      id: "woop",
      slug: "woop-wish-outcome-obstacle-plan",
      label: "WOOP (Wish–Outcome–Obstacle–Plan)",
      kind: "strategy",
      categories: [
        "planning",
        "brainstorming"
      ],
      tags: [
        "use:pattern",
        "use:workshop",
        "use:evaluation",
        "level:beginner"
      ],
      use_cases: [
        "contrast desired outcome with the main obstacle",
        "bind an if–then plan to the obstacle"
      ],
      boosters: [
        "Phrase the wish so it’s completable in ≤2 weeks.",
        "Make the obstacle internal (habit/thought) when possible."
      ],
      definition: "Wish → Outcome → Obstacle → Plan (if obstacle, then I will X).",
      help: "Write a short, specific wish; name the tangible best outcome; identify the likely obstacle; define the if–then plan.",
      fields: [
        {
          label: "Wish — what do I want to complete?",
          key: "wish",
          type: "textarea"
        },
        {
          label: "Outcome — benefit if I succeed?",
          key: "outcome",
          type: "textarea"
        },
        {
          label: "Obstacle — what usually gets in the way?",
          key: "obstacle",
          type: "textarea"
        },
        {
          label: "Plan — if obstacle, then I will…",
          key: "plan",
          type: "textarea"
        }
      ],
      template: ({ wish, outcome, obstacle, plan, ctx, audience, style, tone }) => [
    'Use WOOP to turn motivation into a plan.',
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,
    wish && ('Wish:\n' + wish),
    outcome && ('Outcome:\n' + outcome),
    obstacle && ('Obstacle:\n' + obstacle),
    plan && ('Plan (if obstacle, then I will…):\n' + plan),
    'Output:\n1) Wish\n2) Outcome\n3) Obstacle\n4) If–then plan\n5) First checkpoint'
  ].filter(Boolean).join('\n'),
      meta: {
        search_text: "woop (wish–outcome–obstacle–plan) woop-wish-outcome-obstacle-plan wish → outcome → obstacle → plan (if obstacle, then i will x). write a short, specific wish; name the tangible best outcome; identify the likely obstacle; define the if–then plan. use:pattern use:workshop use:evaluation level:beginner planning brainstorming contrast desired outcome with the main obstacle bind an if–then plan to the obstacle phrase the wish so it’s completable in ≤2 weeks. make the obstacle internal (habit/thought) when possible. wish — what do i want to complete? outcome — benefit if i succeed? obstacle — what usually gets in the way? plan — if obstacle, then i will…"
      }
    },

    {
      id: "wsjf",
      slug: "wsjf-weighted-shortest-job-first",
      label: "WSJF — (Business Value + Time Criticality + Risk Reduction) ÷ Job Size",
      kind: "heuristic",
      categories: [
        "strategy",
        "planning"
      ],
      tags: [
        "type:framework",
        "topic:future-self",
        "use:process-improvement",
        "use:planning"
      ],
      use_cases: [
        "maximize economic throughput",
        "PI planning in SAFe"
      ],
      boosters: [
        "Call out assumptions; avoid gaming Job Size."
      ],
      definition: "WSJF prioritizes by Cost of Delay over Job Size. CoD ≈ Business Value + Time Criticality + Risk Reduction.",
      help: "Enter relative scores (e.g., Fibonacci or 1–10).",
      fields: [
        {
          label: "Job / feature",
          key: "item",
          ph: "e.g., Payment retries",
          type: "text"
        },
        {
          label: "Business Value",
          key: "business_value",
          ph: "e.g., 8",
          type: "text"
        },
        {
          label: "Time Criticality",
          key: "time_criticality",
          ph: "e.g., 5",
          type: "text"
        },
        {
          label: "Risk Reduction / Opportunity Enablement",
          key: "risk_reduction",
          ph: "e.g., 3",
          type: "text"
        },
        {
          label: "Job Size",
          key: "job_size",
          ph: "e.g., 5",
          type: "text"
        },
        {
          label: "Notes (optional)",
          key: "notes",
          ph: "Dependencies, sequencing, WSJF ties",
          type: "textarea"
        }
      ],
      template: (f) => {
    const n = x => Number(String(x||'').replace(/[^0-9.\-]/g,''));
    const BV = n(f.business_value), TC = n(f.time_criticality), RR = n(f.risk_reduction), JS = n(f.job_size);
    const CoD = (BV||0) + (TC||0) + (RR||0);
    const score = (Number.isFinite(JS) && JS>0) ? (CoD/JS) : null;
    const fmt = s => (s==null ? '' : s.toFixed(2));
    return [
      'Prioritize with WSJF = (Business Value + Time Criticality + Risk Reduction) ÷ Job Size.',
      f.usecase && `Context: ${f.usecase}`,
      f.item && `Item: ${f.item}`,
      `Inputs:\nBusiness Value: ${f.business_value}\nTime Criticality: ${f.time_criticality}\nRisk Reduction: ${f.risk_reduction}\nJob Size: ${f.job_size}`,
      `Cost of Delay (approx.): ${CoD}`,
      (score!=null) && `WSJF Score: ${fmt(score)}`,
      f.notes && ('Notes:\n' + f.notes),
      'Output:\n1) WSJF breakdown + score\n2) Rationale & risks\n3) Sequencing recommendation for next increment'
    ].filter(Boolean).join('\n');
  },
      meta: {
        search_text: "wsjf — (business value + time criticality + risk reduction) ÷ job size wsjf-weighted-shortest-job-first wsjf prioritizes by cost of delay over job size. cod ≈ business value + time criticality + risk reduction. enter relative scores (e.g., fibonacci or 1–10). type:framework topic:future-self use:process-improvement use:planning strategy planning maximize economic throughput pi planning in safe call out assumptions; avoid gaming job size. job / feature business value time criticality risk reduction / opportunity enablement job size notes (optional)"
      }
    },

    {
      id: "zhongyong_mean",
      slug: "zhongyong-doctrine-of-the-mean",
      label: "Zhongyong — Doctrine of the Mean (Confucian Moderation)",
      kind: "strategy",
      categories: [
        "ethics",
        "reasoning",
        "cultural-frameworks"
      ],
      tags: [
        "type:framework",
        "use:iteration",
        "use:content",
        "use:pattern",
        "level:intermediate",
        "use:communication"
      ],
      use_cases: [
        "avoid extremes by calibrating to context",
        "craft proportionate responses and tone"
      ],
      boosters: [
        "Name the two extremes explicitly, then the principled middle.",
        "Set acceptance criteria for “balanced enough”."
      ],
      definition: "A practical method for finding a context-appropriate middle path between harmful extremes.",
      help: "List extremes, principles guiding the mean, adjustment steps, and acceptance criteria.",
      fields: [
        {
          label: "Harmful extremes (A and B)",
          key: "extremes",
          type: "textarea"
        },
        {
          label: "Principles for the mean",
          key: "principles",
          type: "textarea"
        },
        {
          label: "Adjustment steps",
          key: "adjust",
          type: "textarea"
        },
        {
          label: "Acceptance criteria",
          key: "criteria",
          type: "textarea"
        }
      ],
      template: ({extremes,principles,adjust,criteria,ctx})=>[
      'Apply Zhongyong (context-sensitive moderation).',
      ctx && `Context: ${ctx}`,
      extremes && `Extremes:\n${extremes}`,
      principles && `Principles:\n${principles}`,
      adjust && `Adjustment steps:\n${adjust}`,
      criteria && `Acceptance criteria:\n${criteria}`,
      'Return: balanced recommendation + conditions that would shift it.'
    ].filter(Boolean).join('\n'),
      meta: {
        search_text: "zhongyong — doctrine of the mean (confucian moderation) zhongyong-doctrine-of-the-mean a practical method for finding a context-appropriate middle path between harmful extremes. list extremes, principles guiding the mean, adjustment steps, and acceptance criteria. type:framework use:iteration use:content use:pattern level:intermediate use:communication ethics reasoning cultural-frameworks avoid extremes by calibrating to context craft proportionate responses and tone name the two extremes explicitly, then the principled middle. set acceptance criteria for “balanced enough”. harmful extremes (a and b) principles for the mean adjustment steps acceptance criteria"
      }
    },
    
    /* ──────────────────────────────────────────────────────────────────────────
   Focusing (felt-sense check) — Eugene Gendlin–inspired, secular framing
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "focusing_felt_sense",
  slug: "focusing-felt-sense",
  label: "Focusing — Felt-Sense Check",
  kind: "framework",
  categories: ["self-reflection","wellbeing","personal-development","mental-health","mindfulness"],
  tags: [
    "type:practice","use:check-in","use:journaling","use:decision-making",
    "topic:embodiment","topic:feelings","topic:creativity","origin:gendlin","level:beginner"
  ],
  use_cases: [
    "name the ‘aboutness’ of a knotty situation without forcing clarity",
    "move from mental fog to a small next step",
    "check boundaries/fit when ambivalent",
    "unblock creative work by listening to the body"
  ],
  boosters: [
    "Go slow. Let a vague, more-than-words feel form. Don’t force it.",
    "Use handles (small words/metaphors) that match the feel: ‘dense’, ‘static’, ‘citrus-bright’.",
    "Test/adjust the handle until your body says ‘yes, that’.",
    "Wait for a felt shift (a small easing, breath, or warmth) before deciding.",
    "Keep it present-tense and concrete; skip analysis."
  ],
  definition:
    "A short, embodied inquiry: sense the fuzzy ‘aboutness’ of a situation and find a word/imagery handle for it. When the handle fits, a small felt shift often appears.",
  help:
    "1) Name the situation. 2) Sense where you feel it in the body. 3) Let a handle (word/image) come; test it. 4) Ask what it wants you to know. 5) Note any felt shift; pick one tiny, kind action.",
  notice:
    "Attribution: Inspired by Eugene Gendlin’s Focusing. This is a secular, self-care adaptation; not therapy.",
  fields: [
    { label: "Situation (one line)", key: "situation", type: "text", ph: "What’s up, in plain words?" },
    { label: "Body location (where you sense it)", key: "body_spot", type: "text", ph: "Chest, throat, belly, jaw…" },
    { label: "Handle (word or image)", key: "handle", type: "text", ph: "‘tight ring’, ‘static’, ‘heavy blanket’…" },
    { label: "Message from the felt-sense", key: "message", type: "textarea", ph: "If it could speak, it would say…" },
    { label: "Felt shift?", key: "felt_shift", type: "select", options: ["no","maybe","yes"], ph: "Did anything ease/soften?" },
    { label: "Tiny next step (≤10 min)", key: "next_step", type: "textarea", ph: "What kind, concrete action follows?" },
    { label: "Support (optional)", key: "support", type: "text", ph: "Water, short walk, text a friend…" },
    { label: "Debrief (one sentence)", key: "debrief", type: "text", ph: "What changed?" }
  ],
  template: ({
    situation, body_spot, handle, message, felt_shift, next_step, support, debrief,
    ctx, audience, style, tone
  }) => [
    "Focusing — Felt-Sense Check (secular)",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    situation && `Situation: ${situation}`,
    body_spot && `Body location: ${body_spot}`,
    handle && `Handle (word/image that fits): ${handle}`,
    message && `What it wants known:\n${message}`,
    felt_shift && `Felt shift: ${felt_shift}`,
    next_step && `Tiny next step (≤10 min):\n${next_step}`,
    support && `Support: ${support}`,
    debrief && `Debrief: ${debrief}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "focusing felt-sense gendlin embodiment handle felt shift decision fog body awareness creativity secular practice" }
},

/* ──────────────────────────────────────────────────────────────────────────
   RAIN — Recognize • Allow • Investigate • Nurture (Tara Brach popularization)
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "rain_self_inquiry",
  slug: "rain-recognize-allow-investigate-nurture",
  label: "RAIN — Recognize · Allow · Investigate · Nurture",
  kind: "framework",
  categories: ["wellbeing","mental-health","mindfulness","self-reflection","personal-development"],
  tags: [
    "type:practice","use:check-in","use:journaling","use:emotion-regulation",
    "topic:mindfulness","topic:self-compassion","origin:tara-brach","level:beginner"
  ],
  use_cases: [
    "gentle self-inquiry when emotions spike",
    "name what’s here without fixing",
    "de-escalate before a hard conversation",
    "close a loop after being triggered"
  ],
  boosters: [
    "Short is fine (2–10 minutes).",
    "Use simple, kind language; avoid analysis.",
    "During Nurture, add a physical gesture (hand to heart, softened jaw).",
    "If overwhelmed, open eyes, feel feet, lengthen exhale."
  ],
  definition:
    "A four-step mindfulness flow for hot emotions: Recognize what’s here, Allow it to be here, Investigate with curiosity, Nurture with care.",
  help:
    "Prompt: “What’s here; can it be here; what’s it asking; how do I tend to it?” Keep it concrete and kind.",
  notice:
    "Attribution: RAIN is widely taught; popularized by Tara Brach. This template is a secular self-care aid; not therapy.",
  fields: [
    { label: "Trigger/situation (one line)", key: "situation", type: "text", ph: "What set this off?" },
    { label: "R — Recognize (name what’s here)", key: "r_recognize", type: "textarea", ph: "E.g., anger, shame, grief; body sensations" },
    { label: "A — Allow (exact phrase)", key: "a_allow", type: "text", ph: "“This too belongs.” / “You’re allowed to be here.”" },
    { label: "I — Investigate (curious questions)", key: "i_investigate", type: "textarea", ph: "What is it asking for? What hurts? What protects?" },
    { label: "N — Nurture (care action/words)", key: "n_nurture", type: "textarea", ph: "Kind gesture, tone, or boundary to apply now" },
    { label: "Timebox (minutes)", key: "timebox", type: "text", ph: "e.g., 5" },
    { label: "Aftercare (optional)", key: "aftercare", type: "text", ph: "Water, step outside, text a friend…" }
  ],
  template: ({
    situation, r_recognize, a_allow, i_investigate, n_nurture, timebox, aftercare,
    ctx, audience, style, tone
  }) => [
    "RAIN — Recognize · Allow · Investigate · Nurture",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    timebox && `Timebox: ${timebox} min`,
    situation && `Trigger/situation: ${situation}`,
    r_recognize && `R — Recognize:\n${r_recognize}`,
    a_allow && `A — Allow: ${a_allow}`,
    i_investigate && `I — Investigate:\n${i_investigate}`,
    n_nurture && `N — Nurture:\n${n_nurture}`,
    aftercare && `Aftercare: ${aftercare}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "rain recognize allow investigate nurture tara brach emotions spike mindfulness compassion secular practice" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Parts check-in — IFS-inspired (Richard Schwartz), gentle & secular
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "parts_check_in_ifs",
  slug: "parts-check-in-ifs-inspired",
  label: "Parts Check-In — IFS-Inspired",
  kind: "framework",
  categories: ["wellbeing","mental-health","self-reflection","communication","coaching"],
  tags: [
    "type:practice","use:check-in","use:journaling","use:coaching",
    "topic:parts-work","topic:self-leadership","origin:ifs-inspired","level:beginner"
  ],
  use_cases: [
    "let different inner voices speak without judgment",
    "unblend before deciding or replying",
    "map protectors/exiles and what they need witnessed"
  ],
  boosters: [
    "Name parts with friendly handles (e.g., ‘Driver’, ‘Caretaker’, ‘Teen Me’).",
    "Ask each part: What do you fear would happen if you didn’t do your job?",
    "Invite Self qualities (calm, curiosity, compassion) to lead.",
    "If blended, pause outward action until some space returns."
  ],
  definition:
    "A brief inventory of inner ‘parts’ so each can be heard, reducing reactivity and increasing Self-led choice.",
  help:
    "Prompt: “Who in me is activated, and what do they need witnessed?” No fixing; just accurate witnessing.",
  notice:
    "Attribution: Inspired by Internal Family Systems (Richard Schwartz). This is a secular self-check, not therapy.",
  fields: [
    { label: "Scenario (one line)", key: "situation", type: "text", ph: "What’s happening?" },
    { label: "Parts present (one per line)", key: "parts_list", type: "textarea", ph: "Name each voice briefly." },
    { label: "What each part wants witnessed", key: "parts_wants", type: "textarea", ph: "Fears, needs, positive intent." },
    { label: "Blending state", key: "blending", type: "select", options: ["blended","partly unblended","unblended"], ph: "How fused are you right now?" },
    { label: "Self qualities available", key: "self_qualities", type: "textarea", ph: "Calm, curiosity, compassion, clarity…" },
    { label: "One Self-led step", key: "self_step", type: "textarea", ph: "A kind action that honors all parts." },
    { label: "Boundary (if needed)", key: "boundary", type: "text", ph: "A limit that keeps everyone safe." }
  ],
  template: ({
    situation, parts_list, parts_wants, blending, self_qualities, self_step, boundary,
    ctx, audience, style, tone
  }) => [
    "Parts Check-In — IFS-Inspired",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    situation && `Scenario: ${situation}`,
    parts_list && `Parts present:\n${parts_list}`,
    parts_wants && `What each part wants witnessed:\n${parts_wants}`,
    blending && `Blending state: ${blending}`,
    self_qualities && `Self qualities available:\n${self_qualities}`,
    self_step && `One Self-led step:\n${self_step}`,
    boundary && `Boundary:\n${boundary}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "ifs parts check-in inner voices self leadership blended unblended protectors exiles witnessing secular practice" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Noting — simple mindfulness label stream (vipassanā-inspired, secular)
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "noting_mindfulness",
  slug: "noting-mindfulness",
  label: "Noting — Mindfulness Labels",
  kind: "framework",
  categories: ["mindfulness","wellbeing","self-reflection","personal-development"],
  tags: [
    "type:practice","use:check-in","use:focus","use:sleep-winddown",
    "topic:awareness","topic:meditation","origin:vipassana-inspired","level:beginner"
  ],
  use_cases: [
    "label raw experience in real time",
    "ground during overthinking or craving",
    "wind down before sleep"
  ],
  boosters: [
    "One label every 1–3 seconds. Keep it light.",
    "Say it softly in your mind: ‘tightness’, ‘heat’, ‘worry’, ‘softening’.",
    "If lost, note ‘lost’ or ‘thinking’, then resume.",
    "No chasing calm; accuracy over outcome."
  ],
  definition:
    "A light mental label stream that names sensations, feelings, and thoughts as they arise, building clarity and non-reactivity.",
  help:
    "Pick an anchor (breath/body/sounds). Label what’s present, simply and briefly. Return to anchor if swept away.",
  notice:
    "Attribution: Inspired by vipassanā noting. Secular adaptation; not a substitute for medical care.",
  fields: [
    { label: "Duration (minutes)", key: "duration", type: "text", ph: "e.g., 5" },
    { label: "Anchor", key: "anchor", type: "select", options: ["breath","body","sounds","open awareness"], ph: "Choose one" },
    { label: "Starter labels (comma-separated)", key: "labels", type: "text", ph: "tightness, warmth, tingling, worry…" },
    { label: "Pace", key: "pace", type: "select", options: ["~1s","~2s","~3s"], ph: "Approx. cadence" },
    { label: "After-note (optional)", key: "after_note", type: "text", ph: "One takeaway or gratitude line" }
  ],
  template: ({ duration, anchor, labels, pace, after_note, ctx, audience, style, tone }) => [
    "Noting — Mindfulness Labels (secular)",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    duration && `Duration: ${duration} min`, anchor && `Anchor: ${anchor}`, pace && `Pace: ${pace}`,
    labels && `Starter labels: ${labels}`,
    "If lost: note ‘lost/thinking’, return to anchor.",
    after_note && `After-note: ${after_note}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "noting mindfulness labels vipassana sensations thoughts feelings craving sleep wind down secular practice" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Tonglen-lite — breathe in difficulty, breathe out care (secular)
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "tonglen_lite_secular",
  slug: "tonglen-lite-secular",
  label: "Tonglen-Lite — Breathe With Suffering",
  kind: "framework",
  categories: ["wellbeing","compassion","mindfulness","self-reflection"],
  tags: [
    "type:practice","use:emotion-regulation","use:compassion","use:check-in",
    "topic:breath","topic:empathy","origin:tibetan-inspired","level:beginner"
  ],
  use_cases: [
    "meet pain with compassion (self/others)",
    "transform aversion into care in the moment",
    "reset before re-engaging a hard task"
  ],
  boosters: [
    "Keep breath natural; don’t strain.",
    "Use plain words: ‘Breathing in this pain as it is; breathing out relief for anyone who feels this.’",
    "Scope can be self → one person → many; choose what’s workable.",
    "If overwhelmed, narrow scope or pause and ground."
  ],
  definition:
    "A secular compassion breath: gently include difficulty on the inhale; offer care on the exhale.",
  help:
    "Prompt: “Breathing in this pain as it is; breathing out relief for anyone who feels this.”",
  notice:
    "Attribution: Inspired by the Tibetan Buddhist tonglen practice, adapted here in secular language.",
  fields: [
    { label: "Focus (self / someone / many)", key: "scope", type: "select", options: ["self","one person","many"], ph: "Choose scope" },
    { label: "Difficulty (one line)", key: "difficulty", type: "text", ph: "Name the pain/stress without drama" },
    { label: "Inhale phrase", key: "inhale", type: "text", ph: "“Breathing in this pain as it is.”" },
    { label: "Exhale phrase", key: "exhale", type: "text", ph: "“Breathing out relief/care for all who feel this.”" },
    { label: "Timebox (minutes)", key: "timebox", type: "text", ph: "e.g., 3" },
    { label: "Aftercare (optional)", key: "aftercare", type: "text", ph: "Tea, stretch, step outside…" }
  ],
  template: ({ scope, difficulty, inhale, exhale, timebox, aftercare, ctx, audience, style, tone }) => [
    "Tonglen-Lite — Compassionate Breathing (secular)",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    timebox && `Timebox: ${timebox} min`,
    scope && `Focus: ${scope}`,
    difficulty && `Difficulty: ${difficulty}`,
    inhale && `Inhale: ${inhale}`,
    exhale && `Exhale: ${exhale}`,
    aftercare && `Aftercare: ${aftercare}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "tonglen lite compassion breath suffering relief secular tibetan inspired empathy scope self others practice" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Memento mori micro-sit — mortality as clarity tonic (stoic-inspired)
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "memento_mori_micro",
  slug: "memento-mori-micro-sit",
  label: "Memento Mori — Micro-Sit",
  kind: "framework",
  categories: ["self-reflection","wellbeing","personal-development","decision"],
  tags: [
    "type:practice","use:prioritization","use:motivation","use:gratitude",
    "topic:mortality","topic:values","origin:stoic-inspired","level:beginner"
  ],
  use_cases: [
    "recenter priorities in 1–3 minutes",
    "choose the one thing that actually matters today",
    "add a gratitude/repair line before closing work"
  ],
  boosters: [
    "Sit upright; soften jaw; lengthen exhale.",
    "Ask the question once, then wait.",
    "Pick one tiny act that fits the answer.",
    "Close by thanking someone (living or gone)."
  ],
  definition:
    "A brief contemplation of mortality to surface what is unmistakably true right now and act accordingly.",
  help:
    "Prompt: “If time were short, what becomes unmistakably true right now?” Then choose one tiny aligned action.",
  notice:
    "Attribution: Inspired by memento mori reflections (Stoic and cross-cultural). Secular framing.",
  fields: [
    { label: "Timebox (minutes)", key: "timebox", type: "text", ph: "1–3" },
    { label: "Truth that appears (one sentence)", key: "truth", type: "text", ph: "What’s unmistakably true right now?" },
    { label: "Tiny aligned step (≤10 min)", key: "step", type: "textarea", ph: "Concrete, reversible if possible." },
    { label: "Gratitude / repair (optional)", key: "gratitude", type: "text", ph: "Name a person to thank or repair with." },
    { label: "Risk of neglect (name it)", key: "risk", type: "textarea", ph: "What is the cost if you don’t act?" }
  ],
  template: ({ timebox, truth, step, gratitude, risk, ctx, audience, style, tone }) => [
    "Memento Mori — Micro-Sit (secular)",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    timebox && `Timebox: ${timebox} min`,
    truth && `If time were short, the truth is: ${truth}`,
    step && `Tiny aligned step (≤10 min):\n${step}`,
    gratitude && `Gratitude/repair: ${gratitude}`,
    risk && `Risk of neglect:\n${risk}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "memento mori micro sit mortality priorities stoic gratitude repair tiny step secular practice" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Last 2% Round — after alignment, share the unsaid edge
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "last_2_percent_round",
  slug: "last-2-percent-round",
  label: "Last 2% Round — Share the Unsaid Edge",
  kind: "framework",
  categories: ["communication","facilitation","teamwork","decision","wellbeing"],
  tags: [
    "type:practice","use:retrospective","use:alignment","use:conflict-prevention",
    "topic:feedback","topic:psychological-safety","level:beginner"
  ],
  use_cases: [
    "after alignment, surface what’s still unsaid",
    "reduce lingering risk from politeness or fear",
    "avoid surprises by naming edge concerns"
  ],
  boosters: [
    "Timebox to 1–2 minutes per person.",
    "Speak from ‘I’, own impact; avoid diagnoses.",
    "Name the risk of not saying it.",
    "End with a clear request or next step.",
    "Opt-out is allowed; consent first."
  ],
  definition:
    "A brief, consent-based round where each person speaks the last unsaid edge that would make the plan honest.",
  help:
    "Prompt: “What’s the last 2% I haven’t said that would make this honest?” Name impact and a concrete request.",
  notice:
    "This is a communication practice, not therapy. Use consent and timeboxes in sensitive settings.",
  fields: [
    { label: "Topic / decision", key: "topic", type: "text", ph: "What are we aligning on?" },
    { label: "Baseline alignment (one line)", key: "baseline", type: "text", ph: "State the shared yes so far." },
    { label: "Consent script", key: "consent", type: "text", ph: "“Open to a quick last-2% round?”" },
    { label: "My last 2% (one or two sentences)", key: "edge", type: "textarea", ph: "Say the unsaid edge plainly." },
    { label: "Impact if unsaid", key: "impact", type: "textarea", ph: "Risk or cost of staying silent." },
    { label: "Request / next step", key: "request", type: "textarea", ph: "What would make this workable?" },
    { label: "Opt-out phrase (optional)", key: "optout", type: "text", ph: "“Pass for now.” is valid." },
    { label: "Timebox (minutes)", key: "timebox", type: "text", ph: "e.g., 10" }
  ],
  template: ({
    topic, baseline, consent, edge, impact, request, optout, timebox,
    ctx, audience, style, tone
  }) => [
    "Last 2% Round — Share the Unsaid Edge",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    topic && `Topic/decision: ${topic}`,
    baseline && `Baseline alignment: ${baseline}`,
    timebox && `Timebox: ${timebox} min`,
    consent && `Consent: ${consent}`,
    edge && `My last 2%: ${edge}`,
    impact && `Impact if unsaid:\n${impact}`,
    request && `Request / next step:\n${request}`,
    optout && `Opt-out honored: ${optout}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "last 2% round unsaid edge alignment feedback psychological safety request impact timebox consent" }
},

/* ──────────────────────────────────────────────────────────────────────────
   AAR with Feelings First — After-Action Review that starts in the body
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "aar_feelings_first",
  slug: "aar-feelings-first",
  label: "AAR — Feelings First",
  kind: "framework",
  categories: ["retrospective","teamwork","learning","wellbeing","facilitation"],
  tags: [
    "type:practice","use:retro","use:learning-loop","use:debrief",
    "topic:embodiment","topic:needs","level:beginner"
  ],
  use_cases: [
    "debrief with body truth before facts",
    "reduce defensiveness and speed up learning",
    "surface needs that data alone misses"
  ],
  boosters: [
    "60–120 seconds body truth per person before facts.",
    "Use concrete sensations (tightness, heat, shaky).",
    "Name the need that surfaced (stability, clarity, care).",
    "Only then list facts, wins, breaks, next step."
  ],
  definition:
    "An After-Action Review that begins with where it landed in the body and what need surfaced, then moves to facts and improvements.",
  help:
    "Prompt: “Before facts: where did this land in your body, and what need surfaced?” Then run a tight AAR.",
  notice:
    "Adapted AAR structure for psychological safety. Keep it concise; not therapy.",
  fields: [
    { label: "Event / action reviewed", key: "event", type: "text", ph: "Name the thing we did." },
    { label: "Body location", key: "body_spot", type: "text", ph: "Chest, gut, throat, jaw…" },
    { label: "Sensations (raw words)", key: "sensations", type: "text", ph: "Tightness, heat, jittery, softening…" },
    { label: "Need that surfaced", key: "need", type: "text", ph: "Clarity, rest, support, time, repair…" },
    { label: "What worked", key: "worked", type: "textarea", ph: "Bullets." },
    { label: "What broke / confused", key: "broke", type: "textarea", ph: "Bullets." },
    { label: "Most important improvement", key: "improve", type: "textarea", ph: "One concrete change." },
    { label: "Owner + timeline", key: "owner", type: "text", ph: "Who will do what by when?" },
    { label: "Timebox (minutes)", key: "timebox", type: "text", ph: "e.g., 12" }
  ],
  template: ({
    event, body_spot, sensations, need, worked, broke, improve, owner, timebox,
    ctx, audience, style, tone
  }) => [
    "AAR — Feelings First",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    event && `Event: ${event}`,
    timebox && `Timebox: ${timebox} min`,
    "Feelings first:",
    (body_spot || sensations) && `• Body: ${[body_spot, sensations].filter(Boolean).join(" — ")}`,
    need && `• Need surfaced: ${need}`,
    "",
    "Facts next:",
    worked && `• Worked:\n${worked}`,
    broke && `• Broke/confused:\n${broke}`,
    improve && `• Improvement:\n${improve}`,
    owner && `• Owner & timeline: ${owner}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "after action review aar feelings first body truth needs debrief retro learning improvement psychological safety" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Pre-Mortem + Pre-Grief — imagine failure and name the human cost
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "premortem_pregrief",
  slug: "pre-mortem-pre-grief",
  label: "Pre-Mortem + Pre-Grief",
  kind: "framework",
  categories: ["risk","strategy","ethics","teamwork","wellbeing"],
  tags: [
    "type:practice","use:planning","use:risk-review","use:ethics-review",
    "topic:failure-modes","topic:human-impact","level:intermediate"
  ],
  use_cases: [
    "imagine failure to reveal risks and safeguards",
    "name the human cost early",
    "write clear stop conditions and exit ramps"
  ],
  boosters: [
    "Describe a vivid failure headline first.",
    "List who would be hurt and how (humans first).",
    "Add safeguards and early warning signals.",
    "Write exact stop/exit conditions now.",
    "Close with one reversible experiment."
  ],
  definition:
    "A planning ritual that imagines failure, names who gets hurt, and installs safeguards and exit ramps before starting.",
  help:
    "Prompt: “If this failed, who would be hurt and what would we wish we’d said now?”",
  notice:
    "Ethics-forward planning aid; not legal advice.",
  fields: [
    { label: "Initiative / decision", key: "initiative", type: "text", ph: "Name the plan." },
    { label: "Failure headline (vivid, one line)", key: "headline", type: "text", ph: "If this failed badly, the headline reads…" },
    { label: "Who is hurt & how (humans first)", key: "human_cost", type: "textarea", ph: "People, relationships, trust, time…" },
    { label: "Regret we’d feel / words we wish we’d said", key: "regret", type: "textarea", ph: "Say it now, not later." },
    { label: "Safeguards (technical & social)", key: "safeguards", type: "textarea", ph: "Rate limits, reviews, dry-runs, buddy checks…" },
    { label: "Early warning signals", key: "signals", type: "textarea", ph: "Leading indicators to watch." },
    { label: "Stop / exit conditions", key: "stops", type: "textarea", ph: "Exactly when we pause/roll back." },
    { label: "One reversible experiment", key: "experiment", type: "textarea", ph: "Smallest safe test to run first." },
    { label: "Owner & date", key: "owner", type: "text", ph: "Who holds this, by when." }
  ],
  template: ({
    initiative, headline, human_cost, regret, safeguards, signals, stops, experiment, owner,
    ctx, audience, style, tone
  }) => [
    "Pre-Mortem + Pre-Grief",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    initiative && `Initiative: ${initiative}`,
    headline && `Failure headline: ${headline}`,
    human_cost && `Human cost:\n${human_cost}`,
    regret && `We’d regret not saying:\n${regret}`,
    safeguards && `Safeguards:\n${safeguards}`,
    signals && `Early warning signals:\n${signals}`,
    stops && `Stop / exit conditions:\n${stops}`,
    experiment && `Reversible experiment:\n${experiment}`,
    owner && `Owner & date: ${owner}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "pre mortem pre grief failure human cost safeguards exit ramps stop conditions reversible experiment ethics" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Working Out Loud (Truth Edition) — reveal uncertainty live
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "working_out_loud_truth",
  slug: "working-out-loud-truth-edition",
  label: "Working Out Loud — Truth Edition",
  kind: "framework",
  categories: ["communication","teamwork","learning","facilitation"],
  tags: [
    "type:practice","use:status","use:design-review","use:risk-review",
    "topic:uncertainty","topic:transparency","level:beginner"
  ],
  use_cases: [
    "real-time sharing of knowns/unknowns",
    "reduce posturing; speed clarity",
    "invite help with specific asks"
  ],
  boosters: [
    "Keep sections short; use bullets.",
    "State what you fear to admit, kindly and concretely.",
    "End with a precise help request and owner.",
    "Prefer a working doc or thread for follow-ups."
  ],
  definition:
    "A lightweight status pattern that names what you know, don’t know, and fear to admit—so the right help can land fast.",
  help:
    "Prompt: “Here’s what I know, don’t know, and am afraid to admit publicly.”",
  notice:
    "Use good judgment with sensitive data; agree on audience and channel first.",
  fields: [
    { label: "Topic / scope", key: "topic", type: "text", ph: "What this covers." },
    { label: "Audience & channel", key: "audience_channel", type: "text", ph: "e.g., Team A in #design-review" },
    { label: "Knowns (bullets)", key: "knowns", type: "textarea", ph: "What’s stable, verified, decided." },
    { label: "Unknowns (bullets)", key: "unknowns", type: "textarea", ph: "What’s unclear or risky." },
    { label: "Afraid to admit (one or two bullets)", key: "afraid", type: "textarea", ph: "What’s hard to say but useful to know." },
    { label: "Help wanted (specific asks)", key: "asks", type: "textarea", ph: "Exact feedback/decisions/data needed." },
    { label: "Owner & next review time", key: "owner", type: "text", ph: "Who’s driving and when we sync again." }
  ],
  template: ({
    topic, audience_channel, knowns, unknowns, afraid, asks, owner,
    ctx, audience, style, tone
  }) => [
    "Working Out Loud — Truth Edition",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    topic && `Topic/scope: ${topic}`,
    audience_channel && `Audience/channel: ${audience_channel}`,
    knowns && `Knowns:\n${knowns}`,
    unknowns && `Unknowns:\n${unknowns}`,
    afraid && `Afraid to admit:\n${afraid}`,
    asks && `Help wanted:\n${asks}`,
    owner && `Owner & next review: ${owner}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "working out loud uncertainty transparency knowns unknowns afraid to admit help wanted status truth edition" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Clear Contracts + Exit Ramps — permission to stop when it’s too much
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "clear_contracts_exit_ramps",
  slug: "clear-contracts-exit-ramps",
  label: "Clear Contracts + Exit Ramps",
  kind: "framework",
  categories: ["facilitation","communication","ethics","wellbeing","teamwork"],
  tags: [
    "type:practice","use:session-setup","use:conflict-prevention","use:psychological-safety",
    "topic:consent","topic:boundaries","level:beginner"
  ],
  use_cases: [
    "set consent and boundaries explicitly",
    "create shared stop/slow-down protocols",
    "reduce harm in hard conversations"
  ],
  boosters: [
    "Name purpose, timebox, roles.",
    "Write today’s consent boundary in plain language.",
    "Define red/yellow signals and exact pause phrase.",
    "Agree how to re-enter after a pause.",
    "Anyone can call a pause; no justification required."
  ],
  definition:
    "A short contracting ritual that clarifies consent, boundaries, signals, and how to pause or stop safely.",
  help:
    "Prompt: “My consent boundary today is __; if crossed, I will pause us.” Make exit ramps explicit.",
  notice:
    "Safety practice for meetings and 1:1s; not legal advice.",
  fields: [
    { label: "Purpose", key: "purpose", type: "text", ph: "Why we’re meeting." },
    { label: "Timebox (minutes)", key: "timebox", type: "text", ph: "e.g., 45" },
    { label: "Roles / participants", key: "roles", type: "text", ph: "Who’s here and how we’ll interact." },
    { label: "Consent boundary (today)", key: "boundary", type: "textarea", ph: "What’s in/out for you today." },
    { label: "Yellow signals (slow down)", key: "yellow", type: "textarea", ph: "Signs we’re approaching limits." },
    { label: "Red signals (stop)", key: "red", type: "textarea", ph: "Clear indicators we must pause/stop." },
    { label: "Pause phrase", key: "phrase", type: "text", ph: "Exact words anyone can use to pause." },
    { label: "Re-entry protocol", key: "reentry", type: "textarea", ph: "How we resume after a pause." },
    { label: "Accountability (who can call it)", key: "accountability", type: "text", ph: "Usually: anyone, anytime." },
    { label: "Notes (optional)", key: "notes", type: "textarea", ph: "Anything else to hold." }
  ],
  template: ({
    purpose, timebox, roles, boundary, yellow, red, phrase, reentry, accountability, notes,
    ctx, audience, style, tone
  }) => [
    "Clear Contracts + Exit Ramps",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    purpose && `Purpose: ${purpose}`,
    timebox && `Timebox: ${timebox} min`,
    roles && `Roles/participants: ${roles}`,
    boundary && `Consent boundary (today):\n${boundary}`,
    yellow && `Yellow signals (slow down):\n${yellow}`,
    red && `Red signals (stop):\n${red}`,
    phrase && `Pause phrase: ${phrase}`,
    reentry && `Re-entry protocol:\n${reentry}`,
    accountability && `Accountability: ${accountability}`,
    notes && `Notes:\n${notes}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "clear contracts exit ramps consent boundaries pause phrase reentry protocol psychological safety facilitation" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Positionality Statement — own your standpoint before you analyze
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "positionality_statement",
  slug: "positionality-statement",
  label: "Positionality Statement",
  kind: "framework",
  categories: ["analysis","research","ethics","communication","education"],
  tags: [
    "type:practice","use:analysis-preface","use:research-methods","use:brief",
    "topic:standpoint","topic:bias","topic:reflexivity","level:beginner","origin:reflective-practice"
  ],
  use_cases: [
    "preface a report or analysis with standpoint and limits",
    "name potential blind spots and stakes",
    "state conflicts of interest and scope of competence"
  ],
  boosters: [
    "Name context, role, and audience first.",
    "State identities/experiences that are salient to this topic (optional).",
    "Name privileges and blind spots relevant here.",
    "Declare stake and boundary of competence.",
    "Say how your standpoint bends interpretation and what you’re doing to counterbalance it."
  ],
  definition:
    "A concise preface that makes your standpoint, stakes, privileges, blind spots, and competence boundaries explicit before analysis.",
  help:
    "Prompt: “Here’s where I’m standing and how it bends my seeing.” Keep it professional, specific, and actionably honest.",
  fields: [
    { label: "Context / project", key: "context", type: "text", ph: "What this analysis is about." },
    { label: "Role & audience", key: "role_audience", type: "text", ph: "Researcher to stakeholders, student to instructor, etc." },
    { label: "Salient identity/experience (optional)", key: "identity", type: "textarea", ph: "Only what matters for this topic." },
    { label: "Privileges / access", key: "privileges", type: "textarea", ph: "What advantages shape what you can see." },
    { label: "Likely blind spots", key: "blind_spots", type: "textarea", ph: "Where you might miss or misread." },
    { label: "Stake (why you care / potential bias)", key: "stake", type: "textarea", ph: "What outcome matters to you and why." },
    { label: "Boundary of competence", key: "competence", type: "textarea", ph: "What you can/can’t credibly claim here." },
    { label: "Counterbalances", key: "counterbalances", type: "textarea", ph: "Steps to mitigate bias (sources, advisors, methods)." }
  ],
  template: ({
    context, role_audience, identity, privileges, blind_spots, stake, competence, counterbalances,
    ctx, audience, style, tone
  }) => [
    "Positionality Statement",
    ctx && `Context (app-level): ${ctx}`, audience && `Audience (app-level): ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    context && `Project: ${context}`,
    role_audience && `Role & audience: ${role_audience}`,
    identity && `Salient identity/experience:\n${identity}`,
    privileges && `Privileges/access shaping view:\n${privileges}`,
    blind_spots && `Likely blind spots:\n${blind_spots}`,
    stake && `Stake (why I care):\n${stake}`,
    competence && `Boundary of competence:\n${competence}`,
    counterbalances && `Counterbalances in play:\n${counterbalances}`,
    "",
    "Prompt anchor: “Here’s where I’m standing and how it bends my seeing.”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "positionality standpoint bias privilege blind spots competence boundary reflexivity research analysis brief" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Reflexive Memo — write what the data is doing to you
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "reflexive_memo",
  slug: "reflexive-memo",
  label: "Reflexive Memo",
  kind: "framework",
  categories: ["research","learning","analysis","education","wellbeing"],
  tags: [
    "type:practice","use:field-notes","use:learning-journal","use:analysis",
    "topic:reflexivity","topic:affect","topic:method","level:beginner","origin:qualitative-methods"
  ],
  use_cases: [
    "capture affective reactions during analysis",
    "surface assumptions/biases being activated",
    "steer next data collection or coding choices"
  ],
  boosters: [
    "Write in first person; timebox 5–10 minutes.",
    "Note surprises, irritations, and movements (what shifted).",
    "Flag any identity/bias hooks explicitly.",
    "End with 1–3 next methodological moves."
  ],
  definition:
    "A short memo that records how the material is affecting you—surprises, irritations, movements—and how that should shape your next steps.",
  help:
    "Prompt: “What surprised, irritated, or moved me as I engaged this material?” Then note assumptions and next moves.",
  fields: [
    { label: "Material engaged", key: "material", type: "text", ph: "Interview #3, dataset v2, article XYZ…" },
    { label: "Surprised me…", key: "surprise", type: "textarea", ph: "What I didn’t expect." },
    { label: "Irritated me…", key: "irritation", type: "textarea", ph: "What rubbed, bored, or triggered me." },
    { label: "Moved me…", key: "movement", type: "textarea", ph: "What felt meaningful or shifted my view." },
    { label: "Assumptions/bias flagged", key: "bias", type: "textarea", ph: "Which filters showed up?" },
    { label: "Method notes", key: "method", type: "textarea", ph: "Coding ideas, probes to add, artifacts to collect…" },
    { label: "Next moves (bullets)", key: "next_moves", type: "textarea", ph: "1–3 concrete steps for the work." },
    { label: "Timebox (minutes)", key: "timebox", type: "text", ph: "e.g., 7" }
  ],
  template: ({
    material, surprise, irritation, movement, bias, method, next_moves, timebox,
    ctx, audience, style, tone
  }) => [
    "Reflexive Memo",
    ctx && `Context (app-level): ${ctx}`, audience && `Audience (app-level): ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    material && `Material: ${material}`,
    timebox && `Timebox: ${timebox} min`,
    surprise && `Surprised me:\n${surprise}`,
    irritation && `Irritated me:\n${irritation}`,
    movement && `Moved me:\n${movement}`,
    bias && `Assumptions/bias flagged:\n${bias}`,
    method && `Method notes:\n${method}`,
    next_moves && `Next moves:\n${next_moves}`,
    "",
    "Prompt anchor: “What surprised, irritated, or moved me as I engaged this material?”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "reflexive memo qualitative methods affect surprise irritation movement bias next steps field notes" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Critical Incident Analysis — one charged moment, slow-motion replay
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "critical_incident_analysis",
  slug: "critical-incident-analysis",
  label: "Critical Incident Analysis",
  kind: "framework",
  categories: ["learning","education","teamwork","ethics","communication"],
  tags: [
    "type:practice","use:debrief","use:retro","use:training",
    "topic:incident","topic:reflection","topic:ethics","level:intermediate","origin:education"
  ],
  use_cases: [
    "deep-dive a charged moment to extract learning",
    "separate raw data from interpretation",
    "plan repair and prevention steps"
  ],
  boosters: [
    "Freeze one frame only—don’t analyze the whole movie.",
    "Write the undeniable facts as if on camera.",
    "Add body sensations and needs before interpretation.",
    "Offer 2–3 alternative readings; avoid single-story traps.",
    "Close with one repair and one prevention move."
  ],
  definition:
    "A structured replay of a single high-intensity moment to separate observation from interpretation, then derive repair and prevention steps.",
  help:
    "Prompt: “Freeze the frame at peak intensity—what was undeniably true then?”",
  fields: [
    { label: "Title of incident", key: "title", type: "text", ph: "Short handle for the moment." },
    { label: "When/where", key: "when_where", type: "text", ph: "Timestamp, location." },
    { label: "Cast (roles only)", key: "cast", type: "text", ph: "You, counterpart, observers…" },
    { label: "Undeniable facts (camera view)", key: "facts", type: "textarea", ph: "What the camera would record, no adjectives." },
    { label: "Body sensations & needs", key: "body_needs", type: "textarea", ph: "Tight chest; need for clarity/space/care…" },
    { label: "Interpretations (yours/others)", key: "interpretations", type: "textarea", ph: "Competing readings of what it meant." },
    { label: "Ethical stakes / risks", key: "stakes", type: "textarea", ph: "Who could be harmed; power dynamics." },
    { label: "Repair step (one)", key: "repair", type: "textarea", ph: "Apology, check-in, make-right action." },
    { label: "Prevention step (one)", key: "prevention", type: "textarea", ph: "Protocol, boundary, training, redesign." }
  ],
  template: ({
    title, when_where, cast, facts, body_needs, interpretations, stakes, repair, prevention,
    ctx, audience, style, tone
  }) => [
    "Critical Incident Analysis",
    ctx && `Context (app-level): ${ctx}`, audience && `Audience (app-level): ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    title && `Incident: ${title}`,
    when_where && `When/where: ${when_where}`,
    cast && `Cast: ${cast}`,
    facts && `Undeniable facts (camera):\n${facts}`,
    body_needs && `Body & needs:\n${body_needs}`,
    interpretations && `Interpretations (plural):\n${interpretations}`,
    stakes && `Ethical stakes/risks:\n${stakes}`,
    repair && `Repair (one step):\n${repair}`,
    prevention && `Prevention (one step):\n${prevention}`,
    "",
    "Prompt anchor: “Freeze the frame at peak intensity—what was undeniably true then?”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "critical incident analysis camera view interpretation repair prevention ethics body sensations needs education" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Rose · Thorn · Bud + Weather — simple affect + hope check
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "rose_thorn_bud_weather",
  slug: "rose-thorn-bud-weather",
  label: "Rose · Thorn · Bud + Weather",
  kind: "framework",
  categories: ["check-in","teamwork","education","wellbeing","facilitation"],
  tags: [
    "type:practice","use:standup","use:retro-warmup","use:daily-journal",
    "topic:affect","topic:hope","topic:status","level:beginner","origin:classroom-practice"
  ],
  use_cases: [
    "fast emotional temperature check",
    "daily journal opener that includes hope",
    "warm-up for retros, classes, or group starts"
  ],
  boosters: [
    "Keep each item to a sentence or phrase.",
    "Weather = a quick metaphor; let intensity carry nuance.",
    "Invite pass option; no pressure to share details.",
    "Close with one tiny hopeful step if desired."
  ],
  definition:
    "A quick check-in that names a positive (rose), a pain point (thorn), a possibility (bud), and a simple ‘weather report’ for your inner climate.",
  help:
    "Prompt: “My rose, thorn, bud; my inner weather right now is __.”",
  fields: [
    { label: "Rose (what’s good)", key: "rose", type: "text", ph: "One bright spot." },
    { label: "Thorn (what hurts)", key: "thorn", type: "text", ph: "One friction or pain point." },
    { label: "Bud (what’s budding)", key: "bud", type: "text", ph: "One possibility or hope." },
    { label: "Weather", key: "weather", type: "select",
      options: ["sunny","partly cloudy","overcast","drizzle","rain","stormy","windy","foggy","mixed"], ph: "Pick one" },
    { label: "Intensity (0–10)", key: "intensity", type: "text", ph: "Optional number" },
    { label: "Tiny hopeful step (optional)", key: "tiny_step", type: "text", ph: "One <10 min action you could take." }
  ],
  template: ({
    rose, thorn, bud, weather, intensity, tiny_step,
    ctx, audience, style, tone
  }) => [
    "Rose · Thorn · Bud + Weather",
    ctx && `Context (app-level): ${ctx}`, audience && `Audience (app-level): ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    rose && `Rose: ${rose}`,
    thorn && `Thorn: ${thorn}`,
    bud && `Bud: ${bud}`,
    (weather || intensity) && `Weather: ${[weather, intensity && `(intensity ${intensity}/10)`].filter(Boolean).join(" ")}`,
    tiny_step && `Tiny hopeful step: ${tiny_step}`,
    "",
    "Prompt anchor: “My rose, thorn, bud; my inner weather right now is __.”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "rose thorn bud weather check in affect hope status intensity classroom practice team warm up daily journal" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Goals of Care — “What matters most?” (values before treatments)
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "goals_of_care_values_first",
  slug: "goals-of-care-what-matters-most",
  label: "Goals of Care — What Matters Most",
  kind: "framework",
  categories: ["ethics","communication","planning","wellbeing","healthcare"],
  tags: [
    "type:practice","use:conversation","use:values-clarification","use:advance-care-planning",
    "topic:mortality","topic:quality-of-life","origin:palliative-inspired","level:beginner"
  ],
  use_cases: [
    "prepare for a serious-illness or life-priorities conversation",
    "align family/caregivers around values before options",
    "document non-negotiables and a proxy decision-maker",
    "guide choices when trade-offs appear under pressure"
  ],
  boosters: [
    "Say values in plain language before naming any treatment.",
    "Name both ‘to protect’ and ‘to avoid’ so care teams can steer.",
    "Write a trade-off stance (quality vs. time) you can revise later.",
    "Pick one next step: share with a clinician or loved one.",
    "Revisit after any big health or life change."
  ],
  definition:
    "A short, values-first brief: name what matters most to protect or experience, the harms to avoid, key trade-offs, and who should help decide when it’s hard.",
  help:
    "Prompt: “Given your life now, what matters most to protect or experience?” Keep it specific and human; this is guidance, not a medical directive.",
  notice:
    "Not medical or legal advice. Consider discussing with your clinician and completing formal advance-care planning documents.",
  fields: [
    { label: "Life snapshot (one line)", key: "snapshot", type: "text", ph: "What your life looks like right now." },
    { label: "What I must protect (values/activities)", key: "protect", type: "textarea", ph: "Relationships, roles, abilities, rituals…" },
    { label: "Experiences to prioritize", key: "prioritize", type: "textarea", ph: "What you still want to experience, if possible." },
    { label: "Harms to avoid", key: "avoid", type: "textarea", ph: "Pain, isolation, burdens on others, loss of… (be concrete)" },
    { label: "Trade-off stance", key: "tradeoff", type: "select",
      options: ["quality-of-life over time","more time even if quality is low","unsure/decide with my proxy"], ph: "Choose one" },
    { label: "Independence & function that matters", key: "function", type: "textarea", ph: "Mobility, communication, cognition, privacy…" },
    { label: "Place of care preference", key: "place", type: "select",
      options: ["home","hospital","hospice","no strong preference"], ph: "Pick one" },
    { label: "People to involve in decisions", key: "people", type: "text", ph: "Names/roles to be in the room." },
    { label: "Proxy decision-maker (if any)", key: "proxy", type: "text", ph: "Name + contact (if chosen)." },
    { label: "Non-negotiables / red lines", key: "redlines", type: "textarea", ph: "Treatments or states you would refuse." },
    { label: "Next conversation (where/with whom)", key: "next_step", type: "text", ph: "Clinician, family meeting, note in chart…" },
    { label: "Review cadence", key: "review", type: "text", ph: "e.g., “On birthdays” or “after health changes.”" }
  ],
  template: ({
    snapshot, protect, prioritize, avoid, tradeoff, function: fn, place, people, proxy, redlines, next_step, review,
    ctx, audience, style, tone
  }) => [
    "Goals of Care — What Matters Most",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    snapshot && `Life snapshot: ${snapshot}`,
    protect && `Must protect (values/activities):\n${protect}`,
    prioritize && `Experiences to prioritize:\n${prioritize}`,
    avoid && `Harms to avoid:\n${avoid}`,
    tradeoff && `Trade-off stance: ${tradeoff}`,
    fn && `Independence/function that matters:\n${fn}`,
    place && `Place of care preference: ${place}`,
    people && `People to involve: ${people}`,
    proxy && `Proxy decision-maker: ${proxy}`,
    redlines && `Non-negotiables / red lines:\n${redlines}`,
    next_step && `Next conversation: ${next_step}`,
    review && `Review cadence: ${review}`,
    "",
    "Prompt anchor: “Given your life now, what matters most to protect or experience?”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "goals of care what matters most values first advance care planning quality of life proxy red lines place of care palliative inspired" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Dignity Questions — witness identity, meaning, and legacy
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "dignity_questions_legacy",
  slug: "dignity-questions-legacy",
  label: "Dignity Questions — Identity · Meaning · Legacy",
  kind: "framework",
  categories: ["ethics","wellbeing","storytelling","communication","reflection"],
  tags: [
    "type:practice","use:legacy","use:family-conversation","use:journaling",
    "topic:identity","topic:meaning","topic:gratitude","origin:dignity-inspired","level:beginner"
  ],
  use_cases: [
    "capture what you want remembered in this season",
    "shape a letter, audio, or eulogy seed",
    "facilitate family storytelling and gratitude"
  ],
  boosters: [
    "Use names and concrete moments—make it carry your voice.",
    "It’s okay to be brief; one honest line beats a paragraph.",
    "Add one thanks and (if needed) one repair.",
    "Decide who can hold this and how it’s shared."
  ],
  definition:
    "A short set of prompts to witness identity, meaning, and legacy—what you want remembered now, in your words.",
  help:
    "Prompt: “What do you want remembered about you in this season?” Write for someone specific, even if you keep it private.",
  notice:
    "Inspired by dignity-focused practices; secular adaptation. Not therapy.",
  fields: [
    { label: "This season (context)", key: "season", type: "text", ph: "What chapter are you in?" },
    { label: "What I want remembered (core)", key: "remembered", type: "textarea", ph: "Say it plainly, in your voice." },
    { label: "Roles I cherish", key: "roles", type: "text", ph: "Parent, friend, maker, neighbor…" },
    { label: "Stories to carry forward", key: "stories", type: "textarea", ph: "One or two moments that show who you are." },
    { label: "Lessons I’d pass on", key: "lessons", type: "textarea", ph: "Short, specific, true." },
    { label: "People to thank", key: "thanks", type: "textarea", ph: "Name them." },
    { label: "Repairs to attempt (optional)", key: "repairs", type: "textarea", ph: "Apology, closure, boundary, blessing." },
    { label: "Artifact & recipients", key: "artifact", type: "text", ph: "Letter, audio, video; who it’s for." },
    { label: "How/when to share", key: "sharing", type: "text", ph: "Now, later, on a date, or after an event." }
  ],
  template: ({
    season, remembered, roles, stories, lessons, thanks, repairs, artifact, sharing,
    ctx, audience, style, tone
  }) => [
    "Dignity Questions — Identity · Meaning · Legacy",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    season && `This season: ${season}`,
    remembered && `What I want remembered:\n${remembered}`,
    roles && `Roles I cherish: ${roles}`,
    stories && `Stories to carry forward:\n${stories}`,
    lessons && `Lessons I’d pass on:\n${lessons}`,
    thanks && `People to thank:\n${thanks}`,
    repairs && `Repairs to attempt:\n${repairs}`,
    artifact && `Artifact & recipients: ${artifact}`,
    sharing && `How/when to share: ${sharing}`,
    "",
    "Prompt anchor: “What do you want remembered about you in this season?”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "dignity questions legacy identity meaning remembered stories lessons gratitude repair artifact recipients season" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Mortal Message — letter/audio to past or future self or a loved one
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "mortal_message_letter_audio",
  slug: "mortal-letter-audio",
  label: "Mortal Message — Letter/Audio",
  kind: "framework",
  categories: ["wellbeing","ethics","storytelling","communication","reflection"],
  tags: [
    "type:practice","use:legacy","use:goodbye","use:gratitude",
    "topic:mortality","topic:truth-telling","topic:repair","origin:contemplative","level:beginner"
  ],
  use_cases: [
    "say the true thing now (even if brief)",
    "record a message you’d want kept if this were the only one",
    "offer gratitude, repair, and blessing in your voice"
  ],
  boosters: [
    "Write/speak to one real person (even if it’s you).",
    "Start with the truth line, then add thanks, repair, request.",
    "Decide when/how to deliver—or where to safely store.",
    "Have a simple aftercare plan if big feelings arise."
  ],
  definition:
    "A simple container to capture the one message you’d record today—truth, gratitude, repair, blessing—addressed to a real recipient.",
  help:
    "Prompt: “If this were the only message, what truth would you record today?”",
  notice:
    "Emotional safety matters. Consider a trusted person to share with and support afterward.",
  fields: [
    { label: "Recipient", key: "recipient", type: "text", ph: "Past self, future self, a loved one, a team…" },
    { label: "Direction", key: "direction", type: "select",
      options: ["past self","future self","loved one","team/community"], ph: "Pick one" },
    { label: "Medium", key: "medium", type: "select",
      options: ["letter","audio","video"], ph: "Choose format" },
    { label: "Truth (core message)", key: "truth", type: "textarea", ph: "Say the true thing first." },
    { label: "Gratitude line", key: "gratitude", type: "text", ph: "One real thank-you." },
    { label: "Apology / repair line (optional)", key: "repair", type: "text", ph: "If needed, name it plainly." },
    { label: "Blessing / wish", key: "blessing", type: "text", ph: "What you hope for them/you." },
    { label: "One request or permission", key: "request", type: "text", ph: "What you ask or allow." },
    { label: "One story to preserve (optional)", key: "story", type: "textarea", ph: "Short memory that carries the feeling." },
    { label: "Delivery plan", key: "delivery", type: "text", ph: "Share now, schedule later, or store with instructions." },
    { label: "Aftercare plan", key: "aftercare", type: "text", ph: "A small support step post-recording." },
    { label: "Timebox (minutes)", key: "timebox", type: "text", ph: "e.g., 5" }
  ],
  template: ({
    recipient, direction, medium, truth, gratitude, repair, blessing, request, story, delivery, aftercare, timebox,
    ctx, audience, style, tone
  }) => [
    "Mortal Message — Letter/Audio",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    timebox && `Timebox: ${timebox} min`,
    recipient && `Recipient: ${recipient}`,
    direction && `Direction: ${direction}`,
    medium && `Medium: ${medium}`,
    truth && `Truth (core message):\n${truth}`,
    gratitude && `Gratitude: ${gratitude}`,
    repair && `Apology/repair: ${repair}`,
    blessing && `Blessing/wish: ${blessing}`,
    request && `Request/permission: ${request}`,
    story && `Story to preserve:\n${story}`,
    delivery && `Delivery plan: ${delivery}`,
    aftercare && `Aftercare plan: ${aftercare}`,
    "",
    "Prompt anchor: “If this were the only message, what truth would you record today?”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "mortal message letter audio truth gratitude repair blessing request delivery aftercare mortality season legacy" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Automatic Writing — Truth Sprint (timed, uncensored pages)
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "automatic_writing_truth_sprint",
  slug: "automatic-writing-truth-sprint",
  label: "Automatic Writing — Truth Sprint",
  kind: "framework",
  categories: ["creativity","wellbeing","self-reflection","writing"],
  tags: [
    "type:practice","use:journaling","use:creative-warmup","use:clarity",
    "topic:truth-telling","topic:flow","level:beginner","origin:automatic-writing"
  ],
  use_cases: [
    "break perfectionism; get to emotional truth fast",
    "warm up before hard writing or a conversation",
    "surface ‘the line I’m avoiding’ without editing"
  ],
  boosters: [
    "Set a visible timer; stop when it ends.",
    "Keep the pen moving / no backspace. If stuck, write the stuckness.",
    "Use the starter line verbatim once, then keep going.",
    "After, underline any sentence with charge. One tiny action is enough.",
    "If overwhelmed, pause, drink water, look around and name 5 objects."
  ],
  definition:
    "A short, timed writing burst to bypass self-censorship and touch an honest line, without editing.",
  help:
    "Prompt: “For 5 minutes: ‘The thing I don’t want to admit is…’ Keep the pen moving.”",
  notice:
    "Self-care practice; not therapy. Skip details you don’t want recorded.",
  fields: [
    { label: "Timebox (minutes)", key: "timebox", type: "text", ph: "e.g., 5" },
    { label: "Starter line", key: "starter", type: "text", ph: "The thing I don’t want to admit is…" },
    { label: "Topic (optional)", key: "topic", type: "text", ph: "Work, relationship, decision, habit…" },
    { label: "No-edit rule (auto-filled)", key: "rule", type: "text", ph: "Keep pen moving / no backspace." },
    { label: "Aftercare (optional)", key: "aftercare", type: "text", ph: "Water, walk, text a friend…" }
  ],
  template: ({ timebox, starter, topic, rule, aftercare, ctx, audience, style, tone }) => [
    "Automatic Writing — Truth Sprint",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    (timebox || starter) && `Timer: ${timebox || "5"} min · Starter: ${starter || "The thing I don’t want to admit is…"}`,
    topic && `Topic: ${topic}`,
    `Rules: ${rule || "Keep pen moving / no backspace. If stuck, write the stuckness."}`,
    "Write until the timer ends. Do not edit. Underline any charged sentence, then choose one tiny kind step.",
    aftercare && `Aftercare: ${aftercare}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "automatic writing truth sprint timed freewriting keep pen moving no backspace perfectionism warmup journaling" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Playback Theatre — Confession Line (offer a moment; see it mirrored)
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "playback_confession_line",
  slug: "playback-theatre-confession-line",
  label: "Playback Theatre — Confession Line",
  kind: "framework",
  categories: ["facilitation","storytelling","teamwork","wellbeing"],
  tags: [
    "type:practice","use:check-in","use:group-story","use:ritual",
    "topic:witnessing","topic:vulnerability","origin:playback-theatre","level:intermediate"
  ],
  use_cases: [
    "surface the heart of a story in one line",
    "create quick empathy loops in a group",
    "warm up for deeper sharing with consent"
  ],
  boosters: [
    "Consent first. Teller can pass.",
    "Keep the line short; actors mirror tone not facts.",
    "Listeners: reflect, don’t fix. Brief, respectful playback.",
    "Close each share with “Was something true there?” from the teller."
  ],
  definition:
    "A micro-ritual: one line from a teller is mirrored back by others to witness the emotional truth succinctly.",
  help:
    "Prompt: “The heart of my story in one line is…” Keep it brief; allow a short playback.",
  notice:
    "Group witnessing practice; not therapy. Set confidentiality norms.",
  fields: [
    { label: "Session purpose", key: "purpose", type: "text", ph: "Why we’re doing this." },
    { label: "Consent script", key: "consent", type: "text", ph: "“Open to a one-line playback round?”" },
    { label: "Teller’s one line", key: "one_line", type: "text", ph: "The heart of my story in one line is…" },
    { label: "Tone / feeling", key: "tone_word", type: "text", ph: "Tender, proud, shaky, relieved…" },
    { label: "Playback roles", key: "roles", type: "text", ph: "Who mirrors? (2 actors? whole group?)" },
    { label: "Confidentiality note", key: "confidentiality", type: "textarea", ph: "What stays in the room?" }
  ],
  template: ({ purpose, consent, one_line, tone_word, roles, confidentiality, ctx, audience, style, tone }) => [
    "Playback Theatre — Confession Line",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    purpose && `Purpose: ${purpose}`,
    consent && `Consent: ${consent}`,
    one_line && `Teller’s line: ${one_line}`,
    tone_word && `Tone: ${tone_word}`,
    roles && `Playback roles: ${roles}`,
    confidentiality && `Confidentiality: ${confidentiality}`,
    "Close with: Teller confirms if something true was mirrored."
  ].filter(Boolean).join("\n"),
  meta: { search_text: "playback theatre confession line one line mirror witness tone consent confidentiality group ritual" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Clown ‘Flop’ — Share Failure; Let the Room See You Feel It
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "clown_flop_exercise",
  slug: "clown-flop-exercise",
  label: "Clown ‘Flop’ — Failure Seen Safely",
  kind: "framework",
  categories: ["facilitation","creativity","teamwork","storytelling"],
  tags: [
    "type:practice","use:warmup","use:bravery-rep","use:retrospective",
    "topic:failure","topic:shame-resilience","origin:clowning","level:intermediate"
  ],
  use_cases: [
    "normalize naming failure in teams",
    "build shame-resilience and play",
    "prepare for feedback with less armor"
  ],
  boosters: [
    "Keep it small and specific; 60–90 seconds max.",
    "Show the ‘inner face’ you made when it happened.",
    "Audience: respond with kind applause or “we see you.”",
    "Facilitator names learning, not fixes."
  ],
  definition:
    "A playful, bounded share: name a recent flop and let the group witness the feeling safely.",
  help:
    "Prompt: “Here’s where I flopped, and here’s the face I made inside.”",
  notice:
    "Psychological safety first; opt-outs valid. Not therapy.",
  fields: [
    { label: "Flop title (short)", key: "title", type: "text", ph: "Two-word handle for the fail." },
    { label: "What happened (one or two lines)", key: "what", type: "textarea", ph: "Keep it factual and brief." },
    { label: "Inner face (describe/gesture)", key: "inner_face", type: "text", ph: "What you felt in your body/face." },
    { label: "One learning", key: "learning", type: "text", ph: "What shifted or what you’ll try next." },
    { label: "Applause line (how audience responds)", key: "applause", type: "text", ph: "“We see you” / snaps / claps" },
    { label: "Timebox (minutes)", key: "timebox", type: "text", ph: "e.g., 2" }
  ],
  template: ({ title, what, inner_face, learning, applause, timebox, ctx, audience, style, tone }) => [
    "Clown ‘Flop’ — Failure Seen Safely",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    timebox && `Timebox: ${timebox} min`,
    title && `Flop: ${title}`,
    what && `What happened:\n${what}`,
    inner_face && `Inner face (felt expression): ${inner_face}`,
    learning && `One learning: ${learning}`,
    applause && `Audience response: ${applause}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "clown flop failure share inner face shame resilience applause learning playful warmup team" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Contact Improv — Listening Duet (felt-sense led movement)
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "contact_improv_listening_duet",
  slug: "contact-improv-listening-duet",
  label: "Contact Improv — Listening Duet",
  kind: "framework",
  categories: ["embodiment","creativity","wellbeing","teamwork"],
  tags: [
    "type:practice","use:warmup","use:trust-building","use:somatic-attunement",
    "topic:felt-sense","topic:listening","origin:contact-improv","level:intermediate"
  ],
  use_cases: [
    "co-regulate attention through movement",
    "practice nonverbal listening and consent",
    "reset a team’s nervous system before hard work"
  ],
  boosters: [
    "Consent and boundaries explicit. Touch is optional.",
    "Pick a mode: no-touch mirroring or light-contact.",
    "Agree on a clear stop signal and space constraints.",
    "Move slowly; let impulse and gravity lead; no lifts."
  ],
  definition:
    "A duo movement practice led by felt sense, with explicit consent and slow pacing; can be done no-touch.",
  help:
    "Prompt: “Attend to impulse and gravity; let one honest movement lead.”",
  notice:
    "Safety first. If in pain or unsure, choose no-touch mirroring. Not instruction for acrobatics.",
  fields: [
    { label: "Partner", key: "partner", type: "text", ph: "Who you’re moving with." },
    { label: "Mode", key: "mode", type: "select", options: ["no-touch mirroring","light-contact"], ph: "Choose one" },
    { label: "Duration (minutes)", key: "duration", type: "text", ph: "e.g., 5" },
    { label: "Stop signal (exact words/gesture)", key: "stop_signal", type: "text", ph: "“Pause” + hand open, etc." },
    { label: "Space constraints", key: "space", type: "text", ph: "Area size; obstacles; footwear." },
    { label: "Accessibility notes (optional)", key: "access", type: "textarea", ph: "Seated, standing, aids, pace…" }
  ],
  template: ({ partner, mode, duration, stop_signal, space, access, ctx, audience, style, tone }) => [
    "Contact Improv — Listening Duet",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    partner && `Partner: ${partner}`,
    mode && `Mode: ${mode}`,
    duration && `Duration: ${duration} min`,
    stop_signal && `Stop signal: ${stop_signal}`,
    space && `Space constraints: ${space}`,
    access && `Accessibility: ${access}`,
    "Move from felt sense only. Slow is good. End at the stop signal."
  ].filter(Boolean).join("\n"),
  meta: { search_text: "contact improv listening duet felt sense mirroring light contact consent stop signal embodiment accessibility" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Story Spine + One Naked Sentence — classic arc with a V3 reveal
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "story_spine_naked_sentence",
  slug: "story-spine-naked-sentence",
  label: "Story Spine + One Naked Sentence",
  kind: "framework",
  categories: ["storytelling","creativity","communication","education"],
  tags: [
    "type:practice","use:story-draft","use:pitch","use:talk-outline",
    "topic:arc","topic:truth-line","origin:story-spine-inspired","level:beginner"
  ],
  use_cases: [
    "draft a talk or story with emotional truth inside",
    "align a team narrative with one honest V3 line",
    "prep for demo/pitch with clarity + heart"
  ],
  boosters: [
    "Keep each beat to a single sentence.",
    "Write the naked sentence last, then weave it back in.",
    "If the naked sentence contradicts the arc, trust it and adjust.",
    "Read aloud once; trim any fluff."
  ],
  definition:
    "A compact plotting scaffold (story spine) paired with one present-tense, vulnerable line that tells the real truth (V3).",
  help:
    "Prompt: “Amid the plot, the sentence I’m scared to include is __.”",
  notice:
    "Inspired by popular story spine exercises; this is a lightweight, fair-use scaffold.",
  fields: [
    { label: "Title", key: "title", type: "text", ph: "Working title." },
    { label: "Once upon a time…", key: "once", type: "text", ph: "Establish the world." },
    { label: "Every day…", key: "every_day", type: "text", ph: "Normal pattern." },
    { label: "One day…", key: "one_day", type: "text", ph: "Inciting change." },
    { label: "Because of that… (1)", key: "because1", type: "text", ph: "Consequence." },
    { label: "Because of that… (2) (optional)", key: "because2", type: "text", ph: "Another consequence." },
    { label: "Until finally…", key: "until_finally", type: "text", ph: "Climax/turn." },
    { label: "Ever since then…", key: "ever_since", type: "text", ph: "New normal." },
    { label: "Naked sentence (present-tense truth)", key: "naked", type: "textarea", ph: "The line you’re scared to include." },
    { label: "Audience (optional)", key: "aud", type: "text", ph: "Who this is for." }
  ],
  template: ({
    title, once, every_day, one_day, because1, because2, until_finally, ever_since, naked, aud,
    ctx, audience, style, tone
  }) => [
    "Story Spine + One Naked Sentence",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    title && `Title: ${title}`,
    aud && `Audience: ${aud}`,
    once && `Once upon a time… ${once}`,
    every_day && `Every day… ${every_day}`,
    one_day && `One day… ${one_day}`,
    because1 && `Because of that… ${because1}`,
    because2 && `Because of that… ${because2}`,
    until_finally && `Until finally… ${until_finally}`,
    ever_since && `Ever since then… ${ever_since}`,
    naked && `Naked sentence (present truth):\n${naked}`,
    "",
    "Prompt anchor: “Amid the plot, the sentence I’m scared to include is __.”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "story spine classic arc once upon a time because of that until finally ever since then naked sentence v3 reveal truth" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Truth & Reconciliation — Micro-Format (harm named; dignity affirmed)
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "truth_reconciliation_micro",
  slug: "truth-reconciliation-micro",
  label: "Truth & Reconciliation — Micro-Format",
  kind: "framework",
  categories: ["ethics","communication","conflict","teamwork","wellbeing"],
  tags: [
    "type:practice","use:repair","use:apology","use:conflict-resolution",
    "topic:dignity","topic:amends","topic:accountability","level:intermediate"
  ],
  use_cases: [
    "name harm succinctly and affirm dignity",
    "propose concrete amends with timelines",
    "set safeguards and accountability for future behavior"
  ],
  boosters: [
    "Say the harm first, in their terms; invite correction.",
    "Own your role plainly; avoid justification or ‘context that excuses’.",
    "Affirm the other’s dignity with specific language (not generic).",
    "Propose amends with dates and verification, then ask consent.",
    "Install safeguards and check-ins to prevent recurrence."
  ],
  definition:
    "A compact repair script: name the harm as understood, affirm dignity, propose amends with timelines, and install safeguards with consent.",
  help:
    "Prompt: “Here’s the harm as I understand it; here’s what your dignity calls me to do.”",
  notice:
    "Relational repair tool; not legal advice. Power dynamics matter—consider a neutral facilitator in high-stakes settings.",
  fields: [
    { label: "Parties (you/them)", key: "parties", type: "text", ph: "Me (name/role) and You (name/role)" },
    { label: "Harm (as I understand it)", key: "harm_understood", type: "textarea", ph: "State their experience; invite correction." },
    { label: "My role / agency", key: "my_role", type: "textarea", ph: "Behavioral description, no excuses." },
    { label: "Dignity affirmation (specific)", key: "dignity_affirm", type: "textarea", ph: "Name the value you honor (privacy, safety, respect…)." },
    { label: "Amends (concrete actions + dates)", key: "amends", type: "textarea", ph: "What I will do, by when, how verified." },
    { label: "Safeguards (prevent recurrence)", key: "safeguards", type: "textarea", ph: "Protocols, boundaries, training, oversight…" },
    { label: "Accountability (check-ins, who/how)", key: "accountability", type: "textarea", ph: "Cadence, owner, visibility." },
    { label: "Consent / invitation to adjust", key: "consent_invite", type: "text", ph: "“Does this meet you? What would you change?”" },
    { label: "Follow-up date", key: "follow_up", type: "text", ph: "e.g., Review on 2025-10-15" }
  ],
  template: ({
    parties, harm_understood, my_role, dignity_affirm, amends, safeguards, accountability, consent_invite, follow_up,
    ctx, audience, style, tone
  }) => [
    "Truth & Reconciliation — Micro-Format",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    parties && `Parties: ${parties}`,
    harm_understood && `Harm (as I understand it):\n${harm_understood}`,
    my_role && `My role / agency:\n${my_role}`,
    dignity_affirm && `Dignity affirmed:\n${dignity_affirm}`,
    amends && `Amends (actions + dates):\n${amends}`,
    safeguards && `Safeguards:\n${safeguards}`,
    accountability && `Accountability:\n${accountability}`,
    follow_up && `Follow-up: ${follow_up}`,
    consent_invite && `Consent/request: ${consent_invite}`,
    "",
    "Prompt anchor: “Here’s the harm as I understand it; here’s what your dignity calls me to do.”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "truth reconciliation harm dignity amends safeguards accountability consent repair conflict resolution micro format" }
},

/* ──────────────────────────────────────────────────────────────────────────
   LARA / CRI-Style Dialogue — listen · affirm · respond · add
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "lara_cri_dialogue",
  slug: "lara-cri-dialogue",
  label: "LARA / CRI — Dialogue Scaffold",
  kind: "framework",
  categories: ["communication","conflict","education","teamwork","wellbeing"],
  tags: [
    "type:practice","use:dialogue","use:de-escalation","use:feedback",
    "topic:listening","topic:affirmation","topic:needs","level:beginner","origin:dialogue-tools-inspired"
  ],
  use_cases: [
    "structure a hard conversation in four short moves",
    "reduce defensiveness and center essence",
    "name your need/impact without erasing theirs"
  ],
  boosters: [
    "Ask consent to use the scaffold; honor a pass.",
    "Paraphrase first with their key words; check accuracy.",
    "Affirm the sense-making (‘it makes sense because…’).",
    "Respond with your impact/need in first person.",
    "Add one thing that matters to you; keep it brief; avoid ‘but’—use ‘and’."
  ],
  definition:
    "A four-step micro-script—Listen, Affirm, Respond, Add—that centers the other’s essence while naming your own need/impact.",
  help:
    "Prompt: “I’m hearing __; it makes sense because __; can I add __ that matters to me?”",
  notice:
    "Inspired by dialogue tools used in inclusive facilitation (attributions vary across orgs). Use with care and consent.",
  fields: [
    { label: "Topic/scope", key: "topic", type: "text", ph: "What this is about." },
    { label: "Consent script", key: "consent", type: "text", ph: "“Can we use a quick LARA-style pass?”" },
    { label: "L — Listen (paraphrase in their words)", key: "listen", type: "textarea", ph: "“I’m hearing…” then check: “Did I get that?”" },
    { label: "A — Affirm (why it makes sense)", key: "affirm", type: "textarea", ph: "Name the logic/feeling that’s valid." },
    { label: "R — Respond (impact/need/I-statement)", key: "respond", type: "textarea", ph: "What landed for you; what you need now." },
    { label: "A — Add (what matters to me)", key: "add", type: "textarea", ph: "One thing to include going forward." },
    { label: "Check understanding phrase", key: "check", type: "text", ph: "“Does that land?” / “What did I miss?”" },
    { label: "Next step / request", key: "next_step", type: "textarea", ph: "Concrete ask; small and testable." },
    { label: "Stop/timeout boundary (optional)", key: "boundary", type: "text", ph: "How to pause if heat rises." }
  ],
  template: ({
    topic, consent, listen, affirm, respond, add, check, next_step, boundary,
    ctx, audience, style, tone
  }) => [
    "LARA / CRI — Dialogue Scaffold",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    topic && `Topic: ${topic}`,
    consent && `Consent: ${consent}`,
    listen && `L — Listen:\n${listen}`,
    affirm && `A — Affirm:\n${affirm}`,
    respond && `R — Respond (impact/need):\n${respond}`,
    add && `A — Add (what matters to me):\n${add}`,
    check && `Check understanding: ${check}`,
    next_step && `Next step/request:\n${next_step}`,
    boundary && `Stop/timeout boundary: ${boundary}`,
    "",
    "Prompt anchor: “I’m hearing __; it makes sense because __; can I add __ that matters to me?”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "lara cri listen affirm respond add dialogue scaffold consent paraphrase impact need essence de escalation" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Accountability Letter — no excuses; name impact & commitment
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "accountability_letter",
  slug: "accountability-letter",
  label: "Accountability Letter",
  kind: "framework",
  categories: ["ethics","communication","conflict","teamwork","wellbeing"],
  tags: [
    "type:practice","use:apology","use:repair","use:commitment",
    "topic:impact","topic:amends","topic:values","level:beginner"
  ],
  use_cases: [
    "offer a no-excuses apology with concrete commitments",
    "document amends and timelines for shared visibility",
    "close a loop with clear follow-up dates"
  ],
  boosters: [
    "Name behavior in observable terms; skip intent/defense.",
    "Describe impact on people and trust, not just outcomes.",
    "State values violated and why that matters to you.",
    "List commitments with who/what/when/how verified.",
    "Invite correction; include follow-up date and channel."
  ],
  definition:
    "A structured letter that names behavior and impact without excuses, then commits to specific amends and verification.",
  help:
    "Prompt: “What I did; how it landed; what I’m committed to now, concretely.”",
  notice:
    "For interpersonal repair and team trust; not legal advice. Share appropriately.",
  fields: [
    { label: "Recipient", key: "recipient", type: "text", ph: "Name/role (or ‘team’)." },
    { label: "What I did (behavior only)", key: "behavior", type: "textarea", ph: "Facts; no motive speculation." },
    { label: "Impact (on people/trust)", key: "impact", type: "textarea", ph: "Effects felt by others; name names with care." },
    { label: "Values violated (mine/ours)", key: "values", type: "textarea", ph: "Which standard I fell short of." },
    { label: "Commitments (specific; dated)", key: "commitments", type: "textarea", ph: "Bulleted amends w/ deadlines + verification." },
    { label: "Safeguards (prevent recurrence)", key: "safeguards", type: "textarea", ph: "Process, boundary, training, oversight." },
    { label: "Verification (who/how)", key: "verification", type: "text", ph: "Who will confirm and how (public/private)." },
    { label: "Follow-up date/time", key: "follow_up", type: "text", ph: "e.g., 2025-10-01 10:00" },
    { label: "Invitation to reply (optional)", key: "invite", type: "text", ph: "“What did I miss? What would help repair?”" },
    { label: "Signature", key: "signature", type: "text", ph: "Name + contact" }
  ],
  template: ({
    recipient, behavior, impact, values, commitments, safeguards, verification, follow_up, invite, signature,
    ctx, audience, style, tone
  }) => [
    "Accountability Letter",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    recipient && `To: ${recipient}`,
    behavior && `What I did:\n${behavior}`,
    impact && `How it landed:\n${impact}`,
    values && `Values I violated:\n${values}`,
    commitments && `What I’m committed to now (concrete):\n${commitments}`,
    safeguards && `Safeguards to prevent recurrence:\n${safeguards}`,
    verification && `Verification: ${verification}`,
    follow_up && `Follow-up: ${follow_up}`,
    invite && `Invitation to reply: ${invite}`,
    signature && `— ${signature}`,
    "",
    "Prompt anchor: “What I did; how it landed; what I’m committed to now, concretely.”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "accountability letter no excuses impact values commitments amends safeguards verification follow up apology repair" }
},


/* ──────────────────────────────────────────────────────────────────────────
   Ofrenda / Remembrance Board — speak to the dead in present tense
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "ofrenda_remembrance_board",
  slug: "ofrenda-remembrance-board",
  label: "Ofrenda / Remembrance Board",
  kind: "framework",
  categories: ["ritual","wellbeing","storytelling","family","reflection"],
  tags: [
    "type:practice","use:memorial","use:gratitude","use:legacy",
    "topic:grief","topic:remembrance","topic:values","origin:ofrenda-inspired","level:beginner"
  ],
  use_cases: [
    "mark a day or season by speaking to the dead in the present tense",
    "create a simple altar/board entry with words and artifacts",
    "name an ongoing relationship of guidance and care"
  ],
  boosters: [
    "Use present tense: speak as if they can hear you now.",
    "Name one concrete way you’re carrying them today.",
    "Include a small offering (photo, food, symbol) even if purely symbolic.",
    "Close with a kind action you’ll take in their honor.",
    "Honor cultural roots if relevant; adapt respectfully."
  ],
  definition:
    "A secular, ofrenda-inspired remembrance: speak to the dead in the present tense, name what you carry forward, and note one honoring action.",
  help:
    "Prompt: “I’m carrying you today in __; what would you ask of me now?” Keep it simple and specific; one truth line beats a paragraph.",
  notice:
    "Cultural respect matters. This is an ofrenda-inspired, secular template; adapt to your tradition and boundaries.",
  fields: [
    { label: "Who I’m addressing (name/relationship)", key: "who", type: "text", ph: "e.g., ‘Grandma Elena’, ‘Mentor Sam’" },
    { label: "What I’m carrying today (specific)", key: "carrying", type: "text", ph: "A trait, lesson, phrase, recipe, laugh…" },
    { label: "Present-tense message to them", key: "message", type: "textarea", ph: "Speak directly, now." },
    { label: "What they’d ask of me (as I imagine it)", key: "ask", type: "text", ph: "One line." },
    { label: "Offering / symbol", key: "offering", type: "text", ph: "Photo, candle, bread, flower, tool…" },
    { label: "One honoring action (≤10 min)", key: "action", type: "textarea", ph: "Call someone, cook a dish, fix a thing…" },
    { label: "Share/hold", key: "share", type: "select", options: ["private","share with one person","share with family/community"], ph: "Choose how to hold this" },
    { label: "Cultural/tradition note (optional)", key: "tradition", type: "text", ph: "How you’re adapting with respect." }
  ],
  template: ({
    who, carrying, message, ask, offering, action, share, tradition,
    ctx, audience, style, tone
  }) => [
    "Ofrenda / Remembrance Board",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    who && `To: ${who} (present tense)`,
    carrying && `I’m carrying you today in: ${carrying}`,
    message && `Message:\n${message}`,
    ask && `What you’d ask of me now (as I imagine it): ${ask}`,
    offering && `Offering/symbol: ${offering}`,
    action && `Honoring action (≤10 min):\n${action}`,
    share && `Share/hold: ${share}`,
    tradition && `Tradition/cultural note: ${tradition}`,
    "",
    "Prompt anchor: “I’m carrying you today in __; what would you ask of me now?”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "ofrenda remembrance board speak to the dead present tense carrying offering honoring action cultural respect grief legacy" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Gratitude Under Duress — name thanks without bypassing pain
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "gratitude_under_duress",
  slug: "gratitude-under-duress",
  label: "Gratitude Under Duress",
  kind: "framework",
  categories: ["wellbeing","resilience","reflection","mental-health"],
  tags: [
    "type:practice","use:journaling","use:check-in","use:repair",
    "topic:gratitude","topic:pain","topic:non-bypass","level:beginner"
  ],
  use_cases: [
    "acknowledge pain honestly while naming one trustworthy thing",
    "stabilize before a hard task or conversation",
    "end the day without pretending it was fine"
  ],
  boosters: [
    "Start by naming the pain plainly; no spin.",
    "Pick one specific, trustworthy thing (person, place, practice).",
    "Explain why it’s trustworthy to you today (evidence, pattern).",
    "Choose a tiny supportive step that doesn’t erase the pain.",
    "Optional: define a boundary—what you’re not ready to be grateful for."
  ],
  definition:
    "A two-handed check-in: hold what hurts and identify one trustworthy thing, without minimizing or bypassing the pain.",
  help:
    "Prompt: “I’m not okay—and here is one thing still trustworthy.” Let both lines be true.",
  fields: [
    { label: "What’s hard (one line)", key: "hard", type: "text", ph: "Name the pain without drama." },
    { label: "Pain words (raw list)", key: "pain_words", type: "text", ph: "Tired, scared, angry, brittle…" },
    { label: "One thing trustworthy", key: "trustworthy", type: "text", ph: "A person, practice, place, promise." },
    { label: "Why it’s trustworthy (today)", key: "why", type: "textarea", ph: "Evidence/pattern that makes it solid." },
    { label: "Tiny supportive step (≤10 min)", key: "step", type: "textarea", ph: "Concrete care that doesn’t erase the pain." },
    { label: "Boundary (not grateful for…)", key: "boundary", type: "text", ph: "What you refuse to sugarcoat." },
    { label: "Who (if anyone) to share with", key: "share_with", type: "text", ph: "Name or ‘private’." }
  ],
  template: ({
    hard, pain_words, trustworthy, why, step, boundary, share_with,
    ctx, audience, style, tone
  }) => [
    "Gratitude Under Duress",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    hard && `What’s hard: ${hard}`,
    pain_words && `Pain words: ${pain_words}`,
    trustworthy && `One thing trustworthy: ${trustworthy}`,
    why && `Why trustworthy (today):\n${why}`,
    step && `Tiny supportive step (≤10 min):\n${step}`,
    boundary && `Boundary (not grateful for): ${boundary}`,
    share_with && `Share with: ${share_with}`,
    "",
    "Prompt anchor: “I’m not okay—and here is one thing still trustworthy.”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "gratitude under duress not okay trustworthy thing non bypass pain honesty resilience tiny step boundary journaling" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Vow-and-Witness — make a vow with a living witness
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "vow_and_witness",
  slug: "vow-and-witness",
  label: "Vow-and-Witness",
  kind: "framework",
  categories: ["ritual","commitment","teamwork","ethics","wellbeing"],
  tags: [
    "type:practice","use:commitment","use:ceremony","use:accountability",
    "topic:witness","topic:vow","topic:integrity","level:beginner"
  ],
  use_cases: [
    "make a small public vow with one trusted witness",
    "increase follow-through via check-in and mirroring",
    "mark a transition or intention with dignity"
  ],
  boosters: [
    "Keep the vow small, specific, and time-bounded.",
    "Ask witness to mirror back exactly what they heard.",
    "Write one exit/repair clause for when life happens.",
    "Schedule a concrete check-in time and channel.",
    "Close with thanks; optional token or gesture."
  ],
  definition:
    "A brief commitment ritual: state a specific vow before a living witness, hear it mirrored back, and set check-ins and repair.",
  help:
    "Prompt: “Before you, I vow __; please mirror back what you heard.”",
  notice:
    "This is a personal/relational ritual, not a legal contract. Choose a witness you trust.",
  fields: [
    { label: "Vower (you)", key: "vower", type: "text", ph: "Your name" },
    { label: "Witness (name)", key: "witness", type: "text", ph: "Who is present to hear this?" },
    { label: "Vow (specific, time-bounded)", key: "vow", type: "textarea", ph: "One behavior, scope, and timeframe." },
    { label: "Why it matters (value/benefit)", key: "why", type: "text", ph: "What this protects or grows." },
    { label: "Start date/time", key: "start", type: "text", ph: "e.g., 2025-09-22 09:00" },
    { label: "Check-in (date/time + channel)", key: "checkin", type: "text", ph: "e.g., 2025-09-29 DM / call" },
    { label: "Repair if missed (clause)", key: "repair", type: "textarea", ph: "What happens if you slip (make-right plan)." },
    { label: "Witness mirror-back (their words)", key: "mirror", type: "textarea", ph: "They repeat what they heard." },
    { label: "Token/gesture (optional)", key: "token", type: "text", ph: "Handshake, object, emoji, bell…" }
  ],
  template: ({
    vower, witness, vow, why, start, checkin, repair, mirror, token,
    ctx, audience, style, tone
  }) => [
    "Vow-and-Witness",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    vower && `Vower: ${vower}`,
    witness && `Witness: ${witness}`,
    vow && `Vow:\n${vow}`,
    why && `Why it matters: ${why}`,
    start && `Start: ${start}`,
    checkin && `Check-in: ${checkin}`,
    repair && `Repair if missed:\n${repair}`,
    mirror && `Witness mirror-back:\n${mirror}`,
    token && `Token/gesture: ${token}`,
    "",
    "Prompt anchor: “Before you, I vow __; please mirror back what you heard.”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "vow and witness commitment ritual mirror back check in repair clause integrity token gesture ceremony" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Stars & Wishes + Bleed Check — celebrate, request, separate self/character
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "stars_wishes_bleed_check",
  slug: "stars-wishes-bleed-check",
  label: "Stars & Wishes + Bleed Check",
  kind: "framework",
  categories: ["ttrpg","facilitation","teamwork","wellbeing"],
  tags: [
    "type:practice","use:debrief","use:feedback","use:safety",
    "topic:celebration","topic:requests","topic:bleed","origin:ttrpg-safety","level:beginner"
  ],
  use_cases: [
    "end-of-session debrief that stays kind and useful",
    "name one concrete wish/request for next time",
    "check for ‘bleed’ and separate player/character"
  ],
  boosters: [
    "Keep ‘Stars’ specific and about behaviors you can repeat.",
    "Make ‘Wishes’ a single, doable request; avoid design-by-committee.",
    "Bleed check: name one thing that belonged to you (player) or didn’t.",
    "Offer a consent tweak if the edge moved tonight.",
    "Allow private submission if helpful."
  ],
  definition:
    "A quick closer that surfaces a star (celebration), a wish (request), and a bleed check to separate player feelings from character fiction.",
  help:
    "Prompt: “Star, wish, and one thing that belonged to me (or didn’t) tonight.”",
  notice:
    "Group safety practice; not therapy. Honor pass/opt-out.",
  fields: [
    { label: "Session / episode", key: "session", type: "text", ph: "e.g., ‘Arc 2, Ep 4’" },
    { label: "Star (celebrate a moment/person)", key: "star", type: "textarea", ph: "Specific behavior you appreciated." },
    { label: "Wish (one concrete request)", key: "wish", type: "textarea", ph: "Small, testable change for next time." },
    { label: "Bleed — belonged to me (player) (one line)", key: "bleed_mine", type: "text", ph: "A feeling/thought that was truly mine." },
    { label: "Bleed — did NOT belong to me (one line)", key: "bleed_not_mine", type: "text", ph: "Something I’ll hand back to the character." },
    { label: "Self/character separation note (optional)", key: "separation", type: "textarea", ph: "How I can keep a healthy boundary." },
    { label: "Consent tweak for next session (optional)", key: "consent_tweak", type: "textarea", ph: "Any small update you’d like (lines/veils/pacing)." },
    { label: "Share mode", key: "share_mode", type: "select", options: ["group","GM only","private"], ph: "Choose one" }
  ],
  template: ({
    session, star, wish, bleed_mine, bleed_not_mine, separation, consent_tweak, share_mode,
    ctx, audience, style, tone
  }) => [
    "Stars & Wishes + Bleed Check",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    session && `Session: ${session}`,
    star && `Star:\n${star}`,
    wish && `Wish (next time):\n${wish}`,
    (bleed_mine || bleed_not_mine) && "Bleed check:",
    bleed_mine && `• Belonged to me: ${bleed_mine}`,
    bleed_not_mine && `• Did not belong to me: ${bleed_not_mine}`,
    separation && `Self/character separation:\n${separation}`,
    consent_tweak && `Consent tweak (next session):\n${consent_tweak}`,
    share_mode && `Share mode: ${share_mode}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "stars and wishes bleed check ttrpg debrief feedback consent separation player character safety" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Lines/Veils Revisit (Mid-Campaign) — update consent at the edge
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "lines_veils_revisit",
  slug: "lines-veils-revisit",
  label: "Lines/Veils Revisit — Mid-Campaign",
  kind: "framework",
  categories: ["ttrpg","facilitation","ethics","teamwork","wellbeing"],
  tags: [
    "type:practice","use:session-setup","use:consent-refresh","use:safety",
    "topic:lines","topic:veils","topic:trust","origin:ttrpg-safety","level:beginner"
  ],
  use_cases: [
    "refresh consent midway through a campaign/arc",
    "capture new lines/veils as stakes shift",
    "agree on signals and a pause phrase"
  ],
  boosters: [
    "Name the current arc’s tone first; align expectations.",
    "Use clear examples for new lines/veils.",
    "Decide how to signal yellow/red in play (words or gesture).",
    "Set a next review date; consent is living, not one-and-done.",
    "Private channels are valid; no one owes disclosure."
  ],
  definition:
    "A mid-campaign consent refresh that updates lines (hard no), veils (fade/skip), signals, and the pause phrase.",
  help:
    "Prompt: “Given where we are, what new lines/veils keep this brave and fun?”",
  notice:
    "Safety tool; not a substitute for professional support.",
  fields: [
    { label: "Campaign / arc", key: "campaign", type: "text", ph: "Name of game/arc." },
    { label: "Tone / themes (now)", key: "tone_now", type: "textarea", ph: "What the story currently plays like." },
    { label: "Lines (hard no; examples)", key: "lines", type: "textarea", ph: "List topics/scenes off-limits." },
    { label: "Veils (fade/skip; examples)", key: "veils", type: "textarea", ph: "Allowed but off-camera / summarized." },
    { label: "Green/Okay (explicitly welcome themes)", key: "greens", type: "textarea", ph: "Fun levers we *do* want." },
    { label: "Signals (yellow/red & how to use)", key: "signals", type: "textarea", ph: "Words/gestures, who acts, what happens." },
    { label: "Pause phrase", key: "pause_phrase", type: "text", ph: "Exact words to stop (e.g., “Pause”)." },
    { label: "Private notes to GM (optional)", key: "private_gm", type: "textarea", ph: "Anything to hold privately." },
    { label: "Next consent review (date)", key: "next_review", type: "text", ph: "e.g., 2025-10-15" }
  ],
  template: ({
    campaign, tone_now, lines, veils, greens, signals, pause_phrase, private_gm, next_review,
    ctx, audience, style, tone
  }) => [
    "Lines/Veils Revisit — Mid-Campaign",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    campaign && `Campaign/arc: ${campaign}`,
    tone_now && `Tone/themes (now):\n${tone_now}`,
    lines && `Lines (hard no):\n${lines}`,
    veils && `Veils (fade/skip):\n${veils}`,
    greens && `Green/Okay themes:\n${greens}`,
    signals && `Signals (yellow/red):\n${signals}`,
    pause_phrase && `Pause phrase: ${pause_phrase}`,
    private_gm && `Private notes to GM:\n${private_gm}`,
    next_review && `Next consent review: ${next_review}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "lines veils revisit mid campaign consent refresh ttrpg safety pause phrase signals themes" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Safety Pause with Essence — call time-out and tell the present truth
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "safety_pause_with_essence",
  slug: "safety-pause-with-essence",
  label: "Safety Pause with Essence",
  kind: "framework",
  categories: ["ttrpg","facilitation","wellbeing","communication"],
  tags: [
    "type:practice","use:time-out","use:repair","use:safety",
    "topic:present-truth","topic:needs","origin:ttrpg-safety","level:beginner"
  ],
  use_cases: [
    "stop play to share a body-truth and a need",
    "agree on what must change to continue",
    "document re-entry protocol and follow-up"
  ],
  boosters: [
    "Say the pause phrase first; breathe; slow down.",
    "Name the present-tense truth in one sentence.",
    "State one need/request to continue or a stop for today.",
    "GM names options; group decides kindly.",
    "Schedule a short follow-up if heat stays high."
  ],
  definition:
    "A structured time-out to name present-moment truth (essence) and the need to continue safely, plus re-entry steps.",
  help:
    "Prompt: “Pause: the truth in my body right now is __; I need __ to continue.”",
  notice:
    "Safety tool; opt-out honored. Not therapy.",
  fields: [
    { label: "Pause phrase used", key: "pause_phrase", type: "text", ph: "e.g., “Pause” or card signal" },
    { label: "Situation (one line)", key: "situation", type: "text", ph: "What was happening when you paused?" },
    { label: "Essence (present-tense body truth)", key: "essence", type: "textarea", ph: "One sentence in ‘I’ language." },
    { label: "Need to continue (request)", key: "need", type: "textarea", ph: "Boundary, change, break, content shift…" },
    { label: "Decision", key: "decision", type: "select", options: ["continue with change","take a break","stop for today","switch scene"], ph: "Choose one" },
    { label: "Re-entry protocol", key: "reentry", type: "textarea", ph: "How we resume; who checks in; what changes." },
    { label: "Follow-up (date/time)", key: "follow_up", type: "text", ph: "If needed, e.g., 2025-09-25 17:00" },
    { label: "Who’s informed (optional)", key: "who_informed", type: "text", ph: "GM only / whole group / other" }
  ],
  template: ({
    pause_phrase, situation, essence, need, decision, reentry, follow_up, who_informed,
    ctx, audience, style, tone
  }) => [
    "Safety Pause with Essence",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    pause_phrase && `Pause phrase: ${pause_phrase}`,
    situation && `Situation: ${situation}`,
    essence && `Present truth:\n${essence}`,
    need && `Need to continue:\n${need}`,
    decision && `Decision: ${decision}`,
    reentry && `Re-entry protocol:\n${reentry}`,
    follow_up && `Follow-up: ${follow_up}`,
    who_informed && `Who’s informed: ${who_informed}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "safety pause essence present truth need re entry protocol time out ttrpg consent repair" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Working Backwards PRFAQ — with Truths & Tradeoffs (V3 move)
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "working_backwards_prfaq_v3",
  slug: "working-backwards-prfaq-v3",
  label: "Working Backwards PRFAQ — Truths & Tradeoffs",
  kind: "framework",
  categories: ["product-management","strategy","communication","research"],
  tags: [
    "type:framework","use:press-release","use:faq","use:alignment",
    "topic:working-backwards","topic:tradeoffs","origin:amazon-inspired","level:intermediate"
  ],
  use_cases: [
    "align a team on customer value before building",
    "stress-test launch with FAQs and uncomfortable truths",
    "set public-facing narrative + measurable gates"
  ],
  boosters: [
    "Write the press release as if launching today—no future tense.",
    "Include at least 5 FAQs: objections, risks, pricing, privacy, support.",
    "Name one uncomfortable truth and the tradeoff you’re choosing, in first person.",
    "Define launch criteria and success metrics before work starts."
  ],
  definition:
    "A press release + FAQ drafted before building, with a candid ‘Truths & Tradeoffs’ section to surface realities early.",
  help:
    "Prompt: “One uncomfortable truth about this launch is __. The tradeoff I am choosing is __ because __.”",
  notice:
    "Inspired by Amazon’s Working Backwards method (fair-use adaptation).",
  fields: [
    // Press release top
    { label: "Product name", key: "product", type: "text", ph: "Working title" },
    { label: "Release date", key: "date", type: "text", ph: "YYYY-MM-DD" },
    { label: "Headline", key: "headline", type: "text", ph: "Customer-facing benefit in one line" },
    { label: "Subhead", key: "subhead", type: "text", ph: "Who it’s for + core outcome" },
    { label: "Summary paragraph", key: "summary", type: "textarea", ph: "Short press-paragraph in plain language" },

    // Body & quote
    { label: "Customer problem (plain)", key: "problem", type: "textarea", ph: "What hurts today, for whom" },
    { label: "Solution description", key: "solution", type: "textarea", ph: "What exists at launch; skip roadmap" },
    { label: "Customer quote (imagined)", key: "cust_quote", type: "text", ph: "“Since using X, I can Y…”" },
    { label: "Call to action", key: "cta", type: "text", ph: "What users do on day 1" },

    // V3 move — truths & tradeoffs
    { label: "Uncomfortable truth (first person)", key: "truth", type: "textarea", ph: "What’s true that might sting" },
    { label: "Tradeoff I’m choosing", key: "tradeoff", type: "text", ph: "Speed over breadth / privacy over personalisation…" },
    { label: "Because (reasoning)", key: "because", type: "textarea", ph: "Why this tradeoff is justified now" },

    // Metrics & gates
    { label: "Launch criteria (gates)", key: "gates", type: "textarea", ph: "Must-meet conditions to ship" },
    { label: "Success metrics (first 90 days)", key: "metrics", type: "textarea", ph: "North-star + guardrails" },

    // FAQ
    { label: "FAQs (Q→A, one per line or block)", key: "faqs", type: "textarea", ph: "Q: … A: …" },

    // Risks & owner
    { label: "Risks (top 3)", key: "risks", type: "textarea", ph: "What could burn us, realistically" },
    { label: "Owner", key: "owner", type: "text", ph: "Name/role" }
  ],
  template: ({
    product, date, headline, subhead, summary, problem, solution, cust_quote, cta,
    truth, tradeoff, because, gates, metrics, faqs, risks, owner,
    ctx, audience, style, tone
  }) => [
    "Press Release",
    product && `Product: ${product}`,
    date && `Date: ${date}`,
    headline && `Headline: ${headline}`,
    subhead && `Subhead: ${subhead}`,
    "",
    summary && `${summary}`,
    "",
    problem && `Customer problem:\n${problem}`,
    solution && `Solution at launch:\n${solution}`,
    cust_quote && `Customer quote: “${cust_quote}”`,
    cta && `Call to action: ${cta}`,
    "",
    "Truths & Tradeoffs (first person)",
    truth && `Uncomfortable truth: ${truth}`,
    (tradeoff || because) && `Tradeoff: ${tradeoff}${because ? ` — because ${because}` : ""}`,
    "",
    gates && `Launch criteria (gates):\n${gates}`,
    metrics && `Success metrics (first 90 days):\n${metrics}`,
    faqs && `FAQs:\n${faqs}`,
    risks && `Risks (top 3):\n${risks}`,
    owner && `Owner: ${owner}`,
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "working backwards prfaq press release faq truths tradeoffs launch criteria metrics amazon inspired" }
},

/* ──────────────────────────────────────────────────────────────────────────
   JTBD Interviews — with Felt-Sense Friction (V3 move)
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "jtbd_interviews_v3",
  slug: "jtbd-interviews-v3",
  label: "JTBD Interviews — Felt-Sense Friction",
  kind: "framework",
  categories: ["research","product-management","ux","strategy"],
  tags: [
    "type:framework","use:interview","use:discovery","use:insight-capture",
    "topic:jtbd","topic:struggles","topic:progress","origin:jtbd-inspired","level:intermediate"
  ],
  use_cases: [
    "map jobs, struggles, and progress moments",
    "replace opinions with timelines and triggers",
    "trace the body’s highest-friction moment (V3 move)"
  ],
  boosters: [
    "Reconstruct timeline: trigger → search → solution → use → outcome.",
    "Ask for specifics (numbers, times, tools used).",
    "At the peak-friction moment, ask ‘where in your body?’ then ‘what did you do next?’",
    "Capture push/pull/anxieties/habits (forces) explicitly."
  ],
  definition:
    "A Jobs To Be Done interview scaffold that adds a felt-sense probe at the moment of highest friction.",
  help:
    "Prompt: “Where did this task live in your body when it went wrong, and what did you do next?”",
  notice:
    "Inspired by JTBD research (Christensen/Ulwick lineage). Field-adapted.",
  fields: [
    { label: "Participant / role", key: "who", type: "text", ph: "Job performer" },
    { label: "Job to be done (plain)", key: "job", type: "text", ph: "“When I… I want to… so I can…”" },
    { label: "Context (situation/trigger)", key: "context", type: "textarea", ph: "Where/when did this start?" },
    { label: "Desired progress", key: "progress", type: "text", ph: "Outcome they sought" },
    { label: "Alternatives tried", key: "alts", type: "textarea", ph: "Competing solutions / workarounds" },
    { label: "Peak friction — body location", key: "body_spot", type: "text", ph: "Chest, gut, jaw… (their words)" },
    { label: "What happened next (after friction)", key: "after", type: "textarea", ph: "Concrete action taken" },
    { label: "Forces — Push", key: "push", type: "textarea", ph: "Why change now?" },
    { label: "Forces — Pull", key: "pull", type: "textarea", ph: "What drew them to a solution?" },
    { label: "Forces — Anxieties", key: "anx", type: "textarea", ph: "Worries/risks" },
    { label: "Forces — Habits", key: "habit", type: "textarea", ph: "Old patterns anchoring status quo" },
    { label: "Quote snippets (verbatim)", key: "quotes", type: "textarea", ph: "Exact words to keep" },
    { label: "Next research moves", key: "next_moves", type: "textarea", ph: "Who else; what artifact; what test?" }
  ],
  template: ({
    who, job, context, progress, alts, body_spot, after, push, pull, anx, habit, quotes, next_moves,
    ctx, audience, style, tone
  }) => [
    "JTBD Interview — Felt-Sense Friction",
    who && `Participant/role: ${who}`,
    job && `Job to be done: ${job}`,
    context && `Context/trigger:\n${context}`,
    progress && `Desired progress: ${progress}`,
    alts && `Alternatives/workarounds:\n${alts}`,
    (body_spot || after) && "Peak friction:",
    body_spot && `• Body location: ${body_spot}`,
    after && `• Next action taken: ${after}`,
    push && `Forces — Push:\n${push}`,
    pull && `Forces — Pull:\n${pull}`,
    anx && `Forces — Anxieties:\n${anx}`,
    habit && `Forces — Habits:\n${habit}`,
    quotes && `Quotes (verbatim):\n${quotes}`,
    next_moves && `Next research moves:\n${next_moves}`,
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "jtbd jobs to be done struggles progress forces felt sense friction timeline trigger quotes research" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Lean Startup Loop — Build · Measure · Learn (with Stop & Harm rules)
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "lean_loop_stop_harm_v3",
  slug: "lean-startup-loop-stop-harm-v3",
  label: "Lean Startup Loop — Stop & Harm Rules",
  kind: "framework",
  categories: ["experimentation","product-management","strategy","analytics"],
  tags: [
    "type:framework","use:experiment","use:hypothesis","use:decision",
    "topic:metrics","topic:ethics","origin:lean-startup-inspired","level:beginner"
  ],
  use_cases: [
    "run small, rapid hypothesis cycles",
    "pre-commit to stop rules and repair rules",
    "document the decision after learning"
  ],
  boosters: [
    "One hypothesis per loop; keep scope tiny.",
    "Define metric, threshold, and duration up front.",
    "Write a harm rule: what you repair and how.",
    "End with a crisp decision: pivot, persevere, or stop."
  ],
  definition:
    "A compact build–measure–learn card that adds explicit stop and harm rules to keep experiments honest and safe.",
  help:
    "Prompt: “We stop if metric X falls below Y for Z days, and we repair by __.”",
  fields: [
    { label: "Hypothesis (falsifiable)", key: "hypothesis", type: "textarea", ph: "We believe… users will… as measured by…" },
    { label: "Cohort / segment", key: "cohort", type: "text", ph: "Who’s in the test" },
    { label: "Experiment (what you’ll build)", key: "experiment", type: "textarea", ph: "Smallest thing to learn" },
    { label: "Metric (X)", key: "metric", type: "text", ph: "e.g., D1 activation rate" },
    { label: "Threshold (Y)", key: "threshold", type: "text", ph: "e.g., ≥ 25%" },
    { label: "Duration (Z days)", key: "duration", type: "text", ph: "e.g., 7" },
    { label: "Stop rule (auto)", key: "stop_rule", type: "text", ph: "If X < Y for Z days → stop" },
    { label: "Harm rule (repair by…)", key: "harm_rule", type: "textarea", ph: "Refund, notify, revert, delete data, etc." },
    { label: "Measure plan", key: "measure", type: "textarea", ph: "Instrumentation, sample size, analysis" },
    { label: "Result (data summary)", key: "result", type: "textarea", ph: "What happened" },
    { label: "Decision", key: "decision", type: "select", options: ["pivot","persevere","stop"], ph: "Choose one" },
    { label: "Next step", key: "next_step", type: "text", ph: "What happens now" }
  ],
  template: ({
    hypothesis, cohort, experiment, metric, threshold, duration, stop_rule, harm_rule,
    measure, result, decision, next_step,
    ctx, audience, style, tone
  }) => [
    "Lean Startup Loop — Stop & Harm Rules",
    hypothesis && `Hypothesis:\n${hypothesis}`,
    cohort && `Cohort/segment: ${cohort}`,
    experiment && `Experiment:\n${experiment}`,
    (metric || threshold || duration) && `Metric/threshold/duration: ${[metric, threshold, duration && `${duration}d`].filter(Boolean).join(" · ")}`,
    stop_rule && `Stop rule: ${stop_rule}`,
    harm_rule && `Harm rule (repair):\n${harm_rule}`,
    measure && `Measure plan:\n${measure}`,
    result && `Result:\n${result}`,
    decision && `Decision: ${decision}`,
    next_step && `Next step: ${next_step}`,
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "lean startup loop build measure learn stop rule harm rule hypothesis metric threshold duration decision" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Pre-Mortem with Red Team — include the embarrassing sentence (V3)
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "premortem_redteam_v3",
  slug: "pre-mortem-red-team-v3",
  label: "Pre-Mortem + Red Team — Embarrassing Sentence",
  kind: "framework",
  categories: ["risk","strategy","ethics","teamwork","product-management"],
  tags: [
    "type:framework","use:planning","use:risk-review","use:ethics-review",
    "topic:red-team","topic:failure-modes","level:intermediate"
  ],
  use_cases: [
    "imagine the failure and invite dissent",
    "install safeguards and stop conditions",
    "name the line you’d hate to say later"
  ],
  boosters: [
    "Let a neutral red-team write the first attack memo.",
    "Write the failure headline in bold, then the embarrassing sentence.",
    "Add leading indicators and explicit stop criteria.",
    "Close with one reversible experiment."
  ],
  definition:
    "A pre-mortem that brings in a red-team critique and forces an ‘embarrassing sentence’ to expose hidden risks.",
  help:
    "Prompt: “If this flops, the sentence I will hate saying out loud is __.”",
  fields: [
    { label: "Initiative", key: "initiative", type: "text", ph: "Name the effort" },
    { label: "Failure headline (vivid, one line)", key: "headline", type: "text", ph: "If it failed badly…" },
    { label: "Embarrassing sentence", key: "embarrassing", type: "textarea", ph: "The truth you'd hate to say later" },
    { label: "Red-team reviewers", key: "redteam", type: "text", ph: "Names/roles" },
    { label: "Attack vectors", key: "vectors", type: "textarea", ph: "How it fails technically/socially/legally" },
    { label: "Unsafe assumptions", key: "assumptions", type: "textarea", ph: "What we’re treating as true without proof" },
    { label: "Safeguards", key: "safeguards", type: "textarea", ph: "Gates, limits, audits, reviews" },
    { label: "Early warning signals", key: "signals", type: "textarea", ph: "Leading indicators" },
    { label: "Stop conditions", key: "stops", type: "textarea", ph: "Exactly when to halt/pivot" },
    { label: "Reversible experiment", key: "experiment", type: "textarea", ph: "Smallest safe test" },
    { label: "Owner & date", key: "owner", type: "text", ph: "Who/when" }
  ],
  template: ({
    initiative, headline, embarrassing, redteam, vectors, assumptions, safeguards, signals, stops, experiment, owner,
    ctx, audience, style, tone
  }) => [
    "Pre-Mortem + Red Team",
    initiative && `Initiative: ${initiative}`,
    headline && `Failure headline: ${headline}`,
    embarrassing && `Embarrassing sentence: ${embarrassing}`,
    redteam && `Red-team reviewers: ${redteam}`,
    vectors && `Attack vectors:\n${vectors}`,
    assumptions && `Unsafe assumptions:\n${assumptions}`,
    safeguards && `Safeguards:\n${safeguards}`,
    signals && `Early warning signals:\n${signals}`,
    stops && `Stop conditions:\n${stops}`,
    experiment && `Reversible experiment:\n${experiment}`,
    owner && `Owner & date: ${owner}`,
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "premortem pre mortem red team embarrassing sentence attack vectors safeguards early warning stop conditions" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Decision Record (PRD note / ADR) — with Dissent & Kill Criteria (V3)
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "decision_record_v3",
  slug: "decision-record-v3",
  label: "Decision Record — Dissent & Kill Criteria",
  kind: "framework",
  categories: ["product-management","engineering","strategy","communication"],
  tags: [
    "type:framework","use:adr","use:prd-note","use:alignment",
    "topic:dissent","topic:kill-criteria","level:beginner"
  ],
  use_cases: [
    "document why we chose X over Y",
    "record dissent and reversal conditions",
    "make decisions legible to future teams"
  ],
  boosters: [
    "Keep the decision statement one sentence, active voice.",
    "List options considered and why the winner beat the runner-up.",
    "Write dissent in the dissenters’ own words (brief).",
    "Define kill criteria as observable conditions."
  ],
  definition:
    "A compact architecture/product decision note that includes dissent and explicit reversal (kill) criteria.",
  help:
    "Prompt: “We reverse this decision if __ becomes true.”",
  fields: [
    { label: "Title", key: "title", type: "text", ph: "Short handle (ADR-### if used)" },
    { label: "Date", key: "date", type: "text", ph: "YYYY-MM-DD" },
    { label: "Status", key: "status", type: "select", options: ["proposed","accepted","deprecated","superseded"], ph: "Pick one" },
    { label: "Context", key: "context", type: "textarea", ph: "Problem, constraints, stakeholders" },
    { label: "Decision (one sentence)", key: "decision", type: "text", ph: "We will…" },
    { label: "Options considered", key: "options", type: "textarea", ph: "X, Y, Z with brief pros/cons" },
    { label: "Rationale", key: "rationale", type: "textarea", ph: "Why X over Y right now" },
    { label: "Dissent note", key: "dissent", type: "textarea", ph: "Concise minority view" },
    { label: "Kill/Reversal criteria", key: "kill", type: "textarea", ph: "If __ becomes true → reconsider" },
    { label: "Owners", key: "owners", type: "text", ph: "Names/roles" }
  ],
  template: ({
    title, date, status, context, decision, options, rationale, dissent, kill, owners,
    ctx, audience, style, tone
  }) => [
    "Decision Record (PRD/ADR)",
    title && `Title: ${title}`,
    (date || status) && `Date/Status: ${[date, status].filter(Boolean).join(" · ")}`,
    context && `Context:\n${context}`,
    decision && `Decision: ${decision}`,
    options && `Options considered:\n${options}`,
    rationale && `Rationale:\n${rationale}`,
    dissent && `Dissent note:\n${dissent}`,
    kill && `Kill/Reversal criteria:\n${kill}`,
    owners && `Owners: ${owners}`,
    ctx && `Context (app-level): ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "decision record adr prd dissent kill criteria reversal options rationale status owners" }
},

/* ──────────────────────────────────────────────────────────────────────────
   OKRs with Kill Criteria — attach an explicit “when to stop” (V3)
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "okrs_kill_criteria_v3",
  slug: "okrs-with-kill-criteria-v3",
  label: "OKRs — With Kill Criteria",
  kind: "framework",
  categories: ["strategy","product-management","teamwork","analytics"],
  tags: [
    "type:framework","use:planning","use:goal-setting","use:review",
    "topic:okrs","topic:kill-criteria","level:beginner"
  ],
  use_cases: [
    "set quarterly OKRs with explicit stop conditions",
    "avoid zombie goals; renegotiate scope on time",
    "tie KRs to owners and cadence"
  ],
  boosters: [
    "One objective; 2–4 KRs max; each KR measurable.",
    "Record baseline and cadence (weekly/biweekly).",
    "Write the kill rule in plain language with a date.",
    "Decide in advance who can pause/renegotiate."
  ],
  definition:
    "A standard OKR card with an explicit rule for when to pause and renegotiate if results lag.",
  help:
    "Prompt: “If KRs are under N by date D, we pause and renegotiate scope.”",
  fields: [
    { label: "Objective (one sentence)", key: "objective", type: "text", ph: "Qualitative aim" },
    { label: "Quarter / period", key: "period", type: "text", ph: "e.g., 2025 Q4" },
    { label: "Key results (bullets w/ targets)", key: "krs", type: "textarea", ph: "KR1: … target … owner …" },
    { label: "Baseline (current state)", key: "baseline", type: "textarea", ph: "Starting numbers" },
    { label: "Cadence (check-ins)", key: "cadence", type: "text", ph: "Weekly / biweekly" },
    { label: "Kill criteria (rule)", key: "kill_rule", type: "textarea", ph: "If KR<… by D → pause/renegotiate" },
    { label: "Owners", key: "owners", type: "text", ph: "Names/roles" },
    { label: "Notes (optional)", key: "notes", type: "textarea", ph: "Risks, dependencies, assumptions" }
  ],
  template: ({
    objective, period, krs, baseline, cadence, kill_rule, owners, notes,
    ctx, audience, style, tone
  }) => [
    "OKRs — With Kill Criteria",
    objective && `Objective: ${objective}`,
    period && `Period: ${period}`,
    krs && `Key results:\n${krs}`,
    baseline && `Baseline:\n${baseline}`,
    cadence && `Cadence: ${cadence}`,
    kill_rule && `Kill criteria:\n${kill_rule}`,
    owners && `Owners: ${owners}`,
    notes && `Notes:\n${notes}`,
    ctx && `Context (app-level): ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "okrs objective key results kill criteria pause renegotiate cadence baseline owners quarterly goals" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Design Doc — with “Scariest Change” Box
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "design_doc_scariest_change",
  slug: "design-doc-scariest-change",
  label: "Design Doc — Scariest Change",
  kind: "framework",
  categories: ["engineering","architecture","reliability","ethics"],
  tags: [
    "type:practice","use:design-proposal","use:risk-review","use:alignment",
    "topic:tradeoffs","topic:blast-radius","level:intermediate"
  ],
  use_cases: [
    "write upfront design proposals with explicit risk surfacing",
    "reduce pager pain via mitigations and rollbacks",
    "align reviewers on goals, constraints, and open questions"
  ],
  boosters: [
    "Write ‘Scariest change’ before ‘Fancy diagram’.",
    "Name who could be hurt (users or on-call) and how.",
    "Include rollback path, kill switch, and observability.",
    "Keep non-goals and constraints crisp; no wish-casting."
  ],
  definition:
    "A design doc template that forces the riskiest change into daylight and pairs it with mitigations and rollback.",
  help:
    "Prompt: “The change most likely to hurt people or pager load is __ because __.”",
  fields: [
    { label: "Title", key: "title", type: "text", ph: "Short handle" },
    { label: "Context", key: "context", type: "textarea", ph: "Problem statement, scope, stakeholders" },
    { label: "Goals", key: "goals", type: "textarea", ph: "Measurable outcomes" },
    { label: "Non-goals", key: "non_goals", type: "textarea", ph: "Out of scope" },
    { label: "Constraints", key: "constraints", type: "textarea", ph: "Tech, org, time, privacy" },
    { label: "Design overview", key: "design", type: "textarea", ph: "Approach + key components" },
    { label: "Scariest change — what", key: "scary_change", type: "text", ph: "The change most likely to hurt…" },
    { label: "Scariest change — because", key: "scary_because", type: "textarea", ph: "Why this is dangerous" },
    { label: "Who’s affected (users/on-call)", key: "affected", type: "textarea", ph: "People and pager surface area" },
    { label: "Mitigations", key: "mitigations", type: "textarea", ph: "Rate limits, caps, isolation, retries…" },
    { label: "Blast-radius limiters", key: "blast_limiters", type: "textarea", ph: "Shard, guard, circuit-breakers" },
    { label: "Rollback plan", key: "rollback", type: "textarea", ph: "How to revert safely and quickly" },
    { label: "Observability/SLO impact", key: "observability", type: "textarea", ph: "SLIs, dashboards, alerts" },
    { label: "Rollout plan", key: "rollout", type: "textarea", ph: "Flag, canary, blue/green" },
    { label: "Open questions", key: "open_qs", type: "textarea", ph: "Unknowns to resolve" },
    { label: "Owner", key: "owner", type: "text", ph: "Name/role" },
    { label: "Reviewers", key: "reviewers", type: "text", ph: "Names/roles" }
  ],
  template: ({
    title, context, goals, non_goals, constraints, design,
    scary_change, scary_because, affected, mitigations, blast_limiters,
    rollback, observability, rollout, open_qs, owner, reviewers,
    ctx, audience, style, tone
  }) => [
    "Design Doc — Scariest Change",
    title && `Title: ${title}`,
    ctx && `Context (app-level): ${ctx}`, audience && `Audience: ${audience}`,
    style && `Style: ${style}`, tone && `Tone: ${tone}`,
    context && `Context:\n${context}`,
    goals && `Goals:\n${goals}`,
    non_goals && `Non-goals:\n${non_goals}`,
    constraints && `Constraints:\n${constraints}`,
    design && `Design overview:\n${design}`,
    (scary_change || scary_because) && "Scariest change:",
    scary_change && `• What: ${scary_change}`,
    scary_because && `• Because: ${scary_because}`,
    affected && `Who’s affected:\n${affected}`,
    mitigations && `Mitigations:\n${mitigations}`,
    blast_limiters && `Blast-radius limiters:\n${blast_limiters}`,
    observability && `Observability/SLO impact:\n${observability}`,
    rollout && `Rollout plan:\n${rollout}`,
    rollback && `Rollback plan:\n${rollback}`,
    open_qs && `Open questions:\n${open_qs}`,
    (owner || reviewers) && `Owner/Reviewers: ${[owner, reviewers].filter(Boolean).join(" — ")}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "design doc scariest change pager load mitigations rollback observability goals constraints reviewers risk" }
},

/* ──────────────────────────────────────────────────────────────────────────
   RFC Process — with Unsaid Objection
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "rfc_process_unsaid_objection",
  slug: "rfc-process-unsaid-objection",
  label: "RFC — Unsaid Objection",
  kind: "framework",
  categories: ["engineering","architecture","communication","teamwork"],
  tags: [
    "type:practice","use:rfc","use:alignment","use:decision",
    "topic:dissent","topic:feedback","level:beginner"
  ],
  use_cases: [
    "request comments before work begins",
    "surface dissent early and concretely",
    "document decision date and channels"
  ],
  boosters: [
    "Invite specific reviewers and a clear close date.",
    "Ask for the unsaid objection explicitly.",
    "Record alternatives and migration/rollback.",
    "Summarize decision in one sentence."
  ],
  definition:
    "An RFC scaffold that explicitly asks for the unsaid objection to make the review honest.",
  help:
    "Prompt: “What is the unsaid objection that would make this honest?”",
  fields: [
    { label: "RFC title", key: "title", type: "text", ph: "Short handle" },
    { label: "Summary", key: "summary", type: "textarea", ph: "One-paragraph overview" },
    { label: "Motivation/problem", key: "motivation", type: "textarea", ph: "Why now" },
    { label: "Proposal", key: "proposal", type: "textarea", ph: "What you plan to do" },
    { label: "Alternatives considered", key: "alternatives", type: "textarea", ph: "X vs Y" },
    { label: "Risks", key: "risks", type: "textarea", ph: "Top concerns" },
    { label: "Unsaid objection", key: "unsaid", type: "textarea", ph: "Name the objection that would make this honest" },
    { label: "Migration/rollback", key: "migration", type: "textarea", ph: "How to unroll safely" },
    { label: "Stakeholders/reviewers", key: "stakeholders", type: "text", ph: "Names/roles" },
    { label: "Review channels", key: "channels", type: "text", ph: "Doc link, thread, meeting" },
    { label: "Decision date", key: "decision_date", type: "text", ph: "YYYY-MM-DD" },
    { label: "Status", key: "status", type: "select", options: ["draft","reviewing","accepted","rejected","superseded"], ph: "Pick one" }
  ],
  template: ({
    title, summary, motivation, proposal, alternatives, risks, unsaid,
    migration, stakeholders, channels, decision_date, status,
    ctx, audience, style, tone
  }) => [
    "RFC — Unsaid Objection",
    title && `Title: ${title}`,
    (status || decision_date) && `Status/Decision date: ${[status, decision_date].filter(Boolean).join(" · ")}`,
    summary && `Summary:\n${summary}`,
    motivation && `Motivation:\n${motivation}`,
    proposal && `Proposal:\n${proposal}`,
    alternatives && `Alternatives considered:\n${alternatives}`,
    risks && `Risks:\n${risks}`,
    unsaid && `Unsaid objection:\n${unsaid}`,
    migration && `Migration/rollback:\n${migration}`,
    stakeholders && `Stakeholders: ${stakeholders}`,
    channels && `Review channels: ${channels}`,
    ctx && `Context (app-level): ${ctx}`, audience && `Audience: ${audience}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "rfc request for comments unsaid objection dissent alternatives risks decision date channels migration rollback" }
},

/* ──────────────────────────────────────────────────────────────────────────
   TDD + Property-Based Testing — with Invariants
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "tdd_property_based_testing",
  slug: "tdd-property-based-testing",
  label: "TDD + Property-Based Testing — Invariants",
  kind: "framework",
  categories: ["engineering","testing","quality","reliability"],
  tags: [
    "type:practice","use:tdd","use:properties","use:edge-cases",
    "topic:invariants","topic:generators","level:beginner"
  ],
  use_cases: [
    "write failing tests first; drive design by tests",
    "capture invariants that must hold for any input",
    "generate edge cases and shrink minimal failures"
  ],
  boosters: [
    "Red → Green → Refactor; keep cycles tiny.",
    "Properties use simple language and cover the unhappy path.",
    "Add generators/strategies for tricky domains (dates, unicode).",
    "Document forbidden behaviors as ‘must never’ lines."
  ],
  definition:
    "A testing card that blends TDD with property/invariant thinking and explicit ‘must never’ constraints.",
  help:
    "Prompt: “For any input, it must never __.”",
  fields: [
    { label: "Requirement/user story", key: "story", type: "textarea", ph: "As a…, I want…, so that…" },
    { label: "Test list (red)", key: "tests_red", type: "textarea", ph: "Short failing tests to start" },
    { label: "Green notes/refactor plan", key: "refactor", type: "textarea", ph: "After green, cleanup ideas" },
    { label: "Properties/invariants (bullets)", key: "properties", type: "textarea", ph: "For any input… must hold…" },
    { label: "Must-never constraints (bullets)", key: "must_never", type: "textarea", ph: "For any input, it must never…" },
    { label: "Generators/strategies", key: "generators", type: "textarea", ph: "How you produce random inputs" },
    { label: "Edge cases to hit", key: "edges", type: "textarea", ph: "NaN, nulls, empty, huge, unicode, timezones…" },
    { label: "Coverage/quality target", key: "coverage", type: "text", ph: "e.g., 80% lines/branches + mutation score" },
    { label: "Tooling", key: "tooling", type: "text", ph: "JUnit/pytest + hypothesis/fast-check…" }
  ],
  template: ({
    story, tests_red, refactor, properties, must_never, generators, edges, coverage, tooling,
    ctx, audience, style, tone
  }) => [
    "TDD + Property-Based Testing — Invariants",
    story && `User story:\n${story}`,
    tests_red && `Test list (red):\n${tests_red}`,
    refactor && `Refactor plan:\n${refactor}`,
    properties && `Properties/invariants:\n${properties}`,
    must_never && `Must-never constraints:\n${must_never}`,
    generators && `Generators/strategies:\n${generators}`,
    edges && `Edge cases:\n${edges}`,
    coverage && `Coverage/quality target: ${coverage}`,
    tooling && `Tooling: ${tooling}`,
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "tdd property based testing invariants must never generators strategies edge cases red green refactor coverage" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Fuzzing + Mutation Testing — Replay the Outage Shape
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "fuzz_mutation_outage_shape",
  slug: "fuzzing-mutation-outage-shape",
  label: "Fuzzing + Mutation — Outage Shape",
  kind: "framework",
  categories: ["testing","reliability","security","quality"],
  tags: [
    "type:practice","use:fuzz","use:mutation","use:regression",
    "topic:inputs","topic:edge-cases","level:intermediate"
  ],
  use_cases: [
    "generate randomized or mutated inputs to catch edge cases",
    "reproduce the last outage’s shape and prevent recurrence",
    "define stop conditions and triage flow"
  ],
  boosters: [
    "Start with a seed corpus from prod-like cases.",
    "Record the outage’s shape (symptoms, rates, sequences).",
    "Define an oracle/assertions; crashes aren’t the only failures.",
    "Set runtime budget and stop conditions; avoid runaway tests."
  ],
  definition:
    "A fuzzing/mutation card focused on replicating the last outage’s shape and catching similar failures early.",
  help:
    "Prompt: “Generate inputs that replicate the last outage’s shape.”",
  fields: [
    { label: "Target (service/module)", key: "target", type: "text", ph: "What you’re fuzzing" },
    { label: "Last outage — shape", key: "outage_shape", type: "textarea", ph: "Error codes, rates, sequences, payload traits" },
    { label: "Seed corpus", key: "seed", type: "textarea", ph: "Inputs to mutate" },
    { label: "Mutation operators/strategies", key: "mut_ops", type: "textarea", ph: "Bit flips, truncation, unicode, schema drift…" },
    { label: "Fuzz config (rate/duration)", key: "config", type: "textarea", ph: "Budget, concurrency" },
    { label: "Oracle/assertions", key: "oracle", type: "textarea", ph: "What counts as failure" },
    { label: "Stop conditions", key: "stop", type: "textarea", ph: "Time, crashes, unique bugs found…" },
    { label: "Triage process", key: "triage", type: "textarea", ph: "Repro, minimize, file, fix, verify" },
    { label: "Owner", key: "owner", type: "text", ph: "Name/role" }
  ],
  template: ({
    target, outage_shape, seed, mut_ops, config, oracle, stop, triage, owner,
    ctx, audience, style, tone
  }) => [
    "Fuzzing + Mutation — Outage Shape",
    target && `Target: ${target}`,
    outage_shape && `Last outage — shape:\n${outage_shape}`,
    seed && `Seed corpus:\n${seed}`,
    mut_ops && `Mutation operators/strategies:\n${mut_ops}`,
    config && `Fuzz config:\n${config}`,
    oracle && `Oracle/assertions:\n${oracle}`,
    stop && `Stop conditions:\n${stop}`,
    triage && `Triage process:\n${triage}`,
    owner && `Owner: ${owner}`,
    ctx && `Context: ${ctx}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "fuzzing mutation testing inputs outage shape seed corpus oracle stop conditions triage reliability" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Trunk-Based Development — with Feature Flags
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "trunk_feature_flags",
  slug: "trunk-based-feature-flags",
  label: "Trunk-Based Dev — Feature Flags",
  kind: "framework",
  categories: ["engineering","delivery","reliability","experimentation"],
  tags: [
    "type:practice","use:rollout","use:flagging","use:experiment",
    "topic:release-strategy","topic:segmentation","level:beginner"
  ],
  use_cases: [
    "ship small commits behind flags",
    "target features safely by audience",
    "plan cleanup and data collection"
  ],
  boosters: [
    "Default deny: who must never see this by default, and why.",
    "Add kill switch and telemetry before merging.",
    "Decide removal date; don’t let flags rot.",
    "Write comms for internal users if toggled."
  ],
  definition:
    "A trunk-based rollout card that centers audience safety and cleanup via feature flags.",
  help:
    "Prompt: “Who should never see this by default and why?”",
  fields: [
    { label: "Flag name", key: "flag", type: "text", ph: "e.g., feature.profile_v2" },
    { label: "Purpose", key: "purpose", type: "textarea", ph: "Why this exists" },
    { label: "Default state", key: "default_state", type: "select", options: ["off","on","percent roll-out","internal only"], ph: "Pick one" },
    { label: "Must-not-see (segments) + why", key: "must_not_see", type: "textarea", ph: "Who is excluded by default and rationale" },
    { label: "Risk if exposed", key: "risk", type: "textarea", ph: "Safety, privacy, trust, revenue…" },
    { label: "Kill switch path", key: "kill", type: "text", ph: "Exactly how to turn it off" },
    { label: "Telemetry/events", key: "telemetry", type: "textarea", ph: "What you’ll log and alert on" },
    { label: "Rollout plan", key: "rollout", type: "textarea", ph: "Percentages, cohorts, dates" },
    { label: "Cleanup/removal date", key: "cleanup", type: "text", ph: "YYYY-MM-DD" },
    { label: "Reviewers", key: "reviewers", type: "text", ph: "Names/roles" }
  ],
  template: ({
    flag, purpose, default_state, must_not_see, risk, kill, telemetry, rollout, cleanup, reviewers,
    ctx, audience, style, tone
  }) => [
    "Trunk-Based Dev — Feature Flags",
    flag && `Flag: ${flag}`,
    default_state && `Default: ${default_state}`,
    purpose && `Purpose:\n${purpose}`,
    must_not_see && `Must-not-see + why:\n${must_not_see}`,
    risk && `Risk if exposed:\n${risk}`,
    kill && `Kill switch: ${kill}`,
    telemetry && `Telemetry:\n${telemetry}`,
    rollout && `Rollout plan:\n${rollout}`,
    cleanup && `Cleanup/removal date: ${cleanup}`,
    reviewers && `Reviewers: ${reviewers}`,
    ctx && `Context: ${ctx}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "trunk based development feature flags default deny segmentation kill switch telemetry cleanup rollout" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Canary + Blue-Green Deploys — with Honest Revert Comms
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "canary_blue_green_deploys",
  slug: "canary-blue-green-deploys",
  label: "Canary + Blue-Green — Revert Comms",
  kind: "framework",
  categories: ["reliability","delivery","operations","customer-support"],
  tags: [
    "type:practice","use:deploy","use:rollback","use:comms",
    "topic:guardrails","topic:compensation","level:beginner"
  ],
  use_cases: [
    "limit blast radius via canaries/blue-green",
    "prewrite rollback steps and user comms",
    "define success criteria and on-call ownership"
  ],
  boosters: [
    "Define guardrail metrics and hold-backs.",
    "Pre-bake revert message and compensation path.",
    "Traffic shift steps are reversible at each hop.",
    "Name the on-call and comms channels."
  ],
  definition:
    "A rollout card that pairs canary/blue-green mechanics with prewritten revert messaging and compensation.",
  help:
    "Prompt: “If we revert, we tell users __ and we compensate by __.”",
  fields: [
    { label: "Service/app", key: "service", type: "text", ph: "Name" },
    { label: "Strategy", key: "strategy", type: "select", options: ["canary","blue-green","both"], ph: "Pick one" },
    { label: "Canary scope / traffic split", key: "canary_scope", type: "text", ph: "e.g., 1%, 5%, 25%" },
    { label: "Guardrails (metrics + thresholds)", key: "guardrails", type: "textarea", ph: "Error rate, latency, crash-free…" },
    { label: "Traffic shift plan", key: "shift", type: "textarea", ph: "Step-by-step changes" },
    { label: "Revert message to users", key: "revert_msg", type: "textarea", ph: "Plain-language apology/explanation" },
    { label: "Compensation plan", key: "comp_plan", type: "textarea", ph: "Credit, extension, refund…" },
    { label: "Success criteria to complete rollout", key: "success", type: "textarea", ph: "What ‘good’ looks like" },
    { label: "On-call / responders", key: "oncall", type: "text", ph: "Names/rotation" },
    { label: "Comms channels", key: "comms", type: "text", ph: "Status page, email, in-app" }
  ],
  template: ({
    service, strategy, canary_scope, guardrails, shift, revert_msg, comp_plan, success, oncall, comms,
    ctx, audience, style, tone
  }) => [
    "Canary + Blue-Green — Revert Comms",
    service && `Service: ${service}`,
    strategy && `Strategy: ${strategy}`,
    canary_scope && `Canary scope: ${canary_scope}`,
    guardrails && `Guardrails:\n${guardrails}`,
    shift && `Traffic shift plan:\n${shift}`,
    revert_msg && `Revert message:\n${revert_msg}`,
    comp_plan && `Compensation plan:\n${comp_plan}`,
    success && `Success criteria:\n${success}`,
    (oncall || comms) && `On-call/Comms: ${[oncall, comms].filter(Boolean).join(" — ")}`,
    ctx && `Context: ${ctx}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "canary blue green deploy rollback revert message compensation guardrails traffic shift on call status page" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Observability — SLOs, SLIs, Error Budgets
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "observability_slos_error_budgets",
  slug: "observability-slos-slis-error-budgets",
  label: "Observability — SLOs · SLIs · Error Budgets",
  kind: "framework",
  categories: ["reliability","analytics","operations","product-management"],
  tags: [
    "type:practice","use:slo","use:monitoring","use:review",
    "topic:error-budget","topic:burn-rate","level:intermediate"
  ],
  use_cases: [
    "define user-visible reliability with budgets",
    "connect burn to pause/renegotiate rules",
    "decide who owns the pain of overspend"
  ],
  boosters: [
    "Write SLIs as user journeys, not server metrics.",
    "Set SLO targets and measurement windows explicitly.",
    "Define error budget policy and burn alerts.",
    "Name which team absorbs pain if you overspend (be honest)."
  ],
  definition:
    "An SLO/SLI card that ties error budgets to policy, alerts, and a candid owner of the pain when budgets burn.",
  help:
    "Prompt: “If we overspend, which team’s nights and weekends get hit first?”",
  fields: [
    { label: "Service/journey", key: "service", type: "text", ph: "User-visible scope" },
    { label: "SLI definition", key: "sli", type: "textarea", ph: "What you measure (from the user’s view)" },
    { label: "SLO target(s)", key: "slo", type: "textarea", ph: "e.g., 99.9% in 30d; 95th p95<300ms" },
    { label: "Measurement window", key: "window", type: "text", ph: "e.g., rolling 30 days" },
    { label: "Error budget amount", key: "budget", type: "text", ph: "e.g., 43m downtime / 30d" },
    { label: "Burn alerts", key: "alerts", type: "textarea", ph: "2%/h, 5%/h; who’s paged" },
    { label: "Budget policy", key: "policy", type: "textarea", ph: "What pauses when budget burns" },
    { label: "Who eats the pain on overspend", key: "pain_owner", type: "text", ph: "Which team’s nights/weekends?" },
    { label: "Mitigation playbook", key: "playbook", type: "textarea", ph: "Rollback, degrade, cache, feature off" },
    { label: "Owners", key: "owners", type: "text", ph: "Names/roles" }
  ],
  template: ({
    service, sli, slo, window, budget, alerts, policy, pain_owner, playbook, owners,
    ctx, audience, style, tone
  }) => [
    "Observability — SLOs · SLIs · Error Budgets",
    service && `Service/journey: ${service}`,
    sli && `SLI:\n${sli}`,
    slo && `SLO target(s):\n${slo}`,
    (window || budget) && `Window/Budget: ${[window, budget].filter(Boolean).join(" · ")}`,
    alerts && `Burn alerts:\n${alerts}`,
    policy && `Budget policy:\n${policy}`,
    pain_owner && `Pain owner on overspend: ${pain_owner}`,
    playbook && `Mitigation playbook:\n${playbook}`,
    owners && `Owners: ${owners}`,
    ctx && `Context: ${ctx}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "observability slos slis error budgets burn rate policy alerts who pays reliability user journey" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Blameless Postmortem — Essence First, Then Facts
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "blameless_postmortem_essence",
  slug: "blameless-postmortem-essence",
  label: "Blameless Postmortem — Essence First",
  kind: "framework",
  categories: ["reliability","learning","operations","teamwork"],
  tags: [
    "type:practice","use:postmortem","use:retro","use:repair",
    "topic:incident","topic:learning","level:beginner"
  ],
  use_cases: [
    "analyze incidents without blame",
    "start with a one-line body-truth to defuse shame",
    "produce actionable corrections and owners"
  ],
  boosters: [
    "One sentence of essence from each primary, then facts.",
    "Timeline in camera-facts; avoid speculation.",
    "Name contributing factors (technical + social).",
    "Write corrective actions with owners and due dates."
  ],
  definition:
    "A postmortem card that begins with one embodied truth line and then documents facts, factors, and fixes—without blame.",
  help:
    "Prompt: “One sentence on where this landed in your body. Then facts.”",
  fields: [
    { label: "Incident summary", key: "summary", type: "textarea", ph: "Short synopsis" },
    { label: "Essence (one sentence)", key: "essence", type: "text", ph: "Where this landed in my body…" },
    { label: "Impact (users/scope/duration)", key: "impact", type: "textarea", ph: "Who/what/for how long" },
    { label: "Timeline (camera facts)", key: "timeline", type: "textarea", ph: "Timestamps and events" },
    { label: "Detection", key: "detection", type: "textarea", ph: "How we noticed" },
    { label: "Response", key: "response", type: "textarea", ph: "What we did" },
    { label: "Contributing factors", key: "factors", type: "textarea", ph: "Tech + org contributors" },
    { label: "What went well", key: "well", type: "textarea", ph: "Keeps to repeat" },
    { label: "What was harder than it should be", key: "hard", type: "textarea", ph: "Friction to remove" },
    { label: "Corrective actions (w/ owners & due)", key: "actions", type: "textarea", ph: "Bullets with names/dates" },
    { label: "Follow-up reviews", key: "followups", type: "textarea", ph: "30/90 day checks" },
    { label: "Visibility/recipients", key: "recipients", type: "text", ph: "Where this is shared" }
  ],
  template: ({
    summary, essence, impact, timeline, detection, response, factors, well, hard, actions, followups, recipients,
    ctx, audience, style, tone
  }) => [
    "Blameless Postmortem — Essence First",
    summary && `Incident summary:\n${summary}`,
    essence && `Essence (one line): ${essence}`,
    impact && `Impact:\n${impact}`,
    timeline && `Timeline (facts):\n${timeline}`,
    detection && `Detection:\n${detection}`,
    response && `Response:\n${response}`,
    factors && `Contributing factors:\n${factors}`,
    well && `What went well:\n${well}`,
    hard && `What was harder than it should be:\n${hard}`,
    actions && `Corrective actions (owners & due):\n${actions}`,
    followups && `Follow-up reviews:\n${followups}`,
    recipients && `Visibility/recipients: ${recipients}`,
    ctx && `Context: ${ctx}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "blameless postmortem essence first facts timeline impact contributing factors corrective actions learning" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Threat Modeling — STRIDE/LINDDUN with Malicious Narrative
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "threat_model_stride_linddun",
  slug: "threat-model-stride-linddun",
  label: "Threat Modeling — STRIDE/LINDDUN",
  kind: "framework",
  categories: ["security","privacy","architecture","ethics"],
  tags: [
    "type:practice","use:threat-model","use:design-review","use:risk-register",
    "topic:stride","topic:linddun","level:intermediate"
  ],
  use_cases: [
    "map security and privacy risks with structured categories",
    "write malicious-user narratives and misuse cases",
    "define mitigations, residual risk, and verification"
  ],
  boosters: [
    "Draw the DFD (data-flow diagram) and mark trust boundaries.",
    "Write a first-person attacker narrative (‘as a malicious user…’).",
    "Tag findings with STRIDE and/or LINDDUN categories.",
    "Document mitigations and how you’ll verify them."
  ],
  definition:
    "A threat-model card that pairs structured categories (STRIDE/LINDDUN) with a concrete malicious-user narrative.",
  help:
    "Prompt: “As a malicious user, here is how I would hurt someone with this.”",
  notice:
    "Security work may require specialist review. Handle sensitive details appropriately.",
  fields: [
    { label: "System/scope", key: "scope", type: "text", ph: "What’s in/out" },
    { label: "Assets/data at risk", key: "assets", type: "textarea", ph: "Secrets, PII, money, availability…" },
    { label: "Actors (users/services)", key: "actors", type: "textarea", ph: "Legit + adversarial" },
    { label: "Trust boundaries", key: "boundaries", type: "textarea", ph: "Where assumptions change" },
    { label: "Data flows (DFD link/notes)", key: "flows", type: "textarea", ph: "Major flows + stores" },
    { label: "Misuse case — malicious narrative", key: "malicious", type: "textarea", ph: "As an attacker, I would…" },
    { label: "STRIDE findings", key: "stride", type: "textarea", ph: "Spoofing, Tampering, Repudiation, Info Disclosure, DoS, Elevation" },
    { label: "LINDDUN findings (privacy)", key: "linddun", type: "textarea", ph: "Linkability, Identifiability, Non-repudiation, Detectability, Disclosure, Unawareness, Non-compliance" },
    { label: "Mitigations", key: "mitigations", type: "textarea", ph: "Design/controls to address risks" },
    { label: "Residual risk", key: "residual", type: "textarea", ph: "What remains and why acceptable" },
    { label: "Verification plan", key: "verify", type: "textarea", ph: "Pentest, unit/integration tests, scanning" },
    { label: "Owners", key: "owners", type: "text", ph: "Names/roles" }
  ],
  template: ({
    scope, assets, actors, boundaries, flows, malicious, stride, linddun, mitigations, residual, verify, owners,
    ctx, audience, style, tone
  }) => [
    "Threat Modeling — STRIDE/LINDDUN",
    scope && `System/scope: ${scope}`,
    assets && `Assets/data at risk:\n${assets}`,
    actors && `Actors:\n${actors}`,
    boundaries && `Trust boundaries:\n${boundaries}`,
    flows && `Data flows:\n${flows}`,
    malicious && `Misuse case — malicious narrative:\n${malicious}`,
    stride && `STRIDE findings:\n${stride}`,
    linddun && `LINDDUN findings (privacy):\n${linddun}`,
    mitigations && `Mitigations:\n${mitigations}`,
    residual && `Residual risk:\n${residual}`,
    verify && `Verification plan:\n${verify}`,
    owners && `Owners: ${owners}`,
    ctx && `Context: ${ctx}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "threat modeling stride linddun attacker narrative misuse case trust boundaries data flow mitigations residual risk" }
},

/* ──────────────────────────────────────────────────────────────────────────
   V-Model / MBSE — with Assumption Ledger & Traceability
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "vmodel_mbse_assumption_ledger",
  slug: "v-model-mbse-assumption-ledger",
  label: "V-Model / MBSE — Assumption Ledger",
  kind: "framework",
  categories: ["systems-engineering","architecture","reliability","safety"],
  tags: [
    "type:framework","use:design-review","use:traceability","use:risk-register",
    "topic:mbse","topic:v-model","topic:assumptions","level:intermediate"
  ],
  use_cases: [
    "trace requirements to verification/validation with explicit assumptions",
    "surface falsifiable assumptions with dates and owners",
    "link assumptions to hazards, tests, and model elements"
  ],
  boosters: [
    "Write assumptions as falsifiable statements with a due date.",
    "Link each assumption to specific requirements, blocks, and tests.",
    "If high-risk and near deadline, design a mitigation now (Plan B).",
    "Review the ledger at each V&V gate; close or convert to requirement."
  ],
  definition:
    "A V-model/MBSE scaffold that keeps an explicit assumption ledger with trace links to requirements, model elements, tests, and hazards.",
  help:
    "Prompt: “Assumption A will be false if __ by date D.” Capture owner, evidence to gather, and links.",
  fields: [
    { label: "System / scope", key: "system", type: "text", ph: "Project or subsystem" },
    { label: "Model links (SysML/URIs)", key: "model_links", type: "text", ph: "Block/req diagrams, element IDs…" },
    { label: "Key requirements (bullets)", key: "requirements", type: "textarea", ph: "REQ-001 … REQ-00N" },
    { label: "Verification map (req → test/analysis/inspection)", key: "verification", type: "textarea", ph: "REQ-001 → T-12 (analysis)…" },
    { label: "Validation plan (user/ops scenarios)", key: "validation", type: "textarea", ph: "How we prove it matters" },
    { label: "Assumption ledger — rows (one per line/table-ish)", key: "ledger_rows", type: "textarea",
      ph: "[A-01] statement | falsified-if | date D | owner | evidence | risk-if-false | mitigation | trace(REQs/Blocks/Tests)" },
    { label: "Highest-risk items (IDs)", key: "hotlist", type: "text", ph: "A-01, A-04…" },
    { label: "Change impact notes (optional)", key: "impact", type: "textarea", ph: "What shifts if an assumption fails?" }
  ],
  template: ({
    system, model_links, requirements, verification, validation, ledger_rows, hotlist, impact,
    ctx, audience, style, tone
  }) => [
    "V-Model / MBSE — Assumption Ledger",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    system && `System/scope: ${system}`,
    model_links && `Model links: ${model_links}`,
    requirements && `Key requirements:\n${requirements}`,
    verification && `Verification map:\n${verification}`,
    validation && `Validation plan:\n${validation}`,
    ledger_rows && `Assumption ledger:\n${ledger_rows}`,
    hotlist && `Highest-risk assumptions: ${hotlist}`,
    impact && `Change impact notes:\n${impact}`,
    "",
    "Prompt anchor: “Assumption A will be false if __ by date D.”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "v model mbse assumption ledger falsifiable traceability requirements verification validation sysml hazards risk owner date" }
},

/* ──────────────────────────────────────────────────────────────────────────
   FMEA / HAZOP / Fault Tree — Failure Modes & Consequences
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "fmea_hazop_fta_unified",
  slug: "fmea-hazop-fta-unified",
  label: "FMEA · HAZOP · Fault Tree — Unified Card",
  kind: "framework",
  categories: ["reliability","safety","systems-engineering","risk"],
  tags: [
    "type:framework","use:hazard-analysis","use:risk-review","use:design-out",
    "topic:fmea","topic:hazop","topic:fta","level:intermediate"
  ],
  use_cases: [
    "identify failure modes, causes, effects, and design them out",
    "run HAZOP guidewords or model a fault tree top event",
    "prioritize mitigations with RPN/criticality and owners"
  ],
  boosters: [
    "Describe behavior that increases failure likelihood—make it observable.",
    "Prefer design-out and passive safety over warnings/procedures.",
    "For FMEA: keep S/O/D scales consistent; compute RPN/criticality.",
    "For HAZOP: use guidewords (No/More/Less/As well as/Part of/Reverse…).",
    "For FTA: define the top event and logic (AND/OR) clearly."
  ],
  definition:
    "A unified risk-analysis card for FMEA, HAZOP, or Fault Tree work, focused on behaviors that increase failure likelihood and how to design them out.",
  help:
    "Prompt: “What behavior makes this failure more likely and how do we design it out?”",
  fields: [
    { label: "System/process", key: "system", type: "text", ph: "Scope" },
    { label: "Method", key: "method", type: "select", options: ["FMEA","HAZOP","Fault Tree"], ph: "Pick one" },
    { label: "Function / node / block", key: "function", type: "text", ph: "What this part is supposed to do" },
    { label: "Failure mode / deviation / top event", key: "mode", type: "text", ph: "What goes wrong" },
    { label: "Cause(s)", key: "causes", type: "textarea", ph: "Upstream contributors" },
    { label: "Effect(s) on user/system", key: "effects", type: "textarea", ph: "Downstream impact" },
    { label: "Behavior that increases likelihood", key: "behavior", type: "textarea", ph: "Operator/system behavior to design out" },
    { label: "Existing controls/safeguards", key: "controls", type: "textarea", ph: "What’s in place now" },
    { label: "Mitigation (design-out preferred)", key: "mitigation", type: "textarea", ph: "Change to remove/limit risk" },
    { label: "Severity (S)", key: "sev", type: "text", ph: "1–10 or A–E" },
    { label: "Occurrence (O)", key: "occ", type: "text", ph: "1–10 or per hour" },
    { label: "Detection (D)", key: "det", type: "text", ph: "1–10 or coverage %" },
    { label: "RPN / Criticality", key: "rpn", type: "text", ph: "S×O×D or other index" },
    { label: "Owner & due", key: "owner", type: "text", ph: "Name + date" },
    { label: "Notes", key: "notes", type: "textarea", ph: "HAZOP guidewords, FTA gates, assumptions…" }
  ],
  template: ({
    system, method, function: fn, mode, causes, effects, behavior, controls, mitigation,
    sev, occ, det, rpn, owner, notes, ctx, audience, style, tone
  }) => [
    "FMEA · HAZOP · Fault Tree — Unified Card",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    system && `System/process: ${system}`,
    method && `Method: ${method}`,
    fn && `Function/node/block: ${fn}`,
    mode && `Failure mode/deviation/top event: ${mode}`,
    causes && `Causes:\n${causes}`,
    effects && `Effects:\n${effects}`,
    behavior && `Behavior increasing likelihood:\n${behavior}`,
    controls && `Existing controls:\n${controls}`,
    mitigation && `Mitigation (design-out preferred):\n${mitigation}`,
    (sev || occ || det || rpn) && `S/O/D/RPN: ${[sev && `S=${sev}`, occ && `O=${occ}`, det && `D=${det}`, rpn && `RPN=${rpn}`].filter(Boolean).join(" · ")}`,
    owner && `Owner & due: ${owner}`,
    notes && `Notes:\n${notes}`,
    "",
    "Prompt anchor: “What behavior makes this failure more likely and how do we design it out?”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "fmea hazop fault tree analysis failure modes effects causes behavior design out severity occurrence detection rpn guidewords top event" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Reliability Growth & Burn-In — MTBF Targets and Stop Rules
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "reliability_growth_burn_in",
  slug: "reliability-growth-burn-in",
  label: "Reliability Growth & Burn-In",
  kind: "framework",
  categories: ["reliability","testing","operations","systems-engineering"],
  tags: [
    "type:framework","use:test-plan","use:acceptance","use:stop-rule",
    "topic:mtbf","topic:burn-in","topic:growth-model","level:intermediate"
  ],
  use_cases: [
    "plan test–fix–test cycles with explicit acceptance targets",
    "declare acceptable failure rate at week 2 and why",
    "set stop/repair rules and data capture for growth analysis"
  ],
  boosters: [
    "Choose a growth model (Crow-AMSAA/Duane) only if you’ll fit it honestly.",
    "State acceptable failure rate early; explain the rationale.",
    "Define burn-in stresses and screening criteria.",
    "Write stop rules tied to user harm and budget, not vibes."
  ],
  definition:
    "A reliability growth/burn-in card to declare acceptable early failure rates, growth targets, and stop rules with rationale.",
  help:
    "Prompt: “What failure rate can we live with at week 2 and why?”",
  fields: [
    { label: "Program/assembly", key: "program", type: "text", ph: "Subsystem or SKU" },
    { label: "Environment/stress profile", key: "env", type: "textarea", ph: "Thermal, vibration, duty cycle…" },
    { label: "Test duration & cycles", key: "duration", type: "text", ph: "e.g., 2 weeks, 3 cycles/day" },
    { label: "Acceptable failure rate at week 2", key: "fail_rate_w2", type: "text", ph: "e.g., ≤ 1 per 500 hr" },
    { label: "Why we can live with this (rationale)", key: "why", type: "textarea", ph: "Volume, redundancy, service model…" },
    { label: "Target MTBF by date", key: "mtbf_target", type: "text", ph: "e.g., ≥ 2000 hr by 2025-12-01" },
    { label: "Growth model (optional)", key: "growth_model", type: "select", options: ["none","Crow-AMSAA","Duane-like"], ph: "Pick one" },
    { label: "Burn-in plan (duration/stress)", key: "burnin", type: "textarea", ph: "Screening prior to ship" },
    { label: "Stop/repair rules", key: "stop_rules", type: "textarea", ph: "If rate > X for Y hrs → pause/repair…" },
    { label: "Sample size & allocation", key: "n", type: "text", ph: "Units under test" },
    { label: "Data capture & analysis", key: "data", type: "textarea", ph: "Telemetry, censoring, confidence bounds" },
    { label: "Owner & next review", key: "owner", type: "text", ph: "Name + date" }
  ],
  template: ({
    program, env, duration, fail_rate_w2, why, mtbf_target, growth_model, burnin, stop_rules, n, data, owner,
    ctx, audience, style, tone
  }) => [
    "Reliability Growth & Burn-In",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    program && `Program/assembly: ${program}`,
    env && `Environment/stress profile:\n${env}`,
    duration && `Test duration & cycles: ${duration}`,
    fail_rate_w2 && `Acceptable failure rate at week 2: ${fail_rate_w2}`,
    why && `Why we can live with this:\n${why}`,
    mtbf_target && `Target MTBF by date: ${mtbf_target}`,
    growth_model && `Growth model: ${growth_model}`,
    burnin && `Burn-in plan:\n${burnin}`,
    stop_rules && `Stop/repair rules:\n${stop_rules}`,
    n && `Sample size: ${n}`,
    data && `Data capture & analysis:\n${data}`,
    owner && `Owner & next review: ${owner}`,
    "",
    "Prompt anchor: “What failure rate can we live with at week 2 and why?”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "reliability growth burn in mtbf acceptable failure rate week 2 crow amsaa duane stop rules telemetry screening" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Design of Experiments + Tolerance Stacks — CI & Power Gates
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "doe_tolerance_stacks",
  slug: "design-of-experiments-tolerance-stacks",
  label: "DOE + Tolerance Stacks — CI & Power",
  kind: "framework",
  categories: ["experiment","manufacturing","analytics","systems-engineering"],
  tags: [
    "type:framework","use:experiment-design","use:analysis","use:acceptance",
    "topic:doe","topic:tolerance-stack","level:intermediate"
  ],
  use_cases: [
    "plan structured experiments with clear acceptance gates",
    "analyze variation contributors and stack tolerances",
    "precommit to CI width and statistical power"
  ],
  boosters: [
    "State effect size of interest; pick design to detect it.",
    "Randomize and block; pre-register analysis if stakes are high.",
    "For stacks, compare worst-case, RSS, and (if possible) Monte Carlo.",
    "Acceptance requires CI width and power thresholds met."
  ],
  definition:
    "A combined DOE and tolerance-stack card with explicit confidence-interval and power gates, plus stack acceptance criteria.",
  help:
    "Prompt: “We accept result R only if CI is within __ and power is __.”",
  fields: [
    { label: "Problem / response variable", key: "response", type: "text", ph: "What you measure" },
    { label: "Factors & levels", key: "factors", type: "textarea", ph: "A,B,C with levels…" },
    { label: "Design type", key: "design", type: "select", options: ["full factorial","fractional","Taguchi","RSM","custom"], ph: "Pick one" },
    { label: "Randomization / blocking", key: "rand_block", type: "textarea", ph: "Order, blocks, nuisance factors" },
    { label: "Effect size of interest", key: "effect", type: "text", ph: "Δ you care about" },
    { label: "CI width threshold", key: "ci", type: "text", ph: "e.g., 95% CI half-width ≤ 1.0" },
    { label: "Power threshold", key: "power", type: "text", ph: "e.g., ≥ 0.8" },
    { label: "Tolerance contributors (stack)", key: "contributors", type: "textarea", ph: "Dim A, Dim B, torque, temp…" },
    { label: "Stack method", key: "stack_method", type: "select", options: ["worst-case","RSS","Monte Carlo"], ph: "Pick one" },
    { label: "Stack acceptance criterion", key: "stack_accept", type: "text", ph: "Spec limit vs. predicted distribution" },
    { label: "Analysis plan", key: "analysis", type: "textarea", ph: "ANOVA/mixed model; simulation steps" },
    { label: "Result summary (when done)", key: "result", type: "textarea", ph: "Findings, effects, intervals" },
    { label: "Owner & dates", key: "owner", type: "text", ph: "Name + run/analysis dates" }
  ],
  template: ({
    response, factors, design, rand_block, effect, ci, power, contributors, stack_method, stack_accept,
    analysis, result, owner, ctx, audience, style, tone
  }) => [
    "DOE + Tolerance Stacks — CI & Power",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    response && `Response: ${response}`,
    factors && `Factors & levels:\n${factors}`,
    design && `Design: ${design}`,
    rand_block && `Randomization/blocking:\n${rand_block}`,
    effect && `Effect size of interest: ${effect}`,
    (ci || power) && `Acceptance gates: ${[ci && `CI ${ci}`, power && `Power ${power}`].filter(Boolean).join(" · ")}`,
    contributors && `Tolerance contributors:\n${contributors}`,
    stack_method && `Stack method: ${stack_method}`,
    stack_accept && `Stack acceptance: ${stack_accept}`,
    analysis && `Analysis plan:\n${analysis}`,
    result && `Result summary:\n${result}`,
    owner && `Owner & dates: ${owner}`,
    "",
    "Prompt anchor: “We accept result R only if CI is within __ and power is __.”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "design of experiments tolerance stack ci width power worst case rss monte carlo anova effect size acceptance" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Technology Readiness Levels — with Exit Ramps
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "trl_with_exit_ramps",
  slug: "technology-readiness-levels-exit-ramps",
  label: "TRLs — With Exit Ramps",
  kind: "framework",
  categories: ["systems-engineering","strategy","program-management","risk"],
  tags: [
    "type:framework","use:maturity-gates","use:go-no-go","use:salvage",
    "topic:trl","topic:exit-ramp","level:beginner"
  ],
  use_cases: [
    "track technology maturity (TRL 1→9) with explicit stop/salvage rules",
    "define evidence required at each gate",
    "avoid escalation of commitment via prewritten exit ramps"
  ],
  boosters: [
    "State TRL definitions up front for your org; keep evidence concrete.",
    "Write kill/exit ramps before work; name salvage paths.",
    "At TRL 5 (relevant environment), define a specific failure condition.",
    "Record owners and next review dates per gate."
  ],
  definition:
    "A TRL tracker with explicit exit ramps and salvage plans; adds a concrete failure condition at TRL 5.",
  help:
    "Prompt: “If condition C fails at TRL 5, we stop and salvage by __.”",
  fields: [
    { label: "Program/tech", key: "program", type: "text", ph: "Name" },
    { label: "Current TRL", key: "trl_now", type: "select", options: ["1","2","3","4","5","6","7","8","9"], ph: "Pick one" },
    { label: "Target TRL", key: "trl_target", type: "select", options: ["2","3","4","5","6","7","8","9"], ph: "Pick one" },
    { label: "Gate evidence (per next TRL)", key: "gate_evidence", type: "textarea", ph: "What proof is required?" },
    { label: "TRL 5 — condition C (must pass)", key: "trl5_condition", type: "text", ph: "If this fails, we stop" },
    { label: "Salvage plan if TRL 5 fails", key: "salvage", type: "textarea", ph: "Reuse, pivot, license, archive…" },
    { label: "Exit/kill criteria (all gates)", key: "kill_criteria", type: "textarea", ph: "Observable conditions to stop" },
    { label: "Risks & mitigations", key: "risks", type: "textarea", ph: "Top risks and counters" },
    { label: "Owners & next review", key: "owners", type: "text", ph: "Names + date" },
    { label: "Notes", key: "notes", type: "textarea", ph: "Dependencies, budgets, partners" }
  ],
  template: ({
    program, trl_now, trl_target, gate_evidence, trl5_condition, salvage, kill_criteria, risks, owners, notes,
    ctx, audience, style, tone
  }) => [
    "TRLs — With Exit Ramps",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    program && `Program/tech: ${program}`,
    (trl_now || trl_target) && `TRL now/target: ${[trl_now, trl_target].filter(Boolean).join(" → ")}`,
    gate_evidence && `Gate evidence (next TRL):\n${gate_evidence}`,
    trl5_condition && `TRL 5 condition C (must pass): ${trl5_condition}`,
    salvage && `Salvage plan if TRL 5 fails:\n${salvage}`,
    kill_criteria && `Exit/kill criteria (all gates):\n${kill_criteria}`,
    risks && `Risks & mitigations:\n${risks}`,
    owners && `Owners & next review: ${owners}`,
    notes && `Notes:\n${notes}`,
    "",
    "Prompt anchor: “If condition C fails at TRL 5, we stop and salvage by __.”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "technology readiness levels trl exit ramps kill criteria salvage gates evidence owners review program" }
},


/* ──────────────────────────────────────────────────────────────────────────
   Registered Reports & Preregistration — guardrails against p-hacking
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "registered_report_prereg",
  slug: "registered-report-prereg",
  label: "Registered Reports & Preregistration",
  kind: "framework",
  categories: ["research","statistics","ethics","education"],
  tags: [
    "type:framework","use:prereg","use:peer-review","use:analysis-plan",
    "topic:p-hacking","topic:forging-paths","origin:open-science","level:intermediate"
  ],
  use_cases: [
    "lock a design and analysis plan before data collection",
    "reduce researcher degrees of freedom and HARKing",
    "clarify outcomes, power, and deviations policy"
  ],
  boosters: [
    "Commit to one primary outcome and one primary test.",
    "State exclusion, stopping, and missing-data rules up front.",
    "Separate confirmatory from exploratory clearly in the write-up.",
    "Add a replication/robustness section with exact specs.",
    "Share a read-only prereg link and archive a copy (DOI)."
  ],
  definition:
    "A preregistration/Registered Report scaffold to precommit hypotheses, design, and analysis—plus explicit guardrails against p-hacking.",
  help:
    "Prompt: “The p-hacking path most tempting here is __. My guardrail is __.”",
  notice:
    "Not IRB/ethics approval. Coordinate with your board and journal policies.",
  fields: [
    { label: "Title", key: "title", type: "text", ph: "Study handle" },
    { label: "Outlet / registry", key: "outlet", type: "text", ph: "Journal, OSF, AsPredicted…" },
    { label: "Stage", key: "stage", type: "select", options: ["prereg only","Registered Report — Stage 1","Registered Report — Stage 2"], ph: "Pick one" },
    { label: "Research question", key: "rq", type: "textarea", ph: "What are you testing?" },
    { label: "Hypotheses (confirmatory)", key: "hypotheses", type: "textarea", ph: "H1, H2… falsifiable" },
    { label: "Primary outcome(s)", key: "primary_outcomes", type: "textarea", ph: "Exactly what and how computed" },
    { label: "Secondary outcomes", key: "secondary_outcomes", type: "textarea", ph: "Optional" },
    { label: "Constructs & measures", key: "measures", type: "textarea", ph: "Instruments, validity, timing" },
    { label: "Sample frame & size", key: "sample", type: "textarea", ph: "Recruitment, N, power rationale" },
    { label: "Randomization / blinding", key: "rand_blind", type: "textarea", ph: "Unit, seed, concealment" },
    { label: "Exclusion criteria", key: "exclusion", type: "textarea", ph: "Predefined drop rules" },
    { label: "Stopping rules", key: "stopping", type: "textarea", ph: "Time/N-based; no peeking policy" },
    { label: "Analysis plan (primary)", key: "analysis", type: "textarea", ph: "Model, covariates, contrasts" },
    { label: "Multiple-comparison control", key: "mcc", type: "textarea", ph: "FWER/FDR strategy" },
    { label: "Robustness & sensitivity", key: "robust", type: "textarea", ph: "Alt specs, resampling, E-values…" },
    { label: "Missing-data handling", key: "missing", type: "textarea", ph: "MAR/MNAR assumptions, imputation" },
    { label: "Tempting p-hack", key: "p_hack", type: "text", ph: "The path most tempting…" },
    { label: "Guardrail", key: "guardrail", type: "textarea", ph: "Precommitment that blocks it" },
    { label: "Deviations policy", key: "deviations", type: "textarea", ph: "How you’ll label any changes" },
    { label: "Ethics/IRB", key: "ethics", type: "text", ph: "Protocol/approval #" },
    { label: "Prereg link / DOI", key: "link", type: "text", ph: "URL/DOI" },
    { label: "Sharing plan (data/code)", key: "sharing", type: "textarea", ph: "Anonymization, timeline, license" }
  ],
  template: ({
    title, outlet, stage, rq, hypotheses, primary_outcomes, secondary_outcomes, measures, sample,
    rand_blind, exclusion, stopping, analysis, mcc, robust, missing, p_hack, guardrail,
    deviations, ethics, link, sharing, ctx, audience, style, tone
  }) => [
    "Registered Reports & Preregistration",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    title && `Title: ${title}`,
    (outlet || stage) && `Outlet/Stage: ${[outlet, stage].filter(Boolean).join(" · ")}`,
    rq && `Research question:\n${rq}`,
    hypotheses && `Hypotheses (confirmatory):\n${hypotheses}`,
    primary_outcomes && `Primary outcome(s):\n${primary_outcomes}`,
    secondary_outcomes && `Secondary outcomes:\n${secondary_outcomes}`,
    measures && `Constructs & measures:\n${measures}`,
    sample && `Sample frame & size:\n${sample}`,
    rand_blind && `Randomization/blinding:\n${rand_blind}`,
    exclusion && `Exclusion criteria:\n${exclusion}`,
    stopping && `Stopping rules:\n${stopping}`,
    analysis && `Analysis plan (primary):\n${analysis}`,
    mcc && `Multiple-comparison control:\n${mcc}`,
    robust && `Robustness & sensitivity:\n${robust}`,
    missing && `Missing-data handling:\n${missing}`,
    (p_hack || guardrail) && `Guarding against p-hacking:\n• Temptation: ${p_hack || ""}\n• Guardrail: ${guardrail || ""}`,
    deviations && `Deviations policy:\n${deviations}`,
    ethics && `Ethics/IRB: ${ethics}`,
    link && `Prereg link/DOI: ${link}`,
    sharing && `Sharing plan:\n${sharing}`,
    "",
    "Prompt anchor: “The p-hacking path most tempting here is __. My guardrail is __.”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "registered report preregistration prereg analysis plan p hacking harking outcomes power missing data robustness open science" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Adversarial Collaboration — co-design across disagreement
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "adversarial_collaboration",
  slug: "adversarial-collaboration",
  label: "Adversarial Collaboration",
  kind: "framework",
  categories: ["research","ethics","education","communication"],
  tags: [
    "type:framework","use:study-design","use:disagreement","use:adjudication",
    "topic:priors","topic:precommitment","origin:debate-to-data","level:intermediate"
  ],
  use_cases: [
    "co-design a test with someone who disagrees",
    "precommit to adjudication rules and stopping conditions",
    "write ‘change-my-mind’ evidence in advance"
  ],
  boosters: [
    "Record each side’s priors and the exact claim boundary.",
    "Define success/falsification criteria both parties accept.",
    "Use a neutral arbiter for disputes; document tie-break rules.",
    "Publish a joint pre-analysis plan before seeing the data."
  ],
  definition:
    "A scaffold for collaborative tests across disagreement with precommitted success criteria and joint analysis.",
  help:
    "Prompt: “Evidence that would change my mind is __.”",
  fields: [
    { label: "Topic / claim", key: "claim", type: "text", ph: "What are we testing?" },
    { label: "Team A (names/roles)", key: "team_a", type: "text", ph: "Stakeholders/experts" },
    { label: "Team B (names/roles)", key: "team_b", type: "text", ph: "Stakeholders/experts" },
    { label: "Claim boundary (operationalized)", key: "boundary", type: "textarea", ph: "Exactly what counts as true/false" },
    { label: "Priors — Team A", key: "prior_a", type: "textarea", ph: "Beliefs + confidence" },
    { label: "Priors — Team B", key: "prior_b", type: "textarea", ph: "Beliefs + confidence" },
    { label: "Design sketch (data & methods)", key: "design", type: "textarea", ph: "Experiment, survey, natural test…" },
    { label: "Measurement & outcomes", key: "measures", type: "textarea", ph: "Primary/secondary" },
    { label: "Pre-analysis plan link", key: "pap", type: "text", ph: "URL/DOI" },
    { label: "Adjudication criteria (both sides)", key: "criteria", type: "textarea", ph: "What counts as change" },
    { label: "Evidence that changes my mind — A", key: "change_a", type: "textarea", ph: "Specific thresholds/patterns" },
    { label: "Evidence that changes my mind — B", key: "change_b", type: "textarea", ph: "Specific thresholds/patterns" },
    { label: "Arbiter & tie-break protocol", key: "arbiter", type: "text", ph: "Name/committee + rules" },
    { label: "Stopping/ethics rules", key: "stop_rules", type: "textarea", ph: "Harm or futility rules" },
    { label: "Publication/communication plan", key: "comms", type: "textarea", ph: "Where/when/how results are shared" }
  ],
  template: ({
    claim, team_a, team_b, boundary, prior_a, prior_b, design, measures, pap, criteria, change_a, change_b,
    arbiter, stop_rules, comms, ctx, audience, style, tone
  }) => [
    "Adversarial Collaboration",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`,
    style && `Style: ${style}`, tone && `Tone: ${tone}`,
    claim && `Topic/claim: ${claim}`,
    (team_a || team_b) && `Teams: ${[team_a, team_b].filter(Boolean).join(" vs ")} `,
    boundary && `Claim boundary (operationalized):\n${boundary}`,
    prior_a && `Priors — Team A:\n${prior_a}`,
    prior_b && `Priors — Team B:\n${prior_b}`,
    design && `Design sketch:\n${design}`,
    measures && `Measurement & outcomes:\n${measures}`,
    pap && `Pre-analysis plan: ${pap}`,
    criteria && `Adjudication criteria:\n${criteria}`,
    (change_a || change_b) && `Change-my-mind evidence:\n• A: ${change_a || ""}\n• B: ${change_b || ""}`,
    arbiter && `Arbiter/tie-break: ${arbiter}`,
    stop_rules && `Stopping/ethics rules:\n${stop_rules}`,
    comms && `Publication/communication plan:\n${comms}`,
    "",
    "Prompt anchor: “Evidence that would change my mind is __.”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "adversarial collaboration priors pre analysis plan adjudication criteria change my mind arbiter stopping communication" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Systematic Review & Meta-Analysis — explicit criteria and limits
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "systematic_review_meta",
  slug: "systematic-review-meta-analysis",
  label: "Systematic Review & Meta-Analysis",
  kind: "framework",
  categories: ["research","statistics","policy","education"],
  tags: [
    "type:framework","use:protocol","use:evidence-synthesis","use:policy-brief",
    "topic:inclusion-criteria","topic:heterogeneity","origin:prisma-inspired","level:intermediate"
  ],
  use_cases: [
    "register a protocol with transparent criteria",
    "synthesize effect sizes and quantify heterogeneity",
    "make limits legible to policymakers"
  ],
  boosters: [
    "Define PICO/PECO precisely and preregister the protocol.",
    "Search multiple databases + grey literature with full strings.",
    "Double-screen, double-extract; resolve conflicts.",
    "Quantify heterogeneity; examine moderators; test small-study bias.",
    "Write a ‘what this cannot tell you’ section up front."
  ],
  definition:
    "A PRISMA-flavored synthesis template: explicit criteria, thorough search, bias assessment, model choice, and policy-facing limits.",
  help:
    "Prompt: “What this cannot tell a policymaker is __.”",
  fields: [
    { label: "Question (PICO/PECO)", key: "pico", type: "textarea", ph: "Population, Intervention/Exposure, Comparator, Outcomes" },
    { label: "Protocol/prereg (PROSPERO/OSF)", key: "protocol", type: "text", ph: "ID or link" },
    { label: "Inclusion criteria", key: "inclusion", type: "textarea", ph: "Study designs, languages, dates…" },
    { label: "Exclusion criteria", key: "exclusion", type: "textarea", ph: "Reasons to exclude" },
    { label: "Databases & search strings", key: "search", type: "textarea", ph: "Full strings for each source" },
    { label: "Screening process", key: "screen", type: "textarea", ph: "Two reviewers? Tools?" },
    { label: "Data extraction items", key: "extract", type: "textarea", ph: "Fields, effect sizes, covariates" },
    { label: "Risk of bias tool", key: "rob", type: "text", ph: "RoB2, ROBINS-I, QUIPS…" },
    { label: "Effect size metric", key: "es", type: "text", ph: "OR, SMD, RR, r, Hedges g…" },
    { label: "Model", key: "model", type: "select", options: ["fixed","random","hierarchical"], ph: "Pick one" },
    { label: "Heterogeneity plan", key: "hetero", type: "textarea", ph: "I², τ², Cochran’s Q; moderators" },
    { label: "Publication bias checks", key: "pub_bias", type: "textarea", ph: "Funnel, Egger, trim-and-fill…" },
    { label: "Sensitivity/subgroup analyses", key: "sensitivity", type: "textarea", ph: "Influence, leave-one-out" },
    { label: "Cannot tell policymakers (limits)", key: "cannot", type: "textarea", ph: "Boundaries & cautions" },
    { label: "Update plan", key: "update", type: "text", ph: "When to refresh" }
  ],
  template: ({
    pico, protocol, inclusion, exclusion, search, screen, extract, rob, es, model, hetero, pub_bias, sensitivity, cannot, update,
    ctx, audience, style, tone
  }) => [
    "Systematic Review & Meta-Analysis",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`,
    style && `Style: ${style}`, tone && `Tone: ${tone}`,
    pico && `Question (PICO/PECO):\n${pico}`,
    protocol && `Protocol/prereg: ${protocol}`,
    inclusion && `Inclusion criteria:\n${inclusion}`,
    exclusion && `Exclusion criteria:\n${exclusion}`,
    search && `Databases & search strings:\n${search}`,
    screen && `Screening process:\n${screen}`,
    extract && `Data extraction items:\n${extract}`,
    (rob || es || model) && `Bias/Metric/Model: ${[rob && `RoB=${rob}`, es && `ES=${es}`, model && `Model=${model}`].filter(Boolean).join(" · ")}`,
    hetero && `Heterogeneity plan:\n${hetero}`,
    pub_bias && `Publication bias checks:\n${pub_bias}`,
    sensitivity && `Sensitivity/subgroup analyses:\n${sensitivity}`,
    cannot && `What this cannot tell policymakers:\n${cannot}`,
    update && `Update plan: ${update}`,
    "",
    "Prompt anchor: “What this cannot tell a policymaker is __.”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "systematic review meta analysis prisma inclusion exclusion heterogeneity publication bias effect size model policymakers limits" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Causal Inference Framework — DAGs · Identification · Assumptions
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "causal_inference_framework",
  slug: "causal-inference-framework",
  label: "Causal Inference — DAGs & Identification",
  kind: "framework",
  categories: ["research","statistics","education","policy"],
  tags: [
    "type:framework","use:causal","use:identification","use:robustness",
    "topic:dag","topic:iv-did-rdd","origin:potential-outcomes","level:intermediate"
  ],
  use_cases: [
    "state the estimand and identification strategy",
    "document assumptions and their plausibility",
    "pre-specify diagnostics, falsification, and sensitivity"
  ],
  boosters: [
    "Draw a DAG; write the causal story in words too.",
    "Pick one identification path (backdoor/IV/DiD/RD) and commit.",
    "Write threats to identification and how you’ll probe them.",
    "Include sensitivity (e.g., E-value, Rosenbaum bounds)."
  ],
  definition:
    "A causal card: estimand, DAG, identification plan, assumptions, diagnostics, and plausibility checks.",
  help:
    "Prompt: “This conclusion depends on __ not existing. How plausible is that here?”",
  fields: [
    { label: "Estimand", key: "estimand", type: "text", ph: "ATE, LATE, ATT…" },
    { label: "DAG (link/description)", key: "dag", type: "textarea", ph: "Nodes/edges; backdoor paths" },
    { label: "Identification strategy", key: "id_strategy", type: "select",
      options: ["backdoor (selection on observables)","instrumental variables","difference-in-differences","regression discontinuity","front-door","other"], ph: "Pick one" },
    { label: "Key assumptions", key: "assumptions", type: "textarea", ph: "Unconfoundedness, exclusion, monotonicity, SUTVA, positivity…" },
    { label: "Plausibility notes", key: "plausibility", type: "textarea", ph: "Substantive arguments, prior evidence" },
    { label: "Data & measurement", key: "data", type: "textarea", ph: "Sources, timing, quality, proxies" },
    { label: "Estimator & SEs", key: "estimator", type: "textarea", ph: "OLS, 2SLS, TWFE, local linear, robust/clustered" },
    { label: "Diagnostics & falsification", key: "diagnostics", type: "textarea", ph: "Pre-trends, balance, placebo, over-id…" },
    { label: "Sensitivity analysis", key: "sensitivity", type: "textarea", ph: "E-value, bounds, tipping point" },
    { label: "This conclusion depends on (nonexistence of…)", key: "depends", type: "text", ph: "The thing that must not exist" },
    { label: "Policy/decision relevance", key: "policy", type: "textarea", ph: "External validity, target population" }
  ],
  template: ({
    estimand, dag, id_strategy, assumptions, plausibility, data, estimator,
    diagnostics, sensitivity, depends, policy, ctx, audience, style, tone
  }) => [
    "Causal Inference — DAGs & Identification",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`,
    style && `Style: ${style}`, tone && `Tone: ${tone}`,
    estimand && `Estimand: ${estimand}`,
    dag && `DAG (link/description):\n${dag}`,
    id_strategy && `Identification strategy: ${id_strategy}`,
    assumptions && `Key assumptions:\n${assumptions}`,
    depends && `This conclusion depends on __ not existing:\n${depends}`,
    plausibility && `Plausibility notes:\n${plausibility}`,
    data && `Data & measurement:\n${data}`,
    estimator && `Estimator & SEs:\n${estimator}`,
    diagnostics && `Diagnostics & falsification:\n${diagnostics}`,
    sensitivity && `Sensitivity analysis:\n${sensitivity}`,
    policy && `Policy/decision relevance:\n${policy}`,
    "",
    "Prompt anchor: “This conclusion depends on __ not existing. How plausible is that here?”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "causal inference dag identification backdoor iv did rdd assumptions plausibility diagnostics falsification sensitivity policy" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Mixed Methods with Triangulation — where numbers & stories disagree
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "mixed_methods_triangulation",
  slug: "mixed-methods-triangulation",
  label: "Mixed Methods — Triangulation",
  kind: "framework",
  categories: ["research","education","statistics","storytelling"],
  tags: [
    "type:framework","use:integration","use:design","use:quality",
    "topic:triangulation","topic:discrepant-cases","origin:mixed-methods","level:beginner"
  ],
  use_cases: [
    "plan qual+quant designs with explicit integration points",
    "surface and learn from discrepancies",
    "document validity/trustworthiness procedures"
  ],
  boosters: [
    "Choose a design (convergent/explanatory/exploratory/embedded).",
    "Mark ‘interface’ points: where methods meet.",
    "Create a simple triangulation matrix (agree/partial/discordant).",
    "Hunt discrepant cases; treat them as data, not errors."
  ],
  definition:
    "A mixed-methods card to design, integrate, and reconcile qual+quant evidence—especially where they disagree.",
  help:
    "Prompt: “Where do the numbers and the stories disagree and what does that teach us?”",
  fields: [
    { label: "Purpose", key: "purpose", type: "text", ph: "Why mix methods?" },
    { label: "Design", key: "design", type: "select", options: ["convergent","explanatory (quant→qual)","exploratory (qual→quant)","embedded"], ph: "Pick one" },
    { label: "Qual component", key: "qual", type: "textarea", ph: "Methods, sample, instruments" },
    { label: "Quant component", key: "quant", type: "textarea", ph: "Data, measures, models" },
    { label: "Interface points", key: "interfaces", type: "textarea", ph: "Where/how they connect" },
    { label: "Triangulation matrix", key: "matrix", type: "textarea", ph: "Agree/partial/discordant notes" },
    { label: "Discrepant cases", key: "discrepant", type: "textarea", ph: "What the disagreements reveal" },
    { label: "Validity/trustworthiness", key: "validity", type: "textarea", ph: "Member checks, audit, reliability…" },
    { label: "Integration product", key: "product", type: "textarea", ph: "Joint display, narrative weave" }
  ],
  template: ({
    purpose, design, qual, quant, interfaces, matrix, discrepant, validity, product,
    ctx, audience, style, tone
  }) => [
    "Mixed Methods — Triangulation",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`,
    style && `Style: ${style}`, tone && `Tone: ${tone}`,
    purpose && `Purpose: ${purpose}`,
    design && `Design: ${design}`,
    qual && `Qual component:\n${qual}`,
    quant && `Quant component:\n${quant}`,
    interfaces && `Interface points:\n${interfaces}`,
    matrix && `Triangulation matrix:\n${matrix}`,
    discrepant && `Discrepant cases (learning):\n${discrepant}`,
    validity && `Validity/trustworthiness:\n${validity}`,
    product && `Integration product:\n${product}`,
    "",
    "Prompt anchor: “Where do the numbers and the stories disagree and what does that teach us?”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "mixed methods triangulation convergent explanatory exploratory embedded interface discrepant cases validity joint display" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Grounded Theory — with Reflexive Memos
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "grounded_theory_reflexive_memos",
  slug: "grounded-theory-reflexive-memos",
  label: "Grounded Theory — Reflexive Memos",
  kind: "framework",
  categories: ["research","education","storytelling","ethics"],
  tags: [
    "type:framework","use:qualitative","use:coding","use:theory-building",
    "topic:constant-comparison","topic:reflexivity","origin:grounded-theory","level:beginner"
  ],
  use_cases: [
    "structure open/axial/selective coding with memos",
    "track theoretical sampling and saturation",
    "document reflexivity and audit trail"
  ],
  boosters: [
    "Memo while coding; don’t wait for end-of-day.",
    "Use constant comparison across cases/incidents.",
    "Define saturation criteria before you start.",
    "Keep an audit trail that another coder could follow."
  ],
  definition:
    "A grounded-theory card for coding cycles, reflexive memoing, sampling decisions, and saturation declarations.",
  help:
    "Prompt: “During coding, I noticed my bias when __.”",
  fields: [
    { label: "Setting & participants", key: "setting", type: "textarea", ph: "Context snapshot" },
    { label: "Sampling (theoretical)", key: "sampling", type: "textarea", ph: "How new cases are chosen" },
    { label: "Data sources", key: "sources", type: "textarea", ph: "Interviews, obs, docs…" },
    { label: "Open coding notes", key: "open", type: "textarea", ph: "Line-by-line ideas" },
    { label: "Axial coding notes", key: "axial", type: "textarea", ph: "Categories/relationships" },
    { label: "Selective coding / core category", key: "selective", type: "textarea", ph: "Story that ties it together" },
    { label: "Reflexive memos", key: "memos", type: "textarea", ph: "Bias noticed when…" },
    { label: "Saturation criteria & status", key: "saturation", type: "textarea", ph: "Definition and whether met" },
    { label: "Audit trail (decisions)", key: "audit", type: "textarea", ph: "What changed and why" }
  ],
  template: ({
    setting, sampling, sources, open, axial, selective, memos, saturation, audit,
    ctx, audience, style, tone
  }) => [
    "Grounded Theory — Reflexive Memos",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`,
    style && `Style: ${style}`, tone && `Tone: ${tone}`,
    setting && `Setting & participants:\n${setting}`,
    sampling && `Sampling (theoretical):\n${sampling}`,
    sources && `Data sources:\n${sources}`,
    open && `Open coding notes:\n${open}`,
    axial && `Axial coding notes:\n${axial}`,
    selective && `Selective coding / core category:\n${selective}`,
    memos && `Reflexive memos:\n${memos}`,
    saturation && `Saturation criteria & status:\n${saturation}`,
    audit && `Audit trail:\n${audit}`,
    "",
    "Prompt anchor: “During coding, I noticed my bias when __.”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "grounded theory open axial selective coding constant comparison reflexive memos saturation audit trail" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Participatory Action Research — decision rights & co-governance
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "participatory_action_research",
  slug: "participatory-action-research",
  label: "Participatory Action Research (PAR)",
  kind: "framework",
  categories: ["research","ethics","community","education"],
  tags: [
    "type:framework","use:co-design","use:governance","use:dissemination",
    "topic:decision-rights","topic:benefit-sharing","origin:par","level:intermediate"
  ],
  use_cases: [
    "co-create questions and methods with participants",
    "clarify decision rights, compensation, and data ownership",
    "plan action cycles and accessible dissemination"
  ],
  boosters: [
    "Name who decides what—explicit decision rights.",
    "Budget for compensation and capacity-building.",
    "Co-author outputs; return results in accessible forms.",
    "Plan an action cycle (plan–act–observe–reflect)."
  ],
  definition:
    "A PAR card centering participant co-governance, benefit sharing, and practical action cycles.",
  help:
    "Prompt: “What decision should be yours, not mine, in this study?”",
  fields: [
    { label: "Community/partners", key: "partners", type: "textarea", ph: "Who’s at the table" },
    { label: "Co-owned research question(s)", key: "questions", type: "textarea", ph: "Draft together" },
    { label: "Decision rights (RACI-like)", key: "rights", type: "textarea", ph: "Who decides/consults/informs" },
    { label: "Roles & capacity-building", key: "roles", type: "textarea", ph: "Training, mentorship, tasks" },
    { label: "Compensation/benefits", key: "benefits", type: "textarea", ph: "Stipends, credits, services" },
    { label: "Data ownership & stewardship", key: "ownership", type: "textarea", ph: "Licensing, storage, access" },
    { label: "Ethics/consent notes", key: "ethics", type: "textarea", ph: "Safeguards, risks" },
    { label: "Action cycles", key: "cycles", type: "textarea", ph: "Plan–act–observe–reflect plan" },
    { label: "Accessible dissemination", key: "dissemination", type: "textarea", ph: "Community briefs, events, languages" }
  ],
  template: ({
    partners, questions, rights, roles, benefits, ownership, ethics, cycles, dissemination,
    ctx, audience, style, tone
  }) => [
    "Participatory Action Research (PAR)",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`,
    style && `Style: ${style}`, tone && `Tone: ${tone}`,
    partners && `Community/partners:\n${partners}`,
    questions && `Co-owned research question(s):\n${questions}`,
    rights && `Decision rights:\n${rights}`,
    roles && `Roles & capacity-building:\n${roles}`,
    benefits && `Compensation/benefits:\n${benefits}`,
    ownership && `Data ownership & stewardship:\n${ownership}`,
    ethics && `Ethics/consent notes:\n${ethics}`,
    cycles && `Action cycles:\n${cycles}`,
    dissemination && `Accessible dissemination:\n${dissemination}`,
    "",
    "Prompt anchor: “What decision should be yours, not mine, in this study?”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "participatory action research co governance decision rights benefit sharing data ownership action cycles dissemination" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Open Science Checklist — code, data, protocols by default
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "open_science_checklist",
  slug: "open-science-checklist",
  label: "Open Science Checklist",
  kind: "framework",
  categories: ["research","ethics","statistics","education"],
  tags: [
    "type:framework","use:checklist","use:reproducibility","use:sharing",
    "topic:licensing","topic:privacy","origin:open-practices","level:beginner"
  ],
  use_cases: [
    "make materials, data, and code findable, accessible, reusable",
    "document exactly what cannot be shared and why",
    "package a replication capsule with environment"
  ],
  boosters: [
    "Assign DOIs for prereg, data, and code.",
    "Capture computational environment (container, versions).",
    "Use a permissive license where possible; state exceptions.",
    "Redact/de-identify with a documented risk assessment."
  ],
  definition:
    "A share-by-default checklist covering code, data, protocols, licensing, identifiers, and non-shareable items with reasons.",
  help:
    "Prompt: “Here is exactly what we cannot share and the reason.”",
  fields: [
    { label: "Prereg/Registered Report (DOI/link)", key: "prereg", type: "text", ph: "URL/DOI" },
    { label: "Protocol/materials repo", key: "protocols", type: "text", ph: "Repo/OSF link" },
    { label: "Data availability", key: "data", type: "textarea", ph: "Open, restricted, or request-based" },
    { label: "Code repository & license", key: "code", type: "textarea", ph: "Repo URL, license, CITATION.cff" },
    { label: "Computational environment", key: "env", type: "textarea", ph: "Docker/Conda; manifest" },
    { label: "Non-shareable items (and reasons)", key: "cannot_share", type: "textarea", ph: "Exactly what and why" },
    { label: "De-identification steps", key: "deid", type: "textarea", ph: "Techniques, risk notes" },
    { label: "Persistent identifiers", key: "ids", type: "textarea", ph: "DOIs, ORCID, RRIDs" },
    { label: "Replication package link", key: "repl", type: "text", ph: "Archive link" },
    { label: "Embargo/availability dates", key: "embargo", type: "text", ph: "If applicable" }
  ],
  template: ({
    prereg, protocols, data, code, env, cannot_share, deid, ids, repl, embargo,
    ctx, audience, style, tone
  }) => [
    "Open Science Checklist",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`,
    style && `Style: ${style}`, tone && `Tone: ${tone}`,
    prereg && `Prereg/RR: ${prereg}`,
    protocols && `Protocols/materials: ${protocols}`,
    data && `Data availability:\n${data}`,
    code && `Code repository & license:\n${code}`,
    env && `Computational environment:\n${env}`,
    cannot_share && `Non-shareable (with reasons):\n${cannot_share}`,
    deid && `De-identification steps:\n${deid}`,
    ids && `Persistent identifiers:\n${ids}`,
    repl && `Replication package:\n${repl}`,
    embargo && `Embargo/availability: ${embargo}`,
    "",
    "Prompt anchor: “Here is exactly what we cannot share and the reason.”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "open science checklist data code protocols license computational environment doi rrid de identification cannot share reason replication" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Agent-Based Models & System Dynamics — where the model lies
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "abm_system_dynamics_truth",
  slug: "agent-based-models-system-dynamics",
  label: "Agent-Based Models & System Dynamics",
  kind: "framework",
  categories: ["simulation","research","education","policy"],
  tags: [
    "type:framework","use:modeling","use:scenario","use:sensitivity",
    "topic:abm","topic:system-dynamics","origin:complex-systems","level:intermediate"
  ],
  use_cases: [
    "specify agents/stocks, rules/equations, and calibration",
    "declare validation strategy and failing regimes",
    "package experiments, seeds, and reproducibility"
  ],
  boosters: [
    "Bound the model: what’s in, what’s out (no shame).",
    "Calibrate with real data; cross-validate if possible.",
    "Run global sensitivity; report brittle parameters.",
    "List regimes where the model lies and how to detect it."
  ],
  definition:
    "A simulation card for ABM and system dynamics: scope, rules, calibration, validation, sensitivity, failing regimes, and reproducibility.",
  help:
    "Prompt: “In these regimes the model lies. Here is how you can tell.”",
  fields: [
    { label: "Purpose/questions", key: "purpose", type: "textarea", ph: "What the model is for" },
    { label: "Scope & boundary", key: "boundary", type: "textarea", ph: "Included/excluded processes" },
    { label: "Approach", key: "approach", type: "select", options: ["agent-based","system dynamics","hybrid"], ph: "Pick one" },
    { label: "Entities (agents / stocks & flows)", key: "entities", type: "textarea", ph: "Actors, states, resources" },
    { label: "Rules/equations", key: "rules", type: "textarea", ph: "Behavioral rules or ODEs/flows" },
    { label: "Parameters & sources", key: "params", type: "textarea", ph: "Calibrated, assumed, literature" },
    { label: "Initialization & timestep", key: "init", type: "textarea", ph: "Seeding, time step" },
    { label: "Calibration/validation", key: "validation", type: "textarea", ph: "Fit targets, out-of-sample checks" },
    { label: "Experiments/scenarios", key: "experiments", type: "textarea", ph: "What you’ll vary & observe" },
    { label: "Sensitivity/uncertainty", key: "sensitivity", type: "textarea", ph: "One-at-a-time, global, Sobol, PRCC…" },
    { label: "Failing regimes (model lies)", key: "regimes", type: "textarea", ph: "Where outputs are unreliable" },
    { label: "Detection signals", key: "signals", type: "textarea", ph: "Diagnostics that trigger a warning" },
    { label: "Reproducibility (seed/code/pkg)", key: "repro", type: "textarea", ph: "Random seeds, repos, env" }
  ],
  template: ({
    purpose, boundary, approach, entities, rules, params, init, validation, experiments, sensitivity, regimes, signals, repro,
    ctx, audience, style, tone
  }) => [
    "Agent-Based Models & System Dynamics",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`,
    style && `Style: ${style}`, tone && `Tone: ${tone}`,
    purpose && `Purpose/questions:\n${purpose}`,
    boundary && `Scope & boundary:\n${boundary}`,
    approach && `Approach: ${approach}`,
    entities && `Entities:\n${entities}`,
    rules && `Rules/equations:\n${rules}`,
    params && `Parameters & sources:\n${params}`,
    init && `Initialization & timestep:\n${init}`,
    validation && `Calibration/validation:\n${validation}`,
    experiments && `Experiments/scenarios:\n${experiments}`,
    sensitivity && `Sensitivity/uncertainty:\n${sensitivity}`,
    regimes && `Failing regimes (model lies):\n${regimes}`,
    signals && `Detection signals:\n${signals}`,
    repro && `Reproducibility:\n${repro}`,
    "",
    "Prompt anchor: “In these regimes the model lies. Here is how you can tell.”"
  ].filter(Boolean).join("\n"),
  meta: { search_text: "agent based models system dynamics calibration validation sensitivity regimes where model lies detection reproducibility" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Popperian Falsification — Bold Conjectures, Risky Tests
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "popperian_falsification",
  slug: "popperian-falsification",
  label: "Popperian Falsification",
  kind: "framework",
  categories: ["philosophy-of-science","research","methodology"],
  tags: [
    "type:framework","use:hypothesis","use:test-design","topic:risky-predictions",
    "origin:popper","level:beginner"
  ],
  use_cases: [
    "turn vague beliefs into falsifiable conjectures",
    "design risky predictions that could refute",
    "separate ‘stop’ rules from post-hoc stories"
  ],
  boosters: [
    "Write at least one prediction your allies would fear to publish.",
    "List potential falsifiers as observable events.",
    "Pre-commit a stop rule triggered by a falsifier.",
    "Invite a ‘hostile’ reviewer to vet the test."
  ],
  definition:
    "A falsification card: frame a bold conjecture, name risky predictions, predefine potential falsifiers and stop rules.",
  help:
    "Prompt: “Try to kill this hypothesis; if it survives, it’s earned a round.”",
  fields: [
    { label: "Conjecture (one sentence, falsifiable)", key: "conjecture", type: "text", ph: "A bold claim that could be false" },
    { label: "Risky prediction(s)", key: "predictions", type: "textarea", ph: "Specific outcomes that would strongly test it" },
    { label: "Potential falsifiers (observable)", key: "falsifiers", type: "textarea", ph: "What observations would refute it?" },
    { label: "Crucial test design", key: "test", type: "textarea", ph: "Protocol, sample, measures" },
    { label: "Stop rule (if falsified)", key: "stop_rule", type: "text", ph: "Exactly when to halt/abandon" },
    { label: "Replication plan", key: "replication", type: "textarea", ph: "Independent rerun, prereg, data/code share" }
  ],
  template: ({ conjecture, predictions, falsifiers, test, stop_rule, replication, ctx, audience, style, tone }) => [
    "Popperian Falsification",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    conjecture && `Conjecture: ${conjecture}`,
    predictions && `Risky predictions:\n${predictions}`,
    falsifiers && `Potential falsifiers:\n${falsifiers}`,
    test && `Crucial test:\n${test}`,
    stop_rule && `Stop rule: ${stop_rule}`,
    replication && `Replication plan:\n${replication}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "popper falsification bold conjecture risky prediction potential falsifier crucial test stop rule replication" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Bayesian Science — Priors, Likelihood, Posterior, Decision
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "bayesian_science",
  slug: "bayesian-science",
  label: "Bayesian Science — Posterior Odds",
  kind: "framework",
  categories: ["statistics","research","methodology"],
  tags: [
    "type:framework","use:analysis-plan","use:decision","topic:priors",
    "topic:bayes-factor","level:intermediate"
  ],
  use_cases: [
    "declare priors and likelihoods before data",
    "report posterior odds/intervals and decisions",
    "separate estimation from value-based action"
  ],
  boosters: [
    "State prior in parameter units readers understand.",
    "Simulate prior predictive to sanity-check.",
    "Predefine decision loss/utility; act on posterior risk.",
    "Report Bayes factors or posterior odds if relevant."
  ],
  definition:
    "A Bayesian card to preregister priors/likelihoods, simulate prior predictive, and report posterior odds with decision criteria.",
  help:
    "Prompt: “Update prior beliefs with data; report the posterior and the decision rule.”",
  fields: [
    { label: "Parameter(s) of interest", key: "params", type: "text", ph: "θ, β, risk difference…" },
    { label: "Prior(s)", key: "priors", type: "textarea", ph: "Distributions + rationale" },
    { label: "Likelihood/data model", key: "likelihood", type: "textarea", ph: "GLM, hierarchical, measurement model…" },
    { label: "Prior predictive checks", key: "ppc", type: "textarea", ph: "What would draws look like?" },
    { label: "Decision rule / loss", key: "decision", type: "textarea", ph: "Thresholds, cost matrix, utility" },
    { label: "Posterior summary to report", key: "posterior", type: "textarea", ph: "Intervals, probabilities, BF, odds" },
    { label: "Sensitivity to priors", key: "sensitivity", type: "textarea", ph: "Robust/weakly-informative alt priors" }
  ],
  template: ({ params, priors, likelihood, ppc, decision, posterior, sensitivity, ctx, audience, style, tone }) => [
    "Bayesian Science — Posterior Odds",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`,
    style && `Style: ${style}`, tone && `Tone: ${tone}`,
    params && `Parameters: ${params}`,
    priors && `Priors:\n${priors}`,
    likelihood && `Likelihood/data model:\n${likelihood}`,
    ppc && `Prior predictive checks:\n${ppc}`,
    decision && `Decision rule / loss:\n${decision}`,
    posterior && `Posterior summary:\n${posterior}`,
    sensitivity && `Sensitivity to priors:\n${sensitivity}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "bayesian prior likelihood posterior odds bayes factor prior predictive decision rule loss utility sensitivity" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Lakatos — Research Programs (Hard Core & Protective Belt)
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "lakatos_research_programs",
  slug: "lakatos-research-programs",
  label: "Lakatos — Research Programs",
  kind: "framework",
  categories: ["philosophy-of-science","research","strategy"],
  tags: [
    "type:framework","use:program-review","use:theory-maintenance",
    "topic:hard-core","topic:protective-belt","origin:lakatos","level:intermediate"
  ],
  use_cases: [
    "separate a theory’s untouchable ‘hard core’ from testable belt",
    "decide if a program is progressive or degenerating",
    "record problemshifts and novel predictions"
  ],
  boosters: [
    "Keep the hard core short and clear.",
    "List auxiliary hypotheses in the protective belt.",
    "Track novel success vs ad-hoc patching over time."
  ],
  definition:
    "A program-level ledger: define the hard core, protective belt, heuristics, and decide if the research program is progressive.",
  help:
    "Prompt: “Protect the hard core; test the belt; judge progress honestly.”",
  fields: [
    { label: "Program/theory", key: "program", type: "text", ph: "Name" },
    { label: "Hard core (untouchable)", key: "hard_core", type: "textarea", ph: "Core commitments" },
    { label: "Protective belt (auxiliaries)", key: "belt", type: "textarea", ph: "Testable auxiliaries" },
    { label: "Positive/negative heuristics", key: "heuristics", type: "textarea", ph: "What to try/avoid" },
    { label: "Novel predictions & tests", key: "novel", type: "textarea", ph: "Claims that risk refutation" },
    { label: "Problemshifts (record)", key: "shifts", type: "textarea", ph: "Adjustments made + why" },
    { label: "Progress score (why)", key: "progress", type: "textarea", ph: "Progressive vs degenerating, evidence" }
  ],
  template: ({ program, hard_core, belt, heuristics, novel, shifts, progress, ctx, audience, style, tone }) => [
    "Lakatos — Research Programs",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    program && `Program: ${program}`,
    hard_core && `Hard core:\n${hard_core}`,
    belt && `Protective belt:\n${belt}`,
    heuristics && `Heuristics:\n${heuristics}`,
    novel && `Novel predictions & tests:\n${novel}`,
    shifts && `Problemshifts:\n${shifts}`,
    progress && `Progress assessment:\n${progress}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "lakatos research program hard core protective belt problemshift progressive degenerating heuristics novel prediction" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Kuhn — Paradigms, Anomalies, Revolutions
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "kuhn_paradigms",
  slug: "kuhn-paradigms",
  label: "Kuhn — Paradigms & Revolutions",
  kind: "framework",
  categories: ["philosophy-of-science","research","education"],
  tags: [
    "type:framework","use:state-of-field","use:roadmapping",
    "topic:paradigm","topic:anomalies","origin:kuhn","level:beginner"
  ],
  use_cases: [
    "map normal science puzzles vs anomalies",
    "track crisis signals and theory choice",
    "plan communications across paradigms"
  ],
  boosters: [
    "Name exemplar problems that define the paradigm.",
    "List accumulating anomalies with dates/sources.",
    "Write criteria for crisis and for paradigm choice."
  ],
  definition:
    "A field-scan card: define the paradigm, record puzzles and anomalies, set crisis criteria, and note revolutionary contenders.",
  help:
    "Prompt: “Are anomalies stacking? What would trigger a crisis or shift?”",
  fields: [
    { label: "Field/subfield", key: "field", type: "text", ph: "Scope" },
    { label: "Paradigm (exemplars, standards)", key: "paradigm", type: "textarea", ph: "Models, tools, exemplars" },
    { label: "Normal puzzles", key: "puzzles", type: "textarea", ph: "What counts as solvable work" },
    { label: "Anomalies (with sources)", key: "anomalies", type: "textarea", ph: "Findings that don’t fit" },
    { label: "Crisis criteria", key: "crisis", type: "textarea", ph: "When confidence collapses" },
    { label: "Revolutionary contenders", key: "contenders", type: "textarea", ph: "Rival frames/paradigms" }
  ],
  template: ({ field, paradigm, puzzles, anomalies, crisis, contenders, ctx, audience, style, tone }) => [
    "Kuhn — Paradigms & Revolutions",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    field && `Field: ${field}`,
    paradigm && `Paradigm:\n${paradigm}`,
    puzzles && `Normal puzzles:\n${puzzles}`,
    anomalies && `Anomalies:\n${anomalies}`,
    crisis && `Crisis criteria:\n${crisis}`,
    contenders && `Revolutionary contenders:\n${contenders}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "kuhn paradigm normal science anomalies crisis revolution contenders exemplars standards" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Feyerabend — Pluralism & Methodological Anarchy (Ethical!)
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "feyerabend_pluralism",
  slug: "feyerabend-pluralism",
  label: "Feyerabend — Pluralism",
  kind: "framework",
  categories: ["philosophy-of-science","research","methodology"],
  tags: [
    "type:framework","use:method-mix","use:innovation","topic:pluralism",
    "origin:feyerabend","level:intermediate"
  ],
  use_cases: [
    "design pluralistic method sets for stubborn problems",
    "stress-test orthodoxy with respectful heterodoxy",
    "document ethics and guardrails while exploring"
  ],
  boosters: [
    "Pair at least two conflicting methods deliberately.",
    "Write how you’ll judge progress without a single metric.",
    "Set ethics boundaries first; curiosity doesn’t trump consent."
  ],
  definition:
    "A pluralist design card: intentionally combine divergent methods, define progress criteria, and set ethics guardrails.",
  help:
    "Prompt: “Use many methods and let progress be messy—safely.”",
  fields: [
    { label: "Problem", key: "problem", type: "text", ph: "Stubborn question" },
    { label: "Method set (diverse)", key: "methods", type: "textarea", ph: "Orthodox + heterodox side-by-side" },
    { label: "Progress criteria (plural)", key: "criteria", type: "textarea", ph: "Multiple yardsticks" },
    { label: "Ethics guardrails", key: "ethics", type: "textarea", ph: "Consent, harm checks, boundaries" },
    { label: "Integration plan", key: "integration", type: "textarea", ph: "How findings talk to each other" }
  ],
  template: ({ problem, methods, criteria, ethics, integration, ctx, audience, style, tone }) => [
    "Feyerabend — Pluralism",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`,
    style && `Style: ${style}`, tone && `Tone: ${tone}`,
    problem && `Problem: ${problem}`,
    methods && `Method set (diverse):\n${methods}`,
    criteria && `Progress criteria:\n${criteria}`,
    ethics && `Ethics guardrails:\n${ethics}`,
    integration && `Integration plan:\n${integration}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "feyerabend pluralism method heterodoxy progress criteria ethics guardrails integration" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Engineering Method — Define, Design, Build, Test, Iterate
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "engineering_method",
  slug: "engineering-method",
  label: "Engineering Method — Iterate to Standard",
  kind: "framework",
  categories: ["engineering","product","research","quality"],
  tags: [
    "type:framework","use:design-cycle","use:acceptance","topic:standards",
    "topic:requirements","level:beginner"
  ],
  use_cases: [
    "turn fuzzy problems into specs and acceptance tests",
    "iterate builds to pass standards and SLOs",
    "capture lessons per cycle"
  ],
  boosters: [
    "Write acceptance tests with measurable criteria.",
    "Map standards/regulations explicitly to requirements.",
    "Keep iterations small with go/no-go gates."
  ],
  definition:
    "A pragmatic engineering cycle: define requirements and constraints, design, build, test to standards, iterate.",
  help:
    "Prompt: “Define → design → build → test → iterate to standards.”",
  fields: [
    { label: "Problem statement", key: "problem", type: "textarea", ph: "Need, context, stakeholders" },
    { label: "Requirements (measurable)", key: "requirements", type: "textarea", ph: "What must be true" },
    { label: "Constraints", key: "constraints", type: "textarea", ph: "Budget, power, safety, policy…" },
    { label: "Standards/regulations", key: "standards", type: "textarea", ph: "Refs and clauses" },
    { label: "Design concept", key: "design", type: "textarea", ph: "Architecture/sketch" },
    { label: "Build notes", key: "build", type: "textarea", ph: "Materials, tools, versions" },
    { label: "Test plan & acceptance", key: "test", type: "textarea", ph: "Protocols, metrics, pass/fail" },
    { label: "Iteration outcome & next changes", key: "iterate", type: "textarea", ph: "Keep/change/kill" }
  ],
  template: ({ problem, requirements, constraints, standards, design, build, test, iterate, ctx, audience, style, tone }) => [
    "Engineering Method — Iterate to Standard",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    problem && `Problem:\n${problem}`,
    requirements && `Requirements:\n${requirements}`,
    constraints && `Constraints:\n${constraints}`,
    standards && `Standards/regulations:\n${standards}`,
    design && `Design concept:\n${design}`,
    build && `Build:\n${build}`,
    test && `Test & acceptance:\n${test}`,
    iterate && `Iteration outcome:\n${iterate}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "engineering method define design build test iterate standards acceptance requirements constraints" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Design Science Research — Build Artifact to Learn What Works
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "design_science_research",
  slug: "design-science-research",
  label: "Design Science Research (DSR)",
  kind: "framework",
  categories: ["research","design","product","education"],
  tags: [
    "type:framework","use:artifact","use:evaluation","topic:utility",
    "origin:dsr","level:intermediate"
  ],
  use_cases: [
    "build artifacts to produce prescriptive knowledge",
    "evaluate utility/rigor with explicit criteria",
    "document contribution type (construct, model, method, instantiation)"
  ],
  boosters: [
    "Define the relevance cycle (problem/stakeholders).",
    "Define the rigor cycle (theory/priors).",
    "Choose evaluation: analytical, experimental, observational, descriptive."
  ],
  definition:
    "A DSR scaffold: problem relevance, design objectives, artifact, evaluation, contribution, and knowledge dissemination.",
  help:
    "Prompt: “Build to learn—what worked, for whom, under what constraints?”",
  fields: [
    { label: "Problem relevance", key: "relevance", type: "textarea", ph: "Stakeholders, context" },
    { label: "Design objectives", key: "objectives", type: "textarea", ph: "Performance/constraints" },
    { label: "Artifact description", key: "artifact", type: "textarea", ph: "Construct/model/method/instantiation" },
    { label: "Evaluation strategy", key: "evaluation", type: "textarea", ph: "Analytical/experimental/field…" },
    { label: "Metrics & evidence", key: "metrics", type: "textarea", ph: "Utility, rigor, generality" },
    { label: "Contribution type", key: "contrib", type: "text", ph: "What knowledge you add" },
    { label: "Dissemination plan", key: "dissemination", type: "textarea", ph: "Papers, artifacts, datasets" }
  ],
  template: ({ relevance, objectives, artifact, evaluation, metrics, contrib, dissemination, ctx, audience, style, tone }) => [
    "Design Science Research (DSR)",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    relevance && `Problem relevance:\n${relevance}`,
    objectives && `Design objectives:\n${objectives}`,
    artifact && `Artifact:\n${artifact}`,
    evaluation && `Evaluation strategy:\n${evaluation}`,
    metrics && `Metrics & evidence:\n${metrics}`,
    contrib && `Contribution type: ${contrib}`,
    dissemination && `Dissemination plan:\n${dissemination}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "design science research artifact utility evaluation rigor relevance cycle contribution dissemination" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Causal Inference Playbook — Identification Before Estimation
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "causal_inference_playbook",
  slug: "causal-inference-playbook",
  label: "Causal Inference Playbook",
  kind: "framework",
  categories: ["statistics","research","policy"],
  tags: [
    "type:framework","use:design-first","use:identification","topic:dag",
    "topic:natural-experiments","level:intermediate"
  ],
  use_cases: [
    "choose a design-based strategy before modeling",
    "draw and reason with DAGs to block bias",
    "predefine tests and falsification for assumptions"
  ],
  boosters: [
    "Pick a design path: RCT, IV, DiD, RD, matching, front-door.",
    "Write threats and diagnostics specific to that path.",
    "Define the estimand and target population explicitly."
  ],
  definition:
    "A quick-start causal card: pick a design path, state the estimand, document assumptions, and predefine diagnostics.",
  help:
    "Prompt: “Identification first. Estimation second.”",
  fields: [
    { label: "Estimand/target population", key: "estimand", type: "text", ph: "ATE/ATT/LATE, who" },
    { label: "Design path", key: "design_path", type: "select", options: ["RCT","instrumental variables","difference-in-differences","regression discontinuity","matching","front-door","other"], ph: "Pick one" },
    { label: "DAG (sketch/link)", key: "dag", type: "textarea", ph: "Nodes/edges; backdoor/front-door" },
    { label: "Key assumptions", key: "assumptions", type: "textarea", ph: "Exclusion, parallel trends, continuity…" },
    { label: "Diagnostics/falsification", key: "diagnostics", type: "textarea", ph: "Placebos, balance, pretrends…" },
    { label: "Estimator & SEs", key: "estimator", type: "textarea", ph: "2SLS, TWFE, local linear…" }
  ],
  template: ({ estimand, design_path, dag, assumptions, diagnostics, estimator, ctx, audience, style, tone }) => [
    "Causal Inference Playbook",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`,
    style && `Style: ${style}`, tone && `Tone: ${tone}`,
    estimand && `Estimand/target: ${estimand}`,
    design_path && `Design path: ${design_path}`,
    dag && `DAG:\n${dag}`,
    assumptions && `Assumptions:\n${assumptions}`,
    diagnostics && `Diagnostics/falsification:\n${diagnostics}`,
    estimator && `Estimator & SEs:\n${estimator}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "causal inference identification estimation dag design based rct iv did rdd matching diagnostics falsification" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Exploratory vs Confirmatory — Clean Forks, Clean Labels
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "exploratory_confirmatory_paths",
  slug: "exploratory-confirmatory-paths",
  label: "Exploratory vs Confirmatory Paths",
  kind: "framework",
  categories: ["statistics","research","education"],
  tags: [
    "type:framework","use:eda","use:cda","topic:prereg","topic:replication",
    "level:beginner"
  ],
  use_cases: [
    "fork EDA and CDA with different rules and labels",
    "avoid HARKing and garden-of-forking paths",
    "stage a confirmatory rerun of exploratory findings"
  ],
  boosters: [
    "EDA: visualize freely; record every fork.",
    "CDA: preregister tests; no peeking/retuning.",
    "Mark outputs E (exploratory) vs C (confirmatory) in the report."
  ],
  definition:
    "A two-lane scaffold: exploratory discovery documented honestly, then a clean confirmatory test.",
  help:
    "Prompt: “EDA for discovery; preregistered CDA for tests.”",
  fields: [
    { label: "Question (broad)", key: "q", type: "text", ph: "Curiosity focus" },
    { label: "EDA plan", key: "eda", type: "textarea", ph: "Visuals, features, heuristics" },
    { label: "Forking-path log", key: "forks", type: "textarea", ph: "What you tried" },
    { label: "Hypotheses promoted to CDA", key: "promoted", type: "textarea", ph: "Which patterns graduate" },
    { label: "CDA prereg/test plan", key: "cda", type: "textarea", ph: "Registered tests, alpha, power" }
  ],
  template: ({ q, eda, forks, promoted, cda, ctx, audience, style, tone }) => [
    "Exploratory vs Confirmatory Paths",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`,
    style && `Style: ${style}`, tone && `Tone: ${tone}`,
    q && `Question: ${q}`,
    eda && `EDA plan:\n${eda}`,
    forks && `Forking-path log:\n${forks}`,
    promoted && `Promoted to CDA:\n${promoted}`,
    cda && `CDA prereg/test plan:\n${cda}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "exploratory confirmatory eda cda prereg harking garden of forking paths promotion clean labels" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Ethnographic & Interpretivist Methods — Thick Description
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "ethnographic_interpretivist",
  slug: "ethnographic-interpretivist",
  label: "Ethnographic & Interpretivist Methods",
  kind: "framework",
  categories: ["qualitative","research","ethics","education"],
  tags: [
    "type:framework","use:fieldwork","use:analysis","topic:thick-description",
    "topic:reflexivity","level:intermediate"
  ],
  use_cases: [
    "plan fieldwork and thick description with reflexivity",
    "track roles, access, consent, and interpretation",
    "link memos to codes and meaning-making"
  ],
  boosters: [
    "Write role/positionality; renegotiate access ethically.",
    "Use reflexive memos during—not after—fieldwork.",
    "Triangulate across people/times/spaces."
  ],
  definition:
    "A qualitative scaffold for ethnographic/interpretivist work: access, consent, fieldnotes, coding, reflexivity, thick description.",
  help:
    "Prompt: “Systematically understand meanings and contexts, and show your interpretive moves.”",
  fields: [
    { label: "Setting & access", key: "setting", type: "textarea", ph: "Where and how you’re present" },
    { label: "Positionality/role", key: "role", type: "textarea", ph: "Standpoint; power; obligations" },
    { label: "Consent & ethics", key: "ethics", type: "textarea", ph: "How consent is earned and maintained" },
    { label: "Fieldnote plan", key: "fieldnotes", type: "textarea", ph: "What/when/how to capture" },
    { label: "Coding/analytic approach", key: "coding", type: "textarea", ph: "Grounded, thematic, narrative…" },
    { label: "Reflexive memos", key: "memos", type: "textarea", ph: "Biases noticed; interpretive moves" },
    { label: "Thick description excerpt", key: "thick", type: "textarea", ph: "Scene with sensory detail" }
  ],
  template: ({ setting, role, ethics, fieldnotes, coding, memos, thick, ctx, audience, style, tone }) => [
    "Ethnographic & Interpretivist Methods",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    setting && `Setting & access:\n${setting}`,
    role && `Positionality/role:\n${role}`,
    ethics && `Consent & ethics:\n${ethics}`,
    fieldnotes && `Fieldnote plan:\n${fieldnotes}`,
    coding && `Coding/analytic approach:\n${coding}`,
    memos && `Reflexive memos:\n${memos}`,
    thick && `Thick description:\n${thick}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "ethnography interpretivist thick description fieldwork positionality access consent reflexive memos coding" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Participatory & Decolonial — Two-Eyed Seeing / Data Sovereignty
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "participatory_decolonial",
  slug: "participatory-decolonial",
  label: "Participatory & Decolonial Approaches",
  kind: "framework",
  categories: ["research","ethics","community","policy"],
  tags: [
    "type:framework","use:co-governance","use:data-stewardship",
    "topic:two-eyed-seeing","topic:data-sovereignty","level:intermediate"
  ],
  use_cases: [
    "pair local/Indigenous knowledge with scientific tools respectfully",
    "clarify decision rights, benefit-sharing, and data sovereignty",
    "co-design consent, methods, and dissemination"
  ],
  boosters: [
    "Honor community protocols; co-author agreements.",
    "Use data sovereignty principles (e.g., CARE/OCAP) as guardrails.",
    "Budget for compensation and long-term stewardship."
  ],
  definition:
    "A co-governance scaffold centering Two-Eyed Seeing: community protocols, decision rights, benefit-sharing, and data sovereignty.",
  help:
    "Prompt: “What decision should be yours, not mine—and how is data governed?”",
  notice:
    "Adapt language with your partners; follow local protocols and legal requirements.",
  fields: [
    { label: "Communities/partners", key: "partners", type: "textarea", ph: "Who leads with you" },
    { label: "Protocols & agreements", key: "protocols", type: "textarea", ph: "Cultural, legal, MoUs" },
    { label: "Decision rights/co-governance", key: "rights", type: "textarea", ph: "Who decides what" },
    { label: "Benefit-sharing/compensation", key: "benefits", type: "textarea", ph: "Material and non-material returns" },
    { label: "Data sovereignty & access", key: "sovereignty", type: "textarea", ph: "CARE/OCAP-like rules, storage, access" },
    { label: "Methods pairing (Two-Eyed Seeing)", key: "methods", type: "textarea", ph: "Local knowledge + tools" },
    { label: "Dissemination (accessible)", key: "dissemination", type: "textarea", ph: "Formats, languages, venues" }
  ],
  template: ({ partners, protocols, rights, benefits, sovereignty, methods, dissemination, ctx, audience, style, tone }) => [
    "Participatory & Decolonial Approaches",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`,
    style && `Style: ${style}`, tone && `Tone: ${tone}`,
    partners && `Communities/partners:\n${partners}`,
    protocols && `Protocols & agreements:\n${protocols}`,
    rights && `Decision rights/co-governance:\n${rights}`,
    benefits && `Benefit-sharing/compensation:\n${benefits}`,
    sovereignty && `Data sovereignty & access:\n${sovereignty}`,
    methods && `Methods pairing (Two-Eyed Seeing):\n${methods}`,
    dissemination && `Dissemination (accessible):\n${dissemination}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "participatory decolonial two eyed seeing indigenous data sovereignty care ocap co governance benefit sharing protocols" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Computational Science — Simulation as a Third Pillar
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "computational_science",
  slug: "computational-science",
  label: "Computational Science — Simulation",
  kind: "framework",
  categories: ["simulation","statistics","research","engineering"],
  tags: [
    "type:framework","use:reproducibility","use:validation","topic:numerics",
    "topic:replication","level:intermediate"
  ],
  use_cases: [
    "specify simulation experiments and validation",
    "capture environment, seeds, and reproducibility",
    "report numerical stability and verification"
  ],
  boosters: [
    "Separate numerical verification from empirical validation.",
    "Publish seeds, environment, and full config.",
    "Bound known failure regimes and precision limits."
  ],
  definition:
    "A simulation card to design computational experiments, verify/validate, and ship a reproducible capsule.",
  help:
    "Prompt: “Simulation alongside theory and experiment—show your numerics.”",
  fields: [
    { label: "Phenomenon & purpose", key: "purpose", type: "textarea", ph: "What/why simulate" },
    { label: "Model class", key: "model", type: "text", ph: "ABM, PDE, Monte Carlo…" },
    { label: "Experiment plan", key: "plan", type: "textarea", ph: "Parameters, sweeps, scenarios" },
    { label: "Verification (numerical)", key: "verification", type: "textarea", ph: "Convergence, unit tests" },
    { label: "Validation (empirical)", key: "validation", type: "textarea", ph: "Against data or theory" },
    { label: "Repro capsule (env+seeds)", key: "repro", type: "textarea", ph: "Docker/env, seeds, config files" },
    { label: "Failure regimes & precision", key: "regimes", type: "textarea", ph: "Where it lies; error bounds" }
  ],
  template: ({ purpose, model, plan, verification, validation, repro, regimes, ctx, audience, style, tone }) => [
    "Computational Science — Simulation",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`,
    style && `Style: ${style}`, tone && `Tone: ${tone}`,
    purpose && `Phenomenon & purpose:\n${purpose}`,
    model && `Model class: ${model}`,
    plan && `Experiment plan:\n${plan}`,
    verification && `Verification (numerical):\n${verification}`,
    validation && `Validation (empirical):\n${validation}`,
    repro && `Repro capsule:\n${repro}`,
    regimes && `Failure regimes & precision:\n${regimes}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "computational science simulation verification validation reproducibility seeds environment failure regimes precision" }
},

/* ──────────────────────────────────────────────────────────────────────────
   Abductive Reasoning — Best Explanation, Then Try to Break It
   ────────────────────────────────────────────────────────────────────────── */
{
  id: "abductive_reasoning",
  slug: "abductive-reasoning",
  label: "Abductive Reasoning — Best Explanation",
  kind: "framework",
  categories: ["philosophy-of-science","research","analysis"],
  tags: [
    "type:framework","use:hypothesis-generation","use:model-choice",
    "topic:ibe","topic:risky-predictions","level:beginner"
  ],
  use_cases: [
    "generate competing explanations and rank them",
    "derive risky predictions from the leading account",
    "run decisive tests and update ranks"
  ],
  boosters: [
    "Score explanations on simplicity, scope, fit, fruitfulness.",
    "Make at least one risky prediction per explanation.",
    "Prefer tests that discriminate, not confirm."
  ],
  definition:
    "An inference-to-best-explanation card: list candidates, rank on clear criteria, derive risky predictions, then try to break the winner.",
  help:
    "Prompt: “Infer the best explanation, then design the test most likely to break it.”",
  fields: [
    { label: "Question/phenomenon", key: "question", type: "text", ph: "What needs explaining?" },
    { label: "Candidate explanations (A, B, C…)", key: "candidates", type: "textarea", ph: "Short list with notes" },
    { label: "Ranking criteria", key: "criteria", type: "textarea", ph: "Simplicity, scope, fit, fruitfulness…" },
    { label: "Current ranking (why)", key: "ranking", type: "textarea", ph: "Order + rationale" },
    { label: "Risky predictions (per candidate)", key: "risky", type: "textarea", ph: "A: …; B: …" },
    { label: "Decisive test design", key: "test", type: "textarea", ph: "How to discriminate between candidates" }
  ],
  template: ({ question, candidates, criteria, ranking, risky, test, ctx, audience, style, tone }) => [
    "Abductive Reasoning — Best Explanation",
    ctx && `Context: ${ctx}`, audience && `Audience: ${audience}`, style && `Style: ${style}`, tone && `Tone: ${tone}`,
    question && `Question/phenomenon: ${question}`,
    candidates && `Candidates:\n${candidates}`,
    criteria && `Ranking criteria:\n${criteria}`,
    ranking && `Current ranking:\n${ranking}`,
    risky && `Risky predictions:\n${risky}`,
    test && `Decisive test design:\n${test}`
  ].filter(Boolean).join("\n"),
  meta: { search_text: "abductive reasoning inference to best explanation risky predictions decisive test simplicity scope fit fruitfulness" }
},


/* ---------------------------------------------------------
   FRAMEWORK: Ikigai — Passion · Mission · Vocation · Profession
--------------------------------------------------------- */
{
  id: 'framework_ikigai',
  slug: 'ikigai-purpose',
  label: 'Ikigai — Purpose Map',
  kind: 'framework',
  categories: ['strategy','career','purpose'],
  tags: [
    'type:framework',
    'topic:purpose',
    'topic:career-design',
    'use:reflect',
    'use:plan',
    'level:beginner'
  ],
  use_cases: [
    'clarify personal or team purpose',
    'align strengths with market value and needs',
    'craft a concise purpose statement and 90-day experiments',
    'evaluate role or product fit against purpose',
    'identify anti-goals and deal-breakers'
  ],
  definition: 'An Ikigai map aligns four lenses—what you love, what you’re good at, what the world needs, and what you can be paid for—then names the overlaps (Passion, Mission, Vocation, Profession) to uncover a viable, energizing path.',
  help: 'List concrete items (verbs, activities, problems) under each lens. Be specific and evidence-based. The template will derive overlaps, propose an Ikigai statement, and suggest experiments and next steps.',
  fields: [
    { key:'who',            label:'Who is this for?', type:'select', options:['me (individual)','team','company','product'], desc:'Sets tone and scope of the output.' },
    { key:'love',           label:'What you love', type:'textarea', ph:'Work that energizes you (verbs, topics, communities)', desc:'Intrinsic motivation and curiosity.' },
    { key:'good_at',        label:"What you're good at", type:'textarea', ph:'Skills with proof (projects, feedback, outcomes)', desc:'Strengths you can demonstrate.' },
    { key:'world_needs',    label:'What the world needs', type:'textarea', ph:'Real problems to solve; who benefits?', desc:'External demand and impact.' },
    { key:'paid_for',       label:'What you can be paid for', type:'textarea', ph:'Markets, roles, business models, funding sources', desc:'Economic viability.' },

    { key:'evidence',       label:'Evidence & signals', type:'textarea', ph:'data, testimonials, benchmarks, traction', desc:'Ground claims with proof.' },
    { key:'audience_persona', label:'Target audiences (optional)', type:'repeater',
      itemType:'typeahead', itemLabel:'persona', autofill:'persona->inline',
      desc:'Who benefits/hires; improves “world needs / paid for” articulation.',
      ph:'e.g., SMB Admin; Data Scientist; Nonprofit ED' },

    { key:'constraints',    label:'Constraints & commitments', type:'textarea', ph:'location, schedule, caregiving, visa, health', desc:'Real-world boundaries to respect.' },
    { key:'non_negotiables',label:'Non-negotiables / anti-goals', type:'textarea', ph:'what you refuse to do/compromise', desc:'Avoids drift and regret.' },
    { key:'energy_map',     label:'Energy map', type:'textarea', ph:'tasks that give vs. drain energy', desc:'Design work around sustainable energy.' },

    { key:'time_horizon',   label:'Time horizon', type:'select', options:['now–90 days','1 year','3–5 years','custom'] },
    { key:'north_star',     label:'North Star (why/impact)', type:'text', ph:'Short impact line (for whom, to what end)' },
    { key:'experiments',    label:'Experiments (hypotheses)', type:'textarea', ph:'2–4 small tests to validate fit/market', desc:'Make it testable and reversible.' }
  ],
  boosters: [
    'Write concrete verbs and problems; avoid abstract nouns.',
    'Use evidence: portfolios, outcomes, market signals.',
    'Balance “love/good at” (supply) with “needs/paid” (demand).',
    'Set a 90-day horizon with 2–4 reversible experiments.',
    'Name anti-goals to prevent purpose creep.'
  ],
  template: (f)=>{
    const list = v => Array.isArray(v)?v.filter(Boolean).join(', '):v;

    return [
      'Create an Ikigai purpose map that aligns love, strengths, need, and viability.',
      f.who && `Scope: ${f.who}`,
      f.love && `What you love:\n${f.love}`,
      f.good_at && `What you're good at:\n${f.good_at}`,
      f.world_needs && `What the world needs:\n${f.world_needs}`,
      f.paid_for && `What you can be paid for:\n${f.paid_for}`,
      f.audience_persona && `Target audiences: ${list(f.audience_persona)}`,
      f.evidence && `Evidence & signals:\n${f.evidence}`,
      f.constraints && `Constraints & commitments:\n${f.constraints}`,
      f.non_negotiables && `Non-negotiables / anti-goals:\n${f.non_negotiables}`,
      f.energy_map && `Energy map:\n${f.energy_map}`,
      f.time_horizon && `Time horizon: ${f.time_horizon}`,
      f.north_star && `North Star: ${f.north_star}`,
      f.experiments && `Experiments (hypotheses):\n${f.experiments}`,

      [
        'Output format:',
        '- Overlaps:',
        '  • Passion = Love ∩ Good at (list intersections)',
        '  • Mission = Love ∩ World needs',
        '  • Vocation = World needs ∩ Paid for',
        '  • Profession = Good at ∩ Paid for',
        '- Tensions/gaps (where one lens is missing)',
        '- Ikigai statement (1–2 sentences; who you help, how, why it matters)',
        '- 90-day plan: 2–4 experiments (owner, effort, success signal)',
        '- Risks & mitigations (from constraints/anti-goals)',
        '- Measures of fit (energy, impact, traction signals)'
      ].join('\n')
    ].filter(Boolean).join('\n');
  },
  meta: {
    search_text: 'ikigai passion mission vocation profession purpose map career strategy overlap experiment'
  }
},

/* ---------------------------------------------------------
   FRAMEWORK: BHAG — Big Hairy Audacious Goal
--------------------------------------------------------- */
{
  id: 'framework_bhag',
  slug: 'bhag',
  label: 'BHAG — Big Hairy Audacious Goal',
  kind: 'framework',
  categories: ['strategy','vision','planning'],
  tags: [
    'type:framework',
    'topic:vision',
    'topic:goals',
    'topic:roadmap',
    'use:align',
    'use:plan',
    'level:intermediate'
  ],
  use_cases: [
    'set a 10–20 year audacious vision with clear stakes',
    'rally teams around a measurable, inspiring target',
    'translate BHAG into pillars, milestones, and operating cadence',
    'pressure-test ambition vs. feasibility and ethics',
    'craft a rallying cry/tagline and “painted picture” narrative'
  ],
  definition: 'A BHAG is a vivid, measurable, long-horizon goal (typically 10–20 years) that stretches an organization beyond incremental plans while remaining credible. It pairs a bold outcome with milestones, guardrails, and a cadence to sustain momentum.',
  help: 'Pick a BHAG type, time horizon, and domain. State the goal in measurable terms, add reasons-to-believe, pillars, and milestone ladder. Define guardrails, risks, and review cadence. Close with a short rallying cry.',
  fields: [
    { key:'entity',          label:'Entity', type:'select', options:['company','business unit','product','team','personal'] },
    { key:'domain',          label:'Domain', type:'select', options:['market/position','customer/impact','technology','operational excellence','social/environmental','personal'] },
    { key:'bhag_type',       label:'BHAG type', type:'select', options:['quantitative/qualitative target','role-model','common enemy','internal transformation'], desc:'Shapes the narrative and measures.' },
    { key:'time_horizon',    label:'Time horizon', type:'select', options:['5 years','10 years','15 years','20 years','custom'] },

    { key:'goal',            label:'BHAG (one sentence)', type:'text', ph:'Bold, specific, measurable outcome' },
    { key:'metric',          label:'North Star metric(s)', type:'textarea', ph:'Primary KPIs that prove the BHAG' },
    { key:'why_now',         label:'Why now / context', type:'textarea', ph:'Market shifts, customer demand, mission fit' },
    { key:'evidence',        label:'Reasons to believe', type:'textarea', ph:'proof points, unfair advantages, early traction' },

    { key:'pillars',         label:'Strategic pillars', type:'textarea', ph:'3–5 pillars that make the BHAG plausible', desc:'Each pillar should have example bets.' },
    { key:'milestones',      label:'Milestone ladder', type:'textarea', ph:'Y1, Y3, Y5, Y10 checkpoints with targets' },
    { key:'cadence',         label:'Operating cadence', type:'select', options:['quarterly business review','semiannual','annual'], desc:'Review/refresh rhythm.' },

    { key:'guardrails',      label:'Guardrails & ethics', type:'textarea', ph:'what you won’t compromise (privacy, a11y, safety, brand)', desc:'Prevents perverse incentives.' },
    { key:'risks',           label:'Risks & pre-mortem', type:'textarea', ph:'what could cause failure; early warning signals' },
    { key:'dependencies',    label:'Dependencies', type:'textarea', ph:'partners, regulatory, tech breakthroughs' },

    { key:'owners',          label:'Owners & accountability', type:'textarea', ph:'exec sponsor, cross-functional leads' },
    { key:'allocation',      label:'Resource envelope (rough)', type:'textarea', ph:'capacity %, budget bands, hiring waves' },

    { key:'rallying_cry',    label:'Rallying cry / tagline options', type:'textarea', ph:'3–5 short lines that people can repeat' },
    { key:'story',           label:'Painted picture (narrative)', type:'textarea', ph:'Vivid description of the future when BHAG is true' },

    { key:'audience_persona', label:'Stakeholder personas (optional)', type:'repeater',
      itemType:'typeahead', itemLabel:'persona', autofill:'persona->inline',
      desc:'Who must believe and act.',
      ph:'e.g., Sales Leader; Staff Engineer; Board' },

    { key:'constraints',     label:'Constraints', type:'textarea', ph:'legal, capital, platform, brand' }
  ],
  boosters: [
    'Make it measurable and vivid; one sentence passes the repeatability test.',
    'Anchor belief with 3–5 pillars and early evidence.',
    'Climb via milestone ladder; missing a rung is feedback, not failure.',
    'Add guardrails to prevent goal-induced myopia.',
    'Keep story and slogan memorable; avoid jargon.'
  ],
  template: (f)=>{
    const list = v => Array.isArray(v)?v.filter(Boolean).join(', '):v;

    return [
      'Define a Big Hairy Audacious Goal (BHAG) with measures, pillars, and cadence.',
      f.entity && `Entity: ${f.entity}`,
      f.domain && `Domain: ${f.domain}`,
      f.bhag_type && `BHAG type: ${f.bhag_type}`,
      f.time_horizon && `Time horizon: ${f.time_horizon}`,

      f.goal && `BHAG:\n${f.goal}`,
      f.metric && `North Star metric(s):\n${f.metric}`,
      f.why_now && `Why now / context:\n${f.why_now}`,
      f.evidence && `Reasons to believe:\n${f.evidence}`,

      f.pillars && `Strategic pillars:\n${f.pillars}`,
      f.milestones && `Milestone ladder:\n${f.milestones}`,
      f.cadence && `Operating cadence: ${f.cadence}`,

      f.guardrails && `Guardrails & ethics:\n${f.guardrails}`,
      f.risks && `Risks & pre-mortem:\n${f.risks}`,
      f.dependencies && `Dependencies:\n${f.dependencies}`,

      f.owners && `Owners & accountability:\n${f.owners}`,
      f.allocation && `Resource envelope:\n${f.allocation}`,

      f.rallying_cry && `Rallying cry/tagline options:\n${f.rallying_cry}`,
      f.story && `Painted picture:\n${f.story}`,

      f.audience_persona && `Stakeholders: ${list(f.audience_persona)}`,
      f.constraints && `Constraints:\n${f.constraints}`,

      [
        'Output format:',
        '- One-line BHAG + time horizon + domain + type',
        '- North Star metric(s) and milestone ladder (Y1/Y3/Y5/... targets)',
        '- Strategic pillars (with example bets) and reasons-to-believe',
        '- Guardrails & ethics; Risks (pre-mortem) with early signals',
        '- Owners, cadence, and resource envelope',
        '- Rallying cry (3–5 options) and Painted Picture narrative'
      ].join('\n')
    ].filter(Boolean).join('\n');
  },
  meta: {
    search_text: 'bhag big hairy audacious goal vision pillars milestones guardrails cadence rallying cry'
  }
},


{
  id: "theory_of_change",
  slug: "theory-of-change",
  label: "Theory of Change — Backcasting",
  kind: "strategy",
  categories: [
    "planning",
    "analysis-frameworks",
    "community"
  ],
  tags: [
    "type:framework",
    "use:planning",
    "use:goals",
    "use:evaluation",
    "use:process-improvement",
    "use:purpose",
    "use:mission",
    "use:change",
    "phase:define",
    "phase:plan",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "co-create a community mission and causal logic",
    "design a program or initiative from outcomes backward",
    "write a grant-ready purpose and results chain",
    "align stakeholders on what success looks like",
    "build indicators and a lightweight measurement plan",
    "stress-test assumptions and external risks",
     "finding community purpose",
      "understanding change",
       "why must change happen",
        "how do we deal with change",
          "map steps from vision to results",
  "plan backwards from the big goal",
  "show how actions lead to impact",
  "create a roadmap for change",
  "explain program logic simply",
  "align funders and community on goals",
  "make a clear story of cause and effect",
  "set outcomes before planning activities",
  "visualize how success will be measured",
  "test if our plan really leads to change",
  "connect daily actions to long-term mission",
  "simplify complex initiatives into steps",
  "design with assumptions made visible",
  "show pathways from effort to outcomes",
  "clarify who benefits and how"
  ],
  boosters: [
    "Start from the highest-level impact, then back-cast to long, intermediate, and short outcomes before listing activities.",
    "Write explicit If-Then-Because links to make causality testable.",
    "Name boundary partners who must change for impact to happen.",
    "Pair each outcome with at least one observable indicator and data source.",
    "List assumptions and external factors that could break the chain.",
    "Keep it on one page - diagram later if needed."
  ],
  definition: "A purpose and causal-logic scaffold that back-casts from desired impact to outcomes to activities. It clarifies who must change, why change should happen, and how you will know.",
  help: "Complete Impact, Outcomes (short-mid-long), Activities, Indicators, Assumptions, and Risks. Use the template output to generate a clear If-Then-Because chain and a minimal measurement plan.",
  fields: [
    {
      label: "Impact - ultimate change in the world",
      desc: "High-level, mission-aligned difference you seek.",
      key: "impact",
      ph: "e.g., Residents experience safer, more connected neighborhoods",
      type: "textarea"
    },
    {
      label: "Beneficiaries / boundary partners",
      autofill: "persona->inline",
      itemLabel: "partner",
      itemType: "typeahead",
      key: "partners",
      max: 10,
      min: 1,
      ph: "e.g., Youth leaders; neighborhood associations; city transit",
      type: "repeater"
    },
    {
      label: "Long-term outcomes - 3–5+ years",
      desc: "End-state outcomes that contribute to the Impact.",
      key: "outcomes_long",
      ph: "e.g., Sustained resident leadership; reduced crime; stable funding",
      type: "textarea"
    },
    {
      label: "Intermediate outcomes - 6–24 months",
      desc: "Behavior and relationship changes that enable long-term outcomes.",
      key: "outcomes_mid",
      ph: "e.g., Cross-org collaborations; higher participation; trusted forums",
      type: "textarea"
    },
    {
      label: "Short-term outcomes - 0–6 months",
      desc: "Knowledge, attitudes, skills, access changes.",
      key: "outcomes_short",
      ph: "e.g., Awareness of services; trained facilitators; initial trust",
      type: "textarea"
    },
    {
      label: "Activities / strategies",
      desc: "What you will do to trigger the short-term outcomes.",
      key: "activities",
      ph: "e.g., Story circles, peer facilitation, pilot micro-grants, outreach",
      type: "textarea"
    },
    {
      label: "Outputs (optional) - deliverables, participation counts",
      key: "outputs",
      ph: "e.g., 6 circles held; 120 attendees; 10 micro-grants awarded",
      type: "textarea"
    },
    {
      label: "Inputs / resources",
      desc: "People, budget, tools, partnerships.",
      key: "inputs",
      ph: "e.g., 2 facilitators; $20k; space; data-sharing agreement",
      type: "textarea"
    },
    {
      label: "Indicators (how we'll know)",
      desc: "Observable signs for the main outcomes or impact.",
      key: "indicators",
      ph: "e.g., % of residents who report belonging; attendance growth; MoUs signed",
      type: "textarea"
    },
    {
      label: "Data sources & cadence",
      desc: "Where indicators come from and how often you’ll check.",
      key: "data_plan",
      ph: "e.g., Quarterly survey; sign-in sheets; network map every 6 months",
      type: "textarea"
    },
    {
      label: "Assumptions - why you think this will work",
      desc: "Conditions you expect to hold true in the context.",
      key: "assumptions",
      ph: "e.g., Partners will share spaces; small grants spur participation",
      type: "textarea"
    },
    {
      label: "External factors / risks",
      desc: "Contextual forces that could block change.",
      key: "risks",
      ph: "e.g., Policy shifts; leadership turnover; safety incidents",
      type: "textarea"
    },
    {
      label: "Non-goals / boundary conditions (optional)",
      desc: "What is intentionally out of scope to stay focused.",
      key: "non_goals",
      ph: "e.g., We are not providing direct clinical services",
      type: "textarea"
    }
  ],
  template: ({
    impact,
    partners,
    outcomes_long,
    outcomes_mid,
    outcomes_short,
    activities,
    outputs,
    inputs,
    indicators,
    data_plan,
    assumptions,
    risks,
    non_goals,
    ctx,
    audience,
    style,
    tone
  }) => [
    "Build a Theory of Change - backcasting from impact.",
    ctx && `Context: ${ctx}`,
    audience && `Audience: ${audience}`,
    style && `Style: ${style}`,
    tone && `Tone: ${tone}`,

    impact && `Impact:\n${impact}`,

    partners && (
      "Beneficiaries / boundary partners:\n" +
      String(partners)
        .split(/\n+/).map(s => s.trim()).filter(Boolean)
        .map((x,i)=>`${i+1}. ${x}`).join("\n")
    ),

    outcomes_long  && `Long-term outcomes (3–5+ yrs):\n${outcomes_long}`,
    outcomes_mid   && `Intermediate outcomes (6–24 mo):\n${outcomes_mid}`,
    outcomes_short && `Short-term outcomes (0–6 mo):\n${outcomes_short}`,

    activities && `Activities / strategies:\n${activities}`,
    outputs    && `Outputs:\n${outputs}`,
    inputs     && `Inputs / resources:\n${inputs}`,

    // Logic chain
    (activities || outcomes_short || outcomes_mid || outcomes_long || impact || assumptions) && [
      "Logic chain (If-Then-Because):",
      activities && `If we carry out: ${activities.replace(/\n+/g, "; ")}`,
      outcomes_short && `Then in the short term we expect: ${outcomes_short.replace(/\n+/g, "; ")}`,
      outcomes_mid && `Which enables: ${outcomes_mid.replace(/\n+/g, "; ")}`,
      outcomes_long && `Contributing to: ${outcomes_long.replace(/\n+/g, "; ")}`,
      impact && `Ultimately achieving impact: ${impact.replace(/\n+/g, "; ")}`,
      assumptions && `Because (assumptions): ${assumptions.replace(/\n+/g, "; ")}`
    ].filter(Boolean).join("\n"),

    // Measurement
    (indicators || data_plan) && [
      "Indicators & measurement plan:",
      indicators && `Indicators:\n${indicators}`,
      data_plan && `Data sources & cadence:\n${data_plan}`
    ].filter(Boolean).join("\n"),

    risks && `External factors / risks:\n${risks}`,
    non_goals && `Non-goals / boundary conditions:\n${non_goals}`,

    "Output:",
    "1) One-page ToC text with Impact, Outcomes, Activities, and Logic chain.",
    "2) Minimal measurement plan - indicators mapped to outcomes.",
    "3) Assumptions and risks called out for review.",

    "Checklist:\n- [ ] Outcomes precede activities\n- [ ] If-Then-Because links are explicit\n- [ ] Boundary partners named\n- [ ] Indicators and data sources specified\n- [ ] Major assumptions and risks listed\n- [ ] Non-goals clarify scope"
  ].filter(Boolean).join("\n"),
  meta: {
    search_text: "theory of change — backcasting causal logic community program planning outcomes indicators assumptions risks boundary partners mission grant measurement plan template"
  }
},

{
  id: "v2mom",
  slug: "v2mom-vision-values-methods-obstacles-measures",
  label: "V2MOM — Vision, Values, Methods, Obstacles, Measures",
  kind: "strategy",
  categories: [
    "planning",
    "alignment",
    "execution",
    "community"
  ],
  tags: [
    "type:framework",
    "use:planning",
    "use:goals",
    "use:prioritize",
    "use:vision",
    "use:mission",
     "use:values",
     "use:purpose",
    "use:decision-making",
    "phase:define",
    "phase:plan",
    "topic:community",
    "level:beginner"
  ],
  use_cases: [
    "co-create a clear north star for a community or team",
    "turn mission into an execution plan with owners",
    "align stakeholders on what matters and how to decide",
    "cascade priorities across circles/working groups",
    "select a few measures that prove momentum",
    "surface risks and agree on mitigations",
      "make our team vision clear",
  "set shared values before starting",
  "turn ideas into a simple plan",
  "align everyone on priorities",
  "decide what to measure for progress",
  "spot obstacles before they derail us",
  "share one page plan with the team",
  "create focus for the quarter",
  "check if we’re staying true to vision",
  "plan community goals together",
  "make decisions with shared values in mind",
  "break big vision into practical steps",
  "agree on how to track success",
  "create alignment across departments",
  "simplify strategy into 5 parts",
  "finding community purpose",
  "finding vision",
  "finding mission"
  ],
  boosters: [
    "Write the Vision as a vivid future state that will be true by a specific date.",
    "Treat Values as decision rules, not wall art; include 'This, not That' examples.",
    "Limit Methods to 5–7 big rocks; attach owners and timeframes.",
    "Balance Measures: include both leading (activities/behavior) and lagging (outcomes/impact).",
    "Translate Obstacles into mitigations and explicit assumptions.",
    "Review monthly; retire or replace Methods that no longer serve the Vision."
  ],
  definition: "A lightweight alignment framework that turns a shared north star (Vision) and decision rules (Values) into a small set of prioritized Methods, anticipated Obstacles, and clear Measures.",
  help: "Complete each V2MOM section. Keep it on one page. Use Values to arbitrate tradeoffs. Convert Methods into backlog items or workstreams with owners.",
  fields: [
    {
      label: "Title (initiative / community)",
      key: "title",
      ph: "e.g., Eastside Neighborhood Network 2026 Plan",
      type: "text"
    },
    {
      label: "Time horizon",
      key: "horizon",
      ph: "e.g., Jan–Dec 2026",
      type: "text"
    },
    {
      label: "Owner",
      key: "owner",
      ph: "e.g., Community Council Steering Group",
      type: "text"
    },
    {
      label: "Stakeholders",
      autofill: "persona->inline",
      itemLabel: "stakeholder",
      itemType: "typeahead",
      key: "stakeholders",
      max: 12,
      ph: "e.g., Youth leaders; small business reps; city liaison; elders council",
      type: "repeater"
    },
    {
      label: "Vision (future state, specific date)",
      desc: "What will be true if we succeed?",
      key: "vision",
      ph: "e.g., By Dec 2026, residents report a strong sense of belonging and co-run monthly forums...",
      type: "textarea"
    },
    {
      label: "Values (decision rules)",
      desc: "Non-negotiables that guide choices. One per line; add brief 'this, not that' if helpful.",
      key: "values",
      ph: "e.g., Center the margins — prioritize first-time voices; Evidence over anecdotes; Open by default — private when sensitive",
      type: "textarea"
    },
    {
      label: "Methods (big rocks / strategies)",
      desc: "5–7 prioritized methods. One per line; optionally add owner or timeframe.",
      key: "methods",
      ph: "e.g., Monthly Story Circles (Mia); Youth Micro-grants pilot (Q2, Dani); Partnership MoUs (Tom, Q1–Q3)",
      type: "textarea"
    },
    {
      label: "Obstacles (risks, dependencies, constraints)",
      desc: "Anticipated blockers and how we’ll mitigate them.",
      key: "obstacles",
      ph: "e.g., Volunteer burnout → rotate facilitation; Space access → MoU with library; Safety concerns → code of conduct + training",
      type: "textarea"
    },
    {
      label: "Measures (leading & lagging)",
      desc: "How we’ll know it’s working. One per line. Include target where possible.",
      key: "measures",
      ph: "e.g., Forum attendance +30% by Q3; % first-time speakers ≥25% monthly; Belonging index +0.5 by Dec; 6 signed MoUs by Q2",
      type: "textarea"
    },
    {
      label: "Baseline & data sources (optional)",
      key: "data",
      ph: "e.g., Current belonging index 3.1/5 (2025 survey); sign-in sheets; SenseMaker micro-narratives quarterly",
      type: "textarea"
    },
    {
      label: "Cadence & review",
      desc: "How often we check progress and adapt.",
      key: "cadence",
      ph: "e.g., Monthly council review; quarterly community report-outs",
      type: "text"
    },
    {
      label: "Non-goals / boundaries (optional)",
      key: "non_goals",
      ph: "e.g., We do not provide clinical services; we do not endorse political candidates",
      type: "textarea"
    },
    {
      label: "Context / notes (optional)",
      key: "ctx",
      ph: "Relevant background, links, or constraints.",
      type: "textarea"
    }
  ],
  template: ({
    title,
    horizon,
    owner,
    stakeholders,
    vision,
    values,
    methods,
    obstacles,
    measures,
    data,
    cadence,
    non_goals,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`).join("\n");

    return [
      title && `V2MOM: ${title}`,
      horizon && `Time horizon: ${horizon}`,
      owner && `Owner: ${owner}`,
      stakeholders && ("Stakeholders:\n" + listify(stakeholders)),
      ctx && `Context: ${ctx}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,

      "—",
      "VISION",
      vision || "(add a vivid future-state statement with a date)",

      "—",
      "VALUES (decision rules)",
      values ? listify(values) : "(add 3–7 values with brief definitions)",

      "—",
      "METHODS (big rocks)",
      methods ? listify(methods) : "(list 5–7 prioritized methods with owners/timeframes)",

      "—",
      "OBSTACLES (with mitigations)",
      obstacles ? listify(obstacles) : "(list major risks/constraints and mitigation ideas)",

      "—",
      "MEASURES (leading & lagging)",
      measures ? listify(measures) : "(add 3–6 measurable indicators with targets)",

      data && ["—", "BASELINE & DATA SOURCES", data].join("\n"),
      cadence && ["—", "CADENCE & REVIEW", cadence].join("\n"),
      non_goals && ["—", "NON-GOALS / BOUNDARIES", non_goals].join("\n"),

      "—",
      "Checklist:",
      "- [ ] Vision has a date and is testable",
      "- [ ] Values resolve common tradeoffs (This/Not That)",
      "- [ ] ≤7 Methods, each actionable and prioritized",
      "- [ ] Obstacles have explicit mitigations",
      "- [ ] Measures include both leading and lagging with targets",
      "- [ ] Monthly review cadence is set"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "v2mom vision values methods obstacles measures one-page plan community alignment execution leading lagging metrics decision rules north star template"
  }
},

{
  id: "community_okrs",
  slug: "okrs-community",
  label: "OKRs (Community-Adapted) — Objectives & Key Results",
  kind: "strategy",
  categories: [
    "planning",
    "alignment",
    "measurement",
    "community"
  ],
  tags: [
    "type:framework",
    "use:planning",
    "use:goals",
    "use:evaluation",
    "use:purpose",
    "use:mission",
    "use:objective",
    "use:prioritize",
    "phase:define",
    "phase:plan",
    "topic:community",
    "level:beginner"
  ],
  use_cases: [
    "translate mission into measurable progress",
    "align circles/working groups around shared outcomes",
    "publish a transparent scorecard for the community",
    "separate inspiring objectives from measurable results",
    "focus volunteer energy on the few things that matter",
      "set clear goals for our community project",
  "show progress in a simple scorecard",
  "align volunteers on what matters most",
  "separate big vision from measurable steps",
  "track if our efforts are making impact",
  "share transparent progress with members",
  "decide where to put limited energy",
  "measure both growth and inclusion",
  "create accountability without micromanaging",
  "review goals together every cycle",
  "help newcomers see community priorities",
  "set stretch goals while staying realistic",
  "make mission progress visible to funders",
  "focus community work on outcomes not tasks",
  "balance impact goals with learning goals",
  "finding community goals",
  "aligning on mission",
  "finding community purpose"
  ],
  boosters: [
    "Objectives are qualitative, memorable, time-bound, and owned; avoid task words.",
    "Attach 2–4 Key Results per Objective; each KR is an outcome metric with target, baseline, and data source.",
    "Balance leading (behavior/activity) and lagging (outcome/impact) KRs.",
    "Mark Objectives as COMMIT or STRETCH; average KR score of ~0.7 at cycle end is healthy.",
    "Include at least one equity/representation KR and one learning KR.",
    "Review biweekly; retire KRs that drift into tasks and replace with outcome measures."
  ],
  definition: "OKRs convert a community’s mission into a small set of qualitative Objectives and a handful of quantitative Key Results that show real progress.",
  help: "Add a short mission, cycle dates, and owner(s). List COMMIT and STRETCH Objectives. For Key Results, use one line per KR in the format “O#: KR label — target — baseline — data source — cadence.” Example: “O2: First-time speakers ≥25% — target 25% — baseline 12% — sign-in sheets — monthly.”",
  fields: [
    {
      label: "Mission (one line)",
      key: "mission",
      ph: "e.g., Build belonging and shared power in Eastside neighborhoods",
      type: "text"
    },
    {
      label: "Cycle / time horizon",
      key: "horizon",
      ph: "e.g., Q1 2026 (Jan–Mar)",
      type: "text"
    },
    {
      label: "Owner(s)",
      key: "owner",
      ph: "e.g., Community Council Steering Group",
      type: "text"
    },
    {
      label: "Stakeholders",
      autofill: "persona->inline",
      itemLabel: "stakeholder",
      itemType: "typeahead",
      key: "stakeholders",
      max: 12,
      ph: "e.g., Youth leaders; small business reps; city liaison; elders council",
      type: "repeater"
    },
    {
      label: "Objectives — COMMIT (qualitative, owned)",
      desc: "One per line; use O1, O2… prefixes if helpful.",
      key: "objectives_commit",
      ph: "e.g., O1: Make monthly forums welcoming and predictable\nO2: Grow youth leadership in decision spaces",
      type: "textarea"
    },
    {
      label: "Objectives — STRETCH (ambitious, nice-to-have)",
      desc: "One per line; optional.",
      key: "objectives_stretch",
      ph: "e.g., O3: Secure multi-year space partnership",
      type: "textarea"
    },
    {
      label: "Key Results (format: O#: label — target — baseline — data source — cadence)",
      desc: "2–4 per objective. Outcome metrics, not tasks.",
      key: "key_results",
      ph: "e.g., O1: Forum attendance +30% — target +30% — baseline avg 45 — sign-in sheets — monthly\nO1: First-time speakers ≥25% — target 25% — baseline 12% — sign-in sheets — monthly\nO2: 12 trained youth facilitators — target 12 — baseline 4 — training roster — end of Q1",
      type: "textarea"
    },
    {
      label: "Health metrics (guardrails)",
      desc: "Quality, equity, sustainability signals.",
      key: "health",
      ph: "e.g., Volunteer burnout ≤10% self-reported; safety incidents = 0; budget variance ≤5%",
      type: "textarea"
    },
    {
      label: "Initiatives / major work (optional)",
      desc: "Projects that may drive KRs. Not scored.",
      key: "initiatives",
      ph: "e.g., Story Circles program; Youth micro-grants pilot; Library MoU",
      type: "textarea"
    },
    {
      label: "Cadence & review",
      key: "cadence",
      ph: "e.g., Biweekly check-ins; public scorecard update monthly; end-cycle retrospective",
      type: "text"
    },
    {
      label: "Risks & assumptions",
      key: "risks",
      ph: "e.g., Space access depends on MoU; assume stable volunteer core",
      type: "textarea"
    },
    {
      label: "Non-goals / boundaries (optional)",
      key: "non_goals",
      ph: "e.g., We don’t endorse political candidates; no clinical services",
      type: "textarea"
    },
    {
      label: "Context / notes (optional)",
      key: "ctx",
      ph: "Links, background, constraints.",
      type: "textarea"
    }
  ],
  template: ({
    mission,
    horizon,
    owner,
    stakeholders,
    objectives_commit,
    objectives_stretch,
    key_results,
    health,
    initiatives,
    cadence,
    risks,
    non_goals,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`).join("\n");

    return [
      mission && `Mission: ${mission}`,
      horizon && `Cycle: ${horizon}`,
      owner && `Owner(s): ${owner}`,
      stakeholders && ("Stakeholders:\n" + listify(stakeholders)),
      ctx && `Context: ${ctx}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,

      "—",
      "OBJECTIVES — COMMIT",
      objectives_commit ? listify(objectives_commit) : "(add 1–3 commit objectives)",

      objectives_stretch && [
        "—",
        "OBJECTIVES — STRETCH",
        listify(objectives_stretch)
      ].join("\n"),

      "—",
      "KEY RESULTS",
      key_results ? listify(key_results) : "(add 2–4 KRs per objective in the format: O#: label — target — baseline — data source — cadence)",

      health && ["—", "HEALTH METRICS", listify(health)].join("\n"),
      initiatives && ["—", "INITIATIVES (not scored)", listify(initiatives)].join("\n"),
      cadence && ["—", "CADENCE & REVIEW", cadence].join("\n"),
      risks && ["—", "RISKS & ASSUMPTIONS", risks].join("\n"),
      non_goals && ["—", "NON-GOALS / BOUNDARIES", non_goals].join("\n"),

      "—",
      "Scoring guidance:",
      "- Score each KR 0.0–1.0 at check-ins; average by Objective.",
      "- Healthy end-of-cycle average ≈ 0.6–0.8; 1.0 should be rare.",
      "- Publish a simple scorecard; discuss learning, not just numbers.",

      "Checklist:",
      "- [ ] Objectives are qualitative and inspiring",
      "- [ ] 2–4 measurable KRs per Objective with targets and data sources",
      "- [ ] At least one equity/representation KR",
      "- [ ] Cadence and owners are explicit",
      "- [ ] Public scorecard rhythm is set"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "okrs community adapted objectives key results commit stretch outcomes equity learning cadence public scorecard measurement template"
  }
},

{
  id: "outcome_mapping",
  slug: "outcome-mapping",
  label: "Outcome Mapping — Boundary Partners & Behavior Change",
  kind: "strategy",
  categories: [
    "planning",
    "measurement",
    "community"
  ],
  tags: [
    "type:framework",
    "use:planning",
    "use:evaluation",
    "use:purpose",
    "use:community",
    "use:goals",
    "use:process-improvement",
    "phase:define",
    "phase:plan",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "focus a program on partner behavior change, not just deliverables",
    "co-create progress markers with boundary partners",
    "separate spheres of control, influence, and interest",
    "design light monitoring (journals) for adaptive learning",
    "clarify how strategies support partner change",
      "map who we’re really trying to influence",
  "show how our work affects partner behavior",
  "separate what we control vs what we influence",
  "set shared markers of progress with partners",
  "track change without heavy reporting",
  "make partner roles and responsibilities clear",
  "connect daily activities to bigger behavior shifts",
  "design flexible monitoring that adapts as we learn",
  "clarify our contribution vs others’ contribution",
  "align strategies with long-term partner outcomes",
  "simplify evaluation into stories and journals",
  "focus on sustainable behavior, not just outputs",
  "plan with partners instead of for them",
  "help stakeholders see their part in change",
  "finding community purpose",
  "community change",
  "working with change"
  ],
  boosters: [
    "Name real boundary partners (specific groups or organizations), not generic 'the public.'",
    "Write progress markers as observable behaviors using verbs (attend, initiate, co-facilitate).",
    "Balance 'expect to see,' 'like to see,' and 'love to see' markers.",
    "Pair internal (things we do) and external (with/for partners) strategies.",
    "Log a brief Outcome Journal entry whenever a marker shows up.",
    "Review markers quarterly; retire achieved ones, add emergent ones."
  ],
  definition: "Outcome Mapping centers the people and organizations you seek to influence (boundary partners) and defines change as their behaviors, relationships, actions, and practices—tracked through progressive 'expect/like/love to see' markers.",
  help: "Complete Vision, Mission, Boundary Partners, Progress Markers, Strategies, and Monitoring. Keep markers observable and partner-owned. Use journals to learn, not to punish.",
  fields: [
    {
      label: "Title (initiative / community)",
      key: "title",
      ph: "e.g., Eastside Belonging Initiative",
      type: "text"
    },
    {
      label: "Time horizon",
      key: "horizon",
      ph: "e.g., 2026",
      type: "text"
    },
    {
      label: "Owner",
      key: "owner",
      ph: "e.g., Community Council OM Team",
      type: "text"
    },
    {
      label: "Vision (ultimate improvement)",
      desc: "High-level human/social/ecological wellbeing you care about.",
      key: "vision",
      ph: "e.g., Eastside residents experience durable belonging and shared power",
      type: "textarea"
    },
    {
      label: "Mission (our contribution to the Vision)",
      desc: "How your program will support partner change.",
      key: "mission",
      ph: "e.g., We cultivate forums, training, and micro-grants that enable resident-led action",
      type: "textarea"
    },
    {
      label: "Boundary partners",
      autofill: "persona->inline",
      itemLabel: "partner",
      itemType: "typeahead",
      key: "partners",
      max: 12,
      ph: "e.g., Youth leadership circle; Library branch team; Small business alliance",
      type: "repeater"
    },
    {
      label: "Progress markers — EXPECT to see",
      desc: "Early signals partners are engaging.",
      key: "pm_expect",
      ph: "e.g., Attend forums; share meeting notes; ask clarifying questions",
      type: "textarea"
    },
    {
      label: "Progress markers — LIKE to see",
      desc: "Active participation and initial initiative-taking.",
      key: "pm_like",
      ph: "e.g., Co-facilitate sessions; recruit peers; propose agenda items",
      type: "textarea"
    },
    {
      label: "Progress markers — LOVE to see",
      desc: "Ownership, leadership, new norms spreading.",
      key: "pm_love",
      ph: "e.g., Launch independent working groups; negotiate MoUs; mentor new leaders",
      type: "textarea"
    },
    {
      label: "Strategies — INTERNAL (within our sphere of control)",
      desc: "Capacity, tools, routines we run.",
      key: "str_internal",
      ph: "e.g., Train facilitators; publish open data; offer micro-grants; set code-of-conduct",
      type: "textarea"
    },
    {
      label: "Strategies — EXTERNAL (with/for partners)",
      desc: "Engagements that directly support partner behavior change.",
      key: "str_external",
      ph: "e.g., Story circles with elders; youth-led outreach; monthly co-design clinics",
      type: "textarea"
    },
    {
      label: "Spheres (Control • Influence • Interest)",
      desc: "Clarify what you control (activities), influence (partner behaviors), and care about (long-term changes).",
      key: "spheres",
      ph: "Control: our trainings, grants\nInfluence: partners co-facilitate, sign MoUs\nInterest: neighborhood belonging increases",
      type: "textarea"
    },
    {
      label: "Monitoring — Journals & cadence",
      desc: "Which journals you’ll keep and how often.",
      key: "monitoring",
      ph: "Outcome Journal (monthly); Strategy Journal (biweekly); Performance Journal (quarterly); Learning sync (monthly)",
      type: "textarea"
    },
    {
      label: "Indicators & data sources (lightweight)",
      desc: "Optional quant signals to pair with journals.",
      key: "indicators",
      ph: "e.g., % first-time speakers; attendance trend; # independent meetings initiated",
      type: "textarea"
    },
    {
      label: "Assumptions & external factors",
      key: "assumptions",
      ph: "e.g., Partners have stable access to space; city liaison remains supportive",
      type: "textarea"
    },
    {
      label: "Risks & mitigations",
      key: "risks",
      ph: "e.g., Volunteer burnout → rotate roles; safety concerns → trauma-informed facilitation",
      type: "textarea"
    },
    {
      label: "Non-goals / boundaries (optional)",
      key: "non_goals",
      ph: "e.g., We don’t endorse candidates; we don’t provide clinical services",
      type: "textarea"
    },
    {
      label: "Context / notes (optional)",
      key: "ctx",
      ph: "Links, background, constraints.",
      type: "textarea"
    }
  ],
  template: ({
    title,
    horizon,
    owner,
    vision,
    mission,
    partners,
    pm_expect,
    pm_like,
    pm_love,
    str_internal,
    str_external,
    spheres,
    monitoring,
    indicators,
    assumptions,
    risks,
    non_goals,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`).join("\n");

    return [
      title && `Outcome Mapping: ${title}`,
      horizon && `Time horizon: ${horizon}`,
      owner && `Owner: ${owner}`,
      ctx && `Context: ${ctx}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,

      "—",
      "VISION",
      vision || "(add the ultimate improvement you care about)",

      "—",
      "MISSION (our contribution to the Vision)",
      mission || "(how we will support partner behavior change)",

      partners && [
        "—",
        "BOUNDARY PARTNERS",
        listify(partners)
      ].join("\n"),

      "—",
      "PROGRESS MARKERS",
      (pm_expect || pm_like || pm_love)
        ? [
            "Expect to see:",
            pm_expect ? listify(pm_expect) : "(add early engagement behaviors)",
            "Like to see:",
            pm_like ? listify(pm_like) : "(add active participation behaviors)",
            "Love to see:",
            pm_love ? listify(pm_love) : "(add ownership/leadership behaviors)"
          ].join("\n")
        : "(add expect/like/love to see markers)",

      "—",
      "STRATEGIES",
      "Internal (within control):",
      str_internal ? listify(str_internal) : "(add internal strategies)",
      "External (with/for partners):",
      str_external ? listify(str_external) : "(add external strategies)",

      spheres && ["—", "SPHERES (Control • Influence • Interest)", spheres].join("\n"),

      monitoring && ["—", "MONITORING — JOURNALS & CADENCE", monitoring].join("\n"),
      indicators && ["—", "INDICATORS & DATA SOURCES (optional)", listify(indicators)].join("\n"),

      assumptions && ["—", "ASSUMPTIONS & EXTERNAL FACTORS", assumptions].join("\n"),
      risks && ["—", "RISKS & MITIGATIONS", risks].join("\n"),
      non_goals && ["—", "NON-GOALS / BOUNDARIES", non_goals].join("\n"),

      "—",
      "Checklist:",
      "- [ ] Boundary partners named (specific, not generic)",
      "- [ ] Markers observable and partner-owned",
      "- [ ] Expect/Like/Love balance shows progression",
      "- [ ] Strategies link to markers (internal & external)",
      "- [ ] Journals and cadence are lightweight and real",
      "- [ ] Spheres clarify what we control vs influence vs care about"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "outcome mapping boundary partners progress markers expect like love behavior change spheres of control influence interest journals monitoring template"
  }
},

{
  id: "collective_impact",
  slug: "collective-impact-common-agenda-shared-measurement-backbone",
  label: "Collective Impact — Common Agenda, Shared Measurement, Backbone",
  kind: "strategy",
  categories: [
    "planning",
    "alignment",
    "community",
    "governance"
  ],
  tags: [
    "type:framework",
    "use:planning",
    "use:alignment",
    "use:purpose",
    "use:evaluation",
    "use:coordination",
    "phase:define",
    "phase:plan",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "align multiple organizations around a common purpose",
    "build a shared measurement system with public accountability",
    "coordinate mutually reinforcing activities across partners",
    "stand up a backbone for facilitation, data, and communications",
    "establish continuous communication rhythms and governance",
      "get different groups working toward the same goal",
  "make progress visible across all partners",
  "share data in one common system",
  "coordinate activities so efforts reinforce each other",
  "set up a neutral backbone team to keep things moving",
  "create regular check-ins and updates between partners",
  "align funders and nonprofits on shared outcomes",
  "avoid duplication of work across organizations",
  "show community progress in a transparent way",
  "build trust through consistent communication",
  "decide together how to measure success",
  "design governance that includes all voices",
  "make it easier for partners to collaborate",
  "clarify roles so partners don’t work at cross-purposes",
   "finding purpose",
    "clarify mission, purpose, and vision",
    "creating a shared movement and vision"
  ],
  boosters: [
    "Write the Common Agenda as a single page: problem, affected populations/places, desired long-term outcome, principles, and a brief theory of change.",
    "Keep 5–8 shared measures total; mix leading (behavioral) and lagging (outcome/impact) indicators.",
    "Publish a simple scorecard quarterly; make data useful to partners, not just funders.",
    "Map who does what where to expose overlaps and gaps; reinforce rather than duplicate.",
    "Backbone ≠ boss: facilitate, convene, coordinate, and make evidence legible.",
    "Invest early in communication rituals: monthly WG syncs, quarterly summits, open notes."
  ],
  definition: "Collective Impact aligns multiple organizations and community groups around a Common Agenda, uses a Shared Measurement system, coordinates Mutually Reinforcing Activities, maintains Continuous Communication, and relies on a Backbone organization for facilitation, data, and coordination.",
  help: "Complete the Common Agenda, define shared indicators with baselines/targets, list partner activities that reinforce each other, specify the backbone’s roles, and set steady communication cadences and governance.",
  fields: [
    {
      label: "Initiative title",
      key: "title",
      ph: "e.g., Eastside Belonging Collective",
      type: "text"
    },
    {
      label: "Time horizon",
      key: "horizon",
      ph: "e.g., 2025–2028",
      type: "text"
    },
    {
      label: "Backbone organization (owner)",
      key: "owner",
      ph: "e.g., Community Council (Backbone)",
      type: "text"
    },
    {
      label: "Participating partners",
      autofill: "persona->inline",
      itemLabel: "partner",
      itemType: "typeahead",
      key: "partners",
      max: 24,
      ph: "e.g., Library; Youth Coalition; Small Biz Assoc.; City Liaison; Elders Circle",
      type: "repeater"
    },

    // Common Agenda
    {
      label: "Common Agenda — Problem statement",
      key: "ca_problem",
      ph: "e.g., Residents report low belonging and limited cross-neighborhood ties...",
      type: "textarea"
    },
    {
      label: "Common Agenda — Desired long-term outcome",
      key: "ca_outcome",
      ph: "e.g., By 2028, belonging index ≥4.0/5 across all neighborhoods with reduced disparities",
      type: "textarea"
    },
    {
      label: "Common Agenda — Target populations & places",
      key: "ca_targets",
      ph: "e.g., Youth (14–24), recent immigrants; Eastside & Riverbend corridors",
      type: "textarea"
    },
    {
      label: "Common Agenda — Principles / decision rules",
      key: "ca_principles",
      ph: "e.g., Center the margins; Evidence over anecdotes; Open by default; Trauma-informed",
      type: "textarea"
    },
    {
      label: "Common Agenda — Theory of change (brief)",
      key: "ca_toc",
      ph: "e.g., If we convene monthly forums, train facilitators, and fund micro-grants...",
      type: "textarea"
    },

    // Shared Measurement
    {
      label: "Shared measures (one per line: label — baseline — target — data source — cadence — owner)",
      key: "measures",
      ph: "e.g., Belonging index — 3.1 — 3.7 by Dec 2026 — annual survey — annual — Council\n% first-time speakers — 12% — ≥25% monthly — sign-in sheets — monthly — Forum WG",
      type: "textarea"
    },
    {
      label: "Data governance & equity (access, privacy, disaggregation)",
      key: "data_governance",
      ph: "e.g., Disaggregate by neighborhood, age, language; data-sharing MoU; open quarterly briefs",
      type: "textarea"
    },

    // Mutually Reinforcing Activities
    {
      label: "Mutually reinforcing activities (one per line: partner — activity — contribution — dependencies)",
      key: "activities",
      ph: "e.g., Library — host monthly forums — space & outreach — MoU signed\nYouth Coalition — recruit facilitators — leadership pipeline — micro-grant fund",
      type: "textarea"
    },
    {
      label: "Geography / coverage map notes (optional)",
      key: "coverage",
      ph: "e.g., Eastside: Library; Riverbend: Small Biz Assoc.; gaps: North End",
      type: "textarea"
    },

    // Continuous Communication
    {
      label: "Continuous communication cadence & channels",
      key: "comms",
      ph: "e.g., WG syncs monthly; Steering quarterly; public newsletter quarterly; Slack for day-to-day",
      type: "textarea"
    },

    // Backbone & Governance
    {
      label: "Backbone roles (select or list)",
      key: "backbone_roles",
      ph: "e.g., Convening/facilitation; Data & evaluation; Project management; Communications; Resource mobilization",
      type: "textarea"
    },
    {
      label: "Governance structure",
      key: "governance",
      ph: "e.g., Steering Committee; Working Groups (Forums, Youth, Data); Community Advisory Circle",
      type: "textarea"
    },

    // Resourcing & Risks
    {
      label: "Resources & budget (high-level)",
      key: "resources",
      ph: "e.g., $200k/year pooled; 1 FTE backbone; in-kind spaces; volunteer stipends",
      type: "textarea"
    },
    {
      label: "Risks & mitigations",
      key: "risks",
      ph: "e.g., Volunteer burnout → rotate facilitation; Space loss → backup MoU; Data pushback → privacy-first briefs",
      type: "textarea"
    },
    {
      label: "Assumptions",
      key: "assumptions",
      ph: "e.g., Partners honor MoUs; city liaison remains supportive; survey remains funded",
      type: "textarea"
    },
    {
      label: "Non-goals / boundaries (optional)",
      key: "non_goals",
      ph: "e.g., Not endorsing candidates; no clinical services",
      type: "textarea"
    },
    {
      label: "Context / notes (optional)",
      key: "ctx",
      ph: "Links, background, constraints.",
      type: "textarea"
    }
  ],
  template: ({
    title,
    horizon,
    owner,
    partners,
    ca_problem,
    ca_outcome,
    ca_targets,
    ca_principles,
    ca_toc,
    measures,
    data_governance,
    activities,
    coverage,
    comms,
    backbone_roles,
    governance,
    resources,
    risks,
    assumptions,
    non_goals,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`).join("\n");

    return [
      title && `Collective Impact: ${title}`,
      horizon && `Time horizon: ${horizon}`,
      owner && `Backbone: ${owner}`,
      partners && ("Partners:\n" + listify(partners)),
      ctx && `Context: ${ctx}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,

      "—",
      "COMMON AGENDA",
      ca_problem && `Problem: ${ca_problem}`,
      ca_outcome && `Desired long-term outcome: ${ca_outcome}`,
      ca_targets && `Target populations & places:\n${ca_targets}`,
      ca_principles && `Principles / decision rules:\n${ca_principles}`,
      ca_toc && `Theory of change (brief):\n${ca_toc}`,

      "—",
      "SHARED MEASUREMENT",
      measures ? listify(measures) : "(add 5–8 shared measures: label — baseline — target — data source — cadence — owner)",
      data_governance && `Data governance & equity:\n${data_governance}`,

      "—",
      "MUTUALLY REINFORCING ACTIVITIES",
      activities ? listify(activities) : "(list partner — activity — contribution — dependencies)",
      coverage && `Geography / coverage notes:\n${coverage}`,

      "—",
      "CONTINUOUS COMMUNICATION",
      comms || "(add cadence and channels)",

      "—",
      "BACKBONE & GOVERNANCE",
      backbone_roles && `Backbone roles:\n${backbone_roles}`,
      governance && `Governance structure:\n${governance}`,

      "—",
      "RESOURCING, RISKS, ASSUMPTIONS",
      resources && `Resources & budget:\n${resources}`,
      risks && `Risks & mitigations:\n${risks}`,
      assumptions && `Assumptions:\n${assumptions}`,
      non_goals && ["—", "NON-GOALS / BOUNDARIES", non_goals].join("\n"),

      "—",
      "Checklist:",
      "- [ ] One-page Common Agenda agreed by all partners",
      "- [ ] 5–8 shared measures with baselines/targets and owners",
      "- [ ] Visible scorecard and regular data cadence",
      "- [ ] Mutually reinforcing activities mapped with gaps/overlaps",
      "- [ ] Backbone roles funded and explicit",
      "- [ ] Continuous communication rituals scheduled",
      "- [ ] Governance defined with community voice represented"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "collective impact common agenda shared measurement backbone mutually reinforcing activities continuous communication governance equity scorecard template"
  }
},

{
  id: "north_star_metric",
  slug: "north-star-metric-and-narrative",
  label: "North Star Metric & Narrative",
  kind: "strategy",
  categories: [
    "planning",
    "alignment",
    "measurement",
    "community"
  ],
  tags: [
    "type:framework",
    "use:planning",
    "use:goals",
    "use:evaluation",
    "use:purpose",
    "use:metric",
     "use:mission",
     "use:vision",
    "use:prioritize",
    "phase:define",
    "phase:plan",
    "topic:community",
    "level:beginner"
  ],
  use_cases: [
    "choose one guiding metric that represents community value",
    "align workstreams on what actually moves the mission",
    "pair a single metric with a story that explains why it matters",
    "prevent Goodhart’s Law by defining guardrails and anti-metrics",
    "publish a clear baseline, target, and cadence",
      "pick one number that shows real progress",
  "keep the team focused on what matters most",
  "explain our main goal in one story and one metric",
  "stop chasing too many KPIs at once",
  "share a simple success measure with funders",
  "help volunteers see the bigger picture",
  "check if daily work connects to the mission",
  "set a baseline and track improvement",
  "create alignment across different projects",
  "make our goal easy to remember and repeat",
  "avoid vanity metrics that look good but mean little",
  "combine data with narrative to inspire people",
  "what is my north star",
  "finding a north star",
  "finding my long term vision",
  "aiming for the long term",
  "long term goals"
  ],
  boosters: [
    "Name one metric. If you have two, you don’t have a North Star.",
    "Write a plain-English definition and the exact formula, including units and inclusion rules.",
    "Disaggregate by equity-relevant segments; the worst-off group should visibly improve.",
    "List 3–7 leading indicators that causally move the NSM; retire those that don’t correlate.",
    "Add guardrail metrics (quality, equity, sustainability) and at least one anti-metric.",
    "Tell the narrative: why this metric matters to people, not just dashboards."
  ],
  definition: "A single, outcome-oriented metric that captures the core value you create for the community, paired with a short narrative explaining why it matters and how your work moves it.",
  help: "Fill the metric, formula, scope, baseline, target, owner, cadence, segments, leading indicators, guardrails, and the narrative. Keep the NSM human-centered and measurable.",
  fields: [
    {
      label: "Title (initiative / community)",
      key: "title",
      ph: "e.g., Eastside Belonging Initiative",
      type: "text"
    },
    {
      label: "North Star Metric (name)",
      key: "nsm_name",
      ph: "e.g., Belonging Index (avg 1–5)",
      type: "text"
    },
    {
      label: "Plain-English definition",
      key: "nsm_def",
      ph: "e.g., Average self-reported sense of belonging among residents (1–5 scale)",
      type: "textarea"
    },
    {
      label: "Formula (exact math, units, inclusion/exclusion rules)",
      key: "nsm_formula",
      ph: "e.g., mean(survey_q3_belonging) among residents 14+ who attended ≥1 forum in last 12 mo; exclude incomplete responses",
      type: "textarea"
    },
    {
      label: "Directionality",
      key: "direction",
      ph: "e.g., Higher is better",
      type: "text"
    },
    {
      label: "Scope (what counts / time window)",
      key: "scope",
      ph: "e.g., All neighborhoods; rolling 12 months; resident-facing activities only",
      type: "textarea"
    },
    {
      label: "Baseline",
      key: "baseline",
      ph: "e.g., 3.1 (Dec 2025)",
      type: "text"
    },
    {
      label: "Target",
      key: "target",
      ph: "e.g., 3.7 by Dec 2026",
      type: "text"
    },
    {
      label: "Owner",
      key: "owner",
      ph: "e.g., Community Council Steering Group",
      type: "text"
    },
    {
      label: "Cadence (update rhythm)",
      key: "cadence",
      ph: "e.g., Quarterly survey; monthly scorecard update",
      type: "text"
    },
    {
      label: "Data source(s)",
      key: "data_sources",
      ph: "e.g., Annual resident survey; forum sign-in; SenseMaker micro-narratives",
      type: "textarea"
    },
    {
      label: "Segments / disaggregation",
      desc: "Equity-relevant cuts you’ll monitor.",
      key: "segments",
      ph: "e.g., Neighborhood, age, language, disability, race/ethnicity",
      type: "textarea"
    },
    {
      label: "Leading indicators (inputs that move the NSM)",
      desc: "3–7 causal drivers.",
      key: "leading_indicators",
      ph: "e.g., % first-time speakers; # independent meetings started; facilitator:participant ratio",
      type: "textarea"
    },
    {
      label: "Guardrail metrics (quality, equity, sustainability)",
      key: "guardrails",
      ph: "e.g., Safety incidents = 0; burnout ≤10%; gap between highest/lowest subgroup ≤0.5",
      type: "textarea"
    },
    {
      label: "Anti-metrics (don’t optimize for these)",
      key: "antimetrics",
      ph: "e.g., Total attendance without parity; vanity social followers",
      type: "textarea"
    },
    {
      label: "Narrative — why this metric matters",
      desc: "Short story linking the metric to lived experience.",
      key: "narrative",
      ph: "e.g., When residents feel they belong, they show up for each other...",
      type: "textarea"
    },
    {
      label: "Causal chain — this metric moves because...",
      key: "causal_chain",
      ph: "e.g., If we train facilitators → more first-time speakers → richer ties → higher belonging",
      type: "textarea"
    },
    {
      label: "Assumptions",
      key: "assumptions",
      ph: "e.g., Survey is accessible; translation quality is high; safe spaces maintained",
      type: "textarea"
    },
    {
      label: "Risks & failure modes",
      key: "risks",
      ph: "e.g., Optimizing attendance crowds out marginalized voices; sampling bias",
      type: "textarea"
    },
    {
      label: "Related secondary metrics (optional)",
      key: "secondary_metrics",
      ph: "e.g., Network density; repeat attendance; MoUs signed",
      type: "textarea"
    },
    {
      label: "Dashboard / doc link (optional)",
      key: "link",
      ph: "URL",
      type: "text"
    },
    {
      label: "Context / notes (optional)",
      key: "ctx",
      ph: "Links, background, constraints.",
      type: "textarea"
    }
  ],
  template: ({
    title,
    nsm_name,
    nsm_def,
    nsm_formula,
    direction,
    scope,
    baseline,
    target,
    owner,
    cadence,
    data_sources,
    segments,
    leading_indicators,
    guardrails,
    antimetrics,
    narrative,
    causal_chain,
    assumptions,
    risks,
    secondary_metrics,
    link,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`).join("\n");

    return [
      title && `North Star Metric & Narrative: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context: ${ctx}`,

      "—",
      "NORTH STAR METRIC",
      nsm_name && `Name: ${nsm_name}`,
      nsm_def && `Definition: ${nsm_def}`,
      nsm_formula && `Formula: ${nsm_formula}`,
      direction && `Directionality: ${direction}`,
      scope && `Scope: ${scope}`,
      baseline && `Baseline: ${baseline}`,
      target && `Target: ${target}`,
      owner && `Owner: ${owner}`,
      cadence && `Cadence: ${cadence}`,
      data_sources && ["Data sources:", listify(data_sources)].join("\n"),
      segments && ["Segments / disaggregation:", listify(segments)].join("\n"),

      "—",
      "LEADING INDICATORS (drivers)",
      leading_indicators ? listify(leading_indicators) : "(add 3–7 drivers that causally move the NSM)",

      guardrails && ["—", "GUARDRAIL METRICS", listify(guardrails)].join("\n"),
      antimetrics && ["—", "ANTI-METRICS (avoid optimizing)", listify(antimetrics)].join("\n"),

      "—",
      "NARRATIVE — WHY THIS MATTERS",
      narrative || "(tell a short story linking the metric to lived experience and mission)",

      causal_chain && ["—", "CAUSAL CHAIN — THIS METRIC MOVES BECAUSE...", causal_chain].join("\n"),

      assumptions && ["—", "ASSUMPTIONS", listify(assumptions)].join("\n"),
      risks && ["—", "RISKS & FAILURE MODES", listify(risks)].join("\n"),
      secondary_metrics && ["—", "RELATED SECONDARY METRICS", listify(secondary_metrics)].join("\n"),
      link && `Dashboard: ${link}`,

      "—",
      "Checklist:",
      "- [ ] Exactly one NSM with clear formula and units",
      "- [ ] Baseline, target, cadence, and owner are explicit",
      "- [ ] Disaggregated segments tracked for equity",
      "- [ ] 3–7 leading indicators with plausible causal links",
      "- [ ] Guardrails and anti-metrics prevent perverse incentives",
      "- [ ] Narrative ties the metric to real community value"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "north star metric narrative single guiding metric causal chain leading indicators guardrails equity segments baseline target formula community template"
  }
},

{
  id: "systems_mapping_kumu",
  slug: "kumu-systems-mapping",
  label: "Kumu / Systems Mapping - Actors, Flows, Feedbacks",
  kind: "strategy",
  categories: [
    "planning",
    "analysis-frameworks",
    "systems",
    "community"
  ],
  tags: [
    "type:framework",
    "use:analysis",
    "use:mapping",
    "use:purpose",
    "use:alignment",
    "use:visualize",
    "use:decision-making",
    "phase:explore",
    "phase:define",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "visualize a community within its living system",
    "map actors, resources, incentives, and information flows",
    "identify feedback loops and delays that drive behavior",
    "find leverage points that move the purpose-aligned outcome",
    "align partners on boundaries, roles, and interventions",
     "see the whole system at a glance",
  "map who’s connected to who",
  "spot gaps and overlaps in the network",
  "understand how resources flow",
  "find where small changes could have big effects",
  "show relationships between problems and solutions",
  "make invisible dynamics visible",
  "clarify roles across organizations",
  "find bottlenecks or weak links",
  "tell the story of a complex system visually",
  "align different groups on the same picture",
  "identify unintended consequences early",
  "use a map to plan better interventions",
  "simplify complexity for stakeholders",
  "help me visualize a purpose",
  "finding purpose"
  ],
  boosters: [
    "Write a single focal question to keep the map honest.",
    "Define the system boundary first; list what is out of scope.",
    "Mark link polarity (+ increases, - decreases) and note delays.",
    "Separate stocks (levels) from flows (rates) when possible.",
    "Name common archetypes you spot (limits to growth, fixes that fail, tragedy of the commons).",
    "Close with 3 leverage bets and what you will measure."
  ],
  definition: "A method-agnostic way to visualize a purpose within a living system by mapping actors, stocks and flows, causal links, feedback loops, and delays to reveal leverage points.",
  help: "Fill in the focal question, boundary, actors, relationships, stocks/flows, loops, and leverage points. Use simple link syntax: FROM -> TO : label | polarity(+/-) | strength(1-5) | delay(y/n). Add a Kumu map link if you publish online.",
  fields: [
    {
      label: "Title (initiative / community)",
      key: "title",
      ph: "e.g., Eastside Belonging System Map",
      type: "text"
    },
    {
      label: "Focal question",
      key: "question",
      ph: "e.g., What most increases resident belonging across neighborhoods?",
      type: "text"
    },
    {
      label: "System boundary",
      desc: "What is in scope and what is out of scope.",
      key: "boundary",
      ph: "In scope: resident-led forums, public spaces, local orgs. Out of scope: national policy.",
      type: "textarea"
    },
    {
      label: "Purpose / desired outcome",
      key: "purpose",
      ph: "e.g., Higher sense of belonging with reduced disparities",
      type: "text"
    },
    {
      label: "Actors / nodes",
      autofill: "persona->inline",
      itemLabel: "actor",
      itemType: "typeahead",
      key: "actors",
      max: 40,
      ph: "e.g., Youth leaders; Library; Small businesses; Elders circle; City liaison; Newcomer groups",
      type: "repeater"
    },
    {
      label: "Stocks (levels) - optional",
      desc: "Accumulate over time.",
      key: "stocks",
      ph: "e.g., Social capital; trained facilitators; trust; available spaces",
      type: "textarea"
    },
    {
      label: "Flows (rates) - optional",
      desc: "Increase or decrease stocks.",
      key: "flows",
      ph: "e.g., Training rate; outreach rate; grant disbursement",
      type: "textarea"
    },
    {
      label: "Relationships / causal links (one per line)",
      desc: "Format: FROM -> TO : label | polarity(+/-) | strength(1-5) | delay(y/n)",
      key: "links",
      ph: "e.g., Trained facilitators -> First-time speakers : coaching | + | 4 | y\nFirst-time speakers -> Belonging index : voice matters | + | 5 | n\nSafety incidents -> Forum attendance : fear | - | 3 | n",
      type: "textarea"
    },
    {
      label: "Feedback loops - optional",
      desc: "Name loops and note type (reinforcing R or balancing B).",
      key: "loops",
      ph: "e.g., R1 Participation flywheel; B1 Burnout brake",
      type: "textarea"
    },
    {
      label: "Delays and friction - optional",
      key: "delays",
      ph: "e.g., Trust builds slowly; grant cycles lag impact by 6 months",
      type: "textarea"
    },
    {
      label: "Archetypes observed - optional",
      desc: "Classic system patterns you recognize.",
      key: "archetypes",
      ph: "e.g., Limits to growth (space capacity); Shifting the burden (over-reliance on a few leaders)",
      type: "textarea"
    },
    {
      label: "Leverage points (3 to 7)",
      desc: "Interventions with plausible high system impact.",
      key: "leverage",
      ph: "e.g., Train peer facilitators; micro-grants for independent meetups; public space MoUs",
      type: "textarea"
    },
    {
      label: "Candidate interventions",
      desc: "Projects or policies to test at the leverage points.",
      key: "interventions",
      ph: "e.g., Story circles program; youth-led outreach; safety and belonging code",
      type: "textarea"
    },
    {
      label: "Indicators to watch",
      desc: "Signals that your map and bets are right or wrong.",
      key: "indicators",
      ph: "e.g., % first-time speakers; network density; belonging index; incident reports",
      type: "textarea"
    },
    {
      label: "Assumptions and external factors",
      key: "assumptions",
      ph: "e.g., Stable space access; supportive city liaison; translation available",
      type: "textarea"
    },
    {
      label: "Kumu map URL - optional",
      key: "map_url",
      ph: "https://kumu.io/your-project/your-map",
      type: "text"
    },
    {
      label: "Context / notes - optional",
      key: "ctx",
      ph: "Links, sources, scoping notes",
      type: "textarea"
    }
  ],
  template: ({
    title,
    question,
    boundary,
    purpose,
    actors,
    stocks,
    flows,
    links,
    loops,
    delays,
    archetypes,
    leverage,
    interventions,
    indicators,
    assumptions,
    map_url,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`).join("\n");

    return [
      title && `Systems Mapping: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context: ${ctx}`,

      "FOCAL QUESTION",
      question || "(add a single guiding question)",

      "SYSTEM BOUNDARY",
      boundary || "(define what is in scope and out of scope)",

      "PURPOSE / DESIRED OUTCOME",
      purpose || "(state the outcome you care about)",

      actors && ["ACTORS / NODES", listify(actors)].join("\n"),

      stocks && ["STOCKS (levels)", listify(stocks)].join("\n"),
      flows && ["FLOWS (rates)", listify(flows)].join("\n"),

      "RELATIONSHIPS / CAUSAL LINKS",
      links ? listify(links) : "(add links as FROM -> TO : label | polarity(+/-) | strength(1-5) | delay(y/n))",

      loops && ["FEEDBACK LOOPS", listify(loops)].join("\n"),
      delays && ["DELAYS AND FRICTION", listify(delays)].join("\n"),
      archetypes && ["ARCHETYPES OBSERVED", listify(archetypes)].join("\n"),

      "LEVERAGE POINTS",
      leverage ? listify(leverage) : "(list 3 to 7 leverage points)",

      interventions && ["CANDIDATE INTERVENTIONS", listify(interventions)].join("\n"),

      indicators && ["INDICATORS TO WATCH", listify(indicators)].join("\n"),
      assumptions && ["ASSUMPTIONS AND EXTERNAL FACTORS", listify(assumptions)].join("\n"),
      map_url && `Kumu map: ${map_url}`,

      "Checklist:",
      "- [ ] Boundary is explicit and agreed",
      "- [ ] Links have polarity and note delays where relevant",
      "- [ ] At least one reinforcing and one balancing loop identified",
      "- [ ] Stocks and flows are separated where useful",
      "- [ ] 3 to 7 leverage points named with testable interventions",
      "- [ ] Indicators chosen to validate or falsify the bets"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "kumu systems mapping actors flows feedback loops delays leverage points causal links community purpose boundary indicators template"
  }
},

{
  id: "arnsteins_ladder",
  slug: "arnsteins-ladder-of-participation",
  label: "Arnstein’s Ladder of Participation — From Tokenism to Citizen Control",
  kind: "strategy",
  categories: [
    "planning",
    "alignment",
    "governance",
    "community"
  ],
  tags: [
    "type:framework",
    "use:alignment",
    "use:governance",
    "use:power",
     "use:influence",
    "use:ethics",
    "use:planning",
    "phase:define",
    "phase:plan",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "assess current community power in decisions",
    "set a target rung and define concrete power shifts",
    "move engagement from informing/consultation to partnership/delegated power",
    "document accountability and shared decision rights",
    "track equity in who holds voice and authority",
     "check if our community input is just tokenism",
  "see how much real power people have",
  "decide how to share decision-making fairly",
  "move from consultation to partnership",
  "give the community more control over outcomes",
  "compare our engagement level to the ladder",
  "make participation more than a checkbox",
  "track progress in shifting power",
  "plan steps toward shared governance",
  "show funders how we empower the community",
  "spot gaps between promises and real influence",
  "design a process that builds citizen power",
  "how do I gain influence",
  "do I have influence"
  ],
  boosters: [
    "Name a specific decision or domain (budget, space, policy) rather than 'community engagement' in general.",
    "Use observable evidence for your current rung (not vibes). Link to agendas, sign-ins, decision logs.",
    "Make the target rung time-bound and scoped; moving one rung can be a big win.",
    "Translate target rung into explicit decision rights and money/time shifts.",
    "Pair with IAP2 Spectrum for tactics; use Ladder for power clarity.",
    "Publish a simple accountability table: who decides, who can veto, who can appeal."
  ],
  definition: "A diagnostic and planning scaffold to locate your current level of community power (rungs 1–8) and plan concrete shifts toward shared or community-controlled decisions.",
  help: "Fill in the decision scope, stakeholders, evidence for the current rung, the target rung, and the specific power shifts, methods, and accountability you will implement. Use the workstreams lines to rate multiple areas.",
  fields: [
    {
      label: "Title (initiative / community)",
      key: "title",
      ph: "e.g., Eastside Forums Decision Power Plan",
      type: "text"
    },
    {
      label: "Decision scope (what decisions are we talking about?)",
      key: "decision_scope",
      ph: "e.g., Monthly forum agenda & facilitation; micro-grant selection; space rules",
      type: "textarea"
    },
    {
      label: "Stakeholders (who is affected / must be heard)",
      autofill: "persona->inline",
      itemLabel: "stakeholder",
      itemType: "typeahead",
      key: "stakeholders",
      max: 20,
      ph: "e.g., Youth leaders; elders circle; library staff; small biz owners; newcomers",
      type: "repeater"
    },
    {
      label: "Current rung (1–8 or label)",
      key: "current_rung",
      ph: "e.g., 4 Consultation (surveys, comment periods)",
      type: "text"
    },
    {
      label: "Evidence for current rung",
      key: "current_evidence",
      ph: "e.g., We inform via newsletters; surveys collected but decisions made internally",
      type: "textarea"
    },
    {
      label: "Harms / tokenism risks observed (optional)",
      key: "harms",
      ph: "e.g., Repeated invitations without follow-through; translation gaps; weekday-only meetings",
      type: "textarea"
    },
    {
      label: "Target rung (1–8 or label) with timeframe",
      key: "target_rung",
      ph: "e.g., 6 Partnership by Q4 2026",
      type: "text"
    },
    {
      label: "Power shifts (decision rights, resources, vetoes)",
      desc: "State concretely what changes: who decides, who can veto, what budget/time moves.",
      key: "power_shifts",
      ph: "e.g., Community co-chairs set agendas; 30% budget under resident committee; community veto on agenda changes",
      type: "textarea"
    },
    {
      label: "Engagement methods (current → planned)",
      key: "methods",
      ph: "e.g., Current: newsletters, surveys → Planned: co-design labs, resident co-facilitation, participatory budgeting",
      type: "textarea"
    },
    {
      label: "Accountability & transparency mechanisms",
      key: "accountability",
      ph: "e.g., Public decision logs; appeal process; quarterly open retros; publish who decided and why",
      type: "textarea"
    },
    {
      label: "Equity & inclusion (whose voice is centered; access supports)",
      key: "equity",
      ph: "e.g., Stipends; childcare; language access; ADA access; rotating meeting times; affinity voices prioritized",
      type: "textarea"
    },
    {
      label: "Measures of voice & power",
      desc: "Track participation AND decision influence.",
      key: "measures",
      ph: "e.g., % agenda items proposed by residents; % decisions finalized by resident body; disaggregated attendance; veto usage",
      type: "textarea"
    },
    {
      label: "Workstreams (one per line: area — current rung → target rung — actions)",
      key: "workstreams",
      ph: "e.g., Micro-grants — 5 Placation → 7 Delegated Power — resident panel control with clear criteria\nForums — 3 Informing → 6 Partnership — co-chairs rotate; agenda set by resident council",
      type: "textarea"
    },
    {
      label: "Risks & mitigations",
      key: "risks",
      ph: "e.g., Burnout → rotate roles; capture by a clique → term limits; conflicts → restorative circles",
      type: "textarea"
    },
    {
      label: "Timeline & cadence",
      key: "timeline",
      ph: "e.g., Pilot partnership Q1–Q2; formalize delegated power Q3; public review quarterly",
      type: "text"
    },
    {
      label: "Non-goals / boundaries (optional)",
      key: "non_goals",
      ph: "e.g., We don’t police speech beyond code-of-conduct; we don’t endorse candidates",
      type: "textarea"
    },
    {
      label: "Context / notes (optional)",
      key: "ctx",
      ph: "Links, background, constraints.",
      type: "textarea"
    }
  ],
  template: ({
    title,
    decision_scope,
    stakeholders,
    current_rung,
    current_evidence,
    harms,
    target_rung,
    power_shifts,
    methods,
    accountability,
    equity,
    measures,
    workstreams,
    risks,
    timeline,
    non_goals,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`).join("\n");

    const ladderCheat = [
      "1 Manipulation — non-participation",
      "2 Therapy — non-participation framed as help",
      "3 Informing — one-way information",
      "4 Consultation — ask but don’t share power",
      "5 Placation — advise with limited influence",
      "6 Partnership — shared planning & decisions",
      "7 Delegated Power — community holds authority",
      "8 Citizen Control — community governs"
    ].join("\n");

    return [
      title && `Arnstein’s Ladder: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context: ${ctx}`,

      "—",
      "DECISION SCOPE",
      decision_scope || "(name the specific decisions/domains covered)",

      stakeholders && ["—", "STAKEHOLDERS", listify(stakeholders)].join("\n"),

      "—",
      "LADDER CHEAT-SHEET",
      ladderCheat,

      "—",
      "CURRENT RUNG",
      current_rung || "(add 1–8 or label)",
      current_evidence && `Evidence:\n${current_evidence}`,
      harms && `Harms / tokenism risks:\n${harms}`,

      "—",
      "TARGET RUNG & POWER SHIFTS",
      target_rung || "(add 1–8 or label + timeframe)",
      power_shifts ? `Power shifts:\n${power_shifts}` : "(define concrete decision rights, resources, vetoes)",

      "—",
      "ENGAGEMENT METHODS",
      methods || "(list current → planned methods)",

      "—",
      "ACCOUNTABILITY & TRANSPARENCY",
      accountability || "(add decision logs, appeal routes, public retros, etc.)",

      "—",
      "EQUITY & INCLUSION",
      equity || "(state supports for access and whose voices are centered)",

      "—",
      "MEASURES OF VOICE & POWER",
      measures ? listify(measures) : "(e.g., % resident-originated agenda items; % decisions finalized by residents; veto use)",

      workstreams && ["—", "WORKSTREAMS (area — current → target — actions)", listify(workstreams)].join("\n"),

      risks && ["—", "RISKS & MITIGATIONS", risks].join("\n"),
      timeline && ["—", "TIMELINE & CADENCE", timeline].join("\n"),
      non_goals && ["—", "NON-GOALS / BOUNDARIES", non_goals].join("\n"),

      "—",
      "Checklist:",
      "- [ ] Specific decision scope named",
      "- [ ] Current rung evidenced with artifacts",
      "- [ ] Target rung time-bound and realistic",
      "- [ ] Concrete power shifts (decision rights, budget, veto)",
      "- [ ] Accountability and transparency codified",
      "- [ ] Equity supports and metrics defined"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "arnstein ladder participation manipulation therapy informing consultation placation partnership delegated power citizen control decision rights accountability equity template"
  }
},

{
  id: "iap2_spectrum",
  slug: "iap2-spectrum-of-public-participation",
  label: "IAP2 Spectrum of Public Participation — Inform → Consult → Involve → Collaborate → Empower",
  kind: "strategy",
  categories: [
    "planning",
    "alignment",
    "governance",
    "community"
  ],
  tags: [
    "type:framework",
    "use:alignment",
    "use:governance",
    "use:planning",
    "use:trust",
    "use:engagement",
    "phase:define",
    "phase:plan",
    "topic:community",
    "level:beginner"
  ],
  use_cases: [
    "choose the right level of public participation for a decision",
    "make explicit promises to the public about influence",
    "plan engagement methods matched to the chosen level",
    "set feedback standards and response times",
    "track whether input changed the decision",
      "decide if we’re just informing or really empowering",
  "explain clearly how much influence people have",
  "match tools to the right engagement level",
  "make sure public input isn’t wasted",
  "choose between consult vs collaborate",
  "show the community how their input shaped outcomes",
  "avoid overpromising on participation",
  "plan different levels for different stakeholders",
  "check if our process builds trust",
  "set clear expectations for engagement"
  ],
  boosters: [
    "Pick one primary Spectrum level per decision; mixing is fine across different workstreams.",
    "Write your promise in plain language and publish how you’ll report back.",
    "Timebox: show when input is still influential vs when decisions are fixed.",
    "Match methods to level; don’t call something 'Empower' without actual authority transfer.",
    "Disaggregate participation and influence metrics for equity.",
    "Close the loop publicly: what you heard, what changed, what didn’t, and why."
  ],
  definition: "A planning scaffold to choose a public participation level (Inform, Consult, Involve, Collaborate, Empower), match methods to that level, state the promise about influence, and measure participation and impact on decisions.",
  help: "Fill the decision scope, stakeholders, selected level, promise, methods by level, feedback standards, and measures. Use workstreams to map multiple areas with different levels.",
  fields: [
    {
      label: "Title (initiative / decision)",
      key: "title",
      ph: "e.g., Eastside Forums: 2026 Agenda Setting",
      type: "text"
    },
    {
      label: "Decision scope (what decisions are in play?)",
      key: "decision_scope",
      ph: "e.g., Monthly forum topics; facilitation model; micro-grant criteria",
      type: "textarea"
    },
    {
      label: "Decision-maker(s)",
      key: "decision_makers",
      ph: "e.g., Community Council Steering Group; Resident Panel",
      type: "text"
    },
    {
      label: "Stakeholders (who is affected / must be heard)",
      autofill: "persona->inline",
      itemLabel: "stakeholder",
      itemType: "typeahead",
      key: "stakeholders",
      max: 20,
      ph: "e.g., Youth leaders; elders circle; library staff; small biz owners; newcomers",
      type: "repeater"
    },
    {
      label: "Timeline (when input is influential)",
      key: "timeline",
      ph: "e.g., Draft options Mar–Apr; public input May; decision in June",
      type: "text"
    },
    {
      label: "Selected Spectrum level (primary)",
      key: "spectrum_level",
      ph: "Inform | Consult | Involve | Collaborate | Empower",
      type: "text"
    },
    {
      label: "Promise to the public (plain language)",
      desc: "State how input will influence the decision at the selected level.",
      key: "promise",
      ph: "e.g., We will work with you so your concerns are reflected in the preferred option…",
      type: "textarea"
    },

    // Methods by level
    {
      label: "Methods — INFORM",
      key: "methods_inform",
      ph: "e.g., Fact sheets; web updates; signage; multilingual briefs; SMS alerts",
      type: "textarea"
    },
    {
      label: "Methods — CONSULT",
      key: "methods_consult",
      ph: "e.g., Surveys; comment periods; office hours; hearings with feedback log",
      type: "textarea"
    },
    {
      label: "Methods — INVOLVE",
      key: "methods_involve",
      ph: "e.g., Workshops; world cafés; co-design clinics; deliberative small groups",
      type: "textarea"
    },
    {
      label: "Methods — COLLABORATE",
      key: "methods_collaborate",
      ph: "e.g., Working groups; joint drafting; MOUs on roles; shared data rooms",
      type: "textarea"
    },
    {
      label: "Methods — EMPOWER",
      key: "methods_empower",
      ph: "e.g., Participatory budgeting; binding votes; resident-led panels with authority",
      type: "textarea"
    },

    // Standards & equity
    {
      label: "Feedback standards & response time",
      key: "feedback_standards",
      ph: "e.g., Publish 'What we heard / What we changed' within 30 days; individual replies in 5 business days",
      type: "textarea"
    },
    {
      label: "Transparency & documentation",
      key: "transparency",
      ph: "e.g., Public decision log; comment repository; open meeting notes; translation availability",
      type: "textarea"
    },
    {
      label: "Equity & access supports",
      key: "equity",
      ph: "e.g., Stipends; childcare; language access; ADA; rotating times; affinity breakouts",
      type: "textarea"
    },

    // Measures
    {
      label: "Measures — participation & influence",
      desc: "One per line; include targets where possible.",
      key: "measures",
      ph: "e.g., Attendance by subgroup; % first-time participants; % agenda items changed due to input; time-to-response",
      type: "textarea"
    },

    // Multi-area mapping
    {
      label: "Workstreams (area — current level → target level — methods — promise — feedback SLA)",
      key: "workstreams",
      ph: "e.g., Agenda setting — Consult → Involve — co-design clinics — your input shapes the final options — 30-day report-back",
      type: "textarea"
    },

    // Risks etc.
    {
      label: "Risks & mitigations",
      key: "risks",
      ph: "e.g., Tokenism risk → publish decision log; fatigue → rotate formats; dominance → facilitation norms",
      type: "textarea"
    },
    {
      label: "Non-goals / boundaries (optional)",
      key: "non_goals",
      ph: "e.g., We are not deciding facility closures in this process",
      type: "textarea"
    },
    {
      label: "Context / notes (optional)",
      key: "ctx",
      ph: "Links, background, constraints.",
      type: "textarea"
    }
  ],
  template: ({
    title,
    decision_scope,
    decision_makers,
    stakeholders,
    timeline,
    spectrum_level,
    promise,
    methods_inform,
    methods_consult,
    methods_involve,
    methods_collaborate,
    methods_empower,
    feedback_standards,
    transparency,
    equity,
    measures,
    workstreams,
    risks,
    non_goals,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`).join("\n");

    const promises = {
      Inform: "We will keep people informed with timely, clear information.",
      Consult: "We will ask for input and report back how it influenced options and decisions.",
      Involve: "We will work directly with people so their concerns are reflected in the preferred solution.",
      Collaborate: "We will co-create options and incorporate advice to the greatest extent feasible.",
      Empower: "We will place final decision-making in the hands of the community."
    };

    const chosen = (spectrum_level || "").trim();
    const defaultPromise = promises[chosen] || "";

    return [
      title && `IAP2 Spectrum Plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context: ${ctx}`,

      "—",
      "DECISION SCOPE",
      decision_scope || "(name the specific decisions covered)",
      decision_makers && `Decision-maker(s): ${decision_makers}`,
      timeline && `Timeline: ${timeline}`,

      "—",
      "SELECTED LEVEL",
      chosen || "(choose one: Inform | Consult | Involve | Collaborate | Empower)",
      (promise || defaultPromise) && `Promise to the public:\n${promise || defaultPromise}`,

      "—",
      "METHODS BY LEVEL",
      methods_inform && ["INFORM", listify(methods_inform)].join("\n"),
      methods_consult && ["CONSULT", listify(methods_consult)].join("\n"),
      methods_involve && ["INVOLVE", listify(methods_involve)].join("\n"),
      methods_collaborate && ["COLLABORATE", listify(methods_collaborate)].join("\n"),
      methods_empower && ["EMPOWER", listify(methods_empower)].join("\n"),

      "—",
      "FEEDBACK & TRANSPARENCY",
      feedback_standards && ["Feedback standards & response time", feedback_standards].join("\n"),
      transparency && ["Transparency & documentation", transparency].join("\n"),

      "—",
      "EQUITY & ACCESS SUPPORTS",
      equity || "(state supports and whose voices are centered)",

      "—",
      "MEASURES — PARTICIPATION & INFLUENCE",
      measures ? listify(measures) : "(add metrics and targets)",

      workstreams && ["—", "WORKSTREAMS", listify(workstreams)].join("\n"),

      risks && ["—", "RISKS & MITIGATIONS", risks].join("\n"),
      non_goals && ["—", "NON-GOALS / BOUNDARIES", non_goals].join("\n"),

      "—",
      "Spectrum cheat-sheet:",
      "Inform — share information",
      "Consult — gather input & report back",
      "Involve — incorporate concerns in solutions",
      "Collaborate — co-create and share decisions",
      "Empower — delegate final authority to the public",

      "—",
      "Checklist:",
      "- [ ] Level chosen per decision and published with a clear promise",
      "- [ ] Methods match the level and are accessible",
      "- [ ] Feedback standards (report-backs, response times) are explicit",
      "- [ ] Equity supports budgeted and in place",
      "- [ ] Measures track both participation and influence",
      "- [ ] Public close-the-loop report planned"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "iap2 spectrum inform consult involve collaborate empower promise to the public engagement methods feedback standards equity measures template"
  }
},

{
  id: "engagement_to_ownership_spectrum",
  slug: "spectrum-community-engagement-to-ownership",
  label: "Spectrum of Community Engagement to Ownership — Concrete Power-Shifting Practices",
  kind: "strategy",
  categories: [
    "planning",
    "alignment",
    "governance",
    "equity",
    "community"
  ],
  tags: [
    "type:framework",
    "use:alignment",
    "use:governance",
     "use:leading",
    "use:planning",
    "use:engagement",
    "use:power-shift",
    "phase:define",
    "phase:plan",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "diagnose current engagement level and name power imbalances",
    "set a target level (toward ownership) for each decision domain",
    "choose concrete practices that transfer authority, budget, and data",
    "plan capacity-building and compensation that enable ownership",
    "track power transfer with measurable indicators over time",
      "see if our process really shifts power or just engages",
  "check who controls budget, data, and decisions",
  "plan how to move from engagement to ownership",
  "design ways for community to hold authority",
  "make participation less symbolic and more real",
  "compensate community members for leadership",
  "track progress in sharing power over time",
  "set up structures for community-led governance",
  "show funders how ownership is being built",
  "balance organizational role with community authority",
  "map where we are vs where we want to be on the spectrum",
  "design fair pathways for communities to lead",
    "how to lead",
     "finding leadership"
  ],
  boosters: [
    "Map specific decision domains (budget, agenda, staffing, data) rather than discussing engagement in general.",
    "Publish plain-language 'promises' at each level; avoid empowerment theater.",
    "Attach budget control, decision rights, and data governance to the target level.",
    "Pay people for their labor; fund accessibility supports up front.",
    "Pair level shifts with capacity-building so ownership is sustainable.",
    "Measure influence, not just attendance; disaggregate by equity-relevant groups."
  ],
  definition: "A planning scaffold (inspired by Facilitating Power) to move from low-influence engagement toward community ownership by selecting concrete practices that transfer decision rights, budget control, and data governance to the community.",
  help: "Pick a decision scope, log your current level, choose a time-bound target level, and select concrete practices (decision rights, budget, data, leadership, accountability, access, compensation, capacity). Map multiple workstreams if different areas need different levels.",
  fields: [
    {
      label: "Title (initiative / decision space)",
      key: "title",
      ph: "e.g., Eastside Forums — From Engagement to Ownership",
      type: "text"
    },
    {
      label: "Decision scope (what decisions are in play?)",
      key: "decision_scope",
      ph: "e.g., Forum agenda; micro-grant awards; space management; data reporting",
      type: "textarea"
    },
    {
      label: "Time horizon",
      key: "horizon",
      ph: "e.g., Jan–Dec 2026",
      type: "text"
    },
    {
      label: "Facilitating organization (owner)",
      key: "owner",
      ph: "e.g., Community Council (facilitator/backbone)",
      type: "text"
    },
    {
      label: "Stakeholders / community groups",
      autofill: "persona->inline",
      itemLabel: "group",
      itemType: "typeahead",
      key: "stakeholders",
      max: 20,
      ph: "e.g., Youth leaders; elders circle; newcomer groups; small biz association",
      type: "repeater"
    },

    // Levels
    {
      label: "Current level (primary)",
      key: "current_level",
      ph: "Outreach | Consult | Involve | Collaborate | Defer to | Community-Owned",
      type: "text"
    },
    {
      label: "Evidence for current level",
      key: "current_evidence",
      ph: "e.g., We survey but staff make final decisions; no budget delegated; data not shared",
      type: "textarea"
    },
    {
      label: "Target level (with timeframe)",
      key: "target_level",
      ph: "e.g., Defer to by Q3 2026; Community-Owned by 2027",
      type: "text"
    },
    {
      label: "Promise to the community (plain language)",
      key: "promise",
      ph: "e.g., 'By Q3, resident panel will make the final decision on micro-grants.'",
      type: "textarea"
    },

    // Concrete power-shifting practices
    {
      label: "Decision rights (who decides, who can veto)",
      key: "decision_rights",
      ph: "e.g., Resident panel has final say on agenda; community veto on rule changes",
      type: "textarea"
    },
    {
      label: "Budget control (% and process)",
      key: "budget_control",
      ph: "e.g., 35% of program budget under resident committee with transparent criteria",
      type: "textarea"
    },
    {
      label: "Data governance & access",
      key: "data_governance",
      ph: "e.g., Community IRB; shared repository; disaggregated dashboards; OCAP/CARE-aligned",
      type: "textarea"
    },
    {
      label: "Leadership & staffing (roles, hiring, terms)",
      key: "leadership",
      ph: "e.g., Co-chairs from resident body; term limits; paid community coordinator",
      type: "textarea"
    },
    {
      label: "Accountability & transparency",
      key: "accountability",
      ph: "e.g., Public decision logs; appeal routes; quarterly open retros; who decided & why",
      type: "textarea"
    },
    {
      label: "Compensation & access supports",
      key: "compensation",
      ph: "e.g., Stipends; childcare; transportation; language/ASL; remote options; food",
      type: "textarea"
    },
    {
      label: "Capacity-building (to sustain ownership)",
      key: "capacity",
      ph: "e.g., Facilitation training; grantmaking 101; governance coaching; peer mentoring",
      type: "textarea"
    },
    {
      label: "Space & infrastructure",
      key: "infrastructure",
      ph: "e.g., MoU for community-managed space; equipment budget; tech support",
      type: "textarea"
    },

    // Methods by level (menu to choose from)
    {
      label: "Methods — OUTREACH (inform)",
      key: "methods_outreach",
      ph: "e.g., Multilingual briefs; SMS updates; info sessions",
      type: "textarea"
    },
    {
      label: "Methods — CONSULT (input)",
      key: "methods_consult",
      ph: "e.g., Surveys; comment periods; office hours; report-back posts",
      type: "textarea"
    },
    {
      label: "Methods — INVOLVE (co-shape)",
      key: "methods_involve",
      ph: "e.g., Workshops; world café; scenario testing with feedback loops",
      type: "textarea"
    },
    {
      label: "Methods — COLLABORATE (shared work)",
      key: "methods_collaborate",
      ph: "e.g., Working groups; joint drafting; shared data rooms; co-facilitation",
      type: "textarea"
    },
    {
      label: "Methods — DEFER TO (community decides)",
      key: "methods_defer",
      ph: "e.g., Binding resident panel decisions; community-led standards; delegated authority",
      type: "textarea"
    },
    {
      label: "Methods — COMMUNITY-OWNED (governance & assets)",
      key: "methods_owned",
      ph: "e.g., Community-owned org; participatory budgeting; community data trust",
      type: "textarea"
    },

    // Measures
    {
      label: "Measures of power shift",
      desc: "One per line; include targets if possible.",
      key: "measures",
      ph: "e.g., % budget under community control; % decisions finalized by resident body; # community-held roles; time-to-report-back ≤30 days",
      type: "textarea"
    },

    // Multi-area mapping
    {
      label: "Workstreams (area — current → target — practices — promise — SLA)",
      key: "workstreams",
      ph: "e.g., Micro-grants — Consult → Defer to — resident panel control; budget delegation — 'final say by Q3' — 30-day report-back",
      type: "textarea"
    },

    // Risks etc.
    {
      label: "Risks & mitigations",
      key: "risks",
      ph: "e.g., Clique capture → term limits; burnout → role rotation; conflict → restorative circles",
      type: "textarea"
    },
    {
      label: "Non-goals / boundaries (optional)",
      key: "non_goals",
      ph: "e.g., We do not police private speech; we do not endorse candidates",
      type: "textarea"
    },
    {
      label: "Context / notes (optional)",
      key: "ctx",
      ph: "Links, background, constraints",
      type: "textarea"
    }
  ],
  template: ({
    title,
    decision_scope,
    horizon,
    owner,
    stakeholders,
    current_level,
    current_evidence,
    target_level,
    promise,
    decision_rights,
    budget_control,
    data_governance,
    leadership,
    accountability,
    compensation,
    capacity,
    infrastructure,
    methods_outreach,
    methods_consult,
    methods_involve,
    methods_collaborate,
    methods_defer,
    methods_owned,
    measures,
    workstreams,
    risks,
    non_goals,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`).join("\n");

    const spectrumCheat = [
      "Outreach — inform people about decisions",
      "Consult — gather input and report back",
      "Involve — co-shape options and solutions",
      "Collaborate — share work and draft together",
      "Defer to — community holds final say for this scope",
      "Community-Owned — community governs assets & decisions"
    ].join("\n");

    return [
      title && `Engagement → Ownership Plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context: ${ctx}`,

      "—",
      "DECISION SCOPE",
      decision_scope || "(name the decisions/domains covered)",
      horizon && `Time horizon: ${horizon}`,
      owner && `Facilitating org: ${owner}`,
      stakeholders && ["Stakeholders / community groups:", listify(stakeholders)].join("\n"),

      "—",
      "SPECTRUM CHEAT-SHEET",
      spectrumCheat,

      "—",
      "CURRENT → TARGET LEVEL",
      current_level ? `Current: ${current_level}` : "(add current level)",
      current_evidence && `Evidence:\n${current_evidence}`,
      target_level ? `Target: ${target_level}` : "(add target level + timeframe)",
      promise && `Promise: ${promise}`,

      "—",
      "CONCRETE POWER-SHIFTING PRACTICES",
      decision_rights && `Decision rights:\n${decision_rights}`,
      budget_control && `Budget control:\n${budget_control}`,
      data_governance && `Data governance & access:\n${data_governance}`,
      leadership && `Leadership & staffing:\n${leadership}`,
      accountability && `Accountability & transparency:\n${accountability}`,
      compensation && `Compensation & access supports:\n${compensation}`,
      capacity && `Capacity-building:\n${capacity}`,
      infrastructure && `Space & infrastructure:\n${infrastructure}`,

      "—",
      "METHODS MENU BY LEVEL",
      methods_outreach && ["OUTREACH", listify(methods_outreach)].join("\n"),
      methods_consult && ["CONSULT", listify(methods_consult)].join("\n"),
      methods_involve && ["INVOLVE", listify(methods_involve)].join("\n"),
      methods_collaborate && ["COLLABORATE", listify(methods_collaborate)].join("\n"),
      methods_defer && ["DEFER TO", listify(methods_defer)].join("\n"),
      methods_owned && ["COMMUNITY-OWNED", listify(methods_owned)].join("\n"),

      "—",
      "MEASURES OF POWER SHIFT",
      measures ? listify(measures) : "(add influence-focused metrics and targets)",

      workstreams && ["—", "WORKSTREAMS (area — current → target — practices — promise — SLA)", listify(workstreams)].join("\n"),

      risks && ["—", "RISKS & MITIGATIONS", risks].join("\n"),
      non_goals && ["—", "NON-GOALS / BOUNDARIES", non_goals].join("\n"),

      "—",
      "Checklist:",
      "- [ ] Decision scope and target level are public and time-bound",
      "- [ ] Decision rights, budget %, and data governance shift to community",
      "- [ ] Compensation and access supports funded",
      "- [ ] Capacity-building plan tied to target level",
      "- [ ] Influence metrics (not just attendance) tracked and disaggregated",
      "- [ ] Close-the-loop report cadence published"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "spectrum of community engagement to ownership facilitating power outreach consult involve collaborate defer to community-owned decision rights budget control data governance compensation capacity template"
  }
},

{
  id: "design_justice_principles",
  slug: "design-justice-principles",
  label: "Design Justice Principles — Center those most affected; redistribute design power",
  kind: "strategy",
  categories: [
    "planning",
    "ethics",
    "governance",
    "community",
    "design"
  ],
  tags: [
    "type:framework",
    "use:ethics",
    "use:alignment",
    "use:justice",
     "use:morals",
     "use:power",
    "use:planning",
    "use:governance",
    "use:engagement",
    "phase:define",
    "phase:plan",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "shift decision power and ownership toward those most affected",
    "co-lead design with community knowledge holders",
    "prevent extractive research and harmful implementation",
    "embed accessibility, disability justice, and language access",
    "establish accountability, consent, and repair mechanisms",
    "center people most affected in every design decision",
    "move from consultation to community leadership and ownership",
    "audit harms and redistribute resources, roles, and data power",
    "codify accountability, consent, and data sovereignty",
    "track equity outcomes and decision influence over time",
     "design with the community, not just for them",
  "check if those most affected have real decision power",
  "make sure benefits flow back to the community",
  "avoid research that just extracts stories or data",
  "share design credit and ownership fairly",
  "design processes that repair past harms",
  "embed equity and accessibility from the start",
  "make space for marginalized voices to lead",
  "redistribute budget and resources to community partners",
  "audit who holds power in the design process",
  "create consent-based methods for data use",
  "measure if our design outcomes are equitable",
  "how do I apply justice",
  "what does justice look like"
  ],
  boosters: [
    "Name specific communities and co-leads from those communities; compensate them at fair rates.",
    "Publish plain-language decision rights, budget shares, data governance, and consent processes.",
    "Co-create access plans (childcare, stipends, transport, language/ASL, remote options, sensory needs).",
    "Adopt data sovereignty practices (e.g., OCAP/CARE-aligned) and community review before release.",
    "Document history of harms and name anti-extractive practices and repair commitments.",
    "Credit and share ownership (IP, authorship, revenue) with community partners."
  ],
  definition: "A practical scaffold to apply Design Justice: centering those most affected, redistributing power and resources, preventing extraction, and ensuring accountability throughout research, design, and delivery.",
  help: "Fill decision scope, affected groups, community co-leads, power shifts, consent and data governance, access supports, accountability and repair, and equity measures. Use the principles menu to select or paraphrase which principles you are operationalizing.",
  fields: [
    {
      label: "Title (initiative / product / service)",
      key: "title",
      ph: "e.g., Eastside Forum Redesign",
      type: "text"
    },
    {
      label: "Decision scope (what choices this plan covers)",
      key: "decision_scope",
      ph: "e.g., Research plan, facilitation model, data policy, feature roadmap",
      type: "textarea"
    },
    {
      label: "Affected groups (centered communities)",
      autofill: "persona->inline",
      itemLabel: "group",
      itemType: "typeahead",
      key: "affected_groups",
      max: 24,
      ph: "e.g., Newcomers; youth; elders; disabled residents; non-dominant language speakers",
      type: "repeater"
    },
    {
      label: "Community co-leads (roles & orgs)",
      key: "co_leads",
      ph: "e.g., Resident co-chair; Youth council liaison; Elders circle representative",
      type: "textarea"
    },
    {
      label: "Principles we will operationalize (one per line)",
      desc: "Paraphrase or select the items you’ll put into practice.",
      key: "principles",
      ph: "e.g., Center those most affected; Share power & ownership; Prevent extraction; Ensure access; Data sovereignty; Consent & transparency; Credit & compensation; Build capacity; Account for harms & repair; Design for regenerative futures",
      type: "textarea"
    },
    {
      label: "Power shifts (decision rights, vetoes, budget, ownership)",
      key: "power_shifts",
      ph: "e.g., Resident panel final say on agenda; 35% budget delegated; co-ownership of IP; community veto on policy changes",
      type: "textarea"
    },
    {
      label: "Compensation & contracts",
      key: "compensation",
      ph: "e.g., Stipends; hourly rates; fiscal sponsorship; prompt payment terms",
      type: "textarea"
    },
    {
      label: "Accessibility & language access",
      key: "access",
      ph: "e.g., ADA/Universal Design; interpreters; translated materials; childcare; transportation; hybrid formats",
      type: "textarea"
    },
    {
      label: "Consent & privacy (informed, ongoing, revocable)",
      key: "consent",
      ph: "e.g., Plain-language consent; easy withdrawal; no penalty; privacy by default",
      type: "textarea"
    },
    {
      label: "Data governance & sovereignty",
      key: "data_governance",
      ph: "e.g., Community IRB; data-sharing MoU; disaggregated dashboards; OCAP/CARE-aligned repository",
      type: "textarea"
    },
    {
      label: "Anti-extractive practices",
      key: "anti_extractive",
      ph: "e.g., No unpaid labor; no hidden surveillance; mutual benefit documented; publish back findings first to community",
      type: "textarea"
    },
    {
      label: "History of harms & context",
      key: "harm_history",
      ph: "e.g., Prior studies without report-backs; inaccessible meetings; ignored input",
      type: "textarea"
    },
    {
      label: "Repair & accountability mechanisms",
      key: "repair",
      ph: "e.g., Public decision logs; appeal routes; ombudsperson; grievance process; restorative circles",
      type: "textarea"
    },
    {
      label: "Capacity-building (skills, leadership, staffing)",
      key: "capacity",
      ph: "e.g., Paid apprenticeships; facilitation training; governance coaching; resident coordinator role",
      type: "textarea"
    },
    {
      label: "Co-design & engagement methods",
      key: "methods",
      ph: "e.g., Story circles; co-design labs; participatory budgeting; joint drafting; usability testing with accessibility protocols",
      type: "textarea"
    },
    {
      label: "Measures — equity & harm reduction",
      key: "measures",
      ph: "e.g., % decisions finalized by resident body; % budget under community control; accessibility score; time-to-report-back; grievances resolved ≤30 days",
      type: "textarea"
    },
    {
      label: "Feedback cadence & public reporting",
      key: "cadence",
      ph: "e.g., Monthly check-ins; quarterly 'what we heard/changed' briefs; open meeting notes",
      type: "text"
    },
    {
      label: "Risks & mitigations",
      key: "risks",
      ph: "e.g., Clique capture → term limits; burnout → rotate roles; delays → clear SLAs",
      type: "textarea"
    },
    {
      label: "Non-goals / boundaries",
      key: "non_goals",
      ph: "e.g., We do not endorse candidates; we won’t collect biometrics",
      type: "textarea"
    },
    {
      label: "Timeline",
      key: "timeline",
      ph: "e.g., Pilot Q1–Q2; formalize power shifts Q3; public review quarterly",
      type: "text"
    },
    {
      label: "Context / links / notes",
      key: "ctx",
      ph: "References, links, constraints",
      type: "textarea"
    }
  ],
  template: ({
    title,
    decision_scope,
    affected_groups,
    co_leads,
    principles,
    power_shifts,
    compensation,
    access,
    consent,
    data_governance,
    anti_extractive,
    harm_history,
    repair,
    capacity,
    methods,
    measures,
    cadence,
    risks,
    non_goals,
    timeline,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`).join("\n");

    const cheat = [
      "Center those most affected in decisions and benefits.",
      "Share power, credit, and ownership.",
      "Prevent extraction; ensure mutual benefit.",
      "Ensure accessibility, disability justice, and language access.",
      "Practice consent, privacy, and transparency.",
      "Honor data sovereignty and community governance.",
      "Acknowledge harms; establish repair and accountability.",
      "Invest in capacity and leadership of community members.",
      "Credit community knowledge; compensate fairly.",
      "Design for sustainable, regenerative futures."
    ].join("\n");

    return [
      title && `Design Justice Plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context: ${ctx}`,

      "—",
      "DECISION SCOPE",
      decision_scope || "(name the choices this plan governs)",

      affected_groups && ["—", "AFFECTED GROUPS (CENTERED)", listify(affected_groups)].join("\n"),
      co_leads && ["—", "COMMUNITY CO-LEADS (ROLES & ORGS)", co_leads].join("\n"),

      "—",
      "PRINCIPLES WE WILL OPERATIONALIZE",
      principles ? listify(principles) : cheat,

      "—",
      "POWER SHIFTS",
      power_shifts || "(define decision rights, vetoes, budget %, ownership/IP)",

      "—",
      "COMPENSATION & CONTRACTS",
      compensation || "(stipends, rates, payment terms)",

      "—",
      "ACCESSIBILITY & LANGUAGE ACCESS",
      access || "(ADA/UD, interpreters, translations, childcare, transport, hybrid)",

      "—",
      "CONSENT & PRIVACY",
      consent || "(plain-language, ongoing, revocable; privacy by default)",

      "—",
      "DATA GOVERNANCE & SOVEREIGNTY",
      data_governance || "(community review, MoUs, disaggregated dashboards, OCAP/CARE)",

      "—",
      "ANTI-EXTRACTIVE PRACTICES",
      anti_extractive || "(no unpaid labor; publish back first; mutual benefit)",

      harm_history && ["—", "HISTORY OF HARMS & CONTEXT", harm_history].join("\n"),

      "—",
      "REPAIR & ACCOUNTABILITY",
      repair || "(decision logs, grievance process, restorative practices, ombudsperson)",

      capacity && ["—", "CAPACITY-BUILDING", capacity].join("\n"),
      methods && ["—", "CO-DESIGN & ENGAGEMENT METHODS", listify(methods)].join("\n"),

      "—",
      "MEASURES — EQUITY & HARM REDUCTION",
      measures ? listify(measures) : "(add influence metrics, accessibility metrics, timeliness)",

      cadence && ["—", "FEEDBACK CADENCE & PUBLIC REPORTING", cadence].join("\n"),

      risks && ["—", "RISKS & MITIGATIONS", risks].join("\n"),
      non_goals && ["—", "NON-GOALS / BOUNDARIES", non_goals].join("\n"),
      timeline && ["—", "TIMELINE", timeline].join("\n"),

      "—",
      "Checklist:",
      "- [ ] Community co-leads named and compensated",
      "- [ ] Decision rights, budget %, and ownership shift documented",
      "- [ ] Accessibility & language access funded and scheduled",
      "- [ ] Consent, privacy, and data sovereignty codified",
      "- [ ] Anti-extractive practices and repair mechanisms in place",
      "- [ ] Equity & harm-reduction measures tracked and reported"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "design justice principles center most affected redistribute power consent data sovereignty accessibility anti-extractive repair accountability capacity equity template"
  }
},

{
  id: "community_led_development",
  slug: "community-led-development-cld",
  label: "Community-Led Development (CLD): Locally led priorities, accountability, and capacity",
  kind: "strategy",
  categories: [
    "planning",
    "governance",
    "community",
    "equity"
  ],
  tags: [
    "type:framework",
    "use:planning",
    "use:governance",
    "use:leadership",
    "use:engagement",
    "use:capacity",
    "use:evaluation",
    "phase:explore",
    "phase:define",
    "phase:plan",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "co-create locally led priorities and budgets",
    "formalize community governance and accountability",
    "design capacity-building to sustain ownership",
    "align partners on roles and commitments",
    "set simple monitoring and learning rhythms",
     "make sure development projects reflect local priorities",
  "plan budgets with the community not just donors",
  "shift decision-making to local leaders",
  "design accountability back to the community",
  "build skills so ownership lasts long term",
  "agree on roles between community and outside partners",
  "set up simple ways to track progress together",
  "avoid top-down project design",
  "share power and resources fairly",
  "support communities to lead their own solutions",
  "strengthen trust between funders and communities",
  "show how community voices shaped the plan"
  ],
  boosters: [
    "Start with assets and strengths before needs. Map what already works.",
    "Name decision rights, budget delegation percent, and data governance in plain language.",
    "Use open reporting: what we heard, what we decided, why, and by whom.",
    "Disaggregate indicators to track equity and inclusion.",
    "Pay community leaders for their labor and provide access supports up front.",
    "Close the loop on feedback within a specific service-level agreement."
  ],
  definition: "A locally owned planning and accountability scaffold that centers community priorities, transfers decision power and resources, and builds capacity for durable self-determination.",
  help: "Complete governance, priorities, roles, budget delegation, capacity, participation mechanisms, accountability, MEL (monitoring, evaluation, learning), and sustainability. Use workstreams to track multiple areas. Keep everything public by default unless sensitive.",
  fields: [
    {
      label: "Title (initiative or locality)",
      key: "title",
      ph: "e.g., Eastside CLD Partnership",
      type: "text"
    },
    {
      label: "Time horizon",
      key: "horizon",
      ph: "e.g., 2026–2028",
      type: "text"
    },
    {
      label: "Community governance body (owner)",
      key: "owner",
      ph: "e.g., Eastside Community Steering Committee",
      type: "text"
    },
    {
      label: "Community groups and stakeholders",
      autofill: "persona->inline",
      itemLabel: "group",
      itemType: "typeahead",
      key: "stakeholders",
      max: 24,
      ph: "e.g., Youth leaders; elders circle; newcomer groups; small biz association; library branch team",
      type: "repeater"
    },

    // Foundations
    {
      label: "Principles and safeguards",
      key: "principles",
      ph: "e.g., Do no harm; consent; transparency; equity; disability justice; language access; data sovereignty",
      type: "textarea"
    },
    {
      label: "Asset map and capacities",
      key: "assets",
      ph: "e.g., Spaces, connectors, skills, cultural practices, grassroots orgs, mutual aid networks",
      type: "textarea"
    },
    {
      label: "Power and inclusion analysis",
      key: "power_analysis",
      ph: "e.g., Who decides today; who benefits; who is excluded; barriers and enablers",
      type: "textarea"
    },

    // Priorities and budgets
    {
      label: "Community priorities (one per line)",
      key: "priorities",
      ph: "e.g., Safe gathering spaces; youth leadership; translation; micro-grants",
      type: "textarea"
    },
    {
      label: "Decision rights and budget delegation",
      key: "decision_budget",
      ph: "e.g., Resident panel final say on micro-grants; 35% of program budget delegated to community committee",
      type: "textarea"
    },
    {
      label: "Resources and financing",
      key: "resources",
      ph: "e.g., Pooled fund; in-kind space; equipment; staffing; stipend policy",
      type: "textarea"
    },

    // Roles and commitments
    {
      label: "Roles and commitments: community",
      key: "roles_community",
      ph: "e.g., Set priorities; hold decision seats; maintain public decision log",
      type: "textarea"
    },
    {
      label: "Roles and commitments: facilitating orgs",
      key: "roles_facilitators",
      ph: "e.g., Convene; coach; manage grants; publish open data; logistics",
      type: "textarea"
    },
    {
      label: "Roles and commitments: government and donors",
      key: "roles_partners",
      ph: "e.g., Align policy; remove barriers; co-fund; respect community decisions",
      type: "textarea"
    },

    // Participation and accountability
    {
      label: "Participation mechanisms",
      key: "participation",
      ph: "e.g., Assemblies; co-design clinics; participatory budgeting; community scorecards",
      type: "textarea"
    },
    {
      label: "Accountability and transparency",
      key: "accountability",
      ph: "e.g., Public decision logs; open meeting notes; SLA for report-backs; who decided and why",
      type: "textarea"
    },
    {
      label: "Grievance and appeals",
      key: "grievance",
      ph: "e.g., Ombudsperson; anonymous channel; response within 30 days; restorative circles",
      type: "textarea"
    },

    // Capacity and access
    {
      label: "Capacity-building plan",
      key: "capacity",
      ph: "e.g., Facilitation training; grantmaking 101; governance coaching; peer mentoring",
      type: "textarea"
    },
    {
      label: "Compensation and access supports",
      key: "compensation",
      ph: "e.g., Stipends; childcare; transportation; food; interpreters; ASL; hybrid participation",
      type: "textarea"
    },

    // Data and learning
    {
      label: "Consent and data governance",
      key: "data_governance",
      ph: "e.g., Plain-language consent; community IRB; OCAP/CARE-aligned data trust; disaggregated dashboards",
      type: "textarea"
    },
    {
      label: "Indicators and targets",
      desc: "Outcome and equity indicators with baselines where possible.",
      key: "indicators",
      ph: "e.g., Belonging index; % first-time speakers; % budget under community control; gap between subgroups ≤0.5",
      type: "textarea"
    },
    {
      label: "Monitoring, evaluation, and learning (MEL)",
      key: "mel",
      ph: "e.g., Quarterly community scorecard; story harvesting; outcome journal; biannual learning summit",
      type: "textarea"
    },
    {
      label: "Feedback cadence and public reporting",
      key: "cadence",
      ph: "e.g., Monthly updates; 30-day close-the-loop report; open dataset quarterly",
      type: "text"
    },

    // Delivery and risk
    {
      label: "Workstreams (area — owner — milestones — budget — indicators)",
      key: "workstreams",
      ph: "e.g., Micro-grants — Resident panel — launch Q2, 12 awards — $25k — % first-time grantees",
      type: "textarea"
    },
    {
      label: "Risks and mitigations",
      key: "risks",
      ph: "e.g., Burnout → role rotation; capture by clique → term limits; safety → clear code of conduct",
      type: "textarea"
    },
    {
      label: "Sustainability and exit strategy",
      key: "sustainability",
      ph: "e.g., Transition staffing to community roles; local revenue streams; MoUs for space; capacity handoff timeline",
      type: "textarea"
    },

    // Context
    {
      label: "Context and notes",
      key: "ctx",
      ph: "Links, history, constraints, alignments",
      type: "textarea"
    }
  ],
  template: ({
    title,
    horizon,
    owner,
    stakeholders,
    principles,
    assets,
    power_analysis,
    priorities,
    decision_budget,
    resources,
    roles_community,
    roles_facilitators,
    roles_partners,
    participation,
    accountability,
    grievance,
    capacity,
    compensation,
    data_governance,
    indicators,
    mel,
    cadence,
    workstreams,
    risks,
    sustainability,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x, i) => `${i + 1}. ${x}`).join("\n");

    const cldCycle = [
      "Assess",
      "Plan",
      "Act",
      "Reflect",
      "Adapt"
    ].join(" → ");

    return [
      title && `Community-Led Development Plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context: ${ctx}`,

      "SECTION: Overview",
      horizon && `Time horizon: ${horizon}`,
      owner && `Community governance body: ${owner}`,
      stakeholders && ["Community groups and stakeholders:", listify(stakeholders)].join("\n"),

      "SECTION: CLD cycle",
      cldCycle,

      "SECTION: Foundations",
      principles && `Principles and safeguards:\n${principles}`,
      assets && `Asset map and capacities:\n${assets}`,
      power_analysis && `Power and inclusion analysis:\n${power_analysis}`,

      "SECTION: Priorities and budgets",
      priorities ? ["Community priorities:", listify(priorities)].join("\n") : "(add priorities)",
      decision_budget && `Decision rights and budget delegation:\n${decision_budget}`,
      resources && `Resources and financing:\n${resources}`,

      "SECTION: Roles and commitments",
      roles_community && `Community commitments:\n${roles_community}`,
      roles_facilitators && `Facilitating orgs:\n${roles_facilitators}`,
      roles_partners && `Government and donors:\n${roles_partners}`,

      "SECTION: Participation and accountability",
      participation && `Participation mechanisms:\n${participation}`,
      accountability && `Accountability and transparency:\n${accountability}`,
      grievance && `Grievance and appeals:\n${grievance}`,

      "SECTION: Capacity and access",
      capacity && `Capacity-building plan:\n${capacity}`,
      compensation && `Compensation and access supports:\n${compensation}`,

      "SECTION: Data and learning",
      data_governance && `Consent and data governance:\n${data_governance}`,
      indicators && ["Indicators and targets:", listify(indicators)].join("\n"),
      mel && `MEL plan:\n${mel}`,
      cadence && `Feedback cadence and public reporting: ${cadence}`,

      "SECTION: Delivery and risk",
      workstreams && ["Workstreams (area — owner — milestones — budget — indicators):", listify(workstreams)].join("\n"),
      risks && `Risks and mitigations:\n${risks}`,
      sustainability && `Sustainability and exit strategy:\n${sustainability}`,

      "Checklist:",
      "- [ ] Priorities set by the community and published",
      "- [ ] Decision rights and budget delegation are explicit",
      "- [ ] Accountability, grievance, and transparency in place",
      "- [ ] Capacity and access supports funded",
      "- [ ] Equity indicators disaggregated and tracked",
      "- [ ] Regular close-the-loop reports and learning sessions",
      "- [ ] Sustainability and handoff plan defined"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "community-led development CLD locally led priorities budget delegation governance accountability capacity assets participatory budgeting community scorecards data sovereignty MEL sustainability template"
  }
},

{
  id: "participatory_budgeting",
  slug: "participatory-budgeting",
  label: "Participatory Budgeting — Residents Directly Allocate Resources",
  kind: "strategy",
  categories: [
    "governance",
    "community",
    "planning",
    "equity",
    "budget"
  ],
  tags: [
    "type:framework",
    "use:governance",
    "use:engagement",
    "use:planning",
    "use:budget",
    "use:decision-making",
    "phase:plan",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "create a resident-led process to allocate a public or philanthropic fund",
    "set clear eligibility, rules, and equity guardrails",
    "run idea collection, proposal development, vetting, voting, and implementation",
    "publish a transparent tally and implementation tracker",
    "institutionalize PB with annual rhythms and learning",
      "let residents decide how money is spent",
  "give community members a real vote on budget priorities",
  "make funding decisions more transparent",
  "engage marginalized groups in resource allocation",
  "turn community ideas into funded projects",
  "show the public how budget decisions were made",
  "build trust through open voting and reporting",
  "balance equity with community preferences",
  "set up recurring cycles for community input",
  "share power over funding with residents",
  "design simple rules for fair participation",
  "track project delivery after the vote"
  ],
  boosters: [
    "Name a specific fund with a real dollar amount and what it can/can’t buy.",
    "Codify eligibility (age, residency, constituency) and verification methods in plain language.",
    "Publish equity rules: set-asides, geographic minimums, or weighted tallies if appropriate.",
    "Offer coaching so proposals from under-represented groups are competitive.",
    "Choose a voting method that’s simple to explain; test ballots with real residents.",
    "Close the loop with a public tally, implementation tracker, and 30-day report-back."
  ],
  definition: "A resident-led budgeting process in which community members generate ideas, develop proposals, and vote to allocate a defined pool of resources, with transparent rules and public implementation.",
  help: "Complete fund details, decision scope, eligibility, governance/roles, process phases, rules, equity guardrails, ballot design, voting/tally method, implementation plan, and measures. Use workstreams for multi-neighborhood or multi-category PB.",
  fields: [
    {
      label: "Fund name",
      key: "fund_name",
      ph: "e.g., Eastside Community PB Fund",
      type: "text"
    },
    {
      label: "Total budget (amount & source)",
      key: "total_budget",
      ph: "e.g., $250,000 (city discretionary + foundation match)",
      type: "text"
    },
    {
      label: "Time horizon (cycle dates)",
      key: "horizon",
      ph: "e.g., Jan–Dec 2026",
      type: "text"
    },
    {
      label: "Decision scope (what funds can/can’t buy)",
      key: "decision_scope",
      ph: "e.g., Capital improvements ≤$50k per project; programming costs; no ongoing staffing beyond 1 year",
      type: "textarea"
    },
    {
      label: "Policy/Legal constraints (optional)",
      key: "constraints",
      ph: "e.g., Procurement thresholds; ADA requirements; public funds restrictions",
      type: "textarea"
    },
    {
      label: "Owner / administrator",
      key: "owner",
      ph: "e.g., Community Council PB Office (with City liaison)",
      type: "text"
    },
    {
      label: "Governance roles (steering, facilitators, agency liaisons)",
      key: "governance_roles",
      ph: "e.g., Resident Steering Committee (12); volunteer facilitators; City Public Works liaison",
      type: "textarea"
    },
    {
      label: "Steering composition & selection",
      key: "steering",
      ph: "e.g., At least 50% renters; youth seats; term limits; open application + lottery",
      type: "textarea"
    },

    // Eligibility & equity
    {
      label: "Voter eligibility",
      key: "voter_eligibility",
      ph: "e.g., Age 14+; lives, works, or studies in Eastside; no citizenship requirement",
      type: "textarea"
    },
    {
      label: "Verification methods",
      key: "verification",
      ph: "e.g., Address on ID, school ID, self-attestation with neighborhood check; one-person-one-ballot controls",
      type: "textarea"
    },
    {
      label: "Proposer eligibility",
      key: "proposer_eligibility",
      ph: "e.g., Any resident 14+; CBOs; informal groups with fiscal sponsorship",
      type: "textarea"
    },
    {
      label: "Equity rules (set-asides, geographic minimums, weighting)",
      key: "equity_rules",
      ph: "e.g., 30% set-aside for newcomer-led proposals; at least one project per neighborhood",
      type: "textarea"
    },

    // Process phases
    {
      label: "Process phases & timeline",
      key: "timeline",
      ph: "e.g., Design (Jan) → Idea Collection (Feb–Mar) → Proposal Dev (Apr–May) → Vetting & Costing (Jun) → Balloting (Jul) → Tally (Aug) → Implementation (Sep–) → Reporting (quarterly)",
      type: "textarea"
    },
    {
      label: "Outreach & engagement plan",
      key: "outreach",
      ph: "e.g., Door-to-door; school visits; pop-ups; social; partner orgs; tabling calendar",
      type: "textarea"
    },
    {
      label: "Access supports",
      key: "access",
      ph: "e.g., Stipends; childcare; transportation; interpreters/ASL; translated ballots; accessible venues",
      type: "textarea"
    },

    // Idea & proposal development
    {
      label: "Idea collection methods",
      key: "idea_methods",
      ph: "e.g., Assemblies; online idea portal; SMS; paper drop boxes; listening sessions",
      type: "textarea"
    },
    {
      label: "Proposal support (coaching, templates, workshops)",
      key: "proposal_support",
      ph: "e.g., Weekly clinics; volunteer proposal coaches; sample proposal template",
      type: "textarea"
    },
    {
      label: "Feasibility review & costing (agency roles, SLAs)",
      key: "feasibility",
      ph: "e.g., City liaisons respond within 15 business days; cost ranges with confidence levels",
      type: "textarea"
    },

    // Categories & rules
    {
      label: "Ballot categories & set budgets (one per line: category — budget)",
      key: "categories",
      ph: "e.g., Parks — $100k\nSafety — $75k\nArts — $75k",
      type: "textarea"
    },
    {
      label: "Proposal eligibility rules",
      key: "proposal_rules",
      ph: "e.g., Public benefit; one-time costs; open access; no ongoing staffing >12 months",
      type: "textarea"
    },

    // Voting & tally
    {
      label: "Voting method",
      key: "voting_method",
      ph: "e.g., Approval (pick up to 5); Rank-choice within category; K-approval by category",
      type: "text"
    },
    {
      label: "Voting channels",
      key: "voting_channels",
      ph: "e.g., In-person paper at pop-ups; online portal; phone assist; roaming ballot boxes",
      type: "textarea"
    },
    {
      label: "Anti-coercion & fraud controls",
      key: "integrity",
      ph: "e.g., Unique voter codes; duplicate detection; privacy screens; no campaigning at polling sites",
      type: "textarea"
    },
    {
      label: "Tally rules & tie-breakers",
      key: "tally_rules",
      ph: "e.g., Greedy knapsack within each category by cost; ties → lowest cost wins; then lottery",
      type: "textarea"
    },

    // Implementation & reporting
    {
      label: "Implementation owners & SLAs",
      key: "implementation",
      ph: "e.g., Parks Dept for park projects (start within 90 days); quarterly progress updates",
      type: "textarea"
    },
    {
      label: "Transparency & data governance",
      key: "transparency",
      ph: "e.g., Public proposal list; open tally dataset; community data trust; disaggregated participation",
      type: "textarea"
    },
    {
      label: "Measures & targets",
      key: "measures",
      ph: "e.g., Turnout ≥1,500; % first-time voters ≥30%; diversity parity; # proposals funded; % projects delivered on time; 30-day report-back SLA",
      type: "textarea"
    },

    // Multi-area mapping
    {
      label: "Workstreams (area — owner — milestones — budget — indicators)",
      key: "workstreams",
      ph: "e.g., Outreach — CBO coalition — pop-ups x12 — $12k — turnout by subgroup\nBalloting — PB office — launch portal + 8 sites — $8k — ballots cast & integrity checks",
      type: "textarea"
    },

    // Risks
    {
      label: "Risks & mitigations",
      key: "risks",
      ph: "e.g., Clique capture → random selection + set-asides; fraud → unique codes; under-delivery → implementation SLAs + tracker",
      type: "textarea"
    },
    {
      label: "Non-goals / exclusions",
      key: "non_goals",
      ph: "e.g., No private benefit; no ongoing staffing beyond 12 months; no political campaigning",
      type: "textarea"
    },
    {
      label: "Context / notes (optional)",
      key: "ctx",
      ph: "Links, background, constraints",
      type: "textarea"
    }
  ],
  template: ({
    fund_name,
    total_budget,
    horizon,
    decision_scope,
    constraints,
    owner,
    governance_roles,
    steering,
    voter_eligibility,
    verification,
    proposer_eligibility,
    equity_rules,
    timeline,
    outreach,
    access,
    idea_methods,
    proposal_support,
    feasibility,
    categories,
    proposal_rules,
    voting_method,
    voting_channels,
    integrity,
    tally_rules,
    implementation,
    transparency,
    measures,
    workstreams,
    risks,
    non_goals,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`).join("\n");

    const phasesCheat = [
      "Design",
      "Idea Collection",
      "Proposal Development",
      "Vetting & Costing",
      "Balloting",
      "Tally & Announcement",
      "Implementation",
      "Monitoring & Reporting"
    ].join(" → ");

    return [
      `Participatory Budgeting Plan${fund_name ? `: ${fund_name}` : ""}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context: ${ctx}`,

      "—",
      "FUND & SCOPE",
      total_budget && `Total budget: ${total_budget}`,
      horizon && `Cycle: ${horizon}`,
      decision_scope && `Decision scope:\n${decision_scope}`,
      constraints && `Policy/Legal constraints:\n${constraints}`,
      owner && `Owner/Administrator: ${owner}`,
      governance_roles && `Governance roles:\n${governance_roles}`,
      steering && `Steering composition & selection:\n${steering}`,

      "—",
      "ELIGIBILITY & EQUITY",
      voter_eligibility && `Voter eligibility:\n${voter_eligibility}`,
      verification && `Verification methods:\n${verification}`,
      proposer_eligibility && `Proposer eligibility:\n${proposer_eligibility}`,
      equity_rules && `Equity rules:\n${equity_rules}`,

      "—",
      "PROCESS PHASES & TIMELINE",
      timeline || phasesCheat,

      "—",
      "OUTREACH & ACCESS",
      outreach && `Outreach plan:\n${outreach}`,
      access && `Access supports:\n${access}`,

      "—",
      "IDEAS → PROPOSALS",
      idea_methods && `Idea collection methods:\n${idea_methods}`,
      proposal_support && `Proposal support:\n${proposal_support}`,
      feasibility && `Feasibility review & costing:\n${feasibility}`,
      proposal_rules && `Proposal eligibility rules:\n${proposal_rules}`,

      "—",
      "BALLOT DESIGN & CATEGORIES",
      categories ? listify(categories) : "(add categories — budget lines)",
      voting_method && `Voting method: ${voting_method}`,
      voting_channels && `Voting channels:\n${voting_channels}`,
      integrity && `Anti-coercion & fraud controls:\n${integrity}`,
      tally_rules && `Tally rules & tie-breakers:\n${tally_rules}`,

      "—",
      "IMPLEMENTATION & REPORTING",
      implementation && `Implementation owners & SLAs:\n${implementation}`,
      transparency && `Transparency & data governance:\n${transparency}`,
      measures && ["Measures & targets:", listify(measures)].join("\n"),

      workstreams && ["—", "WORKSTREAMS", listify(workstreams)].join("\n"),

      risks && ["—", "RISKS & MITIGATIONS", risks].join("\n"),
      non_goals && ["—", "NON-GOALS / EXCLUSIONS", non_goals].join("\n"),

      "—",
      "Checklist:",
      "- [ ] Fund amount and scope published in plain language",
      "- [ ] Eligibility and verification methods clear and accessible",
      "- [ ] Equity rules (set-asides/geographic minimums) defined",
      "- [ ] Outreach and access supports funded and scheduled",
      "- [ ] Proposal coaching available; feasibility SLAs set",
      "- [ ] Simple, tested ballot with clear voting method",
      "- [ ] Public tally, dataset, and implementation tracker",
      "- [ ] 30-day ‘what we heard/what we decided’ report-back"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "participatory budgeting PB residents allocate resources fund categories equity set-asides eligibility ballot approval ranked-choice tally implementation transparency template"
  }
},

{
  id: "power_interest_salience",
  slug: "power-interest-grid-stakeholder-salience",
  label: "Power/Interest Grid & Stakeholder Salience — Who has power, who’s affected, who must be heard",
  kind: "strategy",
  categories: [
    "planning",
    "analysis-frameworks",
    "governance",
    "community"
  ],
  tags: [
    "type:framework",
    "use:analysis",
    "use:mapping",
     "use:power",
     "use:purpose",
    "use:engagement",
    "use:decision-making",
    "phase:explore",
    "phase:define",
    "topic:community",
    "level:beginner"
  ],
  use_cases: [
    "map stakeholders by power and interest to plan engagement",
    "classify salience (power, legitimacy, urgency) to set ethical priorities",
    "separate who decides from who is affected and who must be centered",
    "design tailored promises, methods, and cadences per quadrant/class",
    "track whether voice and influence actually shift over time",
      "who really makes the decisions here",
  "how do I know who has the most power",
  "figure out who I need to convince",
  "who should I talk to first",
  "how to deal with powerful stakeholders",
  "see who is most affected by this decision",
  "how do I balance loud voices vs quiet ones",
  "who actually matters in this project",
  "make a list of people with influence",
  "how do I keep everyone informed",
  "who needs to be in the room",
  "understand who has the final say",
  "decide whose opinions count most",
  "how do I manage conflicting interests",
  "spot hidden power dynamics"
  ],
  boosters: [
    "Define what you mean by power, legitimacy, and urgency in this context before you rate anyone.",
    "Rate with evidence, not vibes. Link to artifacts (agreements, policies, turnout, lived experience).",
    "Center affected groups: low power/high legitimacy stakeholders must not be sidelined.",
    "Publish promises and SLAs for report-backs; measure influence (what changed), not just attendance.",
    "Revisit classifications quarterly; context shifts change power and urgency.",
    "Pair with IAP2 or Engagement→Ownership Spectrum to translate insights into action."
  ],
  definition: "A mapping scaffold that scores stakeholders on Power and Interest (for engagement strategy) and on Salience attributes (Power, Legitimacy, Urgency) to decide who must be prioritized, heard, and included in decisions.",
  help: "Fill the decision scope and list stakeholders. Rate each on Power (1–5) and Interest (1–5) and note Salience attributes (P/L/U). Group stakeholders into quadrants and salience classes. Write promises, methods, owners, and cadences. Track measures that show influence and equity.",
  fields: [
    {
      label: "Title (initiative / decision)",
      key: "title",
      ph: "e.g., Eastside Forums — Stakeholder Map",
      type: "text"
    },
    {
      label: "Decision scope (what decisions are in play?)",
      key: "decision_scope",
      ph: "e.g., Forum agenda, micro-grants criteria, space rules",
      type: "textarea"
    },
    {
      label: "Time horizon",
      key: "horizon",
      ph: "e.g., 2026 cycle",
      type: "text"
    },
    {
      label: "Owner / mapper",
      key: "owner",
      ph: "e.g., Community Council Steering Group",
      type: "text"
    },

    // Criteria & scales
    {
      label: "Criteria definitions (Power, Interest, Legitimacy, Urgency)",
      key: "criteria",
      ph: "e.g., Power = ability to shape or block decisions/resources; Interest = degree affected/motivated; Legitimacy = rightful claim grounded in norms/law/lived experience; Urgency = time-sensitivity/criticality",
      type: "textarea"
    },
    {
      label: "Evidence sources",
      key: "evidence",
      ph: "e.g., MoUs; attendance data; surveys; testimonies; policies; past decisions",
      type: "textarea"
    },

    // Stakeholders
    {
      label: "Stakeholders (names or groups)",
      autofill: "persona->inline",
      itemLabel: "stakeholder",
      itemType: "typeahead",
      key: "stakeholders",
      max: 40,
      ph: "e.g., Youth leaders; elders circle; library branch; small biz assoc; newcomer groups",
      type: "repeater"
    },
    {
      label: "Ratings — one per line: name — segment — Power(1–5) — Interest(1–5) — Legitimacy(Y/N) — Urgency(Y/N) — Influence(+/0/−) — notes",
      key: "ratings",
      ph: "e.g., Youth leaders — community — 3 — 5 — Y — Y — + — organize peers, affected by space rules",
      type: "textarea"
    },

    // Quadrants (Power/Interest)
    {
      label: "Quadrant: Manage closely (High Power, High Interest)",
      key: "q_manage",
      ph: "e.g., Youth leaders; Library branch team",
      type: "textarea"
    },
    {
      label: "Quadrant: Keep satisfied (High Power, Low Interest)",
      key: "q_satisfy",
      ph: "e.g., City facilities department",
      type: "textarea"
    },
    {
      label: "Quadrant: Keep informed (Low Power, High Interest)",
      key: "q_inform",
      ph: "e.g., Newcomer groups; renters coalition",
      type: "textarea"
    },
    {
      label: "Quadrant: Monitor (Low Power, Low Interest)",
      key: "q_monitor",
      ph: "e.g., Regional media",
      type: "textarea"
    },

    // Salience classes (Mitchell-Agle-Wood)
    {
      label: "Salience classification (one per line: name — attributes (P/L/U) — class)",
      key: "salience",
      ph: "e.g., Youth leaders — L,U — Dependent; Library — P,L — Dominant; City safety — P,U — Dangerous; Residents w/ disability — L,U — Dependent; Tenant union — P,L,U — Definitive",
      type: "textarea"
    },

    // Strategy
    {
      label: "Engagement promises & methods (one per line: name — promise — methods — owner — cadence)",
      key: "engagement_plan",
      ph: "e.g., Newcomer groups — your concerns shape final design — co-design clinics + interpreters — Maria — biweekly",
      type: "textarea"
    },
    {
      label: "Escalation & conflict handling",
      key: "conflict",
      ph: "e.g., Restorative circles; mediation; transparent appeal routes; code-of-conduct",
      type: "textarea"
    },
    {
      label: "Equity & inclusion commitments",
      key: "equity",
      ph: "e.g., Stipends; childcare; language/ASL; accessibility; rotate times; affinity sessions",
      type: "textarea"
    },
    {
      label: "Transparency & feedback SLAs",
      key: "feedback",
      ph: "e.g., Publish 'What we heard/changed' in 30 days; individual replies in 5 business days",
      type: "textarea"
    },

    // Measures
    {
      label: "Measures — participation & influence (one per line)",
      key: "measures",
      ph: "e.g., % agenda items originating from affected groups; % decisions changed due to input; participation by subgroup; time-to-report-back",
      type: "textarea"
    },
    {
      label: "Risks & mitigations",
      key: "risks",
      ph: "e.g., Clique capture → term limits; tokenism → shared decision rights; fatigue → rotate roles",
      type: "textarea"
    },
    {
      label: "Map link (optional)",
      key: "map_link",
      ph: "URL (Miro/Kumu/FigJam)",
      type: "text"
    },
    {
      label: "Context / notes (optional)",
      key: "ctx",
      ph: "Links, constraints, history",
      type: "textarea"
    }
  ],
  template: ({
    title,
    decision_scope,
    horizon,
    owner,
    criteria,
    evidence,
    stakeholders,
    ratings,
    q_manage,
    q_satisfy,
    q_inform,
    q_monitor,
    salience,
    engagement_plan,
    conflict,
    equity,
    feedback,
    measures,
    risks,
    map_link,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x, i) => `${i + 1}. ${x}`).join("\n");

    const quadrantCheat = [
      "Manage closely — High Power, High Interest: co-create, frequent touchpoints, shared decisions.",
      "Keep satisfied — High Power, Low Interest: targeted updates, remove friction, avoid surprises.",
      "Keep informed — Low Power, High Interest: open channels, capacity-building, feedback loops.",
      "Monitor — Low Power, Low Interest: lightweight updates; revisit if context shifts."
    ].join("\n");

    const salienceCheat = [
      "Dormant (P) • Discretionary (L) • Demanding (U)",
      "Dominant (P,L) • Dependent (L,U) • Dangerous (P,U) • Definitive (P,L,U)"
    ].join("\n");

    return [
      title && `Power/Interest & Salience Map: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context: ${ctx}`,

      "—",
      "OVERVIEW",
      decision_scope && `Decision scope: ${decision_scope}`,
      horizon && `Time horizon: ${horizon}`,
      owner && `Owner/mapper: ${owner}`,

      "—",
      "CRITERIA & EVIDENCE",
      criteria && `Criteria definitions:\n${criteria}`,
      evidence && `Evidence sources:\n${evidence}`,

      stakeholders && ["—", "STAKEHOLDERS", listify(stakeholders)].join("\n"),
      ratings && ["—", "RATINGS (name — segment — Pwr — Int — Leg — Urg — Inf — notes)", listify(ratings)].join("\n"),

      "—",
      "POWER/INTEREST QUADRANTS",
      quadrantCheat,
      q_manage && ["Manage closely (H/H):", listify(q_manage)].join("\n"),
      q_satisfy && ["Keep satisfied (H/L):", listify(q_satisfy)].join("\n"),
      q_inform && ["Keep informed (L/H):", listify(q_inform)].join("\n"),
      q_monitor && ["Monitor (L/L):", listify(q_monitor)].join("\n"),

      "—",
      "STAKEHOLDER SALIENCE (P/L/U)",
      salienceCheat,
      salience ? listify(salience) : "(add lines: name — attributes (P/L/U) — class)",

      "—",
      "ENGAGEMENT STRATEGY",
      engagement_plan ? listify(engagement_plan) : "(add: name — promise — methods — owner — cadence)",
      conflict && `Escalation & conflict handling:\n${conflict}`,
      equity && `Equity & inclusion commitments:\n${equity}`,
      feedback && `Transparency & feedback SLAs:\n${feedback}`,

      "—",
      "MEASURES",
      measures ? listify(measures) : "(add participation & influence measures with targets)",
      risks && ["—", "RISKS & MITIGATIONS", risks].join("\n"),
      map_link && `Map: ${map_link}`,

      "—",
      "Checklist:",
      "- [ ] Criteria defined and evidence attached",
      "- [ ] Stakeholders rated with justification",
      "- [ ] Quadrants populated with tailored strategies",
      "- [ ] Salience classes assigned; definitive stakeholders prioritized",
      "- [ ] Plain-language promises & response SLAs set",
      "- [ ] Measures track influence (what changed), not just attendance",
      "- [ ] Revisit map quarterly and after major context shifts"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "power interest grid stakeholder salience mitchell agle wood legitimacy urgency manage closely keep satisfied keep informed monitor engagement promises equity measures template"
  }
},


{
  id: "public_narrative_ganz",
  slug: "public-narrative-story-of-self-us-now",
  label: "Public Narrative (Marshall Ganz) — Story of Self, Us, Now",
  kind: "strategy",
  categories: [
    "planning",
    "communication",
    "alignment",
    "community",
    "storytelling"
  ],
  tags: [
    "type:framework",
    "use:communication",
    "use:alignment",
     "use:alignment",
    "use:narrative",
    "use:mobilization",
    "phase:define",
    "phase:plan",
    "topic:community",
    "level:beginner"
  ],
  use_cases: [
    "articulate a shared voice for a campaign, org, or community",
    "craft speeches, kickoff remarks, onboarding intros, or funder pitches",
    "mobilize volunteers or partners around an urgent next step",
    "translate lived values into action with a concrete ask",
      "how do I tell my story in a speech",
  "make my presentation more inspiring",
  "how to connect my story to a bigger cause",
  "write a talk that moves people to act",
  "how do I share why this work matters to me",
  "help me rally people around an urgent issue",
  "turn my personal story into a call to action",
  "make my team feel part of the same mission",
  "how do I explain why now is the time",
  "craft a story that motivates volunteers",
  "craft a story for community"
  ],
  boosters: [
    "Use the challenge → choice → outcome arc in each section (Self, Us, Now).",
    "Be specific: concrete scenes, names, places, small details beat abstractions.",
    "Name values in action (courage, solidarity) rather than listing adjectives.",
    "Make the ask a real commitment with a time, place, and owner.",
    "Bridge emotion to action: tie feelings (fear, hope, anger, joy) to a next step.",
    "Keep it tight: 2–3 minutes spoken; write more only if you’ll edit down."
  ],
  definition: "A narrative structure that links personal values (Self), shared identity and values (Us), and urgent strategic action (Now) into a concise call to act together.",
  help: "Complete the fields below. Draft Self, Us, Now with a visible challenge → choice → outcome arc. End with one specific ask. Use the variants to tailor for different audiences/channels.",
  fields: [
    {
      label: "Title (campaign / moment)",
      key: "title",
      ph: "e.g., Belonging Starts With One Voice",
      type: "text"
    },
    {
      label: "Audience (primary)",
      key: "audience",
      ph: "e.g., New volunteers at the monthly forum",
      type: "text"
    },
    {
      label: "Purpose (what this narrative should accomplish)",
      key: "purpose",
      ph: "e.g., Invite 25 people to commit as peer facilitators by June",
      type: "textarea"
    },
    {
      label: "Issue / context (why this matters here)",
      key: "issue",
      ph: "e.g., Low sense of belonging across neighborhoods; few first-time speakers",
      type: "textarea"
    },

    // STORY OF SELF
    {
      label: "SELF — scene & challenge (moment that tested your values)",
      key: "self_challenge",
      ph: "e.g., The first time I walked into the library forum and said nothing for an hour…",
      type: "textarea"
    },
    {
      label: "SELF — choice (value-based decision you made)",
      key: "self_choice",
      ph: "e.g., I signed up to co-facilitate even though I was terrified",
      type: "textarea"
    },
    {
      label: "SELF — outcome (what changed / what you learned)",
      key: "self_outcome",
      ph: "e.g., Three neighbors spoke for the first time; I learned courage can be borrowed",
      type: "textarea"
    },
    {
      label: "Values named (words that actually show up in the story)",
      key: "values",
      ph: "e.g., Courage, solidarity, dignity, curiosity",
      type: "textarea"
    },

    // STORY OF US
    {
      label: "US — shared challenge (what we face together)",
      key: "us_challenge",
      ph: "e.g., We’re spread across neighborhoods and don’t hear newcomers’ voices",
      type: "textarea"
    },
    {
      label: "US — shared choice (what we decide to do together)",
      key: "us_choice",
      ph: "e.g., We will train neighbors as peer facilitators and fund micro-grants",
      type: "textarea"
    },
    {
      label: "US — shared outcome / vision (what becomes possible)",
      key: "us_outcome",
      ph: "e.g., Forums where first-time speakers are the norm; ties across language lines",
      type: "textarea"
    },
    {
      label: "Proof points (brief, human-scale)",
      key: "proof",
      ph: "e.g., First-time speakers rose from 12% to 24% in 3 months",
      type: "textarea"
    },

    // STORY OF NOW
    {
      label: "NOW — urgent challenge (why now, not later)",
      key: "now_challenge",
      ph: "e.g., Summer events start in 6 weeks; without facilitators we’ll lose momentum",
      type: "textarea"
    },
    {
      label: "NOW — strategic choice (the path that moves the metric)",
      key: "now_choice",
      ph: "e.g., Train 12 peer facilitators and secure space MoUs by June 30",
      type: "textarea"
    },
    {
      label: "NOW — outcome if we act (and if we don’t)",
      key: "now_outcome",
      ph: "e.g., If we act, first-time speakers ≥25%; if not, voices go unheard another year",
      type: "textarea"
    },

    // THE ASK
    {
      label: "Primary call to action (specific, time-bound)",
      key: "ask_primary",
      ph: "e.g., Commit to the facilitator workshop on May 10, 6–9pm at the library",
      type: "text"
    },
    {
      label: "Commitment options (low / medium / high)",
      key: "ask_tiers",
      ph: "e.g., Low: share invite with 3 neighbors; Med: host a story circle; High: join facilitator cohort",
      type: "textarea"
    },
    {
      label: "How to respond (contact/link/instructions)",
      key: "response",
      ph: "e.g., Text 'FACILITATE' to 555-0199 or sign up at tinyurl.com/eastside-facilitate",
      type: "text"
    },

    // STYLE & DELIVERY
    {
      label: "Tone & voice",
      key: "tone",
      ph: "e.g., Warm, invitational, confident, specific",
      type: "text"
    },
    {
      label: "Channel & format",
      key: "channel",
      ph: "e.g., 3-min live remarks; email follow-up; 5-slide deck; 6-post thread",
      type: "text"
    },
    {
      label: "Length target",
      key: "length_target",
      ph: "e.g., 350–450 words (spoken ~2–3 min)",
      type: "text"
    },
    {
      label: "Closing image / line",
      key: "closing",
      ph: "e.g., An empty chair waiting for a first-time speaker",
      type: "text"
    },

    // Optional helpers
    {
      label: "Counter-narratives to acknowledge & reframe (optional)",
      key: "counter",
      ph: "e.g., 'This won’t change anything' → show one concrete win and a next step",
      type: "textarea"
    },
    {
      label: "Audience variants (optional; one per line: audience — tweak)",
      key: "variants",
      ph: "e.g., Donors — emphasize shared outcome; Teens — emphasize belonging & skill-building",
      type: "textarea"
    },
    {
      label: "Context / notes",
      key: "ctx",
      ph: "Links, constraints, attribution",
      type: "textarea"
    }
  ],
  template: ({
    title,
    audience,
    purpose,
    issue,
    self_challenge,
    self_choice,
    self_outcome,
    values,
    us_challenge,
    us_choice,
    us_outcome,
    proof,
    now_challenge,
    now_choice,
    now_outcome,
    ask_primary,
    ask_tiers,
    response,
    tone,
    channel,
    length_target,
    closing,
    counter,
    variants,
    ctx,
    style
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`).join("\n");

    return [
      title && `Public Narrative: ${title}`,
      audience && `Audience: ${audience}`,
      purpose && `Purpose: ${purpose}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      channel && `Channel: ${channel}`,
      length_target && `Length target: ${length_target}`,
      ctx && `Context: ${ctx}`,

      "—",
      "ISSUE / CONTEXT",
      issue || "(name the problem in this place, with this audience)",

      "—",
      "STORY OF SELF (challenge → choice → outcome)",
      self_challenge ? `Challenge: ${self_challenge}` : "(add a specific scene that tested your values)",
      self_choice && `Choice: ${self_choice}`,
      self_outcome && `Outcome: ${self_outcome}`,
      values && `Values named: ${values}`,

      "—",
      "STORY OF US (shared challenge → shared choice → shared outcome)",
      us_challenge ? `Shared challenge: ${us_challenge}` : "(what we face together)",
      us_choice && `Shared choice: ${us_choice}`,
      us_outcome && `Shared outcome/vision: ${us_outcome}`,
      proof && `Proof points: ${proof}`,

      "—",
      "STORY OF NOW (urgent challenge → strategic choice → likely outcome)",
      now_challenge ? `Urgent challenge: ${now_challenge}` : "(why now)",
      now_choice && `Strategic choice: ${now_choice}`,
      now_outcome && `Outcome if we act (and if not): ${now_outcome}`,

      "—",
      "CALL TO ACTION",
      ask_primary ? `Primary ask: ${ask_primary}` : "(make one concrete, time-bound ask)",
      ask_tiers && ["Commitment options:", listify(ask_tiers)].join("\n"),
      response && `How to respond: ${response}`,

      counter && ["—", "COUNTER-NARRATIVES & REFRAMES", counter].join("\n"),
      variants && ["—", "AUDIENCE VARIANTS", listify(variants)].join("\n"),
      closing && ["—", "CLOSING IMAGE / LINE", closing].join("\n"),

      "—",
      "Checklist:",
      "- [ ] Each section uses challenge → choice → outcome",
      "- [ ] Specific, sensory details (no vague abstractions)",
      "- [ ] Values are shown in action, not merely listed",
      "- [ ] Primary ask is specific, time-bound, and feasible",
      "- [ ] Response path is obvious (link, text, sign-up)",
      "- [ ] Length fits the channel (≈2–3 min spoken)",
      "- [ ] Emotion bridges to collective action"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "public narrative marshall ganz story of self us now challenge choice outcome campaign speech call to action community organizing template"
  }
},


{
  id: "par_cbpr",
  slug: "participatory-action-research-cbpr",
  label: "Participatory Action Research / CBPR - Co-research with communities",
  kind: "strategy",
  categories: [
    "research",
    "planning",
    "ethics",
    "community"
  ],
  tags: [
    "type:framework",
    "use:research",
    "use:engagement",
    "use:governance",
    "use:evaluation",
    "use:capacity",
    "phase:explore",
    "phase:define",
    "phase:plan",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "co-design and co-lead research with communities",
    "pair learning with action through Plan-Act-Observe-Reflect cycles",
    "establish community governance over data, consent, and findings",
    "build capacity and compensate community researchers",
    "translate evidence into concrete changes and accountability",
      "how do I work with the community instead of studying them",
  "make research more fair and equal",
  "how do I share power in a project",
  "get real input from people affected",
  "turn community feedback into action",
  "how to include residents in the research team",
  "what’s the best way to ask for consent",
  "make sure the community owns the results",
  "how do I pay or thank community partners",
  "how can research actually help people",
  "turning research into action"
  ],
  boosters: [
    "Name a community research board or steering group with real decision rights.",
    "Publish plain-language consent, data governance, and return-of-results commitments.",
    "Center access supports and paid roles so participation is possible and fair.",
    "Plan participatory analysis sessions where community members code, theme, and interpret data.",
    "Close the loop first to the community, then to external audiences.",
    "Track influence on decisions, not just participation counts."
  ],
  definition: "A co-research approach where communities identify questions, design and conduct research, analyze results, and act on findings, with shared governance over ethics, data, and dissemination.",
  help: "Complete governance, ethics, access supports, research questions, sampling and recruitment, methods, instruments, data management, analysis and sensemaking, action cycles, dissemination, capacity, and indicators. Use journals to document reflexivity and learning.",
  fields: [
    {
      label: "Title (project or initiative)",
      key: "title",
      ph: "e.g., Eastside Belonging PAR",
      type: "text"
    },
    {
      label: "Time horizon",
      key: "horizon",
      ph: "e.g., Jan-Dec 2026",
      type: "text"
    },
    {
      label: "Community partners and roles",
      autofill: "persona->inline",
      itemLabel: "partner",
      itemType: "typeahead",
      key: "partners",
      max: 24,
      ph: "e.g., Youth council; elders circle; newcomer group; library branch",
      type: "repeater"
    },
    {
      label: "Governance - Community research board / steering",
      key: "governance",
      ph: "e.g., 9-member resident board with agenda-setting and veto on releases",
      type: "textarea"
    },
    {
      label: "Owner / coordinator",
      key: "owner",
      ph: "e.g., Community Council Research Team",
      type: "text"
    },

    // Ethics and access
    {
      label: "Ethics and consent",
      key: "ethics",
      ph: "e.g., Plain-language, ongoing, revocable consent; no penalty for withdrawal; privacy by default",
      type: "textarea"
    },
    {
      label: "Data governance and sovereignty",
      key: "data_governance",
      ph: "e.g., Community IRB; OCAP/CARE aligned; data trust; shared repository with role-based access",
      type: "textarea"
    },
    {
      label: "Confidentiality and safety",
      key: "safety",
      ph: "e.g., De-identification; secure storage; safety plan; mandatory reporting boundaries explained",
      type: "textarea"
    },
    {
      label: "Accessibility and language access",
      key: "access",
      ph: "e.g., Interpreters; translated materials; ASL; childcare; transport; remote options; sensory accommodations",
      type: "textarea"
    },
    {
      label: "Compensation and staffing",
      key: "compensation",
      ph: "e.g., Community researchers $30/hr; stipends; prompt payment policy; paid coordinator",
      type: "textarea"
    },

    // Purpose and questions
    {
      label: "Purpose and change goals",
      key: "purpose",
      ph: "e.g., Increase first-time speakers and cross-neighborhood ties",
      type: "textarea"
    },
    {
      label: "Research questions (one per line)",
      key: "questions",
      ph: "e.g., What helps newcomers speak at forums?\nWhich access supports correlate with higher belonging?",
      type: "textarea"
    },

    // Sampling, recruitment, inclusion
    {
      label: "Sampling and recruitment",
      key: "sampling",
      ph: "e.g., Purposive sampling across neighborhoods; recruit through partners and pop-ups",
      type: "textarea"
    },
    {
      label: "Inclusion and equity criteria",
      key: "inclusion",
      ph: "e.g., Disaggregate by language, disability, age; oversample under-heard groups",
      type: "textarea"
    },

    // Methods and instruments
    {
      label: "Methods menu (co-designed)",
      key: "methods",
      ph: "e.g., Story circles; interviews; photovoice; participatory mapping; short surveys; SenseMaker micro-narratives",
      type: "textarea"
    },
    {
      label: "Instruments and prompts",
      key: "instruments",
      ph: "e.g., Interview guide; survey items; photo consent; mapping legend",
      type: "textarea"
    },
    {
      label: "Fieldwork plan and SLAs",
      key: "fieldwork",
      ph: "e.g., 8 weeks; 2 sessions per site; agency responses within 10 business days",
      type: "textarea"
    },

    // Data management and analysis
    {
      label: "Data management plan",
      key: "data_plan",
      ph: "e.g., Tools; storage; encryption; retention; deletion; access roles",
      type: "textarea"
    },
    {
      label: "Participatory analysis and sensemaking",
      key: "analysis",
      ph: "e.g., Community coding workshops; theme clustering; validation sessions; member checks",
      type: "textarea"
    },

    // Action cycles and dissemination
    {
      label: "Action cycles - Plan, Act, Observe, Reflect",
      key: "cycles",
      ph: "e.g., Cycle 1: forum format tweak; Cycle 2: outreach change; track indicators each cycle",
      type: "textarea"
    },
    {
      label: "Dissemination and return of results",
      key: "dissemination",
      ph: "e.g., Community-first brief; multilingual zines; public deck; policy memo; open dataset (where safe)",
      type: "textarea"
    },
    {
      label: "Authorship, IP, and credit",
      key: "authorship",
      ph: "e.g., Community co-authors; shared copyright; CC license; citation norms",
      type: "textarea"
    },

    // Capacity and learning
    {
      label: "Capacity-building plan",
      key: "capacity",
      ph: "e.g., Interview training; trauma-informed practice; analysis clinics; peer mentoring",
      type: "textarea"
    },
    {
      label: "Journals and reflexivity",
      key: "journals",
      ph: "e.g., Field notes; reflexivity journal; outcome journal; weekly learning huddle",
      type: "textarea"
    },

    // Measures and risks
    {
      label: "Indicators and targets",
      key: "indicators",
      ph: "e.g., % first-time speakers; belonging index; % decisions changed due to evidence; participation by subgroup",
      type: "textarea"
    },
    {
      label: "Risks and mitigations",
      key: "risks",
      ph: "e.g., Re-traumatization risk; confidentiality breaches; fatigue; capture by a clique",
      type: "textarea"
    },

    // Delivery
    {
      label: "Workstreams (area - owner - milestones - budget - indicators)",
      key: "workstreams",
      ph: "e.g., Fieldwork - resident team - 40 interviews by May - $12k - subgroup coverage",
      type: "textarea"
    },
    {
      label: "Timeline and cadence",
      key: "timeline",
      ph: "e.g., Design Jan-Feb; Fieldwork Mar-Apr; Analysis May; Action cycles Jun-Sep; Community brief Oct",
      type: "text"
    },
    {
      label: "Context and links",
      key: "ctx",
      ph: "References, prior work, constraints",
      type: "textarea"
    }
  ],
  template: ({
    title,
    horizon,
    partners,
    governance,
    owner,
    ethics,
    data_governance,
    safety,
    access,
    compensation,
    purpose,
    questions,
    sampling,
    inclusion,
    methods,
    instruments,
    fieldwork,
    data_plan,
    analysis,
    cycles,
    dissemination,
    authorship,
    capacity,
    journals,
    indicators,
    risks,
    workstreams,
    timeline,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`).join("\n");

    return [
      title && `PAR / CBPR Plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context: ${ctx}`,

      "SECTION: Overview",
      horizon && `Time horizon: ${horizon}`,
      partners && ["Community partners and roles:", listify(partners)].join("\n"),
      owner && `Owner or coordinator: ${owner}`,

      "SECTION: Governance and ethics",
      governance && `Governance: ${governance}`,
      ethics && `Ethics and consent: ${ethics}`,
      data_governance && `Data governance and sovereignty: ${data_governance}`,
      safety && `Confidentiality and safety: ${safety}`,
      access && `Accessibility and language access: ${access}`,
      compensation && `Compensation and staffing: ${compensation}`,

      "SECTION: Purpose and questions",
      purpose && `Purpose and change goals:\n${purpose}`,
      questions ? ["Research questions:", listify(questions)].join("\n") : "(add research questions)",

      "SECTION: Sampling, recruitment, inclusion",
      sampling && `Sampling and recruitment:\n${sampling}`,
      inclusion && `Inclusion and equity criteria:\n${inclusion}`,

      "SECTION: Methods and instruments",
      methods && `Methods menu:\n${methods}`,
      instruments && `Instruments and prompts:\n${instruments}`,
      fieldwork && `Fieldwork plan and SLAs:\n${fieldwork}`,

      "SECTION: Data management and analysis",
      data_plan && `Data management plan:\n${data_plan}`,
      analysis && `Participatory analysis and sensemaking:\n${analysis}`,

      "SECTION: Action cycles and dissemination",
      cycles && `Action cycles (Plan-Act-Observe-Reflect):\n${cycles}`,
      dissemination && `Dissemination and return of results:\n${dissemination}`,
      authorship && `Authorship, IP, and credit:\n${authorship}`,

      "SECTION: Capacity and learning",
      capacity && `Capacity-building plan:\n${capacity}`,
      journals && `Journals and reflexivity:\n${journals}`,

      "SECTION: Measures and risks",
      indicators ? ["Indicators and targets:", listify(indicators)].join("\n") : "(add indicators and targets)",
      risks && `Risks and mitigations:\n${risks}`,

      "SECTION: Delivery",
      workstreams && ["Workstreams (area - owner - milestones - budget - indicators):", listify(workstreams)].join("\n"),
      timeline && `Timeline and cadence: ${timeline}`,

      "Checklist:",
      "- [ ] Community board governs questions, methods, data, and releases",
      "- [ ] Consent is plain-language, ongoing, and revocable",
      "- [ ] Data governance and sovereignty are codified",
      "- [ ] Access supports and paid roles are funded",
      "- [ ] Participatory analysis sessions scheduled and staffed",
      "- [ ] Action cycles tie findings to concrete changes",
      "- [ ] Community-first return of results with public follow-up",
      "- [ ] Influence on decisions tracked and reported"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "participatory action research PAR CBPR co-research community research board ethics consent data governance OCAP CARE participatory analysis plan act observe reflect dissemination capacity template"
  }
},

{
  id: "pra_rra",
  slug: "pra-rra-participatory-rapid-rural-appraisal",
  label: "PRA / RRA - Participatory mapping, ranking, seasonal calendars guided by locals",
  kind: "research",
  categories: [
    "research",
    "planning",
    "analysis-frameworks",
    "community"
  ],
  tags: [
    "type:framework",
    "use:research",
    "use:mapping",
    "use:engagement",
    "use:prioritize",
    "phase:explore",
    "phase:define",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "gain rapid, locally led understanding of place and priorities",
    "produce community maps, rankings, and seasonal calendars",
    "identify hazards, assets, gaps, and opportunities",
    "triangulate insights across multiple PRA methods",
    "co-create an action list with owners and timing",
      "how to map my community with locals",
  "make a simple ranking of local needs",
  "create a seasonal calendar with villagers",
  "quick way to learn what matters to residents",
  "how to spot local problems and resources",
  "let people draw their own maps",
  "community-led way to set priorities",
  "fast research method with residents",
  "how to plan projects using local knowledge",
  "ways to involve villagers in decisions",
  "bringing in participation",
  "getting people involved"
  ],
  boosters: [
    "Locals lead, outsiders facilitate. Recruit guides and pay them.",
    "Draw first, write later. Use ground materials and local symbols.",
    "Walk the ground. Do a transect with planned stops and photo notes.",
    "Run separate sessions for different groups if power dynamics exist.",
    "Triangulate findings across at least 3 methods before concluding.",
    "Return outputs within 30 days in accessible formats and languages."
  ],
  definition: "A locally led, visual and hands-on approach that uses mapping, ranking, timelines, and seasonal calendars to understand conditions and priorities. Facilitators support, community members analyze and decide.",
  help: "Complete scope, team, ethics, participants, and the PRA methods you will run. Capture outputs as photos or scans. Synthesize, validate with participants, and finish with a simple action list and measures.",
  fields: [
    {
      label: "Title (locality or initiative)",
      key: "title",
      ph: "e.g., Eastside PRA",
      type: "text"
    },
    {
      label: "Time horizon",
      key: "horizon",
      ph: "e.g., Mar–Jun 2026",
      type: "text"
    },
    {
      label: "Locality / sites",
      key: "sites",
      ph: "e.g., Eastside neighborhoods A, B, C",
      type: "text"
    },
    {
      label: "Team and roles",
      key: "team",
      ph: "e.g., 2 local guides, 1 facilitator, 1 note-taker, 1 photographer",
      type: "textarea"
    },
    {
      label: "Ethics, consent, and photo/audio rules",
      key: "ethics",
      ph: "e.g., Plain-language consent, opt-out options, no faces without consent, privacy by default",
      type: "textarea"
    },
    {
      label: "Accessibility and language access",
      key: "access",
      ph: "e.g., Interpreters, translated handouts, large-print, childcare, transport stipends",
      type: "textarea"
    },
    {
      label: "Participants and inclusion",
      key: "participants",
      ph: "e.g., Youth group, elders circle, renters, newcomers; oversample under-heard groups",
      type: "textarea"
    },
    {
      label: "Focal questions",
      key: "questions",
      ph: "e.g., What makes it easier or harder to participate? Where are the safe and unsafe spaces?",
      type: "textarea"
    },

    // Method plans
    {
      label: "Participatory mapping plan",
      key: "mapping",
      ph: "e.g., Social map, resource map, hazard map, mobility map; base sheet size; symbols and legend; materials list",
      type: "textarea"
    },
    {
      label: "Transect walk plan",
      key: "transect",
      ph: "e.g., Route, 5 planned stops, what to observe, photo notes, who speaks at each stop",
      type: "textarea"
    },
    {
      label: "Seasonal calendar plan",
      key: "seasonal",
      ph: "e.g., Rows: rainfall, cash flow, illnesses, workload, festivals, migration, safety concerns",
      type: "textarea"
    },
    {
      label: "Daily activity clocks (optional)",
      key: "daily_clock",
      ph: "e.g., Typical day for youth, caregivers, vendors; differences by season",
      type: "textarea"
    },
    {
      label: "Wealth or wellbeing ranking",
      key: "wealth_ranking",
      ph: "e.g., Criteria list, household card sorting, confidentiality notes, verification approach",
      type: "textarea"
    },
    {
      label: "Matrix or pairwise ranking",
      key: "matrix_ranking",
      ph: "e.g., Options vs criteria grid, scoring tokens, reason capture, who participates",
      type: "textarea"
    },
    {
      label: "Institutional or Venn mapping",
      key: "venn",
      ph: "e.g., Circles for groups and agencies, distance shows access/trust, overlaps show collaboration",
      type: "textarea"
    },
    {
      label: "Timeline or historical mapping",
      key: "timeline",
      ph: "e.g., Key events, shocks, policy changes, infrastructure openings/closures",
      type: "textarea"
    },
    {
      label: "Problem and opportunity ranking",
      key: "priority_ranking",
      ph: "e.g., Top issues and assets, reasons, quick-win filter, feasibility notes",
      type: "textarea"
    },

    // Documentation and synthesis
    {
      label: "Documentation plan",
      key: "docs",
      ph: "e.g., Photo protocol, scans of maps, GPS pins, file naming, shared drive link",
      type: "textarea"
    },
    {
      label: "Data governance and return of results",
      key: "data_governance",
      ph: "e.g., Community repository, open brief in local languages, ownership and access rules",
      type: "textarea"
    },
    {
      label: "Synthesis and validation workshop",
      key: "validation",
      ph: "e.g., Bring groups together, compare outputs, resolve conflicts, confirm top 3 actions",
      type: "textarea"
    },

    // Action and measures
    {
      label: "Action list (one per line: action - owner - resources - start - check date)",
      key: "actions",
      ph: "e.g., Night lighting on corridor B - Resident panel - $8k - Jul - Oct review",
      type: "textarea"
    },
    {
      label: "Measures and signals to watch",
      key: "measures",
      ph: "e.g., % first-time speakers; incident reports; foot traffic; participation by subgroup",
      type: "textarea"
    },

    // Risks and context
    {
      label: "Risks and mitigations",
      key: "risks",
      ph: "e.g., Stigma from wealth ranking, elite capture, fatigue; mitigations and supports",
      type: "textarea"
    },
    {
      label: "Links and context",
      key: "ctx",
      ph: "e.g., Photo album URL, Kumu map, prior studies",
      type: "textarea"
    }
  ],
  template: ({
    title,
    horizon,
    sites,
    team,
    ethics,
    access,
    participants,
    questions,
    mapping,
    transect,
    seasonal,
    daily_clock,
    wealth_ranking,
    matrix_ranking,
    venn,
    timeline,
    priority_ranking,
    docs,
    data_governance,
    validation,
    actions,
    measures,
    risks,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`).join("\n");

    const menu = [
      "Participatory maps: social, resource, hazard, mobility",
      "Transect walk with photo notes and stops",
      "Seasonal calendar across workload, health, cash flow, climate",
      "Daily activity clocks by group",
      "Wealth or wellbeing ranking with community criteria",
      "Matrix or pairwise ranking of options vs criteria",
      "Institutional or Venn mapping of relationships and access",
      "Timeline or historical mapping of shocks and changes",
      "Problem and opportunity ranking with quick-win filter"
    ].join("\n");

    return [
      title && `PRA / RRA plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      horizon && `Time horizon: ${horizon}`,
      sites && `Locality or sites: ${sites}`,
      ctx && `Links and context: ${ctx}`,

      "SECTION: Team and ethics",
      team && `Team and roles:\n${team}`,
      ethics && `Ethics, consent, and photo/audio rules:\n${ethics}`,
      access && `Accessibility and language access:\n${access}`,
      participants && `Participants and inclusion:\n${participants}`,

      "SECTION: Focal questions",
      questions || "(add the questions this PRA will answer)",

      "SECTION: Method menu",
      menu,

      "SECTION: Method plans",
      mapping && `Participatory mapping plan:\n${mapping}`,
      transect && `Transect walk plan:\n${transect}`,
      seasonal && `Seasonal calendar plan:\n${seasonal}`,
      daily_clock && `Daily activity clocks:\n${daily_clock}`,
      wealth_ranking && `Wealth or wellbeing ranking:\n${wealth_ranking}`,
      matrix_ranking && `Matrix or pairwise ranking:\n${matrix_ranking}`,
      venn && `Institutional or Venn mapping:\n${venn}`,
      timeline && `Timeline or historical mapping:\n${timeline}`,
      priority_ranking && `Problem and opportunity ranking:\n${priority_ranking}`,

      "SECTION: Documentation and synthesis",
      docs && `Documentation plan:\n${docs}`,
      data_governance && `Data governance and return of results:\n${data_governance}`,
      validation && `Synthesis and validation workshop:\n${validation}`,

      "SECTION: Action and measures",
      actions ? ["Action list:", listify(actions)].join("\n") : "(add actions with owner, resources, dates)",
      measures && ["Measures and signals to watch:", listify(measures)].join("\n"),

      risks && ["SECTION: Risks and mitigations", risks].join("\n"),

      "Checklist:",
      "- [ ] Local guides recruited and compensated",
      "- [ ] Consent and photo rules clear and respected",
      "- [ ] At least 3 PRA methods run with triangulation",
      "- [ ] Separate sessions held where power dynamics require",
      "- [ ] Outputs photographed or scanned with clear legends",
      "- [ ] Validation session held and top 3 actions agreed",
      "- [ ] Return of results scheduled within 30 days"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "PRA RRA participatory rapid rural appraisal mapping transect seasonal calendar wealth ranking matrix ranking venn map timeline locally led triangulation template"
  }
},

{
  id: "two_eyed_seeing",
  slug: "two-eyed-seeing-etuaptmumk",
  label: "Two-Eyed Seeing (Etuaptmumk): Braiding Indigenous and Western knowledge",
  kind: "strategy",
  categories: [
    "planning",
    "research",
    "ethics",
    "community",
    "systems"
  ],
  tags: [
    "type:framework",
    "use:research",
    "use:governance",
    "use:design",
    "use:learning",
    "phase:explore",
    "phase:define",
    "topic:community",
    "topic:indigenous",
    "topic:western",
    "topic:ideas",
    "level:intermediate"
  ],
  use_cases: [
    "co-create knowledge with Elders and Knowledge Keepers alongside academics or practitioners",
    "design programs that respect protocol, land, and relational accountability",
    "pair Indigenous methodologies with Western methods without collapsing differences",
    "align data governance with OCAP or CARE principles and community consent",
    "build indicators that honor story, ceremony, and lived experience alongside quantitative measures",
     "how to mix indigenous knowledge with science",
  "work with elders and researchers together",
  "respect cultural ways in research",
  "how to use western tools without losing tradition",
  "make sure data is handled with community consent",
  "balance numbers with stories",
  "design programs that fit both worlds",
  "include ceremony and culture in planning",
  "how to braid two knowledge systems",
  "learn from elders and experts at the same time",
  "bridging worlds together"
  ],
  boosters: [
    "Begin with relationship and protocol before methods. Ask who convenes, who benefits, and who decides.",
    "Name community authority in governance, IP, and data. Publish it in plain language.",
    "Create Ethical Space practices for dialogue where worldviews meet on equal footing.",
    "Use seasonal or ceremony-informed timelines in addition to fiscal calendars.",
    "Protect sacred and restricted knowledge. Some things are not for publication.",
    "Budget for honoraria, travel, food, translation, and ceremony as core requirements."
  ],
  definition: "A practice of holding multiple ways of knowing side by side without forcing one into the other. It braids Indigenous and Western knowledge through relationships, protocol, co-governance, and reciprocal benefit.",
  help: "Complete governance, protocol, consent and data sovereignty, Indigenous and Western methods, braiding plans, reciprocity, and two sets of indicators. Treat this template as a scaffold that must be adapted with community leadership.",
  fields: [
    {
      label: "Title",
      key: "title",
      ph: "e.g., Eastside River Work - Two-Eyed Learning Partnership",
      type: "text"
    },
    {
      label: "Place and Land Acknowledgment",
      key: "land",
      ph: "e.g., On the homelands of..., guided by local Nations and community",
      type: "textarea"
    },
    {
      label: "Community partners and roles",
      autofill: "persona->inline",
      itemLabel: "partner",
      itemType: "typeahead",
      key: "partners",
      max: 24,
      ph: "e.g., Nation council reps; Elders circle; youth knowledge holders; library branch team",
      type: "repeater"
    },
    {
      label: "Elders and Knowledge Keepers",
      key: "knowledge_keepers",
      ph: "e.g., Names or roles, how they guide, how they consent to share",
      type: "textarea"
    },
    {
      label: "Honoraria, ceremony, access supports",
      key: "supports",
      ph: "e.g., Honoraria rates, food, transport, childcare, interpreters, ceremony costs",
      type: "textarea"
    },

    // Governance and protocol
    {
      label: "Co-governance structure",
      key: "governance",
      ph: "e.g., Joint steering with community majority; consent checkpoints; release approvals",
      type: "textarea"
    },
    {
      label: "Protocol and Ethical Space practices",
      key: "protocol",
      ph: "e.g., Openings and closings, who speaks first, decision rituals, conflict handling",
      type: "textarea"
    },
    {
      label: "Consent and community approvals",
      key: "consent",
      ph: "e.g., Community consent in addition to individual consent; ongoing and revocable",
      type: "textarea"
    },
    {
      label: "Data governance and sovereignty",
      key: "data_governance",
      ph: "e.g., OCAP or CARE alignment; community data trust; storage and access rules; review before release",
      type: "textarea"
    },
    {
      label: "Intellectual property and authorship",
      key: "ip",
      ph: "e.g., Shared authorship with community; restrictions on derivative use; license terms",
      type: "textarea"
    },
    {
      label: "Safeguarding sacred and restricted knowledge",
      key: "safeguards",
      ph: "e.g., Off-record categories; ceremony-only knowledge; redaction rules",
      type: "textarea"
    },

    // Methods
    {
      label: "Indigenous methodologies",
      key: "indigenous_methods",
      ph: "e.g., Storywork, talking circles, ceremony-informed practice, land-based learning",
      type: "textarea"
    },
    {
      label: "Western methods",
      key: "western_methods",
      ph: "e.g., Surveys, interviews, network mapping, quasi-experiments",
      type: "textarea"
    },
    {
      label: "Braiding plan - how methods meet without collapse",
      key: "braid_plan",
      ph: "e.g., Parallel analysis, joint sensemaking, respectful synthesis rules",
      type: "textarea"
    },

    // Time and cadence
    {
      label: "Seasonal and ceremony rhythms",
      key: "seasonal_time",
      ph: "e.g., Work pauses during harvest or ceremony; gatherings align with seasonal cycles",
      type: "textarea"
    },
    {
      label: "Administrative timeline",
      key: "admin_time",
      ph: "e.g., Grant quarters; reporting dates; coordination with seasonal time",
      type: "text"
    },

    // Reciprocity and capacity
    {
      label: "Reciprocity and benefit sharing",
      key: "reciprocity",
      ph: "e.g., Community-first briefings; revenue share; equipment left in community; training commitments",
      type: "textarea"
    },
    {
      label: "Capacity and leadership development",
      key: "capacity",
      ph: "e.g., Paid apprenticeships; facilitation training; data stewardship skill building",
      type: "textarea"
    },

    // Indicators and sensemaking
    {
      label: "Community-defined outcomes and indicators",
      key: "indigenous_indicators",
      ph: "e.g., Strength of ties, language use, healing signals, ceremony participation, story evidence",
      type: "textarea"
    },
    {
      label: "Western evaluation indicators",
      key: "western_indicators",
      ph: "e.g., Attendance trends, network density, survey scales, policy changes",
      type: "textarea"
    },
    {
      label: "Sensemaking plan",
      key: "sensemaking",
      ph: "e.g., Joint readings of stories and stats, validation gatherings, member checks",
      type: "textarea"
    },

    // Transparency and risk
    {
      label: "Transparency and public reporting",
      key: "transparency",
      ph: "e.g., What we heard and what we decided reports, bilingual briefs, community first",
      type: "textarea"
    },
    {
      label: "Risks and mitigations",
      key: "risks",
      ph: "e.g., Tokenism risk, extraction, spiritual harm, confidentiality, burnout",
      type: "textarea"
    },
    {
      label: "Non-goals and boundaries",
      key: "non_goals",
      ph: "e.g., We will not publish ceremony content; no surveillance; no data resale",
      type: "textarea"
    },
    {
      label: "Context and notes",
      key: "ctx",
      ph: "Links, history, constraints",
      type: "textarea"
    }
  ],
  template: ({
    title,
    land,
    partners,
    knowledge_keepers,
    supports,
    governance,
    protocol,
    consent,
    data_governance,
    ip,
    safeguards,
    indigenous_methods,
    western_methods,
    braid_plan,
    seasonal_time,
    admin_time,
    reciprocity,
    capacity,
    indigenous_indicators,
    western_indicators,
    sensemaking,
    transparency,
    risks,
    non_goals,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x, i) => `${i + 1}. ${x}`).join("\n");

    return [
      title && `Two-Eyed Seeing plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      land && `Place and Land Acknowledgment:\n${land}`,
      ctx && `Context and notes:\n${ctx}`,

      "SECTION: Relationships, governance, protocol",
      partners && ["Community partners and roles:", listify(partners)].join("\n"),
      knowledge_keepers && `Elders and Knowledge Keepers:\n${knowledge_keepers}`,
      supports && `Honoraria, ceremony, access supports:\n${supports}`,
      governance && `Co-governance structure:\n${governance}`,
      protocol && `Protocol and Ethical Space practices:\n${protocol}`,

      "SECTION: Consent, sovereignty, IP",
      consent && `Consent and community approvals:\n${consent}`,
      data_governance && `Data governance and sovereignty:\n${data_governance}`,
      ip && `Intellectual property and authorship:\n${ip}`,
      safeguards && `Safeguarding sacred and restricted knowledge:\n${safeguards}`,

      "SECTION: Methods and braiding",
      indigenous_methods && `Indigenous methodologies:\n${indigenous_methods}`,
      western_methods && `Western methods:\n${western_methods}`,
      braid_plan && `Braiding plan:\n${braid_plan}`,

      "SECTION: Time and cadence",
      seasonal_time && `Seasonal and ceremony rhythms:\n${seasonal_time}`,
      admin_time && `Administrative timeline: ${admin_time}`,

      "SECTION: Reciprocity and capacity",
      reciprocity && `Reciprocity and benefit sharing:\n${reciprocity}`,
      capacity && `Capacity and leadership development:\n${capacity}`,

      "SECTION: Indicators and sensemaking",
      indigenous_indicators && ["Community-defined outcomes and indicators:", listify(indigenous_indicators)].join("\n"),
      western_indicators && ["Western evaluation indicators:", listify(western_indicators)].join("\n"),
      sensemaking && `Sensemaking plan:\n${sensemaking}`,

      "SECTION: Transparency and risk",
      transparency && `Transparency and public reporting:\n${transparency}`,
      risks && `Risks and mitigations:\n${risks}`,
      non_goals && `Non-goals and boundaries:\n${non_goals}`,

      "Checklist:",
      "- [ ] Community co-governance and protocol defined in writing",
      "- [ ] Consent is ongoing and revocable at individual and community levels",
      "- [ ] OCAP or CARE aligned data governance with community review before release",
      "- [ ] Honoraria and ceremony resourced, access supports funded",
      "- [ ] Methods are braided without collapse and differences are respected",
      "- [ ] Sacred knowledge safeguarded and not published",
      "- [ ] Two sets of indicators used with joint sensemaking",
      "- [ ] Reciprocity and benefit sharing are concrete and auditable"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "two-eyed seeing etuaptmumk ethical space indigenous methodologies western methods ocap care data sovereignty ceremony protocol reciprocity indicators template"
  }
},

{
  id: "ocap_care_governance",
  slug: "ocap-and-care-data-governance",
  label: "OCAP® & CARE Principles — Community Data Ownership, Governance, and Ethical Listening",
  kind: "strategy",
  categories: [
    "research",
    "ethics",
    "governance",
    "community",
    "data"
  ],
  tags: [
    "type:framework",
    "use:governance",
    "use:data-policy",
    "use:ethics",
    "use:research",
    "use:agreements",
    "phase:plan",
    "topic:community",
    "topic:indigenous",
    "topic:data",
    "level:intermediate"
  ],
  use_cases: [
    "establish community authority over data creation, access, use, and sharing",
    "operationalize OCAP® (Ownership, Control, Access, Possession) commitments",
    "operationalize CARE (Collective Benefit, Authority to Control, Responsibility, Ethics) commitments",
    "set consent, approvals, and data lifecycle rules (collection → storage → use → sharing → retention/deletion)",
    "build transparent benefit-sharing, grievance, and audit mechanisms",
    "who owns community data",
  "how to keep data in community control",
  "rules for sharing research data fairly",
  "make sure community benefits from data",
  "how to handle consent and approvals",
  "safe ways to store and delete data",
  "share data without losing trust",
  "protect indigenous knowledge online",
  "fair rules for researchers using data",
  "community rights over information"
  ],
  boosters: [
    "Differentiate ACCESS (who can view) from AUTHORITY (who decides) and from CUSTODY (who holds). Community authority should be explicit and majority-led.",
    "Minimize data. Collect only what is necessary; default to privacy and community-first reporting.",
    "Adopt tiered publication: Public → Community-only → Restricted → Sacred/Not-for-release, with clear criteria.",
    "Create a community data trust or board with veto, pause, and recall powers (‘kill switch’).",
    "Resource the work: honoraria, translation, storage, security, and legal support are budget lines, not afterthoughts.",
    "Disaggregate where safe and approved; never disclose small-n groups that create re-identification risk."
  ],
  definition: "A practical scaffold to govern data with community authority, aligning with OCAP® and CARE principles through clear consent, approvals, lifecycle controls, benefit-sharing, and ethical listening practices.",
  help: "Complete governance, scope and inventory, consent and approvals, access rules, storage and security, benefit-sharing, publication tiers, agreements, lifecycle (retention/deletion), accountability and grievance, and indicators. Map each OCAP® and CARE principle to concrete practices.",
  fields: [
    // Overview
    {
      label: "Title (project / initiative)",
      key: "title",
      ph: "e.g., Eastside Community Data Governance",
      type: "text"
    },
    {
      label: "Community authority & governance body",
      key: "authority",
      ph: "e.g., Community Data Board (majority residents, Elder/Knowledge Keeper seats, youth seats)",
      type: "textarea"
    },
    {
      label: "Owner / steward / custodian roles",
      key: "roles",
      ph: "e.g., Owner: Community; Steward: Community Board; Custodian: Library IT; Processor: Research team",
      type: "textarea"
    },
    {
      label: "Partners & agreements (MoU, IRB, Data Use Agreement)",
      key: "partners",
      ph: "e.g., City liaison (MoU §3 data-sharing); University IRB; CBO data processors",
      type: "textarea"
    },

    // Scope & inventory
    {
      label: "Data scope & inventory",
      key: "inventory",
      ph: "e.g., Surveys; sign-ins; micro-narratives; photos/audio; admin data; derived indicators",
      type: "textarea"
    },
    {
      label: "Data classification & sensitivity levels",
      key: "classification",
      ph: "Public • Community-only • Restricted • Sacred/Not-for-release (criteria for each)",
      type: "textarea"
    },

    // OCAP® mapping
    {
      label: "OCAP® mapping — Ownership",
      key: "ocap_ownership",
      ph: "e.g., Community is legal/beneficial owner; IP clauses; attribution norms",
      type: "textarea"
    },
    {
      label: "OCAP® mapping — Control",
      key: "ocap_control",
      ph: "e.g., Board sets questions, methods, approvals; veto/pause powers; change log",
      type: "textarea"
    },
    {
      label: "OCAP® mapping — Access",
      key: "ocap_access",
      ph: "e.g., Role-based access; request process; turnaround SLAs; refusal criteria",
      type: "textarea"
    },
    {
      label: "OCAP® mapping — Possession",
      key: "ocap_possession",
      ph: "e.g., Data stored on community-controlled servers; residency; escrow copies",
      type: "textarea"
    },

    // CARE mapping
    {
      label: "CARE mapping — Collective Benefit",
      key: "care_benefit",
      ph: "e.g., Community-first briefings; open tools; local capacity; revenue/royalty share",
      type: "textarea"
    },
    {
      label: "CARE mapping — Authority to Control",
      key: "care_authority",
      ph: "e.g., Approvals needed for reuse/derivatives; enforceable licenses; community veto",
      type: "textarea"
    },
    {
      label: "CARE mapping — Responsibility",
      key: "care_responsibility",
      ph: "e.g., Harm assessment; de-bias audits; small-n suppression; no surveillance",
      type: "textarea"
    },
    {
      label: "CARE mapping — Ethics",
      key: "care_ethics",
      ph: "e.g., Protocols, ceremony-informed pauses, plain-language consent, cultural safety",
      type: "textarea"
    },

    // Consent & approvals
    {
      label: "Consent model (individual & community)",
      key: "consent",
      ph: "e.g., Ongoing, revocable; dynamic consent dashboard; community consent checkpoints",
      type: "textarea"
    },
    {
      label: "Approvals workflow",
      key: "approvals",
      ph: "e.g., Who approves collection, linkage, external sharing, publication; timeline & quorum",
      type: "textarea"
    },

    // Access & use
    {
      label: "Access policy & roles",
      key: "access_policy",
      ph: "e.g., Viewer/Editor/Exporter; training required; least-privilege defaults",
      type: "textarea"
    },
    {
      label: "Requests process (internal/external) & SLAs",
      key: "requests",
      ph: "e.g., Web form; 10 business days; appeals route; public request log",
      type: "textarea"
    },
    {
      label: "Permitted uses & anti-uses",
      key: "permitted",
      ph: "e.g., Community planning; service improvement; NOT: targeted enforcement; political micro-targeting",
      type: "textarea"
    },
    {
      label: "Licenses for derivatives & publications",
      key: "licenses",
      ph: "e.g., Community license; CC BY-NC with addendum; citation & acknowledgment rules",
      type: "textarea"
    },

    // Storage, security, and lifecycle
    {
      label: "Storage, residency, and security",
      key: "security",
      ph: "e.g., Region-locked storage; encryption at rest/in transit; key management; backups",
      type: "textarea"
    },
    {
      label: "Retention & deletion schedule",
      key: "retention",
      ph: "e.g., Raw audio 12 months; transcripts 36 months; indicators 60 months; secure deletion proofs",
      type: "textarea"
    },
    {
      label: "De-identification & re-identification risk",
      key: "deid",
      ph: "e.g., K-anonymity thresholds; small-n suppression; re-id risk audits",
      type: "textarea"
    },
    {
      label: "Audit trails & transparency reporting",
      key: "audit",
      ph: "e.g., Quarterly access log review; public ‘what we used/why’ report; data incidents log",
      type: "textarea"
    },

    // Benefit, reciprocity, and grievance
    {
      label: "Benefit-sharing & reciprocity",
      key: "benefit",
      ph: "e.g., Revenue share; equipment left with community; paid apprenticeships",
      type: "textarea"
    },
    {
      label: "Grievance, redress, & kill-switch",
      key: "grievance",
      ph: "e.g., Ombudsperson; 30-day response; powers to suspend use/remove datasets",
      type: "textarea"
    },

    // Publication tiers & comms
    {
      label: "Publication tiers & release rules",
      key: "publication",
      ph: "Public • Community-only • Restricted • Sacred/Not-for-release (who decides; criteria; examples)",
      type: "textarea"
    },
    {
      label: "Community-first reporting cadence",
      key: "cadence",
      ph: "e.g., Monthly briefs; quarterly open data (approved slices); bilingual zines",
      type: "text"
    },

    // Indicators & risk
    {
      label: "Indicators & targets (data governance health)",
      key: "indicators",
      ph: "e.g., % requests fulfilled/denied with reasons; time-to-response; incidents=0; training completion ≥95%",
      type: "textarea"
    },
    {
      label: "Risks & mitigations",
      key: "risks",
      ph: "e.g., Re-identification; misuse; scope creep; capture by elites; burnout",
      type: "textarea"
    },

    // Context
    {
      label: "Context / notes / links",
      key: "ctx",
      ph: "References, protocol links, legal basis, histories",
      type: "textarea"
    }
  ],
  template: ({
    title,
    authority,
    roles,
    partners,
    inventory,
    classification,
    ocap_ownership,
    ocap_control,
    ocap_access,
    ocap_possession,
    care_benefit,
    care_authority,
    care_responsibility,
    care_ethics,
    consent,
    approvals,
    access_policy,
    requests,
    permitted,
    licenses,
    security,
    retention,
    deid,
    audit,
    benefit,
    grievance,
    publication,
    cadence,
    indicators,
    risks,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`).join("\n");

    return [
      title && `OCAP® & CARE Data Governance: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context / notes:\n${ctx}`,

      "—",
      "AUTHORITY & ROLES",
      authority && `Community authority & governance body:\n${authority}`,
      roles && `Owner / steward / custodian roles:\n${roles}`,
      partners && `Partners & agreements:\n${partners}`,

      "—",
      "SCOPE & INVENTORY",
      inventory && `Data scope & inventory:\n${inventory}`,
      classification && `Data classification & sensitivity levels:\n${classification}`,

      "—",
      "OCAP® MAPPING",
      ocap_ownership && `Ownership:\n${ocap_ownership}`,
      ocap_control && `Control:\n${ocap_control}`,
      ocap_access && `Access:\n${ocap_access}`,
      ocap_possession && `Possession:\n${ocap_possession}`,

      "—",
      "CARE MAPPING",
      care_benefit && `Collective Benefit:\n${care_benefit}`,
      care_authority && `Authority to Control:\n${care_authority}`,
      care_responsibility && `Responsibility:\n${care_responsibility}`,
      care_ethics && `Ethics:\n${care_ethics}`,

      "—",
      "CONSENT & APPROVALS",
      consent && `Consent model:\n${consent}`,
      approvals && `Approvals workflow:\n${approvals}`,

      "—",
      "ACCESS, USE, & LICENSING",
      access_policy && `Access policy & roles:\n${access_policy}`,
      requests && `Requests process & SLAs:\n${requests}`,
      permitted && `Permitted uses & anti-uses:\n${permitted}`,
      licenses && `Licenses for derivatives & publications:\n${licenses}`,

      "—",
      "STORAGE, SECURITY, & LIFECYCLE",
      security && `Storage, residency, and security:\n${security}`,
      retention && `Retention & deletion schedule:\n${retention}`,
      deid && `De-identification & re-identification risk:\n${deid}`,
      audit && `Audit trails & transparency reporting:\n${audit}`,

      "—",
      "BENEFIT, RECIPROCITY, & REMEDY",
      benefit && `Benefit-sharing & reciprocity:\n${benefit}`,
      grievance && `Grievance, redress, & kill-switch:\n${grievance}`,

      "—",
      "PUBLICATION & COMMUNICATION",
      publication && `Publication tiers & release rules:\n${publication}`,
      cadence && `Community-first reporting cadence: ${cadence}`,

      "—",
      "INDICATORS & RISK",
      indicators && ["Indicators & targets:", listify(indicators)].join("\n"),
      risks && `Risks & mitigations:\n${risks}`,

      "—",
      "Checklist:",
      "- [ ] Community authority, roles, and veto/pause powers are explicit",
      "- [ ] OCAP® (Ownership, Control, Access, Possession) mapped to concrete practices",
      "- [ ] CARE (Collective Benefit, Authority, Responsibility, Ethics) mapped to practices",
      "- [ ] Consent is ongoing, revocable, and includes community approvals",
      "- [ ] Tiered publication rules and harm safeguards defined",
      "- [ ] Storage, residency, security, and deletion proofs documented",
      "- [ ] Benefit-sharing, grievance, and transparency reports scheduled",
      "- [ ] Access logs and requests are audited with public summaries"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "OCAP CARE data governance ownership control access possession collective benefit authority responsibility ethics community consent data trust reciprocity grievance audit template"
  }
},


{
  id: "talanoa_yarning_talking_circles",
  slug: "talanoa-yarning-talking-circles",
  label: "Talanoa, Yarning Circles, Talking Circles — Narrative-first consensus building",
  kind: "strategy",
  categories: [
    "community",
    "governance",
    "ethics",
    "research",
    "facilitation"
  ],
  tags: [
    "type:framework",
    "use:engagement",
    "use:decision-making",
    "use:healing",
    "use:hearing",
    "use:understanding",
    "use:sharing",
     "use:mission",
      "use:purpose",
    "use:learning",
    "use:conflict-transformation",
    "phase:explore",
    "phase:define",
    "topic:indigenous",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "host culturally grounded conversations for learning, healing, and decisions",
    "center oral narratives and relational accountability over debate",
    "surface shared values and craft consensus or consent-based next steps",
    "document what is sharable versus sacred or confidential",
    "align reporting with community protocols and data sovereignty",
      "how to run a talking circle",
  "ways to make group decisions fairly",
  "use stories to solve problems",
  "how to build trust in meetings",
  "share without debate or fighting",
  "how to hear every voice in a group",
  "cultural way to heal through talking",
  "make decisions by listening first",
  "respect what stories can and can’t be shared",
  "use circles for learning and consensus",
   "bring people together",
   "hearing the voices",
    "hearing the people",
    "understadning goals, mission, values, and vision",
     "understadning community",
     "understadning purpose"
  ],
  boosters: [
    "Begin with relationship and protocol. Ask who invites, who opens, who closes, and who benefits.",
    "Seat Elders and Knowledge Holders with visible authority. Compensate them first.",
    "Establish circle agreements in participants’ own words. No cross-talk, voluntary sharing, confidentiality by default.",
    "Use a talking piece or facilitator-managed turns to equalize voice. Allow passes.",
    "Decide how stories are held. Some knowledge is not recorded or published.",
    "Close with gratitude, commitments, and a clear follow-up date. Feed people."
  ],
  definition: "A family of circle practices that privilege story, listening, and relationship to build understanding and move toward consensus or consent. Protocols and leadership come from the local community and traditions.",
  help: "Complete purpose, protocol, roles, participants, access supports, prompts, turn-taking, documentation rules, decision approach, and follow-ups. Treat this as a scaffold to be adapted with community leadership and cultural guidance.",
  fields: [
    {
      label: "Title",
      key: "title",
      ph: "e.g., Eastside Talanoa on Shared Spaces",
      type: "text"
    },
    {
      label: "Tradition and protocol lineage",
      key: "lineage",
      ph: "e.g., Talanoa (Tonga/Fiji/Samoa), Aboriginal Yarning, Indigenous Talking Circle",
      type: "textarea"
    },
    {
      label: "Purpose",
      key: "purpose",
      ph: "e.g., Build shared understanding and decide on space guidelines",
      type: "textarea"
    },
    {
      label: "Circle type",
      key: "circle_type",
      ph: "healing | learning | relationship-building | decision-making | mediation",
      type: "text"
    },
    {
      label: "Conveners and facilitators",
      key: "facilitators",
      ph: "e.g., Elder A opens and closes, Facilitator B holds time, Youth C manages talking piece",
      type: "textarea"
    },
    {
      label: "Elders and Knowledge Holders",
      key: "knowledge_holders",
      ph: "names or roles, how they guide, how consent to share is handled",
      type: "textarea"
    },
    {
      label: "Participants and inclusion",
      autofill: "persona->inline",
      itemLabel: "participant group",
      itemType: "typeahead",
      key: "participants",
      max: 24,
      ph: "e.g., Youth leaders; elders circle; newcomer groups; disabled residents",
      type: "repeater"
    },
    {
      label: "Access supports and compensation",
      key: "access",
      ph: "e.g., Honoraria; childcare; food; transport; interpreters and ASL; sensory-friendly setup",
      type: "textarea"
    },
    {
      label: "Space and logistics",
      key: "logistics",
      ph: "e.g., Circle seating, privacy needs, time boundary, food, talking piece",
      type: "textarea"
    },
    {
      label: "Opening and closing protocol",
      key: "protocol",
      ph: "e.g., Acknowledgment of place, song or silence, prayer or welcome, gratitude and commitments",
      type: "textarea"
    },
    {
      label: "Circle agreements",
      key: "agreements",
      ph: "e.g., Speak from experience; listen to understand; no cross-talk; confidentiality; right to pass",
      type: "textarea"
    },
    {
      label: "Consent and recording rules",
      key: "consent",
      ph: "e.g., Oral consent; off-the-record by default; no photos without explicit permission",
      type: "textarea"
    },
    {
      label: "Data governance and publication tiers",
      key: "data_governance",
      ph: "Public | Community-only | Restricted | Sacred Not-for-release, with who decides and how",
      type: "textarea"
    },
    {
      label: "Prompts and story invitations",
      key: "prompts",
      ph: "e.g., Tell about a time you felt welcome here. What would it take for that to be common?",
      type: "textarea"
    },
    {
      label: "Turn-taking and timing",
      key: "turns",
      ph: "e.g., Talking piece clockwise, 2 rounds of 2 minutes, optional third weaving round",
      type: "textarea"
    },
    {
      label: "Weaving and meaning-making",
      key: "weaving",
      ph: "e.g., Facilitator reflects themes; pair shares; harvest on sticky notes; community validation",
      type: "textarea"
    },
    {
      label: "Decision approach",
      key: "decision",
      ph: "consensus | consent with objections addressed | advice process | no-decision learning circle",
      type: "text"
    },
    {
      label: "What will be documented",
      key: "documentation",
      ph: "e.g., Themes only; no attribution; commitments and next steps with owners and dates",
      type: "textarea"
    },
    {
      label: "Follow-ups and commitments",
      key: "followups",
      ph: "e.g., Publish plain-language summary to participants in 14 days; check-in circle next month",
      type: "textarea"
    },
    {
      label: "Risks and safeguards",
      key: "risks",
      ph: "e.g., Re-traumatization; dominance by a few; confidentiality breaches; safety plan and supports",
      type: "textarea"
    },
    {
      label: "Measures and signals",
      key: "measures",
      ph: "e.g., % of participants who spoke; % first-time speakers; perceived safety; healing signals; dissent resolved",
      type: "textarea"
    },
    {
      label: "Timeline and cadence",
      key: "timeline",
      ph: "e.g., Monthly learning circle; quarterly decision circle; seasonal ceremony-aligned pauses",
      type: "text"
    },
    {
      label: "Context and notes",
      key: "ctx",
      ph: "links, cultural guidance, constraints, acknowledgments",
      type: "textarea"
    }
  ],
  template: ({
    title,
    lineage,
    purpose,
    circle_type,
    facilitators,
    knowledge_holders,
    participants,
    access,
    logistics,
    protocol,
    agreements,
    consent,
    data_governance,
    prompts,
    turns,
    weaving,
    decision,
    documentation,
    followups,
    risks,
    measures,
    timeline,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`).join("\n");

    return [
      title && `Circle plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and notes: ${ctx}`,

      "SECTION: Purpose and lineage",
      lineage && `Tradition and protocol lineage:\n${lineage}`,
      purpose && `Purpose:\n${purpose}`,
      circle_type && `Circle type: ${circle_type}`,

      "SECTION: Roles and inclusion",
      facilitators && `Conveners and facilitators:\n${facilitators}`,
      knowledge_holders && `Elders and Knowledge Holders:\n${knowledge_holders}`,
      participants && ["Participants and inclusion:", listify(participants)].join("\n"),
      access && `Access supports and compensation:\n${access}`,
      logistics && `Space and logistics:\n${logistics}`,

      "SECTION: Protocol and agreements",
      protocol && `Opening and closing protocol:\n${protocol}`,
      agreements && `Circle agreements:\n${agreements}`,
      consent && `Consent and recording rules:\n${consent}`,
      data_governance && `Data governance and publication tiers:\n${data_governance}`,

      "SECTION: Story flow",
      prompts && `Prompts and story invitations:\n${prompts}`,
      turns && `Turn-taking and timing:\n${turns}`,
      weaving && `Weaving and meaning-making:\n${weaving}`,

      "SECTION: Decision and documentation",
      decision && `Decision approach: ${decision}`,
      documentation && `What will be documented:\n${documentation}`,
      followups && `Follow-ups and commitments:\n${followups}`,

      "SECTION: Safety and learning",
      risks && `Risks and safeguards:\n${risks}`,
      measures && ["Measures and signals:", listify(measures)].join("\n"),
      timeline && `Timeline and cadence: ${timeline}`,

      "Checklist:",
      "- [ ] Protocol, roles, and purpose confirmed with community leadership",
      "- [ ] Access supports and honoraria funded and scheduled",
      "- [ ] Agreements set in participants’ own words and visible in the room",
      "- [ ] Consent rules and publication tiers clear before stories begin",
      "- [ ] Turn-taking method chosen with right to pass",
      "- [ ] Decision approach agreed or explicitly a no-decision learning circle",
      "- [ ] Documentation respects confidentiality and cultural safety",
      "- [ ] Commitments, owners, and dates captured with a public report-back"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "Talanoa Yarning Talking Circle Indigenous protocol narrative listening consensus consent talking piece Elders data sovereignty culturally grounded facilitation template"
  }
},

{
  id: "kaupapa_maori_research",
  slug: "kaupapa-maori-research-sovereignty-centered",
  label: "Kaupapa Māori Research — By/with/for Māori communities; sovereignty at the core",
  kind: "strategy",
  categories: [
    "research",
    "ethics",
    "governance",
    "community",
    "design"
  ],
  tags: [
    "type:framework",
    "use:research",
    "use:governance",
    "use:ethics",
    "use:data-policy",
    "use:purpose",
    "use:capacity",
    "phase:explore",
    "phase:plan",
    "topic:indigenous",
    "topic:maori",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "co-design and co-lead research with iwi, hapū, and whānau",
    "embed rangatiratanga in decisions, data, IP, and benefits",
    "align methods with tikanga, kawa, and mātauranga Māori",
    "run wānanga and kanohi-ki-te-kanohi processes with proper protocol",
    "publish community-first in te reo Māori and English with approvals",
      "how to do research with Māori communities",
  "make sure Māori lead the project",
  "respect tikanga and cultural rules in research",
  "share results in te reo Māori and English",
  "give control of data back to iwi and hapū",
  "how to follow protocol in meetings",
  "design research that supports self-determination",
  "make research accountable to the community",
  "protect Māori knowledge and IP",
  "publish results with community approval",
  "helping communities respectfully",
  "finding mission in communities respectfully"
  ],
  boosters: [
    "Begin with whakapapa and relationships. Protocol before method.",
    "Name community authority in writing: who decides, who can pause, who approves release.",
    "Resource honoraria, travel, kai, translation, access supports, and ceremony.",
    "Protect taonga and tapu knowledge. Some things are not for recording or release.",
    "Adopt Māori data sovereignty rules and community-controlled storage within Aotearoa where required.",
    "Return results first to whānau. Measure influence on decisions, not just participation."
  ],
  definition: "A research scaffold grounded in Kaupapa Māori that upholds rangatiratanga, follows tikanga and kawa, centers mātauranga Māori, and ensures community authority over questions, methods, data, IP, and benefits.",
  help: "Complete governance and protocol, consent and data sovereignty, kaupapa and outcomes, methods and wānanga plans, reciprocity, capacity, indicators, and publication approvals. Use maramataka for timing alongside administrative calendars.",
  fields: [
    // Overview
    {
      label: "Title",
      key: "title",
      ph: "e.g., He Ara Whakapapa Research Partnership",
      type: "text"
    },
    {
      label: "Place / Rohe",
      key: "rohe",
      ph: "e.g., Te Whanganui-a-Tara",
      type: "text"
    },
    {
      label: "Iwi / Hapū / Whānau partners",
      autofill: "persona->inline",
      itemLabel: "roopu",
      itemType: "typeahead",
      key: "partners",
      max: 24,
      ph: "e.g., Ngāti X; Hapū Y; Local whānau rōpū; Māori service orgs",
      type: "repeater"
    },
    {
      label: "Kaumātua / Kuia guidance",
      key: "kaumatua",
      ph: "e.g., Names or roles, how they guide openings/closings, consent to share",
      type: "textarea"
    },

    // Governance and protocol
    {
      label: "Rangatiratanga and co-governance",
      key: "governance",
      ph: "e.g., Community-majority steering; veto/pause powers; release approvals; quorum and process",
      type: "textarea"
    },
    {
      label: "Tikanga and kawa",
      key: "tikanga",
      ph: "e.g., Who opens/closes, pōwhiri/whakatau steps, waiata/karakia, conflict handling, koha protocols",
      type: "textarea"
    },
    {
      label: "Te reo plan",
      key: "reo_plan",
      ph: "e.g., Bilingual materials; interpreters; reo-first reporting; glossary of kupu",
      type: "textarea"
    },

    // Ethics, consent, data sovereignty
    {
      label: "Consent model (individual and collective)",
      key: "consent",
      ph: "e.g., Ongoing, revocable; whānau/hapū approvals; dynamic consent options",
      type: "textarea"
    },
    {
      label: "Māori data sovereignty",
      key: "data_sovereignty",
      ph: "e.g., Community-controlled storage; Aotearoa residency; role-based access; review before release",
      type: "textarea"
    },
    {
      label: "IP and taonga protection",
      key: "ip",
      ph: "e.g., Shared authorship; TK Labels; restrictions on derivative use; license and citation norms",
      type: "textarea"
    },
    {
      label: "Safeguards for tapu/restricted knowledge",
      key: "safeguards",
      ph: "e.g., Off-record categories; ceremony-only knowledge; redaction rules; no AI training on sensitive data",
      type: "textarea"
    },

    // Kaupapa and outcomes
    {
      label: "Kaupapa and change goals",
      key: "kaupapa",
      ph: "e.g., Strengthen whanaungatanga and belonging; improve access to space and services",
      type: "textarea"
    },
    {
      label: "Whānau ora outcomes",
      key: "whanau_ora",
      ph: "e.g., Manaakitanga experienced; safety; language use; leadership pathways",
      type: "textarea"
    },

    // Methods and wānanga
    {
      label: "Research pātai (questions)",
      key: "patai",
      ph: "e.g., He aha ngā āhuatanga e whakapiki ana i te māia o ngā manu kōrero hou?",
      type: "textarea"
    },
    {
      label: "Methods aligned to mātauranga Māori",
      key: "methods_maori",
      ph: "e.g., Wānanga; kōrero tuku iho; pūrākau; kaupapa-based interviews; land-based learning",
      type: "textarea"
    },
    {
      label: "Western methods in parallel (if any)",
      key: "methods_western",
      ph: "e.g., Surveys; network mapping; observational notes; simple quasi-experiment",
      type: "textarea"
    },
    {
      label: "Braiding plan",
      key: "braid",
      ph: "e.g., Parallel analysis; joint sensemaking wānanga; respectful synthesis rules without collapse",
      type: "textarea"
    },
    {
      label: "Fieldwork and hui plan",
      key: "fieldwork",
      ph: "e.g., Kanohi-ki-te-kanohi sessions; hui schedule; venues; photo/audio rules",
      type: "textarea"
    },

    // Time and resources
    {
      label: "Maramataka and seasonal timing",
      key: "maramataka",
      ph: "e.g., Pause during significant ceremony/harvest; meet on favorable nights",
      type: "textarea"
    },
    {
      label: "Administrative timeline",
      key: "admin_time",
      ph: "e.g., Grant quarters; reporting dates; align with maramataka",
      type: "text"
    },
    {
      label: "Honoraria, access, and supports",
      key: "supports",
      ph: "e.g., Kaumātua/Kuia honoraria; kai; childcare; transport; interpreters; accessibility",
      type: "textarea"
    },
    {
      label: "Capacity and leadership development",
      key: "capacity",
      ph: "e.g., Paid apprenticeships; facilitation and data stewardship training; rangatahi pathways",
      type: "textarea"
    },

    // Analysis, dissemination, reciprocity
    {
      label: "Analysis and sensemaking wānanga",
      key: "analysis",
      ph: "e.g., Community coding workshop; theme validation; member checks; tikanga-led interpretation",
      type: "textarea"
    },
    {
      label: "Dissemination and approvals",
      key: "dissemination",
      ph: "e.g., Community-first hui; reo Māori brief; public deck after approval; embargo rules",
      type: "textarea"
    },
    {
      label: "Reciprocity and benefit sharing",
      key: "reciprocity",
      ph: "e.g., Equipment left with community; revenue share; shared authorship; local hosting",
      type: "textarea"
    },

    // Indicators and risk
    {
      label: "Indicators and targets",
      key: "indicators",
      ph: "e.g., Mana and safety signals; reo use; participation by subgroup; % decisions changed by evidence",
      type: "textarea"
    },
    {
      label: "Risks and mitigations",
      key: "risks",
      ph: "e.g., Tapu breach; cultural harm; re-identification; burnout; capture by elites",
      type: "textarea"
    },

    // Delivery
    {
      label: "Workstreams (area — owner — milestones — budget — indicators)",
      key: "workstreams",
      ph: "e.g., Wānanga series — hapū rōpū — 6 hui — $12k — attendance and safety signals",
      type: "textarea"
    },
    {
      label: "Context and notes",
      key: "ctx",
      ph: "Links, histories, alignments, prior commitments",
      type: "textarea"
    }
  ],
  template: ({
    title,
    rohe,
    partners,
    kaumatua,
    governance,
    tikanga,
    reo_plan,
    consent,
    data_sovereignty,
    ip,
    safeguards,
    kaupapa,
    whanau_ora,
    patai,
    methods_maori,
    methods_western,
    braid,
    fieldwork,
    maramataka,
    admin_time,
    supports,
    capacity,
    analysis,
    dissemination,
    reciprocity,
    indicators,
    risks,
    workstreams,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x, i) => `${i + 1}. ${x}`).join("\n");

    return [
      title && `Kaupapa Māori Research plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      rohe && `Place / Rohe: ${rohe}`,
      ctx && `Context and notes:\n${ctx}`,

      "—",
      "RELATIONSHIPS, GOVERNANCE, PROTOCOL",
      partners && ["Iwi / Hapū / Whānau partners:", listify(partners)].join("\n"),
      kaumatua && `Kaumātua / Kuia guidance:\n${kaumatua}`,
      governance && `Rangatiratanga and co-governance:\n${governance}`,
      tikanga && `Tikanga and kawa:\n${tikanga}`,
      reo_plan && `Te reo plan:\n${reo_plan}`,

      "—",
      "ETHICS, CONSENT, DATA SOVEREIGNTY",
      consent && `Consent model:\n${consent}`,
      data_sovereignty && `Māori data sovereignty:\n${data_sovereignty}`,
      ip && `IP and taonga protection:\n${ip}`,
      safeguards && `Safeguards for tapu/restricted knowledge:\n${safeguards}`,

      "—",
      "KAUPAPA AND OUTCOMES",
      kaupapa && `Kaupapa and change goals:\n${kaupapa}`,
      whanau_ora && `Whānau ora outcomes:\n${whanau_ora}`,

      "—",
      "METHODS AND WĀNANGA",
      patai && ["Research pātai:", listify(patai)].join("\n"),
      methods_maori && `Methods aligned to mātauranga Māori:\n${methods_maori}`,
      methods_western && `Western methods in parallel:\n${methods_western}`,
      braid && `Braiding plan:\n${braid}`,
      fieldwork && `Fieldwork and hui plan:\n${fieldwork}`,

      "—",
      "TIME AND RESOURCING",
      maramataka && `Maramataka and seasonal timing:\n${maramataka}`,
      admin_time && `Administrative timeline: ${admin_time}`,
      supports && `Honoraria, access, and supports:\n${supports}`,
      capacity && `Capacity and leadership development:\n${capacity}`,

      "—",
      "ANALYSIS, DISSEMINATION, RECIPROCITY",
      analysis && `Analysis and sensemaking wānanga:\n${analysis}`,
      dissemination && `Dissemination and approvals:\n${dissemination}`,
      reciprocity && `Reciprocity and benefit sharing:\n${reciprocity}`,

      "—",
      "INDICATORS, RISK, DELIVERY",
      indicators && ["Indicators and targets:", listify(indicators)].join("\n"),
      risks && `Risks and mitigations:\n${risks}`,
      workstreams && ["Workstreams (area — owner — milestones — budget — indicators):", listify(workstreams)].join("\n"),

      "—",
      "Checklist:",
      "- [ ] Community rangatiratanga is explicit with veto/pause/review powers",
      "- [ ] Tikanga, kawa, and reo commitments are documented and resourced",
      "- [ ] Consent is ongoing and includes collective approvals",
      "- [ ] Māori data sovereignty rules and storage residency are honored",
      "- [ ] Taonga and tapu knowledge are safeguarded and not released",
      "- [ ] Methods follow wānanga and mātauranga Māori alongside any Western tools",
      "- [ ] Community-first dissemination in te reo Māori and English",
      "- [ ] Benefits and capacities grow locally, with influence on decisions tracked"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "Kaupapa Māori research rangatiratanga tikanga kawa mātauranga Māori maramataka Māori data sovereignty iwi hapū whānau wānanga taonga tapu TK Labels template"
  }
},

{
  id: "most_significant_change",
  slug: "most-significant-change-msc",
  label: "Most Significant Change (MSC) — Collect stories; community selects what mattered most",
  kind: "strategy",
  categories: [
    "evaluation",
    "learning",
    "community",
    "research"
  ],
  tags: [
    "type:framework",
    "use:evaluation",
    "use:learning",
    "use:story",
    "use:change",
    "use:purpose",
    "use:decision-making",
    "phase:reflect",
    "phase:adapt",
    "topic:community",
    "level:beginner"
  ],
  use_cases: [
    "collect and review stories of change across domains",
    "facilitate community panels to select the most significant changes",
    "document rationales and translate insights into action",
    "triangulate qualitative stories with quantitative indicators",
    "close the loop with storytellers and publish community-first reports",
     "how to collect stories of change",
  "let the community decide what mattered most",
  "easy way to measure impact with stories",
  "how to run a group to pick important changes",
  "turn stories into lessons for action",
  "mix stories with numbers for evaluation",
  "share results back with the people who told them",
  "simple way to evaluate community projects",
  "use storytelling instead of just surveys",
  "how to learn from real experiences",
  "change with listening",
  "how do I listen",
  "help me listen",
  "telling a community story"
  ],
  boosters: [
    "Name your domains up front (e.g., inclusion, trust, safety, livelihoods).",
    "Train story collectors; use the same prompts and consent model everywhere.",
    "Select panels that include those most affected; compensate and support access.",
    "Document the rationale for selections in plain language (why this story, why now?).",
    "Include negative and unintended changes; MSC is not only about ‘good news’.",
    "Pair stories with indicators and quick tests; adapt something every cycle."
  ],
  definition: "A participatory, qualitative evaluation approach: gather stories of change, then convene panels to select the most significant changes in defined domains, documenting why those stories matter and how learning will change action.",
  help: "Complete domains, prompts, collection and consent plans, panel composition, criteria, meeting cadence, rationale template, verification, feedback, and use of learning. Run MSC in cycles (e.g., quarterly) and publish back to the community first.",
  fields: [
    {
      label: "Title (initiative / program)",
      key: "title",
      ph: "e.g., Eastside Forums — MSC Learning Cycles",
      type: "text"
    },
    {
      label: "Cycle cadence & horizon",
      key: "horizon",
      ph: "e.g., Quarterly cycles, Jan–Dec 2026",
      type: "text"
    },
    {
      label: "Domains (one per line)",
      key: "domains",
      ph: "e.g., Access & inclusion\nRelationships & trust\nAgency & leadership\nLivelihoods & skills\nSafety & wellbeing\nPolicy & systems influence",
      type: "textarea"
    },
    {
      label: "Primary prompts (story invitations)",
      key: "prompts",
      ph: "e.g., Tell me about a time something changed for you here. What happened? Why does it matter to you? Who or what contributed to this change?",
      type: "textarea"
    },
    {
      label: "Story sources & recruitment",
      key: "recruitment",
      ph: "e.g., Open call + targeted outreach to under-heard groups; pop-ups; partner referrals",
      type: "textarea"
    },
    {
      label: "Story collectors & training",
      key: "collectors",
      ph: "e.g., 8 community interviewers; 4-hour training on ethics, prompts, and note-taking",
      type: "textarea"
    },
    {
      label: "Consent & ethics",
      key: "consent",
      ph: "e.g., Plain-language, ongoing, revocable; options: named, pseudonym, anonymous; right to review quotes",
      type: "textarea"
    },
    {
      label: "Access supports & compensation",
      key: "access",
      ph: "e.g., Stipends; childcare; interpreters/ASL; transportation; large-print; remote options",
      type: "textarea"
    },
    {
      label: "Collection methods & channels",
      key: "methods",
      ph: "e.g., 1:1 interviews; story circles; voice notes; short form + photo optional",
      type: "textarea"
    },
    {
      label: "Volume & sampling plan",
      key: "sampling",
      ph: "e.g., 60 stories per cycle; minimum 10 per domain; oversample under-heard groups",
      type: "textarea"
    },
    {
      label: "Story metadata schema (fields captured)",
      key: "schema",
      ph: "e.g., date; domain; storyteller group; location; consent level; change type (+/−); contributors; significance (in their words)",
      type: "textarea"
    },
    {
      label: "Pre-screen & inclusion rules",
      key: "prescreen",
      ph: "e.g., Exclude non-consented content; route disclosures to safety protocol; keep negative changes",
      type: "textarea"
    },
    {
      label: "Selection panels (composition per domain)",
      key: "panels",
      ph: "e.g., 7 people: 3 community members most affected, 2 implementers, 1 partner, 1 youth; rotate seats each cycle",
      type: "textarea"
    },
    {
      label: "Selection criteria (panel uses)",
      key: "criteria",
      ph: "e.g., Depth of change; scale/reach; durability; contribution/attribution; equity relevance; surprise/learning value; negative/unintended significance",
      type: "textarea"
    },
    {
      label: "Selection meeting plan & cadence",
      key: "meetings",
      ph: "e.g., Panels meet 2 hours per domain in week 3 of each quarter; reading pack sent 7 days prior",
      type: "textarea"
    },
    {
      label: "Rationale template (how panels explain choices)",
      key: "rationale",
      ph: "e.g., What changed; for whom; why significant; what contributed; what should change in our work",
      type: "textarea"
    },
    {
      label: "Verification & triangulation",
      key: "verification",
      ph: "e.g., Follow-up call; light document check; compare to attendance or indicator trends",
      type: "textarea"
    },
    {
      label: "Feedback to storytellers & community reporting",
      key: "feedback",
      ph: "e.g., ‘What we heard / what we’ll change’ within 30 days; thank-you notes; bilingual brief",
      type: "textarea"
    },
    {
      label: "Use of learning (decisions & changes)",
      key: "use_of_learning",
      ph: "e.g., Adjust facilitation training; shift budget; propose policy changes; stop low-value activities",
      type: "textarea"
    },
    {
      label: "Indicators to pair with MSC",
      key: "indicators",
      ph: "e.g., % first-time speakers; belonging index; network density; safety incidents",
      type: "textarea"
    },
    {
      label: "Risks & mitigations",
      key: "risks",
      ph: "e.g., Harmful disclosure → safety protocol; selection bias → rotate panels & oversample; tokenism → act on findings",
      type: "textarea"
    },
    {
      label: "Data governance & publication tiers",
      key: "data_governance",
      ph: "Public • Community-only • Restricted • Not-for-release; who decides & why",
      type: "textarea"
    },
    {
      label: "Timeline (per cycle)",
      key: "timeline",
      ph: "e.g., Weeks 1–2 collect; week 3 panels; week 4 publish brief & action list",
      type: "text"
    },
    {
      label: "Context / notes",
      key: "ctx",
      ph: "Links, prior cycles, constraints",
      type: "textarea"
    }
  ],
  template: ({
    title,
    horizon,
    domains,
    prompts,
    recruitment,
    collectors,
    consent,
    access,
    methods,
    sampling,
    schema,
    prescreen,
    panels,
    criteria,
    meetings,
    rationale,
    verification,
    feedback,
    use_of_learning,
    indicators,
    risks,
    data_governance,
    timeline,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`).join("\n");

    const defaultCriteria = [
      "Depth/meaning of change to those affected",
      "Scale/reach (how many, how far)",
      "Durability (likely to last)",
      "Contribution/attribution (what enabled it)",
      "Equity relevance (closes gaps or centers marginalized voices)",
      "Surprise/learning value (changed our understanding)",
      "Significance of negative or unintended change"
    ].join("\n");

    const cycle = "Collect → Cluster by domain → Panel reads & discusses → Select MSC per domain → Document rationale → Verify → Publish back → Act & adapt";

    return [
      title && `MSC Plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context: ${ctx}`,

      "—",
      "CYCLE & HORIZON",
      horizon || "(set cadence, e.g., quarterly)",

      "—",
      "DOMAINS",
      domains ? listify(domains) : "(list domains such as inclusion, trust, agency, livelihoods, safety, policy)",

      "—",
      "PROMPTS",
      prompts || "(add 2–4 consistent prompts used by all collectors)",

      "—",
      "COLLECTION PLAN",
      recruitment && `Story sources & recruitment:\n${recruitment}`,
      collectors && `Story collectors & training:\n${collectors}`,
      methods && `Methods & channels:\n${methods}`,
      sampling && `Volume & sampling:\n${sampling}`,
      access && `Access supports & compensation:\n${access}`,
      consent && `Consent & ethics:\n${consent}`,
      schema && `Story metadata schema:\n${schema}`,
      prescreen && `Pre-screen & inclusion rules:\n${prescreen}`,

      "—",
      "SELECTION PROCESS",
      `Process: ${cycle}`,
      panels && `Selection panels (composition):\n${panels}`,
      "Selection criteria:",
      criteria || defaultCriteria,
      meetings && `Meeting plan & cadence:\n${meetings}`,
      rationale && `Rationale template:\n${rationale}`,

      "—",
      "VERIFICATION & REPORT-BACK",
      verification && `Verification & triangulation:\n${verification}`,
      feedback && `Feedback & community reporting:\n${feedback}`,

      "—",
      "USE OF LEARNING",
      use_of_learning || "(name decisions, budget shifts, policy proposals, or practice changes)",

      "—",
      "INDICATORS PAIRED WITH MSC",
      indicators ? listify(indicators) : "(add a short list of quantitative indicators to watch)",

      "—",
      "GOVERNANCE, RISK, TIMELINE",
      data_governance && `Data governance & publication tiers:\n${data_governance}`,
      risks && `Risks & mitigations:\n${risks}`,
      timeline && `Timeline per cycle: ${timeline}`,

      "—",
      "Checklist:",
      "- [ ] Domains named; prompts standardized",
      "- [ ] Collectors trained; consent and access supports in place",
      "- [ ] Sampling plan covers under-heard groups",
      "- [ ] Panels include those most affected; compensated",
      "- [ ] Criteria agreed; negative changes welcomed",
      "- [ ] Rationale documented in plain language",
      "- [ ] Verification and community-first reporting done within 30 days",
      "- [ ] Learning drives concrete changes before next cycle"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "Most Significant Change MSC stories of change selection panels rationale qualitative evaluation learning domains prompts verification community reporting template"
  }
},

{
  id: "outcome_harvesting",
  slug: "outcome-harvesting",
  label: "Outcome Harvesting - Gather outcomes after the fact and trace contributions with community input",
  kind: "strategy",
  categories: [
    "evaluation",
    "learning",
    "community",
    "research"
  ],
  tags: [
    "type:framework",
    "use:evaluation",
    "use:learning",
    "use:analysis",
     "use:change",
    "use:retrospective",
    "use:decision-making",
    "phase:reflect",
    "phase:adapt",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "identify significant outcomes that already occurred",
    "write clear outcome statements with evidence and dates",
    "analyze contribution pathways with boundary partners",
    "triangulate stories, documents, and indicators",
    "turn insights into decisions, policy shifts, and practice changes",
      "how to look back and see what changed",
  "find out what results already happened",
  "write down clear outcomes with proof",
  "how to connect actions to results",
  "use stories and data together",
  "trace who helped make the change",
  "learn from past work to guide new plans",
  "turn lessons into better decisions",
  "simple way to review project impact",
  "how to check if efforts made a difference"
  ],
  boosters: [
    "Start with users and purpose. Name who will use the harvest and what decisions it should inform.",
    "Write outcome statements in past tense and behavior-first: who did what, when and where, with what significance.",
    "Substantiate with independent sources or peer verification, not just internal claims.",
    "Invite those most affected to review and select outcomes that matter, including negative or unintended ones.",
    "Explain contribution without over-claiming. Name other actors and external factors.",
    "Close the loop with a public brief and a time-boxed action list."
  ],
  definition: "A participatory, retrospective evaluation approach. You collect evidence of outcomes that have already happened, craft precise outcome statements, and work with community partners to analyze significance and contribution, then use the learning to adapt.",
  help: "Complete scope and users, harvest questions, partners and informants, consent and data governance, evidence sources, substantiation plan, and the outcome log. Analyze patterns and translate insights into actions and accountability.",
  fields: [
    // Overview
    {
      label: "Title (initiative or portfolio)",
      key: "title",
      type: "text",
      ph: "e.g., Eastside Forums - Outcome Harvest 2026"
    },
    {
      label: "Time horizon and scope",
      key: "horizon",
      type: "text",
      ph: "e.g., Outcomes from Jan–Dec 2026; forums and micro-grants"
    },
    {
      label: "Primary users and intended use",
      key: "users",
      type: "textarea",
      ph: "e.g., Steering group to set 2027 priorities; funders to assess contribution"
    },
    {
      label: "Harvest questions (one per line)",
      key: "questions",
      type: "textarea",
      ph: "e.g., What outcomes influenced belonging and safety? Which practices contributed most?"
    },
    {
      label: "Domains or tags (one per line)",
      key: "domains",
      type: "textarea",
      ph: "e.g., Inclusion\nTrust\nSafety\nPolicy influence\nLeadership"
    },

    // Partners, roles, ethics
    {
      label: "Boundary partners (whose behavior changed)",
      key: "boundary_partners",
      itemLabel: "partner",
      itemType: "typeahead",
      max: 24,
      autofill: "persona->inline",
      type: "repeater",
      ph: "e.g., Youth council; library branch; tenant association; city liaison"
    },
    {
      label: "Informants and reviewers",
      key: "informants",
      type: "textarea",
      ph: "e.g., Elders circle; facilitators; program staff; external allies"
    },
    {
      label: "Roles and responsibilities",
      key: "roles",
      type: "textarea",
      ph: "e.g., Owner, harvesters, analysts, community reviewers, substantiators"
    },
    {
      label: "Consent and ethics",
      key: "consent",
      type: "textarea",
      ph: "e.g., Ongoing, revocable; plain language; community approvals for publication"
    },
    {
      label: "Data governance and publication tiers",
      key: "data_governance",
      type: "textarea",
      ph: "Public | Community-only | Restricted | Not-for-release, with who decides and how"
    },
    {
      label: "Access supports and compensation",
      key: "access",
      type: "textarea",
      ph: "e.g., Stipends; childcare; transport; interpreters; ASL; large-print"
    },

    // Evidence and substantiation
    {
      label: "Evidence sources to review",
      key: "sources",
      type: "textarea",
      ph: "e.g., Meeting notes; decision logs; emails; policy memos; attendance; media; photos"
    },
    {
      label: "Substantiation plan",
      key: "substantiation",
      type: "textarea",
      ph: "e.g., Independent confirmations by partner orgs; document checks; brief interviews"
    },
    {
      label: "Confidence scale definition",
      key: "confidence_def",
      type: "textarea",
      ph: "e.g., Low = single internal source; Medium = multiple sources; High = independent substantiation"
    },

    // Outcome log
    {
      label: "Outcome statement format hint",
      key: "format_hint",
      type: "textarea",
      ph: "Actor — behavior change — when/where — evidence/source — significance (for whom and why) — our contribution — other contributors/external factors — confidence"
    },
    {
      label: "Outcome entries (one per line using the format hint)",
      key: "outcomes",
      type: "textarea",
      ph: "e.g., Tenant association — adopted multilingual meeting rules — May 2026, Eastside — decision log #57 — increased first-time speakers — our coaching sessions; stipends — city translator program also helped — High"
    },
    {
      label: "Negative or unintended outcomes (optional)",
      key: "unintended",
      type: "textarea",
      ph: "e.g., Evening sessions reduced caregiver participation; evidence and reasons"
    },
    {
      label: "Links to artifacts",
      key: "links",
      type: "textarea",
      ph: "Paste URLs or ids for docs, photos, datasets where allowed"
    },

    // Analysis and use
    {
      label: "Clustering and patterns",
      key: "patterns",
      type: "textarea",
      ph: "e.g., Outcomes cluster around access supports and co-facilitation"
    },
    {
      label: "Contribution analysis",
      key: "contribution",
      type: "textarea",
      ph: "e.g., Our specific activities that plausibly influenced outcomes and how"
    },
    {
      label: "External factors and context",
      key: "external",
      type: "textarea",
      ph: "e.g., Policy shifts; seasonal events; partner campaigns"
    },
    {
      label: "Insights and implications",
      key: "insights",
      type: "textarea",
      ph: "e.g., Which practices to scale, stop, or redesign"
    },
    {
      label: "Decisions and action list (one per line: action - owner - start - check date)",
      key: "actions",
      type: "textarea",
      ph: "e.g., Expand interpreter pool - Maria - Jul - Sep review"
    },
    {
      label: "Paired indicators",
      key: "indicators",
      type: "textarea",
      ph: "e.g., % first-time speakers; belonging index; network density; policy adoptions"
    },
    {
      label: "Feedback and report-back plan",
      key: "feedback",
      type: "textarea",
      ph: "e.g., Community-first brief in 30 days; bilingual summary; open dataset where safe"
    },

    // Delivery
    {
      label: "Timeline and cadence",
      key: "timeline",
      type: "text",
      ph: "e.g., Design in Jan; evidence review in Feb; harvest workshops in Mar; brief in Apr"
    },
    {
      label: "Risks and mitigations",
      key: "risks",
      type: "textarea",
      ph: "e.g., Over-claiming → independent checks; bias → diverse reviewers; fatigue → stipends"
    },
    {
      label: "Workstreams (area - owner - milestones - budget - indicators)",
      key: "workstreams",
      type: "textarea",
      ph: "e.g., Evidence review - analyst team - archive tagged by Feb 10 - $4k - coverage by domain"
    },
    {
      label: "Context and notes",
      key: "ctx",
      type: "textarea",
      ph: "Links, constraints, prior evaluations"
    }
  ],
  template: ({
    title,
    horizon,
    users,
    questions,
    domains,
    boundary_partners,
    informants,
    roles,
    consent,
    data_governance,
    access,
    sources,
    substantiation,
    confidence_def,
    format_hint,
    outcomes,
    unintended,
    links,
    patterns,
    contribution,
    external,
    insights,
    actions,
    indicators,
    feedback,
    timeline,
    risks,
    workstreams,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/)
      .map(x => x.trim())
      .filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`)
      .join("\n");

    const steps = [
      "Design the harvest: users, use, scope, questions",
      "Review sources and draft outcome statements",
      "Engage informants and boundary partners",
      "Substantiate outcomes and rate confidence",
      "Analyze patterns and contribution",
      "Support use: decisions, actions, and public brief"
    ].join("\n");

    return [
      title && `Outcome Harvesting plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and notes:\n${ctx}`,

      "SECTION: Overview",
      horizon && `Time horizon and scope: ${horizon}`,
      users && `Primary users and intended use:\n${users}`,
      questions && ["Harvest questions:", listify(questions)].join("\n"),
      domains && ["Domains or tags:", listify(domains)].join("\n"),

      "SECTION: Partners, roles, and ethics",
      boundary_partners && ["Boundary partners:", listify(boundary_partners)].join("\n"),
      informants && `Informants and reviewers:\n${informants}`,
      roles && `Roles and responsibilities:\n${roles}`,
      consent && `Consent and ethics:\n${consent}`,
      data_governance && `Data governance and publication tiers:\n${data_governance}`,
      access && `Access supports and compensation:\n${access}`,

      "SECTION: Evidence and substantiation",
      sources && `Evidence sources to review:\n${sources}`,
      substantiation && `Substantiation plan:\n${substantiation}`,
      confidence_def && `Confidence scale definition:\n${confidence_def}`,

      "SECTION: Outcome log",
      format_hint && `Outcome statement format hint:\n${format_hint}`,
      outcomes && ["Entries:", listify(outcomes)].join("\n"),
      unintended && `Negative or unintended outcomes:\n${unintended}`,
      links && `Links to artifacts:\n${links}`,

      "SECTION: Analysis and use",
      patterns && `Clustering and patterns:\n${patterns}`,
      contribution && `Contribution analysis:\n${contribution}`,
      external && `External factors and context:\n${external}`,
      insights && `Insights and implications:\n${insights}`,
      actions && ["Decisions and action list:", listify(actions)].join("\n"),
      indicators && ["Paired indicators:", listify(indicators)].join("\n"),
      feedback && `Feedback and report-back plan:\n${feedback}`,

      "SECTION: Delivery",
      timeline && `Timeline and cadence: ${timeline}`,
      risks && `Risks and mitigations:\n${risks}`,
      workstreams && ["Workstreams (area - owner - milestones - budget - indicators):", listify(workstreams)].join("\n"),

      "Quick reference - steps:",
      steps,

      "Checklist:",
      "- [ ] Users and decisions named up front",
      "- [ ] Outcome statements are specific, dated, and evidenced",
      "- [ ] Substantiation completed and confidence rated",
      "- [ ] Negative and unintended outcomes included",
      "- [ ] Contribution explained with other actors and factors",
      "- [ ] Patterns distilled into actionable insights",
      "- [ ] Public brief and close-the-loop report scheduled",
      "- [ ] Actions have owners and check dates"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "Outcome Harvesting retrospective evaluation outcome statements boundary partners contribution analysis substantiation learning decisions template"
  }
},

{
  id: "ripple_effects_mapping",
  slug: "ripple-effects-mapping",
  label: "Ripple Effects Mapping — Appreciative story-mapping of impacts with stakeholders",
  kind: "evaluation",
  categories: [
    "evaluation",
    "learning",
    "community",
    "research",
    "systems"
  ],
  tags: [
    "type:framework",
    "use:evaluation",
    "use:story",
    "use:mapping",
    "use:analysis",
    "use:decision-making",
    "phase:reflect",
    "phase:adapt",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "surface intended, unintended, and emergent outcomes with those affected",
    "map pathways of contribution across people, projects, and systems",
    "identify keystone nodes and leverage points for future action",
    "triangulate appreciative stories with documents and indicators",
    "create a public learning brief and action commitments",
     "how to see the ripple effects of a project",
  "map out what changed because of our work",
  "find unexpected results from a program",
  "use stories to track impact",
  "show how people and projects connect",
  "trace outcomes back to actions",
  "how to learn from community feedback",
  "make a simple map of changes and impact",
  "look at long-term effects together",
  "share impact stories in a clear way"
  ],
  boosters: [
    "Start with appreciative interviews to anchor in real change before mapping.",
    "Invite a diverse, affected group; compensate and provide access supports.",
    "Define node and link types up front; keep a visible legend on the canvas.",
    "Capture evidence links (docs, photos, logs) on nodes and connections.",
    "Name negative or unintended ripples explicitly; they’re valuable learning.",
    "Close by selecting ‘most consequential’ ripples and assigning next actions."
  ],
  definition: "A participatory method that begins with appreciative stories of change, then mind-maps the ripples (secondary/tertiary effects), evidences them, and identifies leverage points and actions.",
  help: "Fill purpose and focal question, roles, participants, interview prompts, map tool/legend, evidence plan, and workshop agenda. During the session, add outcomes as nodes, connect ripples with typed links, tag evidence, cluster, pick keystones, and agree actions.",
  fields: [
    // Overview
    {
      label: "Title (initiative / portfolio)",
      key: "title",
      ph: "e.g., Eastside Forums — Ripple Effects Mapping 2026",
      type: "text"
    },
    {
      label: "Horizon & session dates",
      key: "horizon",
      ph: "e.g., Jan–Mar 2026; workshop on Feb 15, 2–5pm",
      type: "text"
    },
    {
      label: "Purpose & focal question",
      key: "purpose",
      ph: "e.g., What changes have spread from the forums, for whom, and how?",
      type: "textarea"
    },

    // Roles & inclusion
    {
      label: "Facilitator(s) & mapper(s)",
      key: "roles",
      ph: "e.g., Lead facilitator; visual mapper; note-taker; timekeeper",
      type: "textarea"
    },
    {
      label: "Stakeholders / participants",
      autofill: "persona->inline",
      itemLabel: "participant",
      itemType: "typeahead",
      key: "participants",
      max: 28,
      ph: "e.g., Youth leaders; elders circle; newcomer groups; partner orgs; city liaison",
      type: "repeater"
    },
    {
      label: "Access supports & compensation",
      key: "access",
      ph: "e.g., Stipends; childcare; interpreters/ASL; transportation; food; hybrid option",
      type: "textarea"
    },

    // Ethics & governance
    {
      label: "Consent & ethics",
      key: "consent",
      ph: "e.g., Plain-language, ongoing, revocable; story ownership and quoting rules",
      type: "textarea"
    },
    {
      label: "Data governance & publication tiers",
      key: "data_governance",
      ph: "Public • Community-only • Restricted • Sacred/Not-for-release (who decides, criteria)",
      type: "textarea"
    },

    // Inputs & tools
    {
      label: "Appreciative interview prompts",
      key: "prompts",
      ph: "e.g., Tell me about a change you noticed; why it mattered; who/what contributed.",
      type: "textarea"
    },
    {
      label: "Evidence sources to have on hand",
      key: "evidence_sources",
      ph: "e.g., Decision logs; attendance; photos; emails; media mentions; policy memos",
      type: "textarea"
    },
    {
      label: "Map tool & canvas link",
      key: "map_link",
      ph: "e.g., Kumu/Miro/FigJam URL",
      type: "text"
    },
    {
      label: "Node types (legend)",
      key: "node_types",
      ph: "e.g., Outcome; Practice change; Policy; Relationship; Resource; Indicator",
      type: "textarea"
    },
    {
      label: "Link types (legend)",
      key: "link_types",
      ph: "e.g., contributed to; enabled; inspired; removed barrier; amplified; hindered",
      type: "textarea"
    },
    {
      label: "Domains/tags (optional, one per line)",
      key: "domains",
      ph: "e.g., Inclusion\nTrust\nSafety\nLeadership\nPolicy influence",
      type: "textarea"
    },

    // Workshop plan
    {
      label: "Workshop agenda",
      key: "agenda",
      ph: "e.g., Welcome & consent; 2x2 interviews; harvest stories; seed nodes; map ripples; cluster; select keystones; actions; close",
      type: "textarea"
    },
    {
      label: "Seeding stories/outcomes (one per line)",
      key: "seed_outcomes",
      ph: "e.g., First-time speakers doubled at Library A; Youth council formed",
      type: "textarea"
    },

    // Logging during/after workshop
    {
      label: "Outcome log (one per line: outcome — date — for whom — evidence/link)",
      key: "outcome_log",
      ph: "e.g., Tenant association adopted multilingual rules — May 2026 — renters — decision log #57",
      type: "textarea"
    },
    {
      label: "Ripples log (one per line: FROM —[link type]→ TO — evidence/link — date)",
      key: "ripple_log",
      ph: "e.g., Multilingual rules — enabled → First-time speakers ↑ — meeting notes — Jun 2026",
      type: "textarea"
    },
    {
      label: "Negative/unintended ripples",
      key: "unintended",
      ph: "e.g., Evening sessions reduced caregiver participation — sign-ins — Jul–Aug 2026",
      type: "textarea"
    },

    // Synthesis
    {
      label: "Clusters/themes & keystone nodes",
      key: "clusters",
      ph: "e.g., Access supports cluster; Keystone = interpreters pool",
      type: "textarea"
    },
    {
      label: "Pathways & leverage points",
      key: "pathways",
      ph: "e.g., Outreach → first-time speakers → leadership roles; leverage: micro-grant criteria",
      type: "textarea"
    },
    {
      label: "Triangulation & verification",
      key: "verification",
      ph: "e.g., Follow-up calls; docs; indicator trends; member checks",
      type: "textarea"
    },

    // Decisions & follow-through
    {
      label: "Decisions & action list (one per line: action — owner — resources — start — check date)",
      key: "actions",
      ph: "e.g., Expand interpreter pool — Maria — $6k — Jul — Sep review",
      type: "textarea"
    },
    {
      label: "Measures & signals to watch",
      key: "measures",
      ph: "e.g., # nodes/links; path length to outcomes; participation by subgroup; delivery on actions",
      type: "textarea"
    },
    {
      label: "Feedback & public reporting",
      key: "feedback",
      ph: "e.g., Community-first brief in 30 days; bilingual summary; open map snapshot",
      type: "textarea"
    },

    // Risks & timeline
    {
      label: "Risks & safeguards",
      key: "risks",
      ph: "e.g., Over-claiming; confidentiality breaches; dominance by few; fatigue → mitigations",
      type: "textarea"
    },
    {
      label: "Timeline & cadence",
      key: "timeline",
      ph: "e.g., Prep (2 wks); workshop; verification (2 wks); brief & actions (1 wk); follow-up (quarterly)",
      type: "text"
    },
    {
      label: "Context / notes",
      key: "ctx",
      ph: "Links, constraints, prior maps",
      type: "textarea"
    }
  ],
  template: ({
    title,
    horizon,
    purpose,
    roles,
    participants,
    access,
    consent,
    data_governance,
    prompts,
    evidence_sources,
    map_link,
    node_types,
    link_types,
    domains,
    agenda,
    seed_outcomes,
    outcome_log,
    ripple_log,
    unintended,
    clusters,
    pathways,
    verification,
    actions,
    measures,
    feedback,
    risks,
    timeline,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`).join("\n");

    const processCheat = [
      "Appreciative interviews → harvest stories",
      "Seed initial nodes on the canvas",
      "Map ripples with typed links (e.g., enabled, inspired, removed barrier)",
      "Attach evidence and dates to nodes/links",
      "Cluster, spot keystones & leverage points",
      "Select most consequential ripples",
      "Agree actions, owners, and check dates",
      "Publish a community-first brief and map snapshot"
    ].join(" → ");

    return [
      `Ripple Effects Mapping plan${title ? `: ${title}` : ""}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context / notes: ${ctx}`,

      "—",
      "OVERVIEW",
      horizon && `Horizon & session dates: ${horizon}`,
      purpose && `Purpose & focal question:\n${purpose}`,

      "—",
      "ROLES & INCLUSION",
      roles && `Facilitator(s) & mapper(s):\n${roles}`,
      participants && ["Stakeholders / participants:", listify(participants)].join("\n"),
      access && `Access supports & compensation:\n${access}`,

      "—",
      "ETHICS & GOVERNANCE",
      consent && `Consent & ethics:\n${consent}`,
      data_governance && `Data governance & publication tiers:\n${data_governance}`,

      "—",
      "INPUTS & TOOLS",
      prompts && `Appreciative interview prompts:\n${prompts}`,
      evidence_sources && `Evidence sources:\n${evidence_sources}`,
      map_link && `Map tool & canvas: ${map_link}`,
      node_types && `Node types (legend):\n${node_types}`,
      link_types && `Link types (legend):\n${link_types}`,
      domains && ["Domains/tags:", listify(domains)].join("\n"),

      "—",
      "WORKSHOP PLAN",
      agenda && `Agenda:\n${agenda}`,
      seed_outcomes && ["Seeding stories/outcomes:", listify(seed_outcomes)].join("\n"),

      "—",
      "LOGGING",
      outcome_log && ["Outcome log:", listify(outcome_log)].join("\n"),
      ripple_log && ["Ripples log:", listify(ripple_log)].join("\n"),
      unintended && `Negative/unintended ripples:\n${unintended}`,

      "—",
      "SYNTHESIS",
      clusters && `Clusters/themes & keystones:\n${clusters}`,
      pathways && `Pathways & leverage points:\n${pathways}`,
      verification && `Triangulation & verification:\n${verification}`,

      "—",
      "DECISIONS & FOLLOW-THROUGH",
      actions && ["Decisions & action list:", listify(actions)].join("\n"),
      measures && ["Measures & signals:", listify(measures)].join("\n"),
      feedback && `Feedback & public reporting:\n${feedback}`,

      "—",
      "RISKS & TIMELINE",
      risks && `Risks & safeguards:\n${risks}`,
      timeline && `Timeline & cadence: ${timeline}`,

      "—",
      "Quick reference:",
      processCheat,

      "—",
      "Checklist:",
      "- [ ] Diverse, affected participants recruited and supported",
      "- [ ] Legend (node/link types) visible and used consistently",
      "- [ ] Evidence attached to nodes and links; dates recorded",
      "- [ ] Negative/unintended ripples captured without shame or spin",
      "- [ ] Keystones and leverage points identified",
      "- [ ] ‘Most consequential’ ripples selected transparently",
      "- [ ] Action owners, resources, and check dates agreed",
      "- [ ] Community-first brief and map snapshot published within 30 days"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "Ripple Effects Mapping appreciative inquiry outcomes ripples mapping evidence keystone nodes leverage points community workshop template"
  }
},

{
  id: "sensemaker_micro_narratives",
  slug: "sensemaker-micro-narratives",
  label: "SenseMaker: Micro-narratives self-signified by participants to surface patterns",
  kind: "research",
  categories: [
    "research",
    "evaluation",
    "learning",
    "community",
    "analysis-frameworks",
    "data"
  ],
  tags: [
    "type:framework",
    "use:research",
    "use:evaluation",
    "use:narratives",
    "use:pattern-detection",
    "use:analysis",
    "use:engagement",
    "phase:explore",
    "phase:define",
    "phase:reflect",
    "topic:community",
    "level:advanced"
  ],
  use_cases: [
    "collect short real-world stories at scale with low interpreter bias",
    "use participant self-signification to map meaning directly from storytellers",
    "visualize patterns by subgroup using triads, dyads, stones, and filters",
    "run sensemaking workshops to interpret clusters and decide actions",
    "pair narrative patterns with indicators for adaptive management",
      "how to collect lots of short stories fast",
  "let people explain what their own story means",
  "find patterns across many personal stories",
  "use stories to see what’s really happening",
  "sort feedback into themes without bias",
  "make sense of complex community input",
  "see differences between groups in data",
  "how to mix stories with numbers",
  "run a workshop to learn from stories",
  "turn story patterns into action steps"
  ],
  boosters: [
    "Pilot the instrument. Run cognitive testing to make triad pole wording plain-language and culturally grounded.",
    "Keep prompts short. Anchor signifiers in the same time and place as the story.",
    "Collect in multiple languages with the same conceptual signifiers. Validate translations with community reviewers.",
    "Design for inclusion. Offer QR, kiosk, tablet, and assisted options with access supports and stipends.",
    "Plan story pulls. For any hot spot on a triad, specify how you will retrieve exemplar stories for discussion.",
    "Close the loop. Publish a community-first brief and name decisions that will change because of what you learned."
  ],
  definition: "A mixed-method approach that gathers many brief stories and asks storytellers to tag their own meaning using signifiers (triads, dyads, stones). The resulting landscapes reveal patterns for collective sensemaking and action.",
  help: "Complete purpose, sampling, consent, access supports, instrument design (prompts and signifiers), collection channels, volume targets, analysis and visualization plans, sensemaking workshops, decisions, and reporting. Treat triads and dyads as living drafts that you pilot with community reviewers.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., Eastside Forums SenseMaker 2026" },
    { label: "Horizon", key: "horizon", type: "text", ph: "e.g., Jan–Sep 2026" },
    { label: "Purpose and users", key: "purpose", type: "textarea", ph: "e.g., Surface patterns to set 2027 priorities and improve access supports" },
    { label: "Owner and team", key: "owner", type: "textarea", ph: "e.g., Community Council research lead, data steward, language coordinators" },
    {
      label: "Stakeholders and priority subgroups",
      autofill: "persona->inline",
      itemLabel: "group",
      itemType: "typeahead",
      key: "stakeholders",
      max: 28,
      type: "repeater",
      ph: "e.g., Youth; elders; renters; newcomers; disabled residents"
    },

    // Ethics and inclusion
    { label: "Consent and ethics", key: "consent", type: "textarea", ph: "Plain-language, ongoing, revocable; options for named/pseudonym/anonymous; right to review quotes" },
    { label: "Data governance and publication tiers", key: "data_governance", type: "textarea", ph: "Public | Community-only | Restricted | Not-for-release with who decides and why" },
    { label: "Access supports and compensation", key: "access", type: "textarea", ph: "Stipends; childcare; interpreters and ASL; large-print; remote assist" },

    // Instrument design
    { label: "Primary story prompt", key: "prompt_primary", type: "textarea", ph: "Tell a short story about a recent experience that mattered to you here. What happened?" },
    { label: "Secondary prompt (why it mattered)", key: "prompt_secondary", type: "textarea", ph: "Why did this matter to you or others?" },
    { label: "Story length target", key: "story_len", type: "text", ph: "e.g., 1 to 3 minutes or 100 to 250 words" },
    { label: "Triad signifiers (one per line: name - poleA | poleB | poleC)", key: "triads", type: "textarea", ph: "Belonging - Isolated | Mixed | Connected" },
    { label: "Dyad signifiers (one per line: name - left | right)", key: "dyads", type: "textarea", ph: "Voice - Not heard | Strongly heard" },
    { label: "Stones or tags (checkboxes, one per line)", key: "stones", type: "textarea", ph: "Interpreter used\nChildcare available\nFelt safe\nFirst-time speaker" },
    { label: "Metadata fields (one per line)", key: "metadata", type: "textarea", ph: "Location\nDate\nLanguage\nAge group\nDisability status\nRole" },
    { label: "Instrument version and translations", key: "instrument_version", type: "text", ph: "v1.2 - English, Spanish, ASL video variant" },
    { label: "Pilot and cognitive testing plan", key: "pilot", type: "textarea", ph: "5 think-aloud interviews per subgroup; revise wording; re-test" },

    // Collection plan
    { label: "Sampling approach", key: "sampling", type: "textarea", ph: "Purposive with oversampling of under-heard groups; target n by subgroup" },
    { label: "Volume targets", key: "volume", type: "text", ph: "e.g., 300 micro-narratives total; min 40 per priority subgroup" },
    { label: "Channels", key: "channels", type: "textarea", ph: "QR codes; intercept tablets; kiosk; SMS link; partner-hosted sessions" },
    { label: "Fieldwork schedule and SLAs", key: "fieldwork", type: "textarea", ph: "Pop-ups weekly; partner nights; response to support requests within 2 business days" },
    { label: "Quality and integrity checks", key: "quality", type: "textarea", ph: "Duplicate detection; time-on-task; completeness; language review" },

    // Analysis and visualization
    { label: "Filters and comparisons to test", key: "filters", type: "textarea", ph: "Language; disability; age; neighborhood; first-time vs repeat participants" },
    { label: "Visualizations to produce", key: "visuals", type: "textarea", ph: "Triad heatmaps; dyad histograms; stones co-occurrence; landscape contours by subgroup" },
    { label: "Story pull rules", key: "story_pulls", type: "textarea", ph: "From each triad hot spot, pull top 5 nearest stories with consent level for quoting" },
    { label: "Sensemaking workshops", key: "workshops", type: "textarea", ph: "Two sessions with affected groups to interpret patterns and generate hypotheses" },
    { label: "Pattern hypotheses and tests", key: "hypotheses", type: "textarea", ph: "e.g., Interpreter presence shifts belonging toward Connected for newcomers" },
    { label: "Pair with indicators", key: "indicators", type: "textarea", ph: "Belonging index; % first-time speakers; network density; safety incidents" },

    // Decisions and reporting
    { label: "Decisions and action list (one per line: action - owner - start - check date)", key: "actions", type: "textarea", ph: "Expand interpreter pool - Maria - Jul 1 - Sep 15 review" },
    { label: "Feedback and reporting plan", key: "feedback", type: "textarea", ph: "Community-first brief in 30 days; bilingual zine; open dataset of signifiers where safe" },

    // Risks and delivery
    { label: "Risks and safeguards", key: "risks", type: "textarea", ph: "Re-identification; misinterpretation; tech exclusion; fatigue - mitigations and supports" },
    { label: "Timeline and cadence", key: "timeline", type: "text", ph: "Design and pilot May; fieldwork Jun–Aug; analysis Sep; workshops Oct; brief Nov" },
    { label: "Workstreams (area - owner - milestones - budget - indicators)", key: "workstreams", type: "textarea", ph: "Translation - language team - approve v1 by May 10 - $3k - pilot comprehension ≥90%" },
    { label: "Context and notes", key: "ctx", type: "textarea", ph: "Links, prior cycles, platform constraints" }
  ],
  template: ({
    title,
    horizon,
    purpose,
    owner,
    stakeholders,
    consent,
    data_governance,
    access,
    prompt_primary,
    prompt_secondary,
    story_len,
    triads,
    dyads,
    stones,
    metadata,
    instrument_version,
    pilot,
    sampling,
    volume,
    channels,
    fieldwork,
    quality,
    filters,
    visuals,
    story_pulls,
    workshops,
    hypotheses,
    indicators,
    actions,
    feedback,
    risks,
    timeline,
    workstreams,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`).join("\n");

    const steps = [
      "Design prompts and signifiers",
      "Pilot and revise instrument",
      "Collect stories with access supports",
      "Visualize triads, dyads, stones by subgroup",
      "Pull exemplar stories from hot spots",
      "Sensemaking workshops with participants",
      "Decide actions and publish a community-first brief"
    ].join(" -> ");

    return [
      title && `SenseMaker plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and notes: ${ctx}`,

      "SECTION: Overview",
      horizon && `Horizon: ${horizon}`,
      purpose && `Purpose and users:\n${purpose}`,
      owner && `Owner and team:\n${owner}`,
      stakeholders && ["Stakeholders and priority subgroups:", listify(stakeholders)].join("\n"),

      "SECTION: Ethics and inclusion",
      consent && `Consent and ethics:\n${consent}`,
      data_governance && `Data governance and publication tiers:\n${data_governance}`,
      access && `Access supports and compensation:\n${access}`,

      "SECTION: Instrument",
      prompt_primary && `Primary story prompt:\n${prompt_primary}`,
      prompt_secondary && `Secondary prompt:\n${prompt_secondary}`,
      story_len && `Story length target: ${story_len}`,
      triads && ["Triad signifiers:", listify(triads)].join("\n"),
      dyads && ["Dyad signifiers:", listify(dyads)].join("\n"),
      stones && ["Stones or tags:", listify(stones)].join("\n"),
      metadata && ["Metadata fields:", listify(metadata)].join("\n"),
      instrument_version && `Instrument version and translations: ${instrument_version}`,
      pilot && `Pilot and cognitive testing plan:\n${pilot}`,

      "SECTION: Collection",
      sampling && `Sampling approach:\n${sampling}`,
      volume && `Volume targets: ${volume}`,
      channels && `Channels:\n${channels}`,
      fieldwork && `Fieldwork schedule and SLAs:\n${fieldwork}`,
      quality && `Quality and integrity checks:\n${quality}`,

      "SECTION: Analysis and visualization",
      filters && `Filters and comparisons:\n${filters}`,
      visuals && `Visualizations to produce:\n${visuals}`,
      story_pulls && `Story pull rules:\n${story_pulls}`,
      workshops && `Sensemaking workshops:\n${workshops}`,
      hypotheses && `Pattern hypotheses and tests:\n${hypotheses}`,
      indicators && ["Paired indicators:", listify(indicators)].join("\n"),

      "SECTION: Decisions and reporting",
      actions && ["Decisions and action list:", listify(actions)].join("\n"),
      feedback && `Feedback and reporting plan:\n${feedback}`,

      "SECTION: Risk and delivery",
      risks && `Risks and safeguards:\n${risks}`,
      timeline && `Timeline and cadence: ${timeline}`,
      workstreams && ["Workstreams (area - owner - milestones - budget - indicators):", listify(workstreams)].join("\n"),

      "Quick reference",
      steps,

      "Checklist:",
      "- [ ] Triads and dyads piloted and understood across languages",
      "- [ ] Access supports and stipends funded and scheduled",
      "- [ ] Volume targets cover priority subgroups",
      "- [ ] Visualizations produced with subgroup filters",
      "- [ ] Exemplar stories retrieved for each hot spot",
      "- [ ] Sensemaking workshops held with those affected",
      "- [ ] Community-first brief and public summary published",
      "- [ ] Actions have owners and check dates"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "SenseMaker micro-narratives self signification triads dyads stones pattern detection sensemaking workshops filters visualization community evaluation template"
  }
},

{
  id: "deliberative_polling_citizens_jury",
  slug: "deliberative-polling-citizens-jury",
  label: "Deliberative Polling / Citizens' Juries - Informed, structured public deliberation",
  kind: "strategy",
  categories: [
    "governance",
    "community",
    "decision",
    "facilitation",
    "research"
  ],
  tags: [
    "type:framework",
    "use:engagement",
    "use:decision-making",
    "use:research",
    "use:evaluation",
    "phase:define",
    "phase:plan",
    "phase:decide",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "convene a representative mini-public to deliberate on a policy question",
    "produce recommendations or informed preferences for elected bodies",
    "stress test contentious options with balanced materials and expert Q&A",
    "measure knowledge change and opinion movement pre and post",
    "build legitimacy through transparency, inclusion, and reasoned judgment",
     "how to ask regular people about big decisions",
  "make government choices more fair",
  "how to run a citizens jury",
  "let people vote after learning first",
  "ways to test if policies actually make sense",
  "bring random people together to talk about laws",
  "how to get normal folks into politics",
  "decide rules with everyday citizens",
  "get public input without the yelling",
  "how to debate fairly with facts",
  "cheap way to hear from voters",
  "give power back to the people",
  "how to balance expert info with community views",
  "make democracy more legit",
  "stop only rich people making choices",
  "how to test options before leaders decide",
  "use citizens to guide tough choices",
  "measure if opinions change with facts",
  "how to do mini public debates",
  "find fair results on hard issues",
  "ways to involve citizens in policy",
  "make sure decisions aren’t one-sided",
  "how to run a fair town hall",
  "can regular people solve complex issues",
  "teach people before they vote",
  "why citizens juries work",
  "compare before and after public opinion",
  "track knowledge growth in participants",
  "community panels for tough laws",
  "get buy-in for new policies",
  "show leaders what the public thinks",
  "use facts to guide community voting",
  "is deliberative polling reliable",
  "how to stop fake news in voting",
  "make big choices with small groups",
  "random people decide big stuff",
  "test a law idea before passing it",
  "community decision-making methods",
  "easy way to sample public opinion",
  "citizen juries vs surveys",
  "how to make people listen to experts",
  "balance expert panels and local voices",
  "stop biased polling",
  "democracy experiments that work",
  "use citizens to stress test reforms",
  "what’s a mini public",
  "how to pick random citizens fairly",
  "create a fair process for public input",
  "examples of citizens juries working",
  "better than normal surveys",
  "does this build trust in democracy",
  "ways to avoid shouting matches",
  "get shy people to speak in groups",
  "kid style: how can people help the mayor",
  "5th grade: can random people pick ice cream rules",
  "why not let normal people decide stuff",
  "is this like jury duty for politics",
  "how to make voting smarter",
  "classroom version of a citizens jury",
  "fun games to practice democracy",
  "baby question: can kids be in juries",
  "help my town pick a playground design",
  "decide school lunch with citizens",
  "should we vote on pizza toppings this way",
  "how to explain citizens jury to a 10 year old",
  "use citizen panels for climate change",
  "fix democracy with mini juries",
  "test healthcare policies with citizens",
  "let people try out decision making"
  ],
  boosters: [
    "Use sortition with stratified quotas to mirror the community. Publish the sampling frame and response rates.",
    "Create an independent materials committee to curate balanced briefing packs and disclose conflicts of interest.",
    "Pay participants and remove barriers: childcare, transport, interpreters, food, accessibility.",
    "Train neutral table facilitators. Rotate small groups to reduce clustering and dominance.",
    "Schedule expert and witness panels with contrasting perspectives and structured Q&A sourced from participants.",
    "Run pre and post surveys with a short knowledge quiz and fairness perceptions, then publish methods and anonymized results."
  ],
  definition: "A mini-public method where a random, representative group receives balanced information, engages in facilitated small-group deliberation and plenary Q&A, then states informed preferences or issues recommendations.",
  help: "Complete mandate, authority, population and sortition plan, recruitment and access supports, materials committee and expert panels, facilitation model, deliberation questions, agenda, polling instruments, decision rule, reporting, transparency, and evaluation.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., Eastside Energy Deliberative Jury" },
    { label: "Sponsor / convener", key: "sponsor", type: "text", ph: "e.g., City Council with Community Council" },
    { label: "Mandate and question(s)", key: "mandate", type: "textarea", ph: "e.g., Should the city adopt Option A, B, or C for shared spaces?" },
    { label: "Decision authority", key: "authority", type: "text", ph: "advisory | binding within scope | recommendation to elected body" },
    { label: "Budget and resources", key: "budget", type: "textarea", ph: "e.g., $75k total; staffing; venue; platform; evaluation" },

    // Population, sortition, recruitment
    { label: "Population frame", key: "population_frame", type: "textarea", ph: "e.g., Adult residents; sampling source; coverage limits" },
    { label: "Eligibility and exclusions", key: "eligibility", type: "textarea", ph: "e.g., Age 16+; residency; conflict rules; no current office holders" },
    { label: "Sample size and stratification", key: "sample_size", type: "text", ph: "e.g., 48 participants; quotas by ward, age, gender, language, disability" },
    { label: "Sortition method", key: "sortition", type: "textarea", ph: "e.g., Two-stage random selection with stratified quotas; lottery letters + follow-ups" },
    { label: "Recruitment and consent", key: "recruitment", type: "textarea", ph: "e.g., Invitation waves; reminders; consent script; replacements policy" },
    { label: "Compensation and supports", key: "compensation", type: "textarea", ph: "e.g., $200 per day; childcare; transport; interpreters; ASL; remote option" },

    // Governance and neutrality
    { label: "Oversight and independence", key: "oversight", type: "textarea", ph: "e.g., Independent advisory board; community seats; conflict disclosures" },
    { label: "Code of conduct and ground rules", key: "conduct", type: "textarea", ph: "e.g., Respect, equal turns, reason-giving, right to pass" },

    // Materials and experts
    { label: "Briefing materials committee", key: "materials_committee", type: "textarea", ph: "members, remit, balance criteria, review cycle" },
    { label: "Briefing pack contents", key: "briefing_pack", type: "textarea", ph: "plain-language summary; pros/cons; scenarios; FAQs; glossary" },
    { label: "Experts and witnesses", key: "experts", type: "textarea", ph: "e.g., Panel A (advocates), Panel B (opponents), Panel C (neutral analysts), lived experience" },
    { label: "Q&A process", key: "qa_process", type: "textarea", ph: "question collection, clustering, time boxing, fact-check follow-ups" },

    // Facilitation and agenda
    { label: "Facilitation model", key: "facilitation", type: "textarea", ph: "neutral table hosts; rotation plan; talk-time tracking" },
    { label: "Small-group tables and hosts", key: "tables", type: "textarea", ph: "e.g., 8 tables of 6; host assignments; note-taking protocol" },
    { label: "Agenda and schedule", key: "agenda", type: "textarea", ph: "e.g., Welcome; briefing; small groups; panels; plenary; drafting; polling" },
    { label: "Deliberation questions (one per line)", key: "questions", type: "textarea", ph: "e.g., What matters most and why?\nWhich trade-offs are acceptable?" },

    // Polling, drafting, and decisions
    { label: "Pre and post instruments", key: "instruments", type: "textarea", ph: "attitudes; knowledge quiz; fairness perceptions; demographic check" },
    { label: "Decision rule", key: "decision_rule", type: "text", ph: "consensus | consent with objections addressed | majority | ranked choice" },
    { label: "Polling and voting method", key: "voting", type: "textarea", ph: "secret ballot; show of hands; ranked ballot; multiple rounds" },
    { label: "Recommendations drafting process", key: "drafting", type: "textarea", ph: "who drafts, review steps, minority reports, sign-off" },

    // Reporting, transparency, and data
    { label: "Report format and delivery", key: "reporting", type: "textarea", ph: "plain-language report; evidence cited; dissent notes; delivery date" },
    { label: "Transparency plan", key: "transparency", type: "textarea", ph: "publish materials, agenda, methods, anonymized data; livestream plenary; protect small-group privacy" },
    { label: "Data governance and publication tiers", key: "data_governance", type: "textarea", ph: "Public | Community-only | Restricted | Not-for-release; who decides and why" },

    // Evaluation and risks
    { label: "Evaluation criteria and measures", key: "evaluation", type: "textarea", ph: "representativeness; knowledge gain; speaking time parity; reason-giving quality; fairness perceptions" },
    { label: "Risks and mitigations", key: "risks", type: "textarea", ph: "capture by elites; bias in materials; accessibility gaps; misinformation; harassment" },

    // Delivery
    { label: "Workstreams (area - owner - milestones - budget - indicators)", key: "workstreams", type: "textarea", ph: "e.g., Materials - committee - v1 by May 10 - $8k - balance checklist complete" },
    { label: "Timeline and cadence", key: "timeline", type: "text", ph: "e.g., Recruit Apr-May; sessions Jun 10-11; report Jul 1" },
    { label: "Context and links", key: "ctx", type: "textarea", ph: "prior efforts, legal constraints, public commitments" }
  ],
  template: ({
    title,
    sponsor,
    mandate,
    authority,
    budget,
    population_frame,
    eligibility,
    sample_size,
    sortition,
    recruitment,
    compensation,
    oversight,
    conduct,
    materials_committee,
    briefing_pack,
    experts,
    qa_process,
    facilitation,
    tables,
    agenda,
    questions,
    instruments,
    decision_rule,
    voting,
    drafting,
    reporting,
    transparency,
    data_governance,
    evaluation,
    risks,
    workstreams,
    timeline,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/)
      .map(x => x.trim())
      .filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`)
      .join("\n");

    const flow = [
      "Recruit a representative sample",
      "Brief with balanced materials",
      "Small-group deliberation with neutral facilitation",
      "Expert and witness Q&A",
      "Draft recommendations and test options",
      "Poll post deliberation and document rationales",
      "Publish report and methods; enact follow-ups"
    ].join(" -> ");

    return [
      title && `Deliberative Polling / Citizens' Juries plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and links:\n${ctx}`,

      "SECTION: Overview",
      sponsor && `Sponsor / convener: ${sponsor}`,
      mandate && `Mandate and question(s):\n${mandate}`,
      authority && `Decision authority: ${authority}`,
      budget && `Budget and resources:\n${budget}`,

      "SECTION: Population, sortition, recruitment",
      population_frame && `Population frame:\n${population_frame}`,
      eligibility && `Eligibility and exclusions:\n${eligibility}`,
      sample_size && `Sample size and stratification: ${sample_size}`,
      sortition && `Sortition method:\n${sortition}`,
      recruitment && `Recruitment and consent:\n${recruitment}`,
      compensation && `Compensation and supports:\n${compensation}`,

      "SECTION: Governance and neutrality",
      oversight && `Oversight and independence:\n${oversight}`,
      conduct && `Code of conduct and ground rules:\n${conduct}`,

      "SECTION: Materials and experts",
      materials_committee && `Briefing materials committee:\n${materials_committee}`,
      briefing_pack && `Briefing pack contents:\n${briefing_pack}`,
      experts && `Experts and witnesses:\n${experts}`,
      qa_process && `Q&A process:\n${qa_process}`,

      "SECTION: Facilitation and agenda",
      facilitation && `Facilitation model:\n${facilitation}`,
      tables && `Small-group tables and hosts:\n${tables}`,
      agenda && `Agenda and schedule:\n${agenda}`,
      questions && ["Deliberation questions:", listify(questions)].join("\n"),

      "SECTION: Polling, drafting, and decisions",
      instruments && `Pre and post instruments:\n${instruments}`,
      decision_rule && `Decision rule: ${decision_rule}`,
      voting && `Polling and voting method:\n${voting}`,
      drafting && `Recommendations drafting process:\n${drafting}`,

      "SECTION: Reporting, transparency, and data",
      reporting && `Report format and delivery:\n${reporting}`,
      transparency && `Transparency plan:\n${transparency}`,
      data_governance && `Data governance and publication tiers:\n${data_governance}`,

      "SECTION: Evaluation and risks",
      evaluation && `Evaluation criteria and measures:\n${evaluation}`,
      risks && `Risks and mitigations:\n${risks}`,

      "SECTION: Delivery",
      workstreams && ["Workstreams (area - owner - milestones - budget - indicators):", listify(workstreams)].join("\n"),
      timeline && `Timeline and cadence: ${timeline}`,

      "Quick reference - flow",
      flow,

      "Checklist:",
      "- [ ] Stratified sortition plan and response rates published",
      "- [ ] Balanced materials curated by an independent committee",
      "- [ ] Neutral facilitation with rotation and talk-time tracking",
      "- [ ] Expert and witness panels include contrasting perspectives",
      "- [ ] Pre and post instruments fielded and reported",
      "- [ ] Decision rule and drafting process are clear and fair",
      "- [ ] Plain-language report delivered with methods and anonymized data",
      "- [ ] Follow-up actions assigned to owners with dates"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "deliberative polling citizens jury citizens assembly sortition random selection balanced briefing neutral facilitation expert Q&A informed preferences recommendations evaluation template"
  }
},

{
  id: "world_cafe",
  slug: "world-cafe-rotating-conversations",
  label: "World Café - Rotating small-group conversations to synthesize collective themes",
  kind: "facilitation",
  categories: [
    "community",
    "facilitation",
    "learning",
    "decision",
    "planning"
  ],
  tags: [
    "type:method",
    "use:engagement",
    "use:facilitation",
    "use:learning",
    "use:decision-making",
    "use:synthesis",
    "phase:explore",
    "phase:define",
    "topic:community",
    "level:beginner"
  ],
  use_cases: [
    "host rotating small-group conversations on a focused topic",
    "surface patterns across perspectives and synthesize themes",
    "build relationships and shared understanding at scale",
    "feed recommendations into strategy or policy decisions",
    "create a public learning brief with commitments",
    "how to host a world cafe session",
  "best way to get people talking at events",
  "run small group conversations that connect",
  "make big meetings less boring",
  "how to hear everyone’s voice",
  "rotate groups for fresh ideas",
  "share stories in a structured way",
  "get themes from many perspectives",
  "how to turn talk into action",
  "build trust through conversation",
  "make strategy more inclusive",
  "use world cafe for policy ideas",
  "how to design community dialogue",
  "create a learning circle event",
  "ways to bring strangers together",
  "generate ideas for city planning",
  "school version of world cafe",
  "fun workshop method",
  "how to connect different departments",
  "break silos with conversation",
  "easy facilitation for big groups",
  "what is a rotating conversation",
  "get people engaged without PowerPoint",
  "how to collect insights from tables",
  "use cafe style talks for innovation",
  "when to use world cafe vs focus group",
  "help people open up",
  "simple group method to share ideas",
  "can this work online",
  "virtual world cafe tips",
  "how to map conversation themes",
  "use markers and tablecloths for ideas",
  "make meetings feel like coffee shop",
  "ways to host dialogue at a conference",
  "how to involve shy people",
  "group brainstorm but calmer",
  "turn discussions into patterns",
  "how to make people listen better",
  "funny idea: world cafe with donuts",
  "can kids do world cafe at school",
  "grade 5: rotate tables for story time",
  "decide pizza toppings with world cafe",
  "family reunion conversation game",
  "neighborhood planning conversations",
  "church group dialogue method",
  "nonprofit board retreat ideas",
  "classroom democracy practice",
  "explain world cafe to a 10 year old",
  "get consensus without fighting",
  "how to avoid one person taking over",
  "best way to mix groups of people",
  "community healing through conversation",
  "how to use world cafe for climate ideas",
  "team building with conversations",
  "end with one big summary everyone agrees on"
  ],
  boosters: [
    "Frame one clear focus question and two follow-ups that progressively deepen the conversation.",
    "Select and train table hosts to welcome newcomers and carry key insights forward each round.",
    "Design short rounds with purposeful rotation so ideas cross-pollinate. Timebox and signal transitions.",
    "Make thinking visible. Tablecloth notes, sticky clusters, and a live theme wall help everyone see patterns.",
    "Provide access supports and compensation. Track speaking balance to reduce dominance.",
    "Close with a strong harvest: plenary themes, priorities, owners, and dates for report-back."
  ],
  definition: "A structured conversation format using multiple rounds of small-group dialogue with rotations. Hosts anchor tables while participants move, cross-pollinating ideas and producing shared themes for action.",
  help: "Complete purpose, participants, access supports, table hosts, rounds and rotation plan, focus questions, materials, harvest method, and follow-ups. Use the agenda to keep energy high and make insights visible.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., World Café on Shared Spaces" },
    { label: "Horizon and date", key: "horizon", type: "text", ph: "e.g., Spring cycle; event on May 18, 6–8 pm" },
    { label: "Purpose and focal topic", key: "purpose", type: "textarea", ph: "e.g., Identify 3 priorities to improve belonging across sites" },
    { label: "Sponsor or owner", key: "owner", type: "text", ph: "e.g., Community Council with Library" },

    // Inclusion
    {
      label: "Participants and inclusion",
      autofill: "persona->inline",
      itemLabel: "participant group",
      itemType: "typeahead",
      key: "participants",
      max: 28,
      type: "repeater",
      ph: "e.g., Youth leaders; elders; renters; newcomers; disabled residents"
    },
    { label: "Recruitment and outreach plan", key: "recruitment", type: "textarea", ph: "e.g., Partner invites; SMS; flyers; door-to-door in focus blocks" },
    { label: "Access supports and compensation", key: "access", type: "textarea", ph: "e.g., Stipends; childcare; interpreters and ASL; transport; food; sensory supports" },

    // Setup
    { label: "Venue and layout", key: "venue", type: "textarea", ph: "e.g., 8 round tables of 6; quiet space; clear signage; theme wall; projector" },
    { label: "Materials and tools", key: "materials", type: "textarea", ph: "e.g., Paper tablecloths; markers; sticky notes; dots; timers; talk-time tracker" },
    { label: "Consent and documentation rules", key: "consent", type: "textarea", ph: "e.g., Plain-language consent; photos only with sticker opt-in; quotes anonymized by default" },
    { label: "Data governance and publication tiers", key: "data_governance", type: "textarea", ph: "Public | Community-only | Restricted | Not-for-release (who decides and why)" },

    // Hosts and rounds
    { label: "Table hosts (names or roles)", key: "hosts", type: "textarea", ph: "e.g., 8 hosts briefed to welcome, summarize, and capture notes" },
    { label: "Number of tables and capacity", key: "tables", type: "text", ph: "e.g., 8 tables, 6 seats each" },
    { label: "Rounds and timing", key: "rounds", type: "text", ph: "e.g., 3 rounds of 18 minutes plus 10 minute harvest" },
    { label: "Rotation method", key: "rotation", type: "text", ph: "e.g., All rotate clockwise except hosts who stay" },

    // Questions
    { label: "Round 1 focus question", key: "q1", type: "text", ph: "e.g., What helps you feel welcome here?" },
    { label: "Round 2 focus question", key: "q2", type: "text", ph: "e.g., What practices or policies make that easier or harder?" },
    { label: "Round 3 focus question", key: "q3", type: "text", ph: "e.g., What are the next two moves we can commit to?" },
    { label: "Prompt cards or examples (optional)", key: "prompts", type: "textarea", ph: "e.g., Stories, photos, data points to spark thinking" },

    // Harvest and synthesis
    { label: "Harvest method", key: "harvest", type: "textarea", ph: "e.g., Gallery walk to cluster notes, dot-vote for energy check, plenary theme report" },
    { label: "Theme categories or tags", key: "tags", type: "textarea", ph: "e.g., Access; Safety; Belonging; Space design; Partnerships" },
    { label: "Action capture template", key: "action_template", type: "textarea", ph: "Action — owner — resources — start — check date" },
    { label: "Report-back plan", key: "report_back", type: "textarea", ph: "e.g., Publish plain-language brief in 14 days with owners and dates" },

    // Measures and risks
    { label: "Measures and signals", key: "measures", type: "textarea", ph: "e.g., Attendance by subgroup; speaking balance; number of themes; commitments made" },
    { label: "Risks and mitigations", key: "risks", type: "textarea", ph: "e.g., Dominance by a few; drift from topic; superficial outputs; fatigue" },

    // Timeline and context
    { label: "Agenda and schedule", key: "agenda", type: "textarea", ph: "e.g., Welcome; agreements; Round 1; rotate; Round 2; rotate; Round 3; harvest; close" },
    { label: "Timeline and cadence", key: "timeline", type: "text", ph: "e.g., Prep 2 weeks; event; report in 14 days; follow-up circle in 30 days" },
    { label: "Context and notes", key: "ctx", type: "textarea", ph: "Links, constraints, prior events" }
  ],
  template: ({
    title,
    horizon,
    purpose,
    owner,
    participants,
    recruitment,
    access,
    venue,
    materials,
    consent,
    data_governance,
    hosts,
    tables,
    rounds,
    rotation,
    q1,
    q2,
    q3,
    prompts,
    harvest,
    tags,
    action_template,
    report_back,
    measures,
    risks,
    agenda,
    timeline,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`).join("\n");

    const flow = [
      "Welcome and agreements",
      "Round 1 conversations",
      "Rotate",
      "Round 2 conversations",
      "Rotate",
      "Round 3 conversations",
      "Harvest themes and actions",
      "Close and next steps"
    ].join(" -> ");

    return [
      title && `World Café plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and notes: ${ctx}`,

      "SECTION: Overview",
      horizon && `Horizon and date: ${horizon}`,
      purpose && `Purpose and focal topic:\n${purpose}`,
      owner && `Sponsor or owner: ${owner}`,

      "SECTION: Inclusion",
      participants && ["Participants and inclusion:", listify(participants)].join("\n"),
      recruitment && `Recruitment and outreach plan:\n${recruitment}`,
      access && `Access supports and compensation:\n${access}`,

      "SECTION: Setup",
      venue && `Venue and layout:\n${venue}`,
      materials && `Materials and tools:\n${materials}`,
      consent && `Consent and documentation rules:\n${consent}`,
      data_governance && `Data governance and publication tiers:\n${data_governance}`,

      "SECTION: Hosts and rounds",
      hosts && `Table hosts:\n${hosts}`,
      tables && `Number of tables and capacity: ${tables}`,
      rounds && `Rounds and timing: ${rounds}`,
      rotation && `Rotation method: ${rotation}`,

      "SECTION: Questions",
      q1 && `Round 1 question: ${q1}`,
      q2 && `Round 2 question: ${q2}`,
      q3 && `Round 3 question: ${q3}`,
      prompts && `Prompt cards or examples:\n${prompts}`,

      "SECTION: Harvest and synthesis",
      harvest && `Harvest method:\n${harvest}`,
      tags && ["Theme categories or tags:", listify(tags)].join("\n"),
      action_template && `Action capture template:\n${action_template}`,
      report_back && `Report-back plan:\n${report_back}`,

      "SECTION: Measures and risks",
      measures && ["Measures and signals:", listify(measures)].join("\n"),
      risks && `Risks and mitigations:\n${risks}`,

      "SECTION: Timeline",
      agenda && `Agenda and schedule:\n${agenda}`,
      timeline && `Timeline and cadence: ${timeline}`,

      "Quick reference",
      flow,

      "Checklist:",
      "- [ ] Focus questions are clear and progressively deepen the conversation",
      "- [ ] Table hosts briefed to welcome, summarize, and carry insights forward",
      "- [ ] Rotations timed and signaled; talk-time balance observed",
      "- [ ] Visible capture: tablecloth notes, clusters, and theme wall",
      "- [ ] Harvest produces themes, priorities, owners, and dates",
      "- [ ] Consent rules and publication tiers respected",
      "- [ ] Report-back scheduled with public summary and commitments"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "World Café rotating small groups table hosts rounds rotation harvest themes gallery walk dot vote community facilitation template"
  }
},


{
  id: "open_space_technology",
  slug: "open-space-technology",
  label: "Open Space Technology - Participant-set agenda for what matters now",
  kind: "facilitation",
  categories: [
    "community",
    "facilitation",
    "learning",
    "decision",
    "planning"
  ],
  tags: [
    "type:method",
    "use:engagement",
    "use:facilitation",
    "use:decision-making",
    "use:sensemaking",
    "use:synthesis",
    "phase:explore",
    "phase:define",
    "phase:decide",
    "topic:community",
    "level:beginner"
  ],
  use_cases: [
    "surface what matters now and let participants set the agenda",
    "host many parallel sessions with minimal bureaucracy",
    "harvest insights rapidly and converge on next actions",
    "build ownership by letting energy and responsibility match",
    "feed themes and commitments into strategy or policy",
     "how to run an open space event",
  "let people choose their own topics",
  "make an unconference agenda",
  "how to plan without a plan",
  "best way to hear what matters now",
  "set the agenda as we go",
  "how to avoid boring panels",
  "get people to self-organize",
  "run many breakout groups at once",
  "fast way to gather community input",
  "easy way to host parallel sessions",
  "what is open space meeting",
  "how to keep energy in meetings",
  "group method with no boss telling",
  "let participants decide the agenda",
  "unconference vs conference",
  "how to summarize open discussions",
  "ways to harvest ideas quickly",
  "tools for big group self-organization",
  "how to make sure no one dominates",
  "use open space for nonprofits",
  "can schools use open space meetings",
  "community meeting with no preset agenda",
  "how to do self-directed workshops",
  "is this chaos or organized",
  "let people leave boring sessions",
  "law of two feet explained",
  "open space rules for beginners",
  "can kids use open space in class",
  "pizza night open space agenda",
  "decide summer camp games with open space",
  "family reunion planning method",
  "church retreat open agenda",
  "neighborhood idea gathering",
  "workshop with zero bureaucracy",
  "how to get next steps from chaos",
  "turn random ideas into action",
  "self-organizing conference tips",
  "can this work online meetings",
  "zoom breakout version of open space",
  "harvest themes without formal notes",
  "how to build ownership in meetings",
  "quick way to set meeting topics",
  "funny idea: open space for pets",
  "5th grade: decide playground rules together",
  "kids pick their own class topics",
  "how to stop boring agendas",
  "best way to spark creativity fast",
  "everyone chooses their own group",
  "explain open space to a 10 year old",
  "how to make big meetings not suck",
  "help my team brainstorm without structure",
  "ways to avoid death by PowerPoint",
  "turn chaos into community wisdom"
  ],
  boosters: [
    "Name a sharp theme or question. Energy follows clarity.",
    "Explain the one law (two feet) and four principles up front. Post them big.",
    "Resource access supports and food so people can stay and contribute.",
    "Invite butterflies and bumblebees. Serendipity is a feature, not a bug.",
    "Run a visible newsroom that compiles session notes as they happen.",
    "Close with a strong harvest and action marketplace with owners and dates."
  ],
  definition: "A self-organizing meeting format where participants create the agenda in a marketplace, host the conversations they care about, and move freely according to passion and responsibility. The group harvests themes and actions at the end.",
  help: "Complete theme and invitation, inclusion and access, space setup, principles and law, marketplace plan, rounds and timing, newsroom and harvest, and action convergence. Use the session report template to capture notes consistently.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., Open Space on Belonging Across Neighborhoods" },
    { label: "Horizon and date", key: "horizon", type: "text", ph: "e.g., Spring cycle; event on May 18, 1–5 pm" },
    { label: "Theme or focus question", key: "theme", type: "text", ph: "e.g., What will most increase first-time speakers this summer?" },
    { label: "Sponsor or owner", key: "owner", type: "text", ph: "e.g., Community Council with Library" },
    { label: "Invitation text", key: "invitation", type: "textarea", ph: "Plain-language invite that names who, why now, and what will be different after" },

    // Inclusion
    {
      label: "Participants and inclusion",
      autofill: "persona->inline",
      itemLabel: "participant group",
      itemType: "typeahead",
      key: "participants",
      max: 28,
      type: "repeater",
      ph: "e.g., Youth; elders; renters; newcomers; disabled residents; small biz owners"
    },
    { label: "Recruitment and outreach plan", key: "recruitment", type: "textarea", ph: "e.g., Partner invites; SMS; flyers; door-to-door in focus blocks" },
    { label: "Access supports and compensation", key: "access", type: "textarea", ph: "e.g., Stipends; childcare; interpreters and ASL; transport; food; sensory supports" },

    // Ethics and governance
    { label: "Consent and documentation rules", key: "consent", type: "textarea", ph: "Plain-language consent; photos only with sticker opt-in; quotes anonymized by default" },
    { label: "Data governance and publication tiers", key: "data_governance", type: "textarea", ph: "Public | Community-only | Restricted | Not-for-release (who decides and why)" },

    // Space and setup
    { label: "Venue and layout", key: "venue", type: "textarea", ph: "e.g., Circle of chairs; marketplace wall; breakout spaces; newsroom tables; theme wall" },
    { label: "Space zones and signage", key: "zones", type: "textarea", ph: "e.g., Quiet room; childcare; prayer space; lactation room; accessibility routes" },
    { label: "Materials and tools", key: "materials", type: "textarea", ph: "e.g., Sticky notes; markers; flip charts; painter tape; timers; dot stickers; laptop + printer" },
    { label: "Marketplace board link", key: "marketplace_link", type: "text", ph: "URL to Kumu/Miro/FigJam or photo album" },

    // Principles and law
    { label: "Four principles (custom wording optional)", key: "principles", type: "textarea", ph: "Whoever comes are the right people; Whenever it starts is the right time; Whatever happens is the only thing that could; When it is over, it is over" },
    { label: "One law (two feet) wording", key: "law_two_feet", type: "text", ph: "If you are neither learning nor contributing, use your two feet to find a place where you can" },

    // Roles and timing
    { label: "Roles and staffing", key: "roles", type: "textarea", ph: "e.g., Host; timekeeper; marketplace wrangler; newsroom lead; accessibility lead; stewards" },
    { label: "Opening circle plan", key: "opening", type: "textarea", ph: "Welcome; agreements; explain principles and law; how to pitch topics" },
    { label: "Rounds and timing", key: "rounds", type: "text", ph: "e.g., 3 rounds of 40 minutes with 10 minute transitions" },
    { label: "Breaks and food", key: "breaks", type: "text", ph: "e.g., Snack break 2:30; water and fruit always available" },

    // Marketplace and sessions
    { label: "Topic pitch instructions", key: "pitch_rules", type: "textarea", ph: "Propose a session you will convene; write a short title and outcome; pick time and space; post it" },
    { label: "Session capacity and spaces", key: "spaces", type: "textarea", ph: "e.g., Rooms A–H, 6–12 seats; outdoor corner; hybrid table" },
    { label: "Marketplace schedule snapshot", key: "marketplace", type: "textarea", ph: "e.g., Round 1: A1, B1, C1; Round 2: A2, B2, C2; Round 3: A3, B3, C3" },

    // Newsroom and harvest
    { label: "Newsroom and synthesis plan", key: "newsroom", type: "textarea", ph: "Collect session notes; live typing station; photo capture; theme wall clustering; printer for gallery" },
    { label: "Session report template", key: "report_template", type: "textarea", ph: "Title — convenor — participants — key points — decisions — actions (owner, start, check date) — links/tags" },
    { label: "Session reports log (one per line using the template)", key: "reports", type: "textarea", ph: "e.g., Interpreters pool — J. Rivera — 7 — what worked, gaps — 2 actions — link" },
    { label: "Convergence method", key: "convergence", type: "textarea", ph: "e.g., Action marketplace; dot energy check; consent-based merge of overlaps" },
    { label: "Decisions and action list (one per line: action - owner - resources - start - check date)", key: "actions", type: "textarea", ph: "e.g., Expand interpreter pool - Maria - $6k - Jul - Sep review" },
    { label: "Report-back plan", key: "report_back", type: "textarea", ph: "Community-first brief in 14 days; bilingual summary; publish all session notes" },

    // Measures, risks, timeline
    { label: "Measures and signals", key: "measures", type: "textarea", ph: "Attendance by subgroup; # sessions; speaking balance; % sessions convened by residents; commitments made" },
    { label: "Risks and mitigations", key: "risks", type: "textarea", ph: "Dominance by a few; inaccessible rooms; note loss; drift from theme; safety incidents" },
    { label: "Timeline and cadence", key: "timeline", type: "text", ph: "Prep 2 weeks; event; harvest 3 days; report in 14 days; follow-up circle in 30 days" },
    { label: "Context and notes", key: "ctx", type: "textarea", ph: "Links, constraints, prior events" }
  ],
  template: ({
    title,
    horizon,
    theme,
    owner,
    invitation,
    participants,
    recruitment,
    access,
    consent,
    data_governance,
    venue,
    zones,
    materials,
    marketplace_link,
    principles,
    law_two_feet,
    roles,
    opening,
    rounds,
    breaks,
    pitch_rules,
    spaces,
    marketplace,
    newsroom,
    report_template,
    reports,
    convergence,
    actions,
    report_back,
    measures,
    risks,
    timeline,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i + 1}. ${x}`).join("\n");

    const principlesCheat = [
      "Whoever comes are the right people",
      "Whenever it starts is the right time",
      "Whatever happens is the only thing that could",
      "When it is over, it is over"
    ].join("\n");

    const lawCheat = "Law of two feet: if you are neither learning nor contributing, move to a place where you can.";

    const flow = [
      "Opening circle and invitation",
      "Marketplace of topics and scheduling",
      "Parallel sessions with free movement",
      "Newsroom compiles reports live",
      "Theme clustering and action marketplace",
      "Closing circle and commitments",
      "Publish report-back and owners"
    ].join(" -> ");

    return [
      title && `Open Space Technology plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and notes: ${ctx}`,

      "SECTION: Overview",
      horizon && `Horizon and date: ${horizon}`,
      theme && `Theme or focus question: ${theme}`,
      owner && `Sponsor or owner: ${owner}`,
      invitation && `Invitation:\n${invitation}`,

      "SECTION: Inclusion",
      participants && ["Participants and inclusion:", listify(participants)].join("\n"),
      recruitment && `Recruitment and outreach plan:\n${recruitment}`,
      access && `Access supports and compensation:\n${access}`,

      "SECTION: Ethics and governance",
      consent && `Consent and documentation rules:\n${consent}`,
      data_governance && `Data governance and publication tiers:\n${data_governance}`,

      "SECTION: Space and setup",
      venue && `Venue and layout:\n${venue}`,
      zones && `Space zones and signage:\n${zones}`,
      materials && `Materials and tools:\n${materials}`,
      marketplace_link && `Marketplace board link: ${marketplace_link}`,

      "SECTION: Principles and law",
      principles ? `Four principles:\n${principles}` : `Four principles:\n${principlesCheat}`,
      law_two_feet ? `One law:\n${law_two_feet}` : `One law:\n${lawCheat}`,

      "SECTION: Roles and timing",
      roles && `Roles and staffing:\n${roles}`,
      opening && `Opening circle plan:\n${opening}`,
      rounds && `Rounds and timing: ${rounds}`,
      breaks && `Breaks and food: ${breaks}`,

      "SECTION: Marketplace and sessions",
      pitch_rules && `Topic pitch instructions:\n${pitch_rules}`,
      spaces && `Session capacity and spaces:\n${spaces}`,
      marketplace && `Marketplace schedule snapshot:\n${marketplace}`,

      "SECTION: Newsroom and harvest",
      newsroom && `Newsroom and synthesis plan:\n${newsroom}`,
      report_template && `Session report template:\n${report_template}`,
      reports && ["Session reports log:", listify(reports)].join("\n"),
      convergence && `Convergence method:\n${convergence}`,
      actions && ["Decisions and action list:", listify(actions)].join("\n"),
      report_back && `Report-back plan:\n${report_back}`,

      "SECTION: Measures, risks, timeline",
      measures && ["Measures and signals:", listify(measures)].join("\n"),
      risks && `Risks and mitigations:\n${risks}`,
      timeline && `Timeline and cadence: ${timeline}`,

      "Quick reference",
      flow,

      "Checklist:",
      "- [ ] Theme is sharp and visible; invite is clear about why now",
      "- [ ] Principles and the law are posted and explained",
      "- [ ] Marketplace wall and breakout spaces are ready with signage",
      "- [ ] Access supports, childcare, food, and stipends funded and available",
      "- [ ] Newsroom live-captures session notes using a standard template",
      "- [ ] Action marketplace yields owners, resources, and check dates",
      "- [ ] Publish community-first summary and all session notes within 14 days",
      "- [ ] Follow-up circle scheduled to review delivery on actions"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "Open Space Technology participant led agenda marketplace two feet four principles butterflies bumblebees newsroom harvest action marketplace template"
  }
},


{
  id: "future_search",
  slug: "future-search-whole-system-planning",
  label: "Future Search — Whole-system, future-focused planning (2–3 days)",
  kind: "strategy",
  categories: [
    "planning",
    "facilitation",
    "community",
    "governance",
    "systems"
  ],
  tags: [
    "type:framework",
    "use:strategy",
    "use:alignment",
    "use:decision-making",
    "use:sensemaking",
    "phase:define",
    "phase:plan",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "bring a ‘whole system in the room’ to build shared understanding",
    "surface common ground and create near-term action commitments",
    "shift from problem talk to future-focused scenarios",
    "align multiple organizations, communities, and agencies on priorities",
    "launch cross-sector action teams with clear charters",
     "how to plan the future together",
  "big workshop to set goals",
  "get everyone in one room to agree",
  "how to align many groups fast",
  "best way to find common ground",
  "plan with community and government",
  "make a shared vision of the future",
  "how to stop fighting and plan",
  "ways to create near-term action steps",
  "future search meeting explained",
  "whole system planning method",
  "run a 3 day planning workshop",
  "how to focus on the future not the past",
  "shift people from problems to solutions",
  "align partners across sectors",
  "multi-organization planning tool",
  "bring business and community together",
  "how to do long term planning fairly",
  "future search vs strategic planning",
  "ways to map scenarios",
  "launch cross sector action teams",
  "fast way to align priorities",
  "how to get everyone’s voice in planning",
  "whole community planning sessions",
  "align around shared purpose",
  "develop shared action plans",
  "how to find what we all agree on",
  "school version of future search",
  "city planning future search",
  "how to plan a community visioning event",
  "best method for strategic workshops",
  "use future search for nonprofits",
  "government and citizens planning together",
  "plan for climate change together",
  "business future planning method",
  "how to make a long term roadmap",
  "what is future search workshop",
  "funny idea: future search for pizza night",
  "decide family vacation with future search",
  "can kids use future search in class",
  "5th grade: plan our playground future",
  "decide next school year projects",
  "neighborhood future planning",
  "church future planning retreat",
  "sports club long term planning",
  "decide what to do in next 10 years",
  "make a shared plan without arguing",
  "big team offsite ideas",
  "turn chaos into action steps",
  "how to get consensus on priorities",
  "community vision workshop ideas",
  "align around 5 year goals",
  "explain future search to a 10 year old",
  "how to agree on the next steps",
  "find common ground fast",
  "future focused group planning",
  "large scale collaboration workshop"
  ],
  boosters: [
    "Invite the whole system: people with authority, resources, expertise, need, and diversity of lived experience.",
    "Follow the core principles: whole system, future focus, common ground, self-managed small groups, and public data.",
    "Keep time-boxed plenaries short and put most work in small, mixed groups.",
    "Make the ‘history wall’ and ‘trends’ visual and public; let evidence travel between groups.",
    "Write common-ground statements in participants’ words; avoid weasel words and vague verbs.",
    "End with action teams that own ‘who does what by when,’ plus immediate next steps."
  ],
  definition: "A large-group planning method (typically 2–3 days) where a cross-section of the whole system explores the past and present, imagines preferred futures, agrees on common ground, and forms action teams.",
  help: "Complete purpose, participants, access, agenda blocks (history → trends → present → future scenarios → common ground → action planning), facilitation roles, materials, documentation rules, and follow-ups.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., Future Search: Belonging Across Neighborhoods" },
    { label: "Horizon & dates", key: "horizon", type: "text", ph: "e.g., 2.5 days — Jun 12–14" },
    { label: "Purpose & focus question", key: "purpose", type: "textarea", ph: "e.g., What future do we want for shared spaces in the next 3 years, and what will we do now?" },
    { label: "Sponsor / convener", key: "sponsor", type: "text", ph: "e.g., City + Community Council + Library" },
    { label: "Decision authority / mandate", key: "authority", type: "text", ph: "advisory | recommendation | binding within scope" },

    // Inclusion & logistics
    {
      label: "Participants (whole system categories)",
      autofill: "persona->inline",
      itemLabel: "stakeholder group",
      itemType: "typeahead",
      key: "participants",
      max: 40,
      type: "repeater",
      ph: "e.g., Youth; elders; renters; small biz; disability advocates; city; CBOs; funders; police; librarians"
    },
    { label: "Recruitment, quotas & sortition (if used)", key: "recruitment", type: "textarea", ph: "invite list, quotas by subgroup, outreach plan, response rate target" },
    { label: "Access supports & compensation", key: "access", type: "textarea", ph: "stipends; childcare; interpreters/ASL; transport; food; sensory supports; remote option" },
    { label: "Venue & layout (and virtual links)", key: "venue", type: "textarea", ph: "plenary room; 8–12 mixed tables; wall space for history/trends; quiet room; hybrid tech" },
    { label: "Materials & tools", key: "materials", type: "textarea", ph: "history wall paper; markers; sticky notes; dots; timers; projectors; talk-time tracker" },

    // Ethics & governance
    { label: "Consent & documentation rules", key: "consent", type: "textarea", ph: "plain-language consent; photo rules; quotes anonymized by default" },
    { label: "Data governance & publication tiers", key: "data_governance", type: "textarea", ph: "Public | Community-only | Restricted | Not-for-release — who decides, criteria" },

    // Principles & roles
    { label: "Principles (confirm/wording)", key: "principles", type: "textarea", ph: "whole system; future focus; common ground; self-managed groups; public data" },
    { label: "Facilitation team & roles", key: "roles", type: "textarea", ph: "lead facilitator; co-facilitators; harvest lead; accessibility lead; logistics; comms" },

    // Agenda blocks (edit timings as needed)
    { label: "Block 1: Welcome, purpose, and agreements", key: "block1", type: "textarea", ph: "check-in; goals; ground rules; access supports; overview of process" },
    { label: "Block 2: History Wall (Past)", key: "block2", type: "textarea", ph: "decades/years; personal, local, national/global events; gallery walk" },
    { label: "Block 3: External Trends (Present/Future forces)", key: "block3", type: "textarea", ph: "social, tech, economic, environmental, political; evidence snippets; implications" },
    { label: "Block 4: Present State (Proud/Sad/Worried)", key: "block4", type: "textarea", ph: "mixed tables; what we’re proud of, what concerns us; data and stories" },
    { label: "Block 5: Ideal Future Scenarios (Preferred futures)", key: "block5", type: "textarea", ph: "create vivid 3–5 year scenarios; headlines; storyboards; measures" },
    { label: "Block 6: Common Ground Statements", key: "block6", type: "textarea", ph: "draft in mixed groups; test for shared support; edit to plain language" },
    { label: "Block 7: Action Planning & Teams", key: "block7", type: "textarea", ph: "form teams; charters; 90-day moves; owners, resources, check dates" },
    { label: "Block 8: Commitments & Close", key: "block8", type: "textarea", ph: "public commitments; sign the statements; next meetings; report-back plan" },

    // Artifacts & action
    { label: "Common ground drafting rules", key: "cg_rules", type: "textarea", ph: "present tense; plain verbs; no blame; test for consent; publish changes log" },
    { label: "Action team charter template", key: "charter_tpl", type: "textarea", ph: "Goal — owner — members — first moves — resources — risks — measures — 30/60/90 dates" },
    { label: "Harvest & reporting plan", key: "reporting", type: "textarea", ph: "daily newsletter wall; live doc; public brief in 14 days; multilingual summary" },

    // Measures, risks, timeline
    { label: "Measures & evaluation", key: "measures", type: "textarea", ph: "participation by subgroup; talk-time parity; quality of common ground; action delivery rate" },
    { label: "Risks & mitigations", key: "risks", type: "textarea", ph: "dominance by a few; tokenism; fatigue; conflict; inaccessible venue — safeguards" },
    { label: "Follow-ups & cadence", key: "followups", type: "textarea", ph: "monthly action team check-ins; quarterly public updates; annual mini-review" },
    { label: "Context & links", key: "ctx", type: "textarea", ph: "prior plans; constraints; reference docs; commitments" }
  ],
  template: ({
    title,
    horizon,
    purpose,
    sponsor,
    authority,
    participants,
    recruitment,
    access,
    venue,
    materials,
    consent,
    data_governance,
    principles,
    roles,
    block1,
    block2,
    block3,
    block4,
    block5,
    block6,
    block7,
    block8,
    cg_rules,
    charter_tpl,
    reporting,
    measures,
    risks,
    followups,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`).join("\n");

    const flow = [
      "Welcome & agreements",
      "History Wall (past)",
      "External Trends (forces shaping us)",
      "Present state (proud/sad/worried)",
      "Preferred future scenarios",
      "Common ground statements",
      "Action teams & near-term moves",
      "Commitments, owners, and dates"
    ].join(" -> ");

    return [
      title && `Future Search plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context & links:\n${ctx}`,

      "SECTION: Overview",
      horizon && `Horizon & dates: ${horizon}`,
      purpose && `Purpose & focus question:\n${purpose}`,
      sponsor && `Sponsor / convener: ${sponsor}`,
      authority && `Decision authority / mandate: ${authority}`,

      "SECTION: Inclusion & logistics",
      participants && ["Participants (whole system categories):", listify(participants)].join("\n"),
      recruitment && `Recruitment, quotas & sortition:\n${recruitment}`,
      access && `Access supports & compensation:\n${access}`,
      venue && `Venue & layout:\n${venue}`,
      materials && `Materials & tools:\n${materials}`,

      "SECTION: Ethics & governance",
      consent && `Consent & documentation rules:\n${consent}`,
      data_governance && `Data governance & publication tiers:\n${data_governance}`,

      "SECTION: Principles & roles",
      principles && `Principles:\n${principles}`,
      roles && `Facilitation team & roles:\n${roles}`,

      "SECTION: Agenda blocks",
      block1 && `Block 1 — Welcome & agreements:\n${block1}`,
      block2 && `Block 2 — History Wall (Past):\n${block2}`,
      block3 && `Block 3 — External Trends (Forces):\n${block3}`,
      block4 && `Block 4 — Present state (Proud/Sad/Worried):\n${block4}`,
      block5 && `Block 5 — Ideal Future Scenarios:\n${block5}`,
      block6 && `Block 6 — Common Ground Statements:\n${block6}`,
      block7 && `Block 7 — Action Planning & Teams:\n${block7}`,
      block8 && `Block 8 — Commitments & Close:\n${block8}`,

      "SECTION: Artifacts & action",
      cg_rules && `Common ground drafting rules:\n${cg_rules}`,
      charter_tpl && `Action team charter template:\n${charter_tpl}`,
      reporting && `Harvest & reporting plan:\n${reporting}`,

      "SECTION: Measures, risks, timeline",
      measures && `Measures & evaluation:\n${measures}`,
      risks && `Risks & mitigations:\n${risks}`,
      followups && `Follow-ups & cadence:\n${followups}`,

      "Quick reference — flow",
      flow,

      "Checklist:",
      "- [ ] Whole system represented with access supports funded",
      "- [ ] History wall and trends are visible, public, and evidence-linked",
      "- [ ] Present state includes both pride and concerns without blame",
      "- [ ] Future scenarios are vivid, time-bound, and measurable",
      "- [ ] Common-ground statements in plain language with real consent",
      "- [ ] Action teams own who/what/when with first 90-day moves",
      "- [ ] Public brief within 14 days; multilingual where relevant",
      "- [ ] Monthly check-ins and quarterly public updates scheduled"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "Future Search whole system planning history wall trends proud sad worried preferred futures common ground action teams large group method template"
  }
},

{
  id: "liberating_structures_bundle",
  slug: "liberating-structures-124all-9whys-triz-conversation-cafe-wsnw",
  label: "Liberating Structures - Light-weight ways to get everyone's voice in (1-2-4-All, 9 Whys, TRIZ, Conversation Café, What So What Now What)",
  kind: "facilitation",
  categories: [
    "community",
    "facilitation",
    "learning",
    "decision",
    "planning"
  ],
  tags: [
    "type:method",
    "use:engagement",
    "use:facilitation",
    "use:sensemaking",
    "use:synthesis",
    "use:decision-making",
    "phase:explore",
    "phase:define",
    "phase:decide",
    "phase:reflect",
    "topic:community",
    "level:beginner"
  ],
  use_cases: [
    "include many voices quickly without heavy process",
    "clarify purpose and assumptions before deciding",
    "surface patterns and options from lived experience",
    "defuse dominance and share airtime fairly",
    "turn insights into near-term actions with owners",
      "how to make meetings less boring",
  "get everyone to share ideas fast",
  "easy way to hear all voices",
  "how to stop one person from talking too much",
  "simple group activities for decisions",
  "make brainstorming more structured",
  "what are liberating structures",
  "how to use 1-2-4-all in class",
  "ways to ask why multiple times",
  "simple icebreakers with purpose",
  "how to turn talk into action",
  "get team ideas without PowerPoint",
  "stop bosses from dominating meetings",
  "fun group workshop methods",
  "use TRIZ to flip problems",
  "how to do conversation café",
  "group activity to find common ground",
  "ways to reflect after a project",
  "simple tools for facilitators",
  "best way to close a workshop",
  "team building without cringe games",
  "how to structure hard conversations",
  "make learning sessions interactive",
  "methods for inclusive engagement",
  "quick decision making in groups",
  "ways to surface hidden assumptions",
  "simple structure for online workshops",
  "funny idea: liberating structures for pizza night",
  "5th grade: group game to pick playground rules",
  "how to do a school project brainstorm",
  "let shy people contribute safely",
  "how to ask better questions in groups",
  "ways to build trust in 30 minutes",
  "simple activity to define purpose",
  "how to find the root cause of a problem",
  "group exercise to spot patterns",
  "turn insights into action steps",
  "quick way to get feedback from everyone",
  "easy participatory workshop methods",
  "nonprofit meeting facilitation tools",
  "church group small group activities",
  "corporate offsite energizer ideas",
  "how to close with what so what now what",
  "reflecting on what we learned today",
  "decision making without endless debate",
  "make classroom discussions fair",
  "get people to think outside the box",
  "lightweight ways to run strategy sessions",
  "easy method for cross team alignment",
  "neighborhood idea sharing games",
  "help my family decide on vacation",
  "group method to solve climate ideas",
  "how to let everyone own next steps",
  "ways to plan together without big planning"
  ],
  boosters: [
    "Post a crisp focus question that invites stories and choices.",
    "Timebox rounds and display a visual timer. Energy lives in short cycles.",
    "Use visible capture: table sheets, sticky clusters, live scribe, or a canvas link.",
    "Track speaking balance. Invite passes. Rotate roles.",
    "Provide access supports and compensation so participation is real.",
    "End every block with a micro decision or next step, not just discussion."
  ],
  definition: "A set of simple micro-structures that distribute participation and make it easy for groups to generate insights and decisions fast. This bundle includes 1-2-4-All, 9 Whys, TRIZ, Conversation Café, and What So What Now What.",
  help: "Pick one or chain several structures. Complete focus, inclusion, access, consent, setup, and the fields for the structures you will run. Keep rules visible and finish with a harvest and action list.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., Liberating Structures to Shape Summer Programming" },
    { label: "Horizon and date", key: "horizon", type: "text", ph: "e.g., Cycle Q2; event on May 18, 6-8 pm" },
    { label: "Focus question", key: "focus", type: "text", ph: "e.g., What would most increase first-time speakers by September?" },
    { label: "Sponsor or owner", key: "owner", type: "text", ph: "e.g., Community Council with Library" },

    // Inclusion and ethics
    {
      label: "Participants and inclusion",
      autofill: "persona->inline",
      itemLabel: "participant group",
      itemType: "typeahead",
      key: "participants",
      max: 28,
      type: "repeater",
      ph: "e.g., Youth; elders; renters; newcomers; disabled residents"
    },
    { label: "Recruitment and outreach plan", key: "recruitment", type: "textarea", ph: "Partners, SMS, flyers, outreach in focus blocks" },
    { label: "Access supports and compensation", key: "access", type: "textarea", ph: "Stipends; childcare; interpreters and ASL; transport; food; sensory supports" },
    { label: "Consent and documentation rules", key: "consent", type: "textarea", ph: "Plain-language consent; photos by sticker opt-in; quotes anonymized by default" },
    { label: "Data governance and publication tiers", key: "data_governance", type: "textarea", ph: "Public | Community-only | Restricted | Not-for-release (who decides and why)" },

    // Setup
    { label: "Venue and layout", key: "venue", type: "textarea", ph: "Round tables or pods; clear signage; theme wall; projector; quiet room" },
    { label: "Materials and tools", key: "materials", type: "textarea", ph: "Paper tablecloths; markers; sticky notes; dots; timers; talk-time tracker" },
    { label: "Facilitation roles and staffing", key: "roles", type: "textarea", ph: "Lead facilitator; table hosts; timekeeper; harvest lead; accessibility lead" },
    { label: "Canvas or board link", key: "canvas_link", type: "text", ph: "Kumu/Miro/FigJam URL for live capture" },

    // Chain plan
    { label: "Run order of structures", key: "run_order", type: "text", ph: "e.g., 1-2-4-All -> 9 Whys -> TRIZ -> What So What Now What" },
    { label: "Agenda and timing", key: "agenda", type: "textarea", ph: "Welcome; agreements; LS blocks; harvest; close" },

    // 1-2-4-All
    { label: "1-2-4-All - prompt", key: "ls_124all_prompt", type: "text", ph: "e.g., What small move would help newcomers speak up?" },
    { label: "1-2-4-All - timing", key: "ls_124all_timing", type: "text", ph: "1 min solo, 2 min pairs, 4 min fours, 5-10 min plenary" },
    { label: "1-2-4-All - reporting method", key: "ls_124all_report", type: "textarea", ph: "Dot shortlist on theme wall; each four shares 1 idea; scribe captures to canvas" },

    // 9 Whys
    { label: "9 Whys - starting statement", key: "ls_9whys_start", type: "text", ph: "e.g., Increase first-time speakers" },
    { label: "9 Whys - pair rounds and notes", key: "ls_9whys_chains", type: "textarea", ph: "Pairs ask Why is that important? up to 9 times. Capture chain." },
    { label: "9 Whys - synthesis method", key: "ls_9whys_synthesis", type: "textarea", ph: "Cluster deeper purposes. Draft 1 line purpose in participants' words." },

    // TRIZ
    { label: "TRIZ - invert the goal", key: "ls_triz_invert", type: "text", ph: "e.g., How could we ensure newcomers never speak?" },
    { label: "TRIZ - list destructive behaviors", key: "ls_triz_list", type: "textarea", ph: "List everything that would guarantee failure." },
    { label: "TRIZ - stop and start list", key: "ls_triz_stop_start", type: "textarea", ph: "What are we doing that resembles those items? What will we stop or start now?" },

    // Conversation Café
    { label: "Conversation Café - agreements", key: "ls_cc_agreements", type: "textarea", ph: "Listen to understand; speak with intention; right to pass; confidentiality" },
    { label: "Conversation Café - rounds and timing", key: "ls_cc_rounds", type: "text", ph: "Round 1 2 min each; Round 2 1 min each; Open dialogue; Close 1 min each" },
    { label: "Conversation Café - prompts", key: "ls_cc_prompts", type: "textarea", ph: "Add 1-2 prompts that deepen the focus question" },

    // What So What Now What
    { label: "WSW - event or data", key: "ls_wsnw_event", type: "text", ph: "Name the event, story set, or data slice" },
    { label: "WSW - What notes", key: "ls_wsnw_notes", type: "textarea", ph: "Observations without judgment" },
    { label: "WSW - So What themes", key: "ls_wsnw_themes", type: "textarea", ph: "Implications, patterns, surprises" },
    { label: "WSW - Now What actions", key: "ls_wsnw_actions", type: "textarea", ph: "Action - owner - resources - start - check date" },

    // Harvest and follow-through
    { label: "Harvest method", key: "harvest", type: "textarea", ph: "Gallery walk; dot energy check; theme merge; action owners and dates" },
    { label: "Report-back plan", key: "report_back", type: "textarea", ph: "Plain-language brief in 14 days; publish capture; bilingual where relevant" },

    // Measures, risks, timeline
    { label: "Measures and signals", key: "measures", type: "textarea", ph: "Attendance by subgroup; speaking balance; number of ideas; decisions made; action delivery rate" },
    { label: "Risks and safeguards", key: "risks", type: "textarea", ph: "Dominance by a few; drift from question; superficial outputs; confidentiality breaches" },
    { label: "Timeline and cadence", key: "timeline", type: "text", ph: "Prep 2 weeks; event; report in 14 days; follow-up circle in 30 days" },
    { label: "Context and notes", key: "ctx", type: "textarea", ph: "Links, constraints, prior events" }
  ],
  template: ({
    title,
    horizon,
    focus,
    owner,
    participants,
    recruitment,
    access,
    consent,
    data_governance,
    venue,
    materials,
    roles,
    canvas_link,
    run_order,
    agenda,

    ls_124all_prompt,
    ls_124all_timing,
    ls_124all_report,

    ls_9whys_start,
    ls_9whys_chains,
    ls_9whys_synthesis,

    ls_triz_invert,
    ls_triz_list,
    ls_triz_stop_start,

    ls_cc_agreements,
    ls_cc_rounds,
    ls_cc_prompts,

    ls_wsnw_event,
    ls_wsnw_notes,
    ls_wsnw_themes,
    ls_wsnw_actions,

    harvest,
    report_back,
    measures,
    risks,
    timeline,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`).join("\n");

    const flow = [
      "Welcome and agreements",
      "Liberating Structures blocks per run order",
      "Harvest and decisions",
      "Close and next steps"
    ].join(" -> ");

    return [
      title && `Liberating Structures plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and notes: ${ctx}`,

      "SECTION: Overview",
      horizon && `Horizon and date: ${horizon}`,
      focus && `Focus question: ${focus}`,
      owner && `Sponsor or owner: ${owner}`,
      canvas_link && `Canvas or board: ${canvas_link}`,
      run_order && `Run order of structures: ${run_order}`,
      agenda && `Agenda and timing:\n${agenda}`,

      "SECTION: Inclusion and ethics",
      participants && ["Participants and inclusion:", listify(participants)].join("\n"),
      recruitment && `Recruitment and outreach plan:\n${recruitment}`,
      access && `Access supports and compensation:\n${access}`,
      consent && `Consent and documentation rules:\n${consent}`,
      data_governance && `Data governance and publication tiers:\n${data_governance}`,

      "SECTION: Setup",
      venue && `Venue and layout:\n${venue}`,
      materials && `Materials and tools:\n${materials}`,
      roles && `Facilitation roles and staffing:\n${roles}`,

      // LS blocks
      (ls_124all_prompt || ls_124all_timing || ls_124all_report) && "SECTION: 1-2-4-All",
      ls_124all_prompt && `Prompt: ${ls_124all_prompt}`,
      ls_124all_timing && `Timing: ${ls_124all_timing}`,
      ls_124all_report && `Reporting: ${ls_124all_report}`,

      (ls_9whys_start || ls_9whys_chains || ls_9whys_synthesis) && "SECTION: 9 Whys",
      ls_9whys_start && `Starting statement: ${ls_9whys_start}`,
      ls_9whys_chains && `Pair rounds and notes:\n${ls_9whys_chains}`,
      ls_9whys_synthesis && `Synthesis method:\n${ls_9whys_synthesis}`,

      (ls_triz_invert || ls_triz_list || ls_triz_stop_start) && "SECTION: TRIZ",
      ls_triz_invert && `Invert the goal: ${ls_triz_invert}`,
      ls_triz_list && `Destructive behaviors list:\n${ls_triz_list}`,
      ls_triz_stop_start && `Stop and start list:\n${ls_triz_stop_start}`,

      (ls_cc_agreements || ls_cc_rounds || ls_cc_prompts) && "SECTION: Conversation Café",
      ls_cc_agreements && `Agreements:\n${ls_cc_agreements}`,
      ls_cc_rounds && `Rounds and timing: ${ls_cc_rounds}`,
      ls_cc_prompts && `Prompts:\n${ls_cc_prompts}`,

      (ls_wsnw_event || ls_wsnw_notes || ls_wsnw_themes || ls_wsnw_actions) && "SECTION: What - So What - Now What",
      ls_wsnw_event && `Event or data: ${ls_wsnw_event}`,
      ls_wsnw_notes && `What - observations:\n${ls_wsnw_notes}`,
      ls_wsnw_themes && `So What - themes:\n${ls_wsnw_themes}`,
      ls_wsnw_actions && ["Now What - actions:", listify(ls_wsnw_actions)].join("\n"),

      "SECTION: Harvest and follow-through",
      harvest && `Harvest method:\n${harvest}`,
      report_back && `Report-back plan:\n${report_back}`,

      "SECTION: Measures, risks, timeline",
      measures && ["Measures and signals:", listify(measures)].join("\n"),
      risks && `Risks and safeguards:\n${risks}`,
      timeline && `Timeline and cadence: ${timeline}`,

      "Quick reference",
      flow,

      "Checklist:",
      "- [ ] Focus question is crisp and visible",
      "- [ ] Timeboxes posted and timer running",
      "- [ ] Rules and agreements visible at every table",
      "- [ ] Speaking balance tracked and supported",
      "- [ ] Visible capture feeds a shared canvas or wall",
      "- [ ] Each block ends with a micro decision or next step",
      "- [ ] Harvest yields themes, owners, and dates",
      "- [ ] Community-first report-out scheduled within 14 days"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "Liberating Structures 1-2-4-All 9 Whys TRIZ Conversation Cafe What So What Now What inclusive engagement sensemaking decisions template"
  }
},

{
  id: "restorative_circles_deep_democracy",
  slug: "restorative-circles-deep-democracy",
  label: "Restorative Circles / Deep Democracy - Surface minority voices and work with conflict productively",
  kind: "facilitation",
  categories: [
    "community",
    "facilitation",
    "ethics",
    "governance",
    "learning"
  ],
  tags: [
    "type:method",
    "use:conflict-transformation",
    "use:healing",
    "use:decision-making",
    "use:engagement",
    "phase:define",
    "phase:decide",
    "phase:repair",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "address harm and misunderstanding with those affected present",
    "elevate minority and edge perspectives before decisions are made",
    "co-create clear agreements, restitution, and follow-through",
    "build group capacity to notice and work with tension early",
    "document fair process and publish a community-first summary where appropriate",
      "how to deal with conflict in groups",
  "ways to hear every voice fairly",
  "help people talk after a fight",
  "what is a restorative circle",
  "how to bring minority views forward",
  "make peace meetings more effective",
  "how to heal after harm in community",
  "simple method for conflict resolution",
  "group process to repair relationships",
  "how to stop ignoring quiet voices",
  "restorative justice in schools",
  "ways to mediate disagreements",
  "how to co-create agreements",
  "give people a safe space to share",
  "make sure decisions include all voices",
  "how to elevate minority perspectives",
  "circle method for healing after conflict",
  "deep democracy explained simply",
  "group repair method with fairness",
  "how to notice tension early",
  "prevent fights before they blow up",
  "tools for community healing",
  "how to create restitution agreements",
  "group listening exercises",
  "facilitation for tough conversations",
  "how to stop meetings from breaking down",
  "ways to resolve family conflicts",
  "neighborhood dispute resolution",
  "school circle talks for fairness",
  "church conflict healing circles",
  "how to mediate workplace tension",
  "how to involve everyone in decisions",
  "stop majority from drowning out voices",
  "fair process for group agreements",
  "examples of restorative practices",
  "how to publish fair conflict summaries",
  "methods to repair trust",
  "simple steps for group healing",
  "how to balance power in groups",
  "ways to include edge voices",
  "funny idea: circle to pick movie night",
  "grade 5: circle to stop playground fights",
  "how to let kids say sorry safely",
  "pizza night: everyone gets a turn to speak",
  "resolve sibling fights with circle rules",
  "family version of deep democracy",
  "how to hear from shy people",
  "ways to surface hidden conflict",
  "how to make sure no one feels left out",
  "team circle after mistakes at work",
  "community repair after hard events",
  "how to explain restorative circles to kids",
  "help group decide without bullying",
  "simple fairness method for decision making",
  "how to talk after trust is broken"
  ],
  boosters: [
    "Voluntariness and consent are non-negotiable. Offer alternatives for those who cannot attend.",
    "State confidentiality rules and limits in plain language. Duty-to-report boundaries must be clear.",
    "Track speaking balance. Use a talking piece or strict round structure when power is uneven.",
    "Name supporters for each party. Do not let parties arrive alone if the other has advocates.",
    "Separate fact finding from sensemaking from agreement making. Do not blend them.",
    "Close with named owners, resources, dates, and a safety check plan."
  ],
  definition: "A combined scaffold. Restorative Circles repair harm through dialogue among those affected and responsible, producing needs-based agreements. Deep Democracy adds structured steps to surface minority voices, role-switch, integrate dissent, and reach durable outcomes.",
  help: "Fill purpose and mandate, parties, roles, consent and safety plan, process blocks for a Restorative Circle (pre-circle, circle, post-circle), plus a Deep Democracy track (issue, positions map, minority voice, role switch, test and integrate dissent). Capture agreements, owners, and follow-ups.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., Restorative Circle on Shared Spaces" },
    { label: "Mandate and authority", key: "mandate", type: "text", ph: "e.g., Advisory to Council; binding within program scope" },
    { label: "Purpose and desired outcomes", key: "purpose", type: "textarea", ph: "e.g., Repair harm, restore safety, agree on restitution and safeguards" },
    { label: "Sponsor or convener", key: "owner", type: "text", ph: "e.g., Community Council with Library" },

    // Parties and roles
    {
      label: "Parties to the conflict",
      autofill: "persona->inline",
      itemLabel: "party",
      itemType: "typeahead",
      key: "parties",
      max: 12,
      type: "repeater",
      ph: "e.g., Affected person, Responsible person, Witness group"
    },
    {
      label: "Supporters and observers",
      autofill: "persona->inline",
      itemLabel: "supporter",
      itemType: "typeahead",
      key: "supporters",
      max: 20,
      type: "repeater",
      ph: "e.g., Elder, advocate, translator, legal advisor"
    },
    { label: "Facilitator and circle keeper roles", key: "roles", type: "textarea", ph: "Lead keeper, co-keeper, timekeeper, scribe, safety lead, access lead" },

    // Ethics, consent, safety
    { label: "Consent model", key: "consent", type: "textarea", ph: "Voluntary, ongoing, revocable; options for anonymous written input" },
    { label: "Confidentiality rules and limits", key: "confidentiality", type: "textarea", ph: "What is private, who sees notes, duty-to-report boundaries" },
    { label: "Safety and harm plan", key: "safety", type: "textarea", ph: "Triggers, step-out options, de-escalation, shuttle diplomacy, security if needed" },
    { label: "Trauma-informed practices", key: "trauma", type: "textarea", ph: "Grounding, pacing, breaks, separate prep calls, seating choices" },
    { label: "Access supports and compensation", key: "access", type: "textarea", ph: "Stipends, interpreters and ASL, transport, childcare, sensory supports" },
    { label: "Data governance and publication tiers", key: "data_governance", type: "textarea", ph: "Public | Community-only | Restricted | Not-for-release with who decides and why" },

    // Conflict map
    { label: "Issue summary in neutral language", key: "issue", type: "textarea", ph: "One paragraph factual description without blame" },
    { label: "Impacts and needs (one per line)", key: "needs", type: "textarea", ph: "e.g., Safety, recognition, restitution, policy change, apology" },
    { label: "Power and risk assessment", key: "power", type: "textarea", ph: "Visible and invisible power, dependency, retaliation risks, supports" },

    // Restorative Circle blocks
    { label: "Pre-circle steps", key: "pre_circle", type: "textarea", ph: "Intake, separate conversations, readiness checks, consent, logistics" },
    { label: "Circle agreements", key: "agreements", type: "textarea", ph: "Speak from experience, listen to understand, right to pass, respect, time boundaries" },
    { label: "Restorative prompts", key: "prompts", type: "textarea", ph: "What happened; who was affected and how; what is needed; what would repair look like" },
    { label: "Reparation and repair options", key: "repair_options", type: "textarea", ph: "Apology, restitution, community service, policy or practice change, learning" },
    { label: "Agreement template", key: "agreement_tpl", type: "textarea", ph: "Action - owner - resources - start - check date - verification - contingencies" },
    { label: "Post-circle follow-up plan", key: "post_circle", type: "textarea", ph: "Check-ins, verification, grievance route if agreement fails" },

    // Deep Democracy track
    { label: "Positions map including edge views", key: "positions_map", type: "textarea", ph: "List majority, minority, silent and taboo views" },
    { label: "Minority voice elicitation plan", key: "minority_plan", type: "textarea", ph: "Go-round, anonymous cards, fishbowl, pair harvest" },
    { label: "Role switch script", key: "role_switch", type: "textarea", ph: "Each person argues for a view they disagree with; rules and timing" },
    { label: "Test and integrate dissent", key: "integrate_dissent", type: "textarea", ph: "Soft-shoe shuffle or vote, locate objections, add safeguards, amend proposal" },
    { label: "Decision rule", key: "decision_rule", type: "text", ph: "Consensus, consent with objections addressed, majority with minority report" },

    // Logistics
    { label: "Session plan and timing", key: "agenda", type: "textarea", ph: "Welcome, agreements, story rounds, needs, repair options, integrate dissent, agreements, close" },
    { label: "Venue and layout", key: "venue", type: "textarea", ph: "Circle of chairs, quiet room, breakout, accessibility routes, hybrid link" },
    { label: "Materials and tools", key: "materials", type: "textarea", ph: "Talking piece, timers, markers, sticky notes, consent forms, recording rules" },

    // Documentation and follow-through
    { label: "Documentation rules", key: "docs", type: "textarea", ph: "What gets recorded, by whom, where stored, retention and deletion" },
    { label: "Agreements log (one per line)", key: "agreements_log", type: "textarea", ph: "Action - owner - resources - start - check date - verification method" },
    { label: "Escalation path", key: "escalation", type: "textarea", ph: "When agreements fail or safety is breached, who acts and how fast" },
    { label: "Report-back plan", key: "report_back", type: "textarea", ph: "Community-first summary within 14 days when allowed, bilingual where relevant" },

    // Measures and risks
    { label: "Measures and signals", key: "measures", type: "textarea", ph: "Speaking time parity, perceived fairness, agreement delivery rate, repeat incidents" },
    { label: "Risks and mitigations", key: "risks", type: "textarea", ph: "Retaliation risk, confidentiality breach, tokenism, re-traumatization" },

    // Timeline and context
    { label: "Timeline and cadence", key: "timeline", type: "text", ph: "Prep 2 weeks, circle, 30 day and 90 day checks" },
    { label: "Context and links", key: "ctx", type: "textarea", ph: "Policies, prior incidents, legal constraints, references" }
  ],
  template: ({
    title,
    mandate,
    purpose,
    owner,
    parties,
    supporters,
    roles,
    consent,
    confidentiality,
    safety,
    trauma,
    access,
    data_governance,
    issue,
    needs,
    power,
    pre_circle,
    agreements,
    prompts,
    repair_options,
    agreement_tpl,
    post_circle,
    positions_map,
    minority_plan,
    role_switch,
    integrate_dissent,
    decision_rule,
    agenda,
    venue,
    materials,
    docs,
    agreements_log,
    escalation,
    report_back,
    measures,
    risks,
    timeline,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/)
      .map(x => x.trim())
      .filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`)
      .join("\n");

    const flow = [
      "Pre-circle intake and readiness",
      "Circle agreements and story rounds",
      "Name impacts and needs",
      "Generate repair options",
      "Deep Democracy: surface edge views and role switch",
      "Test proposals, integrate dissent, choose decision rule",
      "Write agreements with owners and dates",
      "Follow-up checks and escalation if needed"
    ].join(" -> ");

    return [
      title && `Plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and links:\n${ctx}`,

      "SECTION: Overview",
      mandate && `Mandate and authority: ${mandate}`,
      purpose && `Purpose and desired outcomes:\n${purpose}`,
      owner && `Sponsor or convener: ${owner}`,

      "SECTION: Parties and roles",
      parties && ["Parties to the conflict:", listify(parties)].join("\n"),
      supporters && ["Supporters and observers:", listify(supporters)].join("\n"),
      roles && `Facilitator and circle keeper roles:\n${roles}`,

      "SECTION: Ethics, consent, safety",
      consent && `Consent model:\n${consent}`,
      confidentiality && `Confidentiality rules and limits:\n${confidentiality}`,
      safety && `Safety and harm plan:\n${safety}`,
      trauma && `Trauma-informed practices:\n${trauma}`,
      access && `Access supports and compensation:\n${access}`,
      data_governance && `Data governance and publication tiers:\n${data_governance}`,

      "SECTION: Conflict map",
      issue && `Issue summary:\n${issue}`,
      needs && ["Impacts and needs:", listify(needs)].join("\n"),
      power && `Power and risk assessment:\n${power}`,

      "SECTION: Restorative Circle",
      pre_circle && `Pre-circle steps:\n${pre_circle}`,
      agreements && `Circle agreements:\n${agreements}`,
      prompts && `Restorative prompts:\n${prompts}`,
      repair_options && `Reparation and repair options:\n${repair_options}`,
      agreement_tpl && `Agreement template:\n${agreement_tpl}`,
      post_circle && `Post-circle follow-up plan:\n${post_circle}`,

      "SECTION: Deep Democracy",
      positions_map && `Positions map including edge views:\n${positions_map}`,
      minority_plan && `Minority voice elicitation plan:\n${minority_plan}`,
      role_switch && `Role switch script:\n${role_switch}`,
      integrate_dissent && `Test and integrate dissent:\n${integrate_dissent}`,
      decision_rule && `Decision rule: ${decision_rule}`,

      "SECTION: Logistics",
      agenda && `Session plan and timing:\n${agenda}`,
      venue && `Venue and layout:\n${venue}`,
      materials && `Materials and tools:\n${materials}`,

      "SECTION: Documentation and follow-through",
      docs && `Documentation rules:\n${docs}`,
      agreements_log && ["Agreements log:", listify(agreements_log)].join("\n"),
      escalation && `Escalation path:\n${escalation}`,
      report_back && `Report-back plan:\n${report_back}`,

      "SECTION: Measures and risks",
      measures && ["Measures and signals:", listify(measures)].join("\n"),
      risks && `Risks and mitigations:\n${risks}`,
      timeline && `Timeline and cadence: ${timeline}`,

      "Quick reference",
      flow,

      "Checklist:",
      "- [ ] Voluntary participation and clear confidentiality boundaries",
      "- [ ] Safety plan active with step-out and de-escalation options",
      "- [ ] Speaking balance tracked and minority voices elicited",
      "- [ ] Role switch completed and dissent integrated before decision",
      "- [ ] Agreements specify actions, owners, resources, and dates",
      "- [ ] Verification and follow-ups scheduled with escalation path",
      "- [ ] Community-first summary prepared where appropriate"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "Restorative Circles Deep Democracy minority voice conflict transformation role switch integrate dissent repair agreements trauma informed safety template"
  }
},

{
  id: "nvc_needs_based_dialogue",
  slug: "nonviolent-communication-nvc-needs-based-dialogue",
  label: "Nonviolent Communication (NVC): Needs-based dialogue for deeper listening",
  kind: "facilitation",
  categories: [
    "community",
    "facilitation",
    "ethics",
    "learning",
    "governance"
  ],
  tags: [
    "type:method",
    "use:conflict-transformation",
    "use:healing",
    "use:decision-making",
    "use:engagement",
    "use:coaching",
    "phase:explore",
    "phase:define",
    "phase:repair",
    "topic:community",
    "level:beginner"
  ],
  use_cases: [
    "improve mutual understanding before problem solving",
    "de-escalate conflict and reduce defensiveness",
    "clarify observations, feelings, needs, and doable requests",
    "support boundary setting while maintaining connection",
    "train teams in empathic feedback and self-empathy",
     "how to talk without starting a fight",
  "ways to listen better in arguments",
  "simple steps for peaceful communication",
  "how to say what I need kindly",
  "reduce conflict in relationships",
  "how to share feelings without blame",
  "what is nonviolent communication",
  "speak so people actually listen",
  "ways to de-escalate an argument",
  "group training for empathy",
  "how to give feedback without hurting",
  "how to set boundaries kindly",
  "speak up but stay connected",
  "understand needs behind behavior",
  "make conflict less scary",
  "how to stop being defensive",
  "tools for healthy family talks",
  "team communication training",
  "how to reduce tension at work",
  "conflict resolution made simple",
  "how to hear needs not insults",
  "express feelings clearly",
  "ways to prevent fights in school",
  "help couples communicate better",
  "easy method for empathy",
  "how to keep calm in hard talks",
  "turn anger into clear needs",
  "how to stop yelling matches",
  "nonviolent communication in parenting",
  "listen without fixing right away",
  "funny idea: use NVC for pizza toppings fight",
  "grade 5: how to share crayons without fighting",
  "how to say sorry the NVC way",
  "teach kids to use kind words",
  "school circle using NVC",
  "ways to practice self-empathy",
  "how to ask for help without guilt",
  "use NVC in church groups",
  "methods for safer community dialogue",
  "reduce workplace drama",
  "make team feedback more kind",
  "ways to understand each other fast",
  "how to calm down when upset",
  "turn conflict into connection",
  "how to avoid passive aggressive talk",
  "practice empathy step by step",
  "simple phrases for NVC",
  "use NVC for roommate issues",
  "how to keep family dinners calm",
  "support healthy boundaries with care",
  "how to hear kids’ needs better",
  "make decisions with compassion",
  "community healing talks with NVC"
  ],
  boosters: [
    "Slow down. Empathy before solutions. Reflect back until the speaker says you got it.",
    "Keep observations free of judgments or diagnoses. Anchor them in time and place.",
    "Name feelings with words about emotion, not thoughts. Offer a short feelings list.",
    "Translate strategies into needs. Many strategies can meet the same need.",
    "Requests are specific, doable, time bound, and positive action. Avoid vague asks.",
    "Track power. Offer supports and alternatives so participation is truly voluntary."
  ],
  definition: "A structured dialogue approach that focuses on four moves: Observations, Feelings, Needs, and Requests. It can be used for self-empathy, one-to-one repair, or group facilitation to create clarity and reduce blame.",
  help: "Complete purpose, roles, participants, access supports, consent, safety, OFNR prompts, turn-taking rules, empathy flows, documentation limits, and action capture. Use this scaffold for coaching, mediation, or team norms.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., NVC practice for Shared Spaces team" },
    { label: "Scope and context", key: "scope", type: "text", ph: "coaching | mediation | feedback | team norm" },
    { label: "Purpose and desired outcomes", key: "purpose", type: "textarea", ph: "e.g., Reduce reactivity, increase clarity, agree on next steps" },

    // People and roles
    {
      label: "Participants",
      autofill: "persona->inline",
      itemLabel: "participant",
      itemType: "typeahead",
      key: "participants",
      max: 20,
      type: "repeater",
      ph: "e.g., Affected person; colleague; manager; mediator"
    },
    { label: "Facilitator and roles", key: "roles", type: "textarea", ph: "facilitator, coach, timekeeper, note-taker, access lead" },

    // Inclusion, consent, safety
    { label: "Access supports and compensation", key: "access", type: "textarea", ph: "interpreters, ASL, childcare, transport, stipends, sensory supports" },
    { label: "Consent and confidentiality", key: "consent", type: "textarea", ph: "voluntary, revocable, limits of confidentiality, duty-to-report boundaries" },
    { label: "Safety and de-escalation plan", key: "safety", type: "textarea", ph: "timeouts, step-out, parallel writing option, shuttle dialogue if needed" },
    { label: "Cultural and language adaptations", key: "culture", type: "textarea", ph: "use participants’ own words for feelings and needs; translator guidance" },

    // NVC components and scripts
    { label: "Observation prompt", key: "obs_prompt", type: "text", ph: "When I see/hear X at time/place Y" },
    { label: "Feelings prompt", key: "feel_prompt", type: "text", ph: "I feel..." },
    { label: "Needs prompt", key: "needs_prompt", type: "text", ph: "because I need/value..." },
    { label: "Request prompt", key: "req_prompt", type: "text", ph: "Would you be willing to... by [date/time]?" },
    { label: "Feelings word bank", key: "feelings_bank", type: "textarea", ph: "calm; anxious; relieved; frustrated; hopeful; sad; energized" },
    { label: "Needs word bank", key: "needs_bank", type: "textarea", ph: "respect; safety; rest; clarity; belonging; fairness; autonomy; contribution" },
    { label: "Doable request examples", key: "request_examples", type: "textarea", ph: "send summary today; arrive by 10; pause meetings after 6; use captioning" },

    // Dialogue flow
    { label: "Turn-taking rules", key: "turns", type: "textarea", ph: "2 minutes each, right to pass, talking piece, timer visible" },
    { label: "Empathy loop for listener", key: "empathy_loop", type: "textarea", ph: "reflect observation, feelings, needs; check accuracy; only then discuss requests" },
    { label: "Self-empathy plan", key: "self_empathy", type: "textarea", ph: "name own observations, feelings, needs before entering dialogue" },
    { label: "Coach prompts (empathy guesses)", key: "coach_prompts", type: "textarea", ph: "Are you feeling X because you’re needing Y? Did I get that?" },
    { label: "Power and bias checks", key: "power_checks", type: "textarea", ph: "who risks more by speaking; ensure supporters; rotate first-speaker; talk-time parity" },

    // Practice structures
    { label: "Warm-ups and exercises", key: "exercises", type: "textarea", ph: "jackal-to-giraffe translations; needs cards; role swap; gratitude round" },
    { label: "Boundary and no-request option", key: "boundaries", type: "textarea", ph: "speaker may withhold a request; focus only on understanding for now" },

    // Documentation and governance
    { label: "Documentation rules", key: "docs", type: "textarea", ph: "what is recorded, where stored, retention and deletion; no quotes without consent" },
    { label: "Data governance and publication tiers", key: "data_governance", type: "textarea", ph: "Public | Community-only | Restricted | Not-for-release; who decides and why" },

    // Integration and follow-through
    { label: "Agreements template", key: "agreement_tpl", type: "textarea", ph: "Action - owner - resources - start - check date - verification" },
    { label: "Agreements log", key: "agreements_log", type: "textarea", ph: "one per line using the template" },
    { label: "Escalation or referral path", key: "escalation", type: "textarea", ph: "when to move to Restorative Circle or mediation; who to contact" },
    { label: "Follow-up plan", key: "followup", type: "textarea", ph: "check at 2 weeks and 6 weeks; feedback form; adjustments" },

    // Measures and risks
    { label: "Measures and signals", key: "measures", type: "textarea", ph: "perceived understanding, reactivity drops, speaking balance, agreement delivery rate" },
    { label: "Risks and mitigations", key: "risks", type: "textarea", ph: "performative NVC, manipulation, forced vulnerability, power gaps" },

    // Timeline and context
    { label: "Session agenda and timing", key: "agenda", type: "textarea", ph: "welcome, consent, self-empathy, OFNR rounds, requests, agreements, close" },
    { label: "Timeline and cadence", key: "timeline", type: "text", ph: "prep this week; session next week; follow-ups at 2 and 6 weeks" },
    { label: "Context and notes", key: "ctx", type: "textarea", ph: "links, constraints, references" }
  ],
  template: ({
    title,
    scope,
    purpose,
    participants,
    roles,
    access,
    consent,
    safety,
    culture,

    obs_prompt,
    feel_prompt,
    needs_prompt,
    req_prompt,
    feelings_bank,
    needs_bank,
    request_examples,

    turns,
    empathy_loop,
    self_empathy,
    coach_prompts,
    power_checks,

    exercises,
    boundaries,

    docs,
    data_governance,

    agreement_tpl,
    agreements_log,
    escalation,
    followup,

    measures,
    risks,

    agenda,
    timeline,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i + 1}. ${x}`).join("\n");

    const ofnr = [
      obs_prompt && `Observation: ${obs_prompt}`,
      feel_prompt && `Feeling: ${feel_prompt}`,
      needs_prompt && `Need: ${needs_prompt}`,
      req_prompt && `Request: ${req_prompt}`
    ].filter(Boolean).join("\n");

    return [
      title && `NVC plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and notes:\n${ctx}`,

      "SECTION: Overview",
      scope && `Scope and context: ${scope}`,
      purpose && `Purpose and desired outcomes:\n${purpose}`,

      "SECTION: People and roles",
      participants && ["Participants:", listify(participants)].join("\n"),
      roles && `Facilitator and roles:\n${roles}`,

      "SECTION: Inclusion, consent, safety",
      access && `Access supports and compensation:\n${access}`,
      consent && `Consent and confidentiality:\n${consent}`,
      safety && `Safety and de-escalation plan:\n${safety}`,
      culture && `Cultural and language adaptations:\n${culture}`,

      "SECTION: NVC components",
      ofnr || "Set Observation, Feeling, Need, Request prompts.",
      feelings_bank && ["Feelings word bank:", listify(feelings_bank)].join("\n"),
      needs_bank && ["Needs word bank:", listify(needs_bank)].join("\n"),
      request_examples && ["Doable request examples:", listify(request_examples)].join("\n"),

      "SECTION: Dialogue flow",
      turns && `Turn-taking rules:\n${turns}`,
      empathy_loop && `Empathy loop for listener:\n${empathy_loop}`,
      self_empathy && `Self-empathy plan:\n${self_empathy}`,
      coach_prompts && `Coach prompts (empathy guesses):\n${coach_prompts}`,
      power_checks && `Power and bias checks:\n${power_checks}`,

      "SECTION: Practice structures",
      exercises && `Warm-ups and exercises:\n${exercises}`,
      boundaries && `Boundary and no-request option:\n${boundaries}`,

      "SECTION: Documentation and governance",
      docs && `Documentation rules:\n${docs}`,
      data_governance && `Data governance and publication tiers:\n${data_governance}`,

      "SECTION: Integration and follow-through",
      agreement_tpl && `Agreements template:\n${agreement_tpl}`,
      agreements_log && ["Agreements log:", listify(agreements_log)].join("\n"),
      escalation && `Escalation or referral path:\n${escalation}`,
      followup && `Follow-up plan:\n${followup}`,

      "SECTION: Measures and risks",
      measures && ["Measures and signals:", listify(measures)].join("\n"),
      risks && `Risks and mitigations:\n${risks}`,

      "SECTION: Timeline",
      agenda && `Session agenda and timing:\n${agenda}`,
      timeline && `Timeline and cadence: ${timeline}`,

      "Checklist:",
      "- [ ] People understand and consent to the process",
      "- [ ] Observations stated without judgment",
      "- [ ] Feelings and needs named in plain language",
      "- [ ] Requests are specific, doable, and time bound",
      "- [ ] Empathy loop used before problem solving",
      "- [ ] Power and safety checks in place",
      "- [ ] Agreements captured with owners and dates",
      "- [ ] Follow-ups scheduled with a clear escalation path"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "Nonviolent Communication NVC OFNR observations feelings needs requests empathy self-empathy conflict transformation boundary setting template"
  }
},

{
  id: "brand_archetypes_community",
  slug: "brand-archetypes-jungian-for-communities",
  label: "Brand Archetypes for Communities - Shared identity motifs and tone",
  kind: "branding",
  categories: [
    "branding",
    "communications",
    "community",
    "design",
    "strategy"
  ],
  tags: [
    "type:framework",
    "use:identity",
    "use:voice",
    "use:messaging",
    "use:governance",
    "phase:define",
    "phase:plan",
    "topic:community",
    "level:beginner"
  ],
  use_cases: [
    "align shared voice and tone across programs and channels",
    "choose primary, secondary, and shadow archetypes with rationale",
    "translate archetypes into words, rituals, visuals, and behaviors",
    "avoid harmful tropes and stereotype drift with clear guardrails",
    "equip contributors with examples and a quick style matrix",
        "decide if our community feels more like a 'Caregiver' or a 'Rebel'",
    "pick an archetype that matches our mission and tone",
    "make our newsletter sound consistent across writers",
    "help volunteers know what voice to use on social media",
    "choose imagery and slogans that fit our archetype",
    "check if our brand voice is too serious or too playful",
    "avoid drifting into stereotypes when using archetypes",
    "use archetypes to guide event themes and rituals",
    "align how leaders and members describe the community",
    "map our primary, secondary, and shadow archetypes",
    "translate an archetype into colors, fonts, and visuals",
    "create a style guide for new contributors",
    "figure out if we’re more of a 'Hero' or an 'Explorer' group",
    "make fundraising campaigns match our chosen archetype",
    "stress-test if our brand voice resonates with our members",
    "align external partnerships with our archetype identity",
    "design onboarding materials that fit our tone",
    "reframe a confusing mission statement using archetypes",
    "choose brand metaphors that stick in people’s minds",
    "test if our community logo reflects our archetype",
    "decide whether our Discord should sound 'friendly' or 'wise'",
    "help staff write in one shared voice",
    "explain to outsiders what makes our culture unique",
    "simplify our message using archetype language",
    "pick visuals for a campaign that feel 'on brand'",
    "run a workshop to identify archetypes with members",
    "spot when our messaging drifts away from our core",
    "make our tone consistent across emails, posters, and social posts",
    "compare our archetype to other orgs to stand out",
    "adjust our storytelling style to fit our identity",
    "keep our archetype relevant as the community evolves"
  ],
  boosters: [
    "Communities are multi-vocal. Name primary, secondary, and shadow archetypes. Allow seasonal shifts when context changes.",
    "Write Do and Do-not examples in the community's own words. Small concrete patterns beat abstract adjectives.",
    "Pair archetypes with accessibility rules and inclusive language. Voice without inclusion is cosmetics.",
    "Map voice to situations. Invitation, conflict, crisis, celebration, and policy each need tone guidance.",
    "Protect plurality. Archetypes guide tone but do not police dialect or identity. Localize respectfully."
  ],
  definition: "An identity scaffold that adapts Jungian archetypes to community contexts. It turns motifs and values into voice, tone, language patterns, and visual cues so many contributors can sound coherent without sounding the same.",
  help: "Complete purpose, audience segments, archetype choices, motifs and promises, voice and tone matrix, word banks, examples, visual cues, guardrails, governance, and measures. Use primary, secondary, and shadow archetypes to reflect real plurality.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., Eastside Community Identity" },
    { label: "Owner or steward", key: "owner", type: "text", ph: "e.g., Community Council communications steward" },
    { label: "Purpose and scope", key: "purpose", type: "textarea", ph: "Why we are defining voice and where it applies" },

    // Audience
    {
      label: "Audience segments",
      autofill: "persona->inline",
      itemLabel: "segment",
      itemType: "typeahead",
      key: "audiences",
      max: 24,
      type: "repeater",
      ph: "e.g., Youth; elders; renters; newcomers; disabled residents; partners; agencies"
    },
    { label: "Audience needs and sensitivities", key: "audience_needs", type: "textarea", ph: "Access, safety, language, trust, trauma, consent" },

    // Archetype choices
    { label: "Primary archetype", key: "primary", type: "text", ph: "e.g., Caregiver or Neighbor" },
    { label: "Secondary archetype", key: "secondary", type: "text", ph: "e.g., Host or Bridge Builder" },
    { label: "Shadow archetype to watch", key: "shadow", type: "text", ph: "e.g., Ruler tendencies when stressed" },
    {
      label: "Archetype palette - pick any",
      key: "palette",
      type: "textarea",
      ph: "Classic: Caregiver, Creator, Explorer, Hero, Innocent, Jester, Lover, Magician, Everyperson, Outlaw, Ruler, Sage\nCommunity adapted: Neighbor, Host, Steward, Bridge Builder, Guardian, Storykeeper, Spark, Trail Guide"
    },
    { label: "Why these archetypes", key: "why", type: "textarea", ph: "Evidence and stories that justify the fit" },

    // Motifs and promise
    { label: "Motifs and metaphors", key: "motifs", type: "textarea", ph: "e.g., Open table, lantern, bridge, garden, choir" },
    { label: "Promise and proof points", key: "promise", type: "textarea", ph: "What we promise and how we prove it with actions" },
    { label: "Personality adjectives", key: "adjectives", type: "textarea", ph: "3 to 5 words, e.g., welcoming, practical, curious, steady" },
    { label: "Rituals and behaviors", key: "rituals", type: "textarea", ph: "Recurring practices that express the archetype" },

    // Voice and tone matrix
    { label: "Voice pillars", key: "voice_pillars", type: "textarea", ph: "Short statements that define how we sound" },
    { label: "Tone - invitation", key: "tone_invite", type: "textarea", ph: "How we invite and call people in" },
    { label: "Tone - information and updates", key: "tone_info", type: "textarea", ph: "How we share logistics and decisions" },
    { label: "Tone - conflict and hard news", key: "tone_conflict", type: "textarea", ph: "How we hold tension and name harm" },
    { label: "Tone - crisis", key: "tone_crisis", type: "textarea", ph: "How we speak in emergencies or incidents" },
    { label: "Tone - celebration and gratitude", key: "tone_celebration", type: "textarea", ph: "How we recognize people without tokenism" },

    // Language patterns
    { label: "Word bank - preferred", key: "words_yes", type: "textarea", ph: "Plain words we favor" },
    { label: "Word bank - avoid or rewrite", key: "words_no", type: "textarea", ph: "Jargon or tropes we avoid with alternatives" },
    { label: "Microcopy patterns - do", key: "do_patterns", type: "textarea", ph: "Short examples that fit the voice" },
    { label: "Microcopy patterns - do not", key: "dont_patterns", type: "textarea", ph: "Short counter examples that we will not use" },
    { label: "Inclusive language rules", key: "inclusive", type: "textarea", ph: "Pronouns, disability first or identity first, reading level, multilingual notes" },

    // Visual and sensory cues
    { label: "Visual cues", key: "visuals", type: "textarea", ph: "Color families, shapes, textures, icon motifs" },
    { label: "Accessibility and format", key: "a11y", type: "textarea", ph: "Contrast, captions, alt text, font sizes, motion limits" },

    // Stories and examples
    { label: "Story patterns", key: "stories", type: "textarea", ph: "Story of self, us, and now patterns that fit the archetype" },
    { label: "Examples to copy and adapt", key: "examples", type: "textarea", ph: "Invite, update, apology, celebration, policy explainer" },
    { label: "Taglines or lines to test", key: "taglines", type: "textarea", ph: "Short lines that could appear on posters or headers" },

    // Guardrails and ethics
    { label: "Anti tropes and red lines", key: "guardrails", type: "textarea", ph: "Lines we will not cross and why" },
    { label: "Cultural checks", key: "cultural", type: "textarea", ph: "How we avoid appropriation and caricature" },
    { label: "Consent and privacy reminders", key: "consent_rules", type: "textarea", ph: "Photo and story consent, opt out, retention" },

    // Governance and rollout
    { label: "Governance and roles", key: "governance", type: "textarea", ph: "Who stewards the voice and how changes are approved" },
    { label: "Training and onboarding", key: "training", type: "textarea", ph: "How contributors learn the voice quickly" },
    { label: "Channels and variants", key: "channels", type: "textarea", ph: "Website, SMS, social, flyers, in room signage" },

    // Measures and risks
    { label: "Signals and measures", key: "measures", type: "textarea", ph: "Belonging, clarity, complaints, readability, delivery on promises" },
    { label: "Risks and mitigations", key: "risks", type: "textarea", ph: "Single voice dominance, drift to marketing, exclusion risks" },

    // Context
    { label: "Context and links", key: "ctx", type: "textarea", ph: "References and constraints" }
  ],
  template: ({
    title,
    owner,
    purpose,
    audiences,
    audience_needs,

    primary,
    secondary,
    shadow,
    palette,
    why,

    motifs,
    promise,
    adjectives,
    rituals,

    voice_pillars,
    tone_invite,
    tone_info,
    tone_conflict,
    tone_crisis,
    tone_celebration,

    words_yes,
    words_no,
    do_patterns,
    dont_patterns,
    inclusive,

    visuals,
    a11y,

    stories,
    examples,
    taglines,

    guardrails,
    cultural,
    consent_rules,

    governance,
    training,
    channels,

    measures,
    risks,

    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x, i) => `${i + 1}. ${x}`).join("\n");

    return [
      title && `Community identity plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and links:\n${ctx}`,

      "SECTION: Overview",
      owner && `Owner or steward: ${owner}`,
      purpose && `Purpose and scope:\n${purpose}`,

      "SECTION: Audience",
      audiences && ["Audience segments:", listify(audiences)].join("\n"),
      audience_needs && `Audience needs and sensitivities:\n${audience_needs}`,

      "SECTION: Archetypes",
      primary && `Primary archetype: ${primary}`,
      secondary && `Secondary archetype: ${secondary}`,
      shadow && `Shadow archetype to watch: ${shadow}`,
      palette && `Archetype palette:\n${palette}`,
      why && `Why these archetypes:\n${why}`,

      "SECTION: Motifs and promise",
      motifs && `Motifs and metaphors:\n${motifs}`,
      promise && `Promise and proof points:\n${promise}`,
      adjectives && ["Personality adjectives:", listify(adjectives)].join("\n"),
      rituals && `Rituals and behaviors:\n${rituals}`,

      "SECTION: Voice and tone",
      voice_pillars && `Voice pillars:\n${voice_pillars}`,
      tone_invite && `Tone - invitation:\n${tone_invite}`,
      tone_info && `Tone - information and updates:\n${tone_info}`,
      tone_conflict && `Tone - conflict and hard news:\n${tone_conflict}`,
      tone_crisis && `Tone - crisis:\n${tone_crisis}`,
      tone_celebration && `Tone - celebration and gratitude:\n${tone_celebration}`,

      "SECTION: Language patterns",
      words_yes && ["Word bank - preferred:", listify(words_yes)].join("\n"),
      words_no && ["Word bank - avoid or rewrite:", listify(words_no)].join("\n"),
      do_patterns && ["Microcopy patterns - do:", listify(do_patterns)].join("\n"),
      dont_patterns && ["Microcopy patterns - do not:", listify(dont_patterns)].join("\n"),
      inclusive && `Inclusive language rules:\n${inclusive}`,

      "SECTION: Visual and sensory",
      visuals && `Visual cues:\n${visuals}`,
      a11y && `Accessibility and format:\n${a11y}`,

      "SECTION: Stories and examples",
      stories && `Story patterns:\n${stories}`,
      examples && `Examples to copy and adapt:\n${examples}`,
      taglines && ["Taglines or lines to test:", listify(taglines)].join("\n"),

      "SECTION: Guardrails and ethics",
      guardrails && `Anti tropes and red lines:\n${guardrails}`,
      cultural && `Cultural checks:\n${cultural}`,
      consent_rules && `Consent and privacy reminders:\n${consent_rules}`,

      "SECTION: Governance and rollout",
      governance && `Governance and roles:\n${governance}`,
      training && `Training and onboarding:\n${training}`,
      channels && `Channels and variants:\n${channels}`,

      "SECTION: Measures and risks",
      measures && ["Signals and measures:", listify(measures)].join("\n"),
      risks && `Risks and mitigations:\n${risks}`,

      "Checklist:",
      "- [ ] Primary, secondary, and shadow archetypes named with evidence",
      "- [ ] Voice pillars and tone by situation are clear",
      "- [ ] Word banks and examples reflect inclusive language rules",
      "- [ ] Visual cues meet accessibility requirements",
      "- [ ] Guardrails prevent stereotypes and appropriation",
      "- [ ] Governance and training enable many contributors",
      "- [ ] Measures track belonging, clarity, and promise delivery"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "brand archetypes community identity voice tone Jungian caregiver creator explorer hero outlaw ruler sage neighbor host steward bridge builder storykeeper inclusive language accessibility template"
  }
},

{
  id: "voice_tone_frameworks",
  slug: "voice-and-tone-frameworks-this-not-that",
  label: "Voice and Tone Frameworks - Codify how the community speaks",
  kind: "branding",
  categories: [
    "branding",
    "communications",
    "community",
    "design",
    "governance"
  ],
  tags: [
    "type:framework",
    "use:identity",
    "use:voice",
    "use:messaging",
    "use:style",
    "use:governance",
    "phase:define",
    "phase:plan",
    "topic:community",
    "level:beginner"
  ],
  use_cases: [
    "align many contributors on shared voice and tone",
    "set clear do and do not examples that people can copy",
    "adapt tone by scenario and channel without losing identity",
    "prevent stereotype drift and inaccessible language",
    "create a change process so the guide stays alive",
       "decide if our community voice should be casual or professional",
    "make emails, posts, and updates sound like they came from one voice",
    "set do vs don’t examples for writing style",
    "teach volunteers how to speak in our community’s tone",
    "adapt tone for social media vs. formal reports",
    "stop our messaging from sounding robotic",
    "find words that feel welcoming and inclusive",
    "avoid words or jokes that could alienate members",
    "make our voice sound consistent even with many writers",
    "explain to designers what tone matches the visuals",
    "show how to shift tone between celebration and crisis",
    "write website copy that feels friendly but still clear",
    "train staff to reply to messages in the same style",
    "decide if we say 'folks' or 'community members'",
    "give newcomers a style cheat sheet they can copy fast",
    "keep our tone from drifting over time",
    "codify phrases we always use and phrases we avoid",
    "explain why our voice is more warm than authoritative",
    "set tone rules for press releases vs. internal notes",
    "create consistency in multilingual or translated content",
    "map our voice to our brand archetype",
    "stress-test if our tone fits our values and mission",
    "align voice for events, newsletters, and Discord chats",
    "decide if humor is okay in official updates",
    "make instructions clear without sounding bossy",
    "rewrite confusing policies in plain language",
    "plan how our tone changes when addressing conflict",
    "avoid jargon so the community stays accessible",
    "document a process for updating tone guidelines",
    "show examples of the same message in different tones"
  ],
  boosters: [
    "Write examples in the community's own words. Concrete lines beat abstract adjectives.",
    "Map tone by scenario and channel. Invitation, conflict, crisis, and celebration need different moves.",
    "Pair voice with inclusion rules and access supports. Voice without inclusion is cosmetic.",
    "Use small reusable patterns. Subject lines, SMS, signage, captions, and apologies each get micro-templates.",
    "Keep a visible This vs That ladder with rationale. Explain why the alternative fails."
  ],
  definition: "A practical style system for communities. It turns values into voice pillars, tone by scenario, word banks, microcopy patterns, and This vs That ladders so many people can write consistently and inclusively.",
  help: "Complete purpose, audiences, voice pillars, tone matrix by scenario and channel, word banks, This vs That ladders, microcopy patterns, inclusivity and safety language, accessibility, governance, and measures. Include bilingual or multilingual variants when relevant.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., Eastside Community Voice and Tone" },
    { label: "Owner or steward", key: "owner", type: "text", ph: "e.g., Community Council communications steward" },
    { label: "Purpose and scope", key: "purpose", type: "textarea", ph: "Why we are defining voice and where it applies" },

    // Audience
    {
      label: "Audience segments",
      autofill: "persona->inline",
      itemLabel: "segment",
      itemType: "typeahead",
      key: "audiences",
      max: 24,
      type: "repeater",
      ph: "e.g., Youth; elders; renters; newcomers; disabled residents; partners; agencies"
    },
    { label: "Audience needs and sensitivities", key: "audience_needs", type: "textarea", ph: "Access, safety, language, trust, trauma, consent" },

    // Voice and tone
    { label: "Voice pillars", key: "voice_pillars", type: "textarea", ph: "Short statements that define how we sound" },
    { label: "Formality scale by channel", key: "formality", type: "textarea", ph: "SMS low, social mid, email mid, policy high. Note emoji and contractions rules." },
    { label: "Tone by scenario - invitation", key: "tone_invite", type: "textarea", ph: "How we invite and call people in" },
    { label: "Tone by scenario - information and updates", key: "tone_info", type: "textarea", ph: "How we share logistics and decisions" },
    { label: "Tone by scenario - conflict and hard news", key: "tone_conflict", type: "textarea", ph: "How we hold tension and name harm" },
    { label: "Tone by scenario - crisis", key: "tone_crisis", type: "textarea", ph: "How we speak in emergencies or incidents" },
    { label: "Tone by scenario - celebration and gratitude", key: "tone_celebration", type: "textarea", ph: "How we recognize people without tokenism" },

    // Words and patterns
    { label: "Word bank - preferred", key: "words_yes", type: "textarea", ph: "Plain words we favor" },
    { label: "Word bank - avoid or rewrite", key: "words_no", type: "textarea", ph: "Jargon or tropes we avoid with alternatives" },
    { label: "Numbers, dates, punctuation rules", key: "style_tokens", type: "textarea", ph: "24 hour or not, date format, Oxford comma, capitalization, emoji" },

    // This vs That ladders
    { label: "This vs That ladders (one per line: context - This: ... - Not that: ... - Rationale)", key: "ladders", type: "textarea", ph: "Apology - This: We are sorry we missed captions and have added them today. - Not that: We regret any inconvenience. - Rationale: plain, accountable, action included" },

    // Microcopy patterns by channel
    { label: "SMS patterns - do", key: "sms_do", type: "textarea", ph: "Short examples that fit the voice" },
    { label: "SMS patterns - do not", key: "sms_dont", type: "textarea", ph: "Counter examples to avoid" },
    { label: "Social patterns - do", key: "social_do", type: "textarea", ph: "Threads, alt text cues, CTA phrasing" },
    { label: "Social patterns - do not", key: "social_dont", type: "textarea", ph: "Tone misses or jargon" },
    { label: "Email patterns - do", key: "email_do", type: "textarea", ph: "Subject, opener, scannable body, CTA" },
    { label: "Email patterns - do not", key: "email_dont", type: "textarea", ph: "Walls of text, no dates, passive voice" },
    { label: "Signage and in room patterns - do", key: "signage_do", type: "textarea", ph: "Wayfinding, norms, big type, plain verbs" },
    { label: "Signage and in room patterns - do not", key: "signage_dont", type: "textarea", ph: "Scolding, tiny type, euphemisms" },

    // Inclusivity, safety, multilingual
    { label: "Inclusive language rules", key: "inclusive", type: "textarea", ph: "Pronouns, disability first or identity first, reading level, multilingual notes" },
    { label: "Consent, privacy, and safety language", key: "safety_lang", type: "textarea", ph: "Photo consent, opt out, reporting routes, crisis wording" },
    { label: "Multilingual and translation guidance", key: "multilingual", type: "textarea", ph: "Which languages, glossary, review by native speakers, local idioms" },
    { label: "Accessibility and format", key: "a11y", type: "textarea", ph: "Contrast, captions, alt text, font sizes, motion limits" },

    // Scenarios and examples
    { label: "Scenario scripts - invitation", key: "ex_invite", type: "textarea", ph: "Short script in our voice" },
    { label: "Scenario scripts - conflict", key: "ex_conflict", type: "textarea", ph: "Name harm, next steps, contact, accountability" },
    { label: "Scenario scripts - crisis", key: "ex_crisis", type: "textarea", ph: "Plain facts, safety, what we know, what we do next" },
    { label: "Scenario scripts - celebration", key: "ex_celebration", type: "textarea", ph: "Gratitude without tokenism" },

    // Governance and lifecycle
    { label: "Governance and roles", key: "governance", type: "textarea", ph: "Who stewards the guide and how changes are approved" },
    { label: "Change request and review process", key: "change_process", type: "textarea", ph: "How people propose updates and who decides" },
    { label: "Training and onboarding", key: "training", type: "textarea", ph: "How contributors learn the voice quickly" },
    { label: "Content audit links", key: "audit", type: "textarea", ph: "Inventory of pages, templates, and owners" },
    { label: "Data governance for guide assets", key: "data_governance", type: "textarea", ph: "Public, Community only, Restricted, Not for release. Who decides and why." },

    // Measures and risks
    { label: "Signals and measures", key: "measures", type: "textarea", ph: "Belonging, clarity, readability, complaints, delivery on promises" },
    { label: "Risks and mitigations", key: "risks", type: "textarea", ph: "Single voice dominance, drift to marketing, exclusion risks, crisis missteps" },

    // Context
    { label: "Context and links", key: "ctx", type: "textarea", ph: "References and constraints" }
  ],
  template: ({
    title,
    owner,
    purpose,
    audiences,
    audience_needs,

    voice_pillars,
    formality,
    tone_invite,
    tone_info,
    tone_conflict,
    tone_crisis,
    tone_celebration,

    words_yes,
    words_no,
    style_tokens,

    ladders,

    sms_do, sms_dont,
    social_do, social_dont,
    email_do, email_dont,
    signage_do, signage_dont,

    inclusive,
    safety_lang,
    multilingual,
    a11y,

    ex_invite,
    ex_conflict,
    ex_crisis,
    ex_celebration,

    governance,
    change_process,
    training,
    audit,
    data_governance,

    measures,
    risks,

    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x, i) => `${i + 1}. ${x}`).join("\n");

    return [
      title && `Voice and Tone guide: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and links:\n${ctx}`,

      "SECTION: Overview",
      owner && `Owner or steward: ${owner}`,
      purpose && `Purpose and scope:\n${purpose}`,

      "SECTION: Audience",
      audiences && ["Audience segments:", listify(audiences)].join("\n"),
      audience_needs && `Audience needs and sensitivities:\n${audience_needs}`,

      "SECTION: Voice and tone",
      voice_pillars && `Voice pillars:\n${voice_pillars}`,
      formality && `Formality scale by channel:\n${formality}`,
      tone_invite && `Tone - invitation:\n${tone_invite}`,
      tone_info && `Tone - information and updates:\n${tone_info}`,
      tone_conflict && `Tone - conflict and hard news:\n${tone_conflict}`,
      tone_crisis && `Tone - crisis:\n${tone_crisis}`,
      tone_celebration && `Tone - celebration and gratitude:\n${tone_celebration}`,

      "SECTION: Words and patterns",
      words_yes && ["Word bank - preferred:", listify(words_yes)].join("\n"),
      words_no && ["Word bank - avoid or rewrite:", listify(words_no)].join("\n"),
      style_tokens && `Numbers, dates, punctuation rules:\n${style_tokens}`,

      "SECTION: This vs That ladders",
      ladders && ["Ladders:", listify(ladders)].join("\n"),

      "SECTION: Microcopy by channel",
      sms_do && ["SMS - do:", listify(sms_do)].join("\n"),
      sms_dont && ["SMS - do not:", listify(sms_dont)].join("\n"),
      social_do && ["Social - do:", listify(social_do)].join("\n"),
      social_dont && ["Social - do not:", listify(social_dont)].join("\n"),
      email_do && ["Email - do:", listify(email_do)].join("\n"),
      email_dont && ["Email - do not:", listify(email_dont)].join("\n"),
      signage_do && ["Signage and in room - do:", listify(signage_do)].join("\n"),
      signage_dont && ["Signage and in room - do not:", listify(signage_dont)].join("\n"),

      "SECTION: Inclusivity, safety, multilingual",
      inclusive && `Inclusive language rules:\n${inclusive}`,
      safety_lang && `Consent, privacy, and safety language:\n${safety_lang}`,
      multilingual && `Multilingual and translation guidance:\n${multilingual}`,
      a11y && `Accessibility and format:\n${a11y}`,

      "SECTION: Scenarios and scripts",
      ex_invite && `Scenario script - invitation:\n${ex_invite}`,
      ex_conflict && `Scenario script - conflict:\n${ex_conflict}`,
      ex_crisis && `Scenario script - crisis:\n${ex_crisis}`,
      ex_celebration && `Scenario script - celebration:\n${ex_celebration}`,

      "SECTION: Governance and lifecycle",
      governance && `Governance and roles:\n${governance}`,
      change_process && `Change request and review process:\n${change_process}`,
      training && `Training and onboarding:\n${training}`,
      audit && `Content audit links:\n${audit}`,
      data_governance && `Data governance for guide assets:\n${data_governance}`,

      "SECTION: Measures and risks",
      measures && ["Signals and measures:", listify(measures)].join("\n"),
      risks && `Risks and mitigations:\n${risks}`,

      "Checklist:",
      "- [ ] Voice pillars and tone by scenario are clear",
      "- [ ] This vs That ladders include rationale and copyable lines",
      "- [ ] Word banks and style tokens are simple and inclusive",
      "- [ ] Microcopy patterns exist for SMS, social, email, and signage",
      "- [ ] Safety, consent, and accessibility language is ready to paste",
      "- [ ] Governance and change process are visible and used",
      "- [ ] Measures track clarity, belonging, and promise delivery"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "voice tone frameworks style guide this vs that ladders microcopy inclusive language accessibility crisis communication scenario scripts community branding template"
  }
},

{
  id: "public_narrative_action",
  slug: "public-narrative-structure-call-to-action",
  label: "Public Narrative - Structure shared story and call to action",
  kind: "communications",
  categories: [
    "communications",
    "community",
    "branding",
    "facilitation",
    "strategy"
  ],
  tags: [
    "type:framework",
    "use:story",
    "use:voice",
    "use:engagement",
    "use:mobilization",
    "use:advocacy",
    "phase:define",
    "phase:decide",
    "phase:act",
    "topic:community",
    "level:beginner"
  ],
  use_cases: [
    "craft stories that move people to take a specific action",
    "align many contributors on a shared narrative and ask",
    "translate values into behavior through clear choice points",
    "tailor message, messenger, and channel for each audience",
    "measure what resonates and iterate responsibly",
      "write a story that makes people want to sign a petition",
    "make a speech that ends with a strong clear ask",
    "align many contributors on one campaign story",
    "share why this issue matters and what people can do now",
    "help volunteers explain the cause in their own words",
    "turn community values into real choices and actions",
    "find the right messenger for the right audience",
    "adapt the same call to action for email, TikTok, and flyers",
    "test which story gets more people to click or join",
    "measure what message actually worked",
    "make a fundraising ask without sounding pushy",
    "rally people at an event around one chant or theme",
    "write a post that ends with 'join us here today'",
    "tell my personal story so others care about the cause",
    "teach teens how to talk about climate action at school",
    "show the 'why act now' moment in a short video",
    "create a campaign slogan that sticks in memory",
    "give volunteers a simple story they can repeat",
    "connect my family story to a bigger community fight",
    "script an intro for a town hall meeting",
    "build urgency into a call for donations",
    "make sure different languages keep the same spirit",
    "explain why doing nothing has a cost",
    "practice a 2-minute version of our story for media",
    "tell the story of 'us' not just 'me'",
    "use story structure to calm fear and inspire hope",
    "plan the closing line for a march or rally speech",
    "get shy leaders to share personal stories",
    "draft a campaign launch video script",
    "frame our story to counter misinformation",
    "tie a local problem to a global movement",
    "show a before/after contrast to spark action",
    "make the call to action easy and doable",
    "rehearse our story until it feels natural",
    "help staff emails feel more human",
    "give donors a story they want to retell",
    "turn research facts into an emotional story",
    "close a meeting with one inspiring ask",
    "choose between urgency vs. hope framing",
    "share a 'we did it' story after action succeeds"
  ],
  boosters: [
    "Make the ask first class. One crisp behavior, one deadline, one route to yes.",
    "Stories need stakes. Name what is at risk if we do nothing and what is possible if we act.",
    "Use trusted messengers for each audience. Proximity beats celebrity.",
    "Pair emotion with evidence. Facts anchor, feelings move.",
    "Keep accessibility and multilingual routes in scope from the start.",
    "Close the loop. Report back outcomes quickly and thank by name when consented."
  ],
  definition: "An action-oriented remix of Public Narrative that turns Story of Self, Us, and Now into a clear call to action with the right messenger, channel, and proof.",
  help: "Complete audience, messengers, the Self-Us-Now scaffolds, message and proof, a ladder of asks, channels and scripts, inclusion and consent, risks, measures, and a tight timeline. Publish a brief and iterate with real feedback.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., Belonging This Summer - Public Narrative" },
    { label: "Owner or team", key: "owner", type: "text", ph: "e.g., Community Council comms + youth leads" },
    { label: "Purpose and objective", key: "purpose", type: "textarea", ph: "e.g., Recruit 120 first-time speakers by Sept 30" },

    // Audience and messengers
    {
      label: "Audience segments",
      autofill: "persona->inline",
      itemLabel: "segment",
      itemType: "typeahead",
      key: "audiences",
      max: 24,
      type: "repeater",
      ph: "e.g., Newcomers; renters; elders; small biz; volunteers; partners"
    },
    { label: "Audience needs and barriers", key: "audience_needs", type: "textarea", ph: "Access, trust, time, transport, safety, language" },
    {
      label: "Messengers and narrators",
      autofill: "persona->inline",
      itemLabel: "messenger",
      itemType: "typeahead",
      key: "messengers",
      max: 20,
      type: "repeater",
      ph: "e.g., Youth host; librarian; tenant leader; imam; coach"
    },
    {
      label: "Validators and partners",
      autofill: "persona->inline",
      itemLabel: "validator",
      itemType: "typeahead",
      key: "validators",
      max: 20,
      type: "repeater",
      ph: "e.g., Disability advocates; language access office; neighborhood orgs"
    },

    // Story of Self
    { label: "Self - protagonist and role", key: "self_role", type: "text", ph: "Who is speaking and why they care" },
    { label: "Self - choice point", key: "self_choice", type: "textarea", ph: "A moment you chose to act and what it cost" },
    { label: "Self - values revealed", key: "self_values", type: "textarea", ph: "The values at stake, named plainly" },

    // Story of Us
    { label: "Us - who is the we", key: "us_we", type: "textarea", ph: "Shared identity and experiences" },
    { label: "Us - shared values", key: "us_values", type: "textarea", ph: "Belonging, fairness, safety, joy, care" },
    { label: "Us - proof and examples", key: "us_proofs", type: "textarea", ph: "Short vignettes that show we act on our values" },

    // Story of Now
    { label: "Now - urgent challenge", key: "now_challenge", type: "textarea", ph: "What is at stake right now" },
    { label: "Now - opportunity window", key: "now_window", type: "textarea", ph: "Why action now matters and why we can win" },
    { label: "Now - clear call to action", key: "now_ask", type: "text", ph: "One behavior + date + place or link" },

    // Message and proof
    { label: "Core message (one line)", key: "message_one", type: "text", ph: "e.g., Your voice changes what happens here" },
    { label: "Headline and subhead", key: "headline", type: "textarea", ph: "Short headline and support line" },
    { label: "Evidence and proof points", key: "proof", type: "textarea", ph: "Stats, quotes with consent, before-after, endorsements" },
    { label: "Emotional arc and tone", key: "tone", type: "textarea", ph: "From concern to possibility to agency" },
    { label: "Metaphors and motifs", key: "metaphors", type: "textarea", ph: "Bridge, open table, lantern, garden" },

    // Ladder of engagement
    { label: "Low lift asks (one per line)", key: "ask_low", type: "textarea", ph: "Sign up; share; attend 15 min orientation" },
    { label: "Medium lift asks (one per line)", key: "ask_mid", type: "textarea", ph: "Co-host; bring 2 friends; translate a flyer" },
    { label: "High lift asks (one per line)", key: "ask_high", type: "textarea", ph: "Lead a table; testify; run outreach" },
    { label: "Incentives and supports", key: "supports", type: "textarea", ph: "Stipends, childcare, interpreters, rides, food" },
    { label: "Deadlines and milestones", key: "deadlines", type: "text", ph: "e.g., First 50 signups by Aug 1; 120 by Sept 30" },

    // Channels and scripts
    { label: "Channels to use", key: "channels", type: "textarea", ph: "SMS, WhatsApp, email, social, flyers, in-room, radio" },
    { label: "Script - 60 second talk", key: "script_60s", type: "textarea", ph: "Self, Us, Now with a single ask" },
    { label: "Script - SMS 160 chars", key: "script_sms", type: "text", ph: "Short line with date, place, link" },
    { label: "Script - email invite", key: "script_email", type: "textarea", ph: "Subject, opener, scannable body, CTA" },
    { label: "Script - social thread", key: "script_social", type: "textarea", ph: "3 to 5 posts with image alt text cues" },
    { label: "Visual cues", key: "visuals", type: "textarea", ph: "Images, colors, icons that fit the message" },

    // Inclusion, consent, accessibility
    { label: "Consent and privacy", key: "consent", type: "textarea", ph: "Photo and story consent, opt out, data handling" },
    { label: "Languages and translation", key: "languages", type: "textarea", ph: "Which languages, who reviews, local idioms" },
    { label: "Accessibility supports", key: "a11y", type: "textarea", ph: "Alt text, captions, font size, contrast, motion limits" },

    // Risks and counters
    { label: "Opposition frames to expect", key: "counter_frames", type: "textarea", ph: "Common objections and short counters" },
    { label: "Red lines and do-not-say", key: "red_lines", type: "textarea", ph: "Tropes to avoid and why" },

    // Measure and learn
    { label: "Signals and measures", key: "measures", type: "textarea", ph: "Clicks, signups, attendance, replies, volunteer retention" },
    { label: "Feedback loop and tests", key: "feedback", type: "textarea", ph: "A/B tests, intercept interviews, quick survey" },

    // Timeline and report back
    { label: "Timeline and launch plan", key: "timeline", type: "text", ph: "Prep this week, soft launch next week, full launch date" },
    { label: "Report back plan", key: "report_back", type: "textarea", ph: "Share outcomes within 14 days, thank publicly with consent" },

    // Context
    { label: "Context and links", key: "ctx", type: "textarea", ph: "Docs, data sources, prior campaigns" }
  ],
  template: ({
    title,
    owner,
    purpose,

    audiences,
    audience_needs,
    messengers,
    validators,

    self_role,
    self_choice,
    self_values,

    us_we,
    us_values,
    us_proofs,

    now_challenge,
    now_window,
    now_ask,

    message_one,
    headline,
    proof,
    tone,
    metaphors,

    ask_low,
    ask_mid,
    ask_high,
    supports,
    deadlines,

    channels,
    script_60s,
    script_sms,
    script_email,
    script_social,
    visuals,

    consent,
    languages,
    a11y,

    counter_frames,
    red_lines,

    measures,
    feedback,

    timeline,
    report_back,
    ctx,
    audience,
    style,
    tone: overall_tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i + 1}. ${x}`).join("\n");

    const ladderBlock = [
      ask_low && ["Low lift asks:", listify(ask_low)].join("\n"),
      ask_mid && ["Medium lift asks:", listify(ask_mid)].join("\n"),
      ask_high && ["High lift asks:", listify(ask_high)].join("\n"),
      supports && `Incentives and supports:\n${supports}`,
      deadlines && `Deadlines and milestones: ${deadlines}`
    ].filter(Boolean).join("\n");

    return [
      title && `Public Narrative plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      overall_tone && `Tone: ${overall_tone}`,
      ctx && `Context and links:\n${ctx}`,

      "SECTION: Overview",
      owner && `Owner or team: ${owner}`,
      purpose && `Purpose and objective:\n${purpose}`,

      "SECTION: Audience and messengers",
      audiences && ["Audience segments:", listify(audiences)].join("\n"),
      audience_needs && `Audience needs and barriers:\n${audience_needs}`,
      messengers && ["Messengers and narrators:", listify(messengers)].join("\n"),
      validators && ["Validators and partners:", listify(validators)].join("\n"),

      "SECTION: Story of Self",
      self_role && `Protagonist and role: ${self_role}`,
      self_choice && `Choice point:\n${self_choice}`,
      self_values && `Values revealed:\n${self_values}`,

      "SECTION: Story of Us",
      us_we && `Who is the we:\n${us_we}`,
      us_values && `Shared values:\n${us_values}`,
      us_proofs && `Proof and examples:\n${us_proofs}`,

      "SECTION: Story of Now",
      now_challenge && `Urgent challenge:\n${now_challenge}`,
      now_window && `Opportunity window:\n${now_window}`,
      now_ask && `Call to action: ${now_ask}`,

      "SECTION: Message and proof",
      message_one && `Core message: ${message_one}`,
      headline && `Headline and subhead:\n${headline}`,
      proof && `Evidence and proof points:\n${proof}`,
      tone && `Emotional arc and tone:\n${tone}`,
      metaphors && `Metaphors and motifs:\n${metaphors}`,

      "SECTION: Ladder of engagement",
      ladderBlock,

      "SECTION: Channels and scripts",
      channels && `Channels:\n${channels}`,
      script_60s && `Script - 60 second talk:\n${script_60s}`,
      script_sms && `Script - SMS:\n${script_sms}`,
      script_email && `Script - email:\n${script_email}`,
      script_social && `Script - social thread:\n${script_social}`,
      visuals && `Visual cues:\n${visuals}`,

      "SECTION: Inclusion, consent, accessibility",
      consent && `Consent and privacy:\n${consent}`,
      languages && `Languages and translation:\n${languages}`,
      a11y && `Accessibility supports:\n${a11y}`,

      "SECTION: Risks and counters",
      counter_frames && `Opposition frames to expect:\n${counter_frames}`,
      red_lines && `Red lines and do-not-say:\n${red_lines}`,

      "SECTION: Measure and learn",
      measures && ["Signals and measures:", listify(measures)].join("\n"),
      feedback && `Feedback loop and tests:\n${feedback}`,

      "SECTION: Timeline and report back",
      timeline && `Timeline and launch plan: ${timeline}`,
      report_back && `Report back plan:\n${report_back}`,

      "Checklist:",
      "- [ ] Self, Us, Now are each specific and human",
      "- [ ] One clear call to action with a deadline",
      "- [ ] Messenger matches audience and channel",
      "- [ ] Proof points are credible and consented",
      "- [ ] Access supports and languages are ready",
      "- [ ] Risks and counters agreed with red lines",
      "- [ ] Measures and feedback loop in place",
      "- [ ] Report back scheduled and owners named"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "Public Narrative Self Us Now call to action messenger channel proof ladder of engagement community storytelling template"
  }
},


{
  id: "story_circles_harvesting",
  slug: "story-circles-story-harvesting",
  label: "Story Circles / Story Harvesting — Peer storytelling to extract themes and values",
  kind: "facilitation",
  categories: [
    "community",
    "facilitation",
    "learning",
    "research",
    "communications"
  ],
  tags: [
    "type:method",
    "use:story",
    "use:engagement",
    "use:sensemaking",
    "use:synthesis",
    "use:values",
    "phase:explore",
    "phase:define",
    "phase:reflect",
    "topic:community",
    "level:beginner"
  ],
  use_cases: [
    "gather lived-experience stories and surface shared values",
    "create quick, low-tech insight cycles with many voices",
    "inform strategy, messaging, and program design with patterns",
    "build trust and belonging through peer listening",
    "generate quotes and vignettes with consent for reports",
       "gather lived-experience stories and surface shared values",
    "create quick, low-tech insight cycles with many voices",
    "inform strategy, messaging, and program design with patterns",
    "build trust and belonging through peer listening",
    "generate quotes and vignettes with consent for reports",
    "help a team reflect on what worked and what didn’t",
    "use stories to connect generations in a community",
    "share memories after a big project or event",
    "make meetings more human with storytelling rounds",
    "find common threads in personal journeys",
    "teach students empathy through sharing circles",
    "practice deep listening in a safe group setting",
    "collect material for a grant or funding proposal",
    "document the impact of a program through voices",
    "harvest wisdom from elders or knowledge keepers",
    "give shy people a way to be heard",
    "replace boring surveys with group story sharing",
    "celebrate small wins with peer stories",
    "capture stories for a community newsletter",
    "help new members feel welcome fast",
    "train facilitators in listening and synthesis",
    "explore cultural identity through shared tales",
    "prepare case studies from community voices",
    "discover hidden strengths in a group",
    "gather healing stories after conflict",
    "use stories to brainstorm solutions to problems",
    "turn messy experiences into clear lessons",
    "make evaluation feel meaningful, not extractive",
    "map values that show up across stories",
    "co-create a vision statement from real voices",
    "strengthen bonds after a crisis or challenge",
    "build confidence in telling personal stories",
    "practice non-judgmental listening as a group",
    "identify role models through storytelling",
    "use stories to design better programs",
    "find out what really motivates people",
    "learn what success feels like for different groups",
    "turn community voices into social media content",
    "explain complex issues through personal stories",
    "collect stories to share at an anniversary event",
    "help kids share their feelings in safe groups",
    "show funders the human impact of their support",
    "gather migrant stories for cultural preservation",
    "find values to guide a new community project",
    "record stories for history and archives",
    "capture emotional impact, not just numbers",
    "surface tensions and opportunities through stories",
    "use story circles to open a workshop or retreat",
    "translate abstract values into lived examples",
    "practice gratitude by sharing impact stories",
    "make quieter voices visible in decisions"
  ],
  boosters: [
    "Open with a clear, human prompt and a short demo story. Keep it local in time and place.",
    "Use small circles (4–6) with strict timing to keep airtime fair. Rotate roles each round.",
    "Harvest live. Pair each circle with a named harvester using a simple capture card.",
    "Name harvest lenses up front (e.g., values, barriers, turning points). People listen differently when they know what to notice.",
    "Consent is specific. Decide what can be quoted, where, and for how long. Offer anonymous options.",
    "Close the loop. Share a quick public brief within 14 days and credit contributors who opted in."
  ],
  definition: "A peer storytelling format where participants share short, specific stories in small circles while designated harvesters capture values, themes, and signals. The group then synthesizes patterns and turns insights into actions.",
  help: "Complete purpose, participants, access supports, consent, circle setup, prompts, timing, harvesting lenses, capture templates, synthesis plan, and follow-through. Aim for many short stories over a few long ones.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., Story Circles on Belonging" },
    { label: "Horizon & date", key: "horizon", type: "text", ph: "e.g., Spring cycle; event on May 18, 6–8 pm" },
    { label: "Purpose & focal question", key: "purpose", type: "textarea", ph: "e.g., What moments made you feel welcome (or not) here in the last 6 months?" },
    { label: "Sponsor / convener", key: "owner", type: "text", ph: "e.g., Community Council with Library" },

    // Inclusion & outreach
    {
      label: "Participants",
      autofill: "persona->inline",
      itemLabel: "participant group",
      itemType: "typeahead",
      key: "participants",
      max: 28,
      type: "repeater",
      ph: "e.g., Youth; elders; renters; newcomers; disabled residents"
    },
    { label: "Recruitment & outreach plan", key: "recruitment", type: "textarea", ph: "Partners, SMS, flyers, outreach in focus blocks" },
    { label: "Access supports & compensation", key: "access", type: "textarea", ph: "Stipends; childcare; interpreters/ASL; transport; food; sensory supports" },

    // Ethics & governance
    { label: "Consent & quoting rules", key: "consent", type: "textarea", ph: "Quote allowed? where? how long? opt-out and anonymity options" },
    { label: "Data governance & publication tiers", key: "data_governance", type: "textarea", ph: "Public | Community-only | Restricted | Not-for-release — who decides and why" },

    // Setup & roles
    { label: "Circle size & layout", key: "layout", type: "text", ph: "e.g., 8 circles of 5 chairs each; quiet room; hybrid link" },
    { label: "Rounds & timing", key: "timing", type: "text", ph: "e.g., 3 rounds: 5–6 min stories + 2 min harvest each; 15 min synthesis" },
    { label: "Roles & staffing", key: "roles", type: "textarea", ph: "Lead facilitator; circle hosts; timekeepers; harvesters; accessibility lead; scribe" },

    // Prompts & capture
    { label: "Primary story prompt", key: "prompt_primary", type: "textarea", ph: "Tell a short story about a moment you felt welcome (or unwelcome). What happened, where, and who was there?" },
    { label: "Follow-up prompts", key: "prompt_followups", type: "textarea", ph: "What mattered about that? What changed after? What helped or got in the way?" },
    { label: "Story length target", key: "story_len", type: "text", ph: "e.g., 90–180 seconds" },
    { label: "Harvest lenses (one per line)", key: "lenses", type: "textarea", ph: "Values\nBarriers\nSupports\nTurning points\nEmotions\nPower/voice\nOutcomes\nIdeas" },
    { label: "Capture template (fields)", key: "capture_tpl", type: "textarea", ph: "Story title; When/where; Who for; Essence (1–2 lines); Values; Barrier/Support; Turning point; Outcome; Quote (if consented); Tags" },
    { label: "Capture tools", key: "tools", type: "textarea", ph: "Paper cards; Google Form; Miro/FigJam board; talk-time tracker" },
    { label: "Recording/notes rules", key: "recording_rules", type: "textarea", ph: "Audio only with explicit consent; no video; anonymize by default" },

    // Logs (during/after)
    { label: "Story cards (one per line using the capture template)", key: "story_cards", type: "textarea", ph: "e.g., Library open mic; Mar 12; teens; essence...; values...; quote..." },
    { label: "Quotes with consent (one per line)", key: "quotes_log", type: "textarea", ph: "Short quotes with attribution level (name/pseudonym/anonymous)" },
    { label: "Values list (one per line)", key: "values_list", type: "textarea", ph: "e.g., Belonging\nSafety\nRecognition\nFairness\nJoy" },

    // Synthesis
    { label: "Clustering & themes", key: "themes", type: "textarea", ph: "Affinity clusters; name themes in participants’ words" },
    { label: "Contradictions & edge cases", key: "edges", type: "textarea", ph: "Stories that resist the main pattern and what they teach" },
    { label: "Tensions, needs, opportunities", key: "tno", type: "textarea", ph: "What needs surfaced? Where are leverage points?" },
    { label: "Evidence links & artifacts", key: "evidence", type: "textarea", ph: "Decision logs; photos; attendance; policy notes" },

    // Decisions & follow-through
    { label: "Decisions & actions (one per line: action — owner — resources — start — check date)", key: "actions", type: "textarea", ph: "e.g., Expand interpreter pool — Maria — $6k — Jul — Sep review" },
    { label: "Feedback & report-back plan", key: "report_back", type: "textarea", ph: "Community-first brief in 14 days; bilingual summary; publish anonymized stories if consented" },

    // Measures & risks
    { label: "Measures & signals", key: "measures", type: "textarea", ph: "Attendance by subgroup; speaking balance; # stories; value frequency; action delivery rate" },
    { label: "Risks & mitigations", key: "risks", type: "textarea", ph: "Tokenism; extraction without return; confidentiality breaches; dominance by few" },

    // Timeline & context
    { label: "Agenda & schedule", key: "agenda", type: "textarea", ph: "Welcome; consent; round 1; round 2; round 3; cluster; harvest; actions; close" },
    { label: "Timeline & cadence", key: "timeline", type: "text", ph: "Prep 1–2 weeks; event; brief in 14 days; follow-up circle in 30 days" },
    { label: "Context & notes", key: "ctx", type: "textarea", ph: "Links, constraints, prior cycles" }
  ],
  template: ({
    title,
    horizon,
    purpose,
    owner,

    participants,
    recruitment,
    access,

    consent,
    data_governance,

    layout,
    timing,
    roles,

    prompt_primary,
    prompt_followups,
    story_len,
    lenses,
    capture_tpl,
    tools,
    recording_rules,

    story_cards,
    quotes_log,
    values_list,

    themes,
    edges,
    tno,
    evidence,

    actions,
    report_back,

    measures,
    risks,

    agenda,
    timeline,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`).join("\n");

    const flow = [
      "Welcome & consent",
      "Story rounds in small circles",
      "Live harvest with named lenses",
      "Cluster themes and values",
      "Name tensions, needs, opportunities",
      "Agree actions with owners and dates",
      "Report back publicly and close the loop"
    ].join(" -> ");

    return [
      title && `Story Circles / Story Harvesting plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context & notes:\n${ctx}`,

      "SECTION: Overview",
      horizon && `Horizon & date: ${horizon}`,
      purpose && `Purpose & focal question:\n${purpose}`,
      owner && `Sponsor / convener: ${owner}`,

      "SECTION: Inclusion & outreach",
      participants && ["Participants:", listify(participants)].join("\n"),
      recruitment && `Recruitment & outreach plan:\n${recruitment}`,
      access && `Access supports & compensation:\n${access}`,

      "SECTION: Ethics & governance",
      consent && `Consent & quoting rules:\n${consent}`,
      data_governance && `Data governance & publication tiers:\n${data_governance}`,

      "SECTION: Setup & roles",
      layout && `Circle size & layout: ${layout}`,
      timing && `Rounds & timing: ${timing}`,
      roles && `Roles & staffing:\n${roles}`,

      "SECTION: Prompts & capture",
      prompt_primary && `Primary story prompt:\n${prompt_primary}`,
      prompt_followups && `Follow-up prompts:\n${prompt_followups}`,
      story_len && `Story length target: ${story_len}`,
      lenses && ["Harvest lenses:", listify(lenses)].join("\n"),
      capture_tpl && `Capture template (fields):\n${capture_tpl}`,
      tools && `Capture tools:\n${tools}`,
      recording_rules && `Recording/notes rules:\n${recording_rules}`,

      "SECTION: Logs",
      story_cards && ["Story cards:", listify(story_cards)].join("\n"),
      quotes_log && ["Quotes with consent:", listify(quotes_log)].join("\n"),
      values_list && ["Values list:", listify(values_list)].join("\n"),

      "SECTION: Synthesis",
      themes && `Clustering & themes:\n${themes}`,
      edges && `Contradictions & edge cases:\n${edges}`,
      tno && `Tensions, needs, opportunities:\n${tno}`,
      evidence && `Evidence links & artifacts:\n${evidence}`,

      "SECTION: Decisions & follow-through",
      actions && ["Decisions & actions:", listify(actions)].join("\n"),
      report_back && `Feedback & report-back plan:\n${report_back}`,

      "SECTION: Measures & risks",
      measures && ["Measures & signals:", listify(measures)].join("\n"),
      risks && `Risks & mitigations:\n${risks}`,

      "SECTION: Timeline & agenda",
      agenda && `Agenda & schedule:\n${agenda}`,
      timeline && `Timeline & cadence: ${timeline}`,

      "Quick reference",
      flow,

      "Checklist:",
      "- [ ] Clear, human prompt and demo story",
      "- [ ] Circles sized 4–6 with strict timing and rotation",
      "- [ ] Named harvesters capturing with agreed lenses",
      "- [ ] Consent and quoting rules understood and honored",
      "- [ ] Visible clustering and values synthesis in participants’ words",
      "- [ ] Actions have owners, resources, and check dates",
      "- [ ] Community-first brief published within 14 days"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "Story Circles Story Harvesting peer storytelling values themes lenses capture cards consent clustering synthesis community method template"
  }
},


{
  id: "cultural_web_johnson_scholes",
  slug: "cultural-web-johnson-scholes",
  label: "Cultural Web - Unpack symbols, rituals, stories shaping voice",
  kind: "analysis",
  categories: [
    "branding",
    "communications",
    "community",
    "strategy",
    "research"
  ],
  tags: [
    "type:framework",
    "use:identity",
    "use:voice",
    "use:diagnosis",
    "use:change",
    "use:research",
    "phase:explore",
    "phase:define",
    "phase:plan",
	"topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "make implicit cultural patterns visible before codifying voice",
    "map how stories, rituals, symbols, power, controls, and structures shape tone",
    "spot shadow norms and stereotype risks that derail inclusive messaging",
    "identify leverage points and quick experiments to shift culture and voice",
    "link culture findings to brand archetypes and voice guides",
       "make implicit cultural patterns visible before codifying voice",
    "map how stories, rituals, symbols, power, controls, and structures shape tone",
    "spot shadow norms and stereotype risks that derail inclusive messaging",
    "identify leverage points and quick experiments to shift culture and voice",
    "link culture findings to brand archetypes and voice guides",
    "analyze company traditions to see how they influence behavior",
    "understand why teams resist change by mapping hidden assumptions",
    "spot rituals that keep people included or excluded",
    "explain why the 'official' values don’t match daily practice",
    "diagnose how meeting styles shape decision-making",
    "prepare culture insights for a rebrand or merger",
    "find stories staff tell that shape the organization’s reputation",
    "surface unspoken rules that control behavior more than policies",
    "use cultural mapping in onboarding to show how things ‘really work’",
    "discover why slogans fail to connect with employees",
    "map symbols (logos, dress codes, office layout) that send hidden signals",
    "study culture before launching diversity or inclusion efforts",
    "track how culture shifts after a leadership change",
    "learn what rituals boost morale vs. waste time",
    "explore how office humor reveals deeper norms",
    "figure out why people ignore a new strategy or policy",
    "test how changing one symbol (like office space design) shifts culture",
    "spot who really has power vs. who just has a title",
    "see how stories about 'heroes' and 'failures' shape risk-taking",
    "understand cultural differences between departments",
    "use with students to analyze school culture and cliques",
    "map community rituals (festivals, gatherings) to see shared values",
    "understand resistance to new technology rollouts",
    "prepare insights for cultural sensitivity training",
    "examine how communication channels reinforce hierarchy",
    "document cultural barriers for an international partnership",
    "track how informal groups shape real decision-making",
    "identify stories that inspire change vs. keep the status quo",
    "map unspoken taboos people avoid talking about",
    "diagnose why new hires struggle to fit in",
    "compare symbolic differences between two merging orgs",
    "use cultural mapping in participatory research with communities",
    "spot disconnects between leadership speeches and team jokes",
    "help leaders design rituals that reinforce intended culture",
    "study how recognition systems shape motivation",
    "analyze cultural roots of conflict in a team",
    "look at how holidays, awards, or mottos reinforce identity",
    "map 'shadow values' that no one writes down but everyone feels",
    "show why branding efforts feel fake if culture doesn’t match",
    "teach students how culture shapes groups beyond rules",
    "figure out why communication feels cold or welcoming",
    "study how gender norms show up in rituals and symbols",
    "find leverage points to align brand voice with lived culture"
  ],
  boosters: [
    "Work with a cross section of the system and compensate lived expertise.",
    "Collect real artifacts. Screenshots, flyers, posts, signage, swag, forms, meeting scripts.",
    "Mine language. Build a mini corpus to see frequent words, metaphors, and reading level.",
    "Separate description from judgment. First name what is, then decide what should change.",
    "Close the loop by rewriting two real artifacts with the desired voice and testing them."
  ],
  definition: "A diagnostic map of the lived culture across six elements around a core paradigm. Stories, Rituals and Routines, Symbols, Power Structures, Organizational Structures, and Control Systems are examined to see how they shape community voice and tone.",
  help: "Fill the fields for each Cultural Web element with evidence and quotes. Synthesize the current paradigm and the desired paradigm. Derive voice implications and choose a few experiments to shift practice and tone.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., Cultural Web for Eastside Community Voice" },
    { label: "Horizon and dates", key: "horizon", type: "text", ph: "e.g., Discovery in May, synthesis in June" },
    { label: "Purpose and scope", key: "purpose", type: "textarea", ph: "Why we are mapping culture and which channels or teams are in scope" },
    { label: "Owner or steward", key: "owner", type: "text", ph: "e.g., Community Council communications steward" },

    // People and inclusion
    {
      label: "Participants and sources",
      autofill: "persona->inline",
      itemLabel: "participant or source",
      itemType: "typeahead",
      key: "participants",
      max: 28,
      type: "repeater",
      ph: "e.g., Youth leaders, elders circle, frontline staff, moderators, partners"
    },
    { label: "Access supports and compensation", key: "access", type: "textarea", ph: "Stipends, childcare, interpreters and ASL, transport, food, sensory supports" },

    // Ethics and governance
    { label: "Consent and quoting rules", key: "consent", type: "textarea", ph: "What can be quoted, where, how long, anonymity options" },
    { label: "Data governance and publication tiers", key: "data_governance", type: "textarea", ph: "Public | Community only | Restricted | Not for release, who decides and why" },

    // Evidence and tools
    { label: "Evidence sources", key: "evidence_sources", type: "textarea", ph: "Docs, posts, transcripts, signage, forms, photos, policies, metrics" },
    { label: "Canvas or board link", key: "canvas_link", type: "text", ph: "Kumu or Miro or FigJam URL" },

    // Cultural Web elements - current state
    { label: "Paradigm - current core beliefs", key: "paradigm_now", type: "textarea", ph: "The taken for granted story about who we are and how things work" },
    { label: "Stories and myths - current", key: "stories_now", type: "textarea", ph: "Signature stories, heroes, villains, cautionary tales, origin myths" },
    { label: "Rituals and routines - current", key: "rituals_now", type: "textarea", ph: "Recurring meetings, openings, awards, onboarding, moderation habits" },
    { label: "Symbols and artifacts - current", key: "symbols_now", type: "textarea", ph: "Logos, colors, spaces, swag, emojis, dress, taglines, forms" },
    { label: "Power structures - current", key: "power_now", type: "textarea", ph: "Formal and informal power, who gets airtime, who approves language" },
    { label: "Organizational structures - current", key: "org_now", type: "textarea", ph: "Decision paths, committees, channels, roles, gatekeepers" },
    { label: "Control systems - current", key: "controls_now", type: "textarea", ph: "What is measured and rewarded, moderation rules, SLAs, KPIs" },

    // Cultural Web elements - desired state
    { label: "Paradigm - desired core beliefs", key: "paradigm_next", type: "textarea", ph: "The future story we want to be true and lived" },
    { label: "Stories and myths - desired", key: "stories_next", type: "textarea", ph: "New or elevated stories we will tell and share" },
    { label: "Rituals and routines - desired", key: "rituals_next", type: "textarea", ph: "Rituals to start, stop, or adapt to match values" },
    { label: "Symbols and artifacts - desired", key: "symbols_next", type: "textarea", ph: "Visual and material cues that signal the new voice" },
    { label: "Power structures - desired", key: "power_next", type: "textarea", ph: "Shifts to participation, decision rights, and voice equity" },
    { label: "Organizational structures - desired", key: "org_next", type: "textarea", ph: "Simpler routes, community roles, review loops for language" },
    { label: "Control systems - desired", key: "controls_next", type: "textarea", ph: "Measures and incentives that reinforce the voice we want" },

    // Language and voice
    { label: "Language patterns observed", key: "language_now", type: "textarea", ph: "Common words, metaphors, reading level, passive vs active voice" },
    { label: "Voice implications", key: "voice_implications", type: "textarea", ph: "How the current web pushes tone, what to keep, what to change" },
    { label: "Risks and shadow norms", key: "shadows", type: "textarea", ph: "Tokenism, gatekeeping, jargon, paternalism, exclusion risks" },

    // Experiments and change
    { label: "Leverage points and experiments", key: "experiments", type: "textarea", ph: "Small tests that would shift practice and tone" },
    { label: "Rewrite two artifacts now", key: "rewrites", type: "textarea", ph: "Name two items to rewrite with the desired voice and how you will test them" },

    // Logs and artifacts
    { label: "Story bank (one per line)", key: "story_bank", type: "textarea", ph: "Short story title - essence - quote if consented - link" },
    { label: "Ritual inventory (one per line)", key: "rituals_log", type: "textarea", ph: "Name - frequency - participants - purpose - keep or change" },
    { label: "Symbol and artifact inventory", key: "symbols_log", type: "textarea", ph: "Item - where seen - who uses it - meaning" },
    { label: "Power map notes", key: "power_log", type: "textarea", ph: "Names or roles - influence route - risks - allies" },
    { label: "Controls list", key: "controls_log", type: "textarea", ph: "Metric or rule - owner - behavior it drives" },

    // Synthesis and decisions
    { label: "Paradigm statement - one or two sentences", key: "paradigm_statement", type: "text", ph: "Concise statement in plain language" },
    { label: "Tensions and tradeoffs", key: "tensions", type: "textarea", ph: "What we will balance and why" },
    { label: "Decisions and actions (one per line: action - owner - resources - start - check date)", key: "actions", type: "textarea", ph: "e.g., Update signage kit - Maya - 4k - Jul 10 - Sep 1 review" },

    // Measures and risks
    { label: "Signals and measures", key: "measures", type: "textarea", ph: "Belonging, clarity, complaints, readability, moderation outcomes" },
    { label: "Risks and mitigations", key: "risks", type: "textarea", ph: "Backlash, overcorrection, decision delays, loss of trust, churn" },

    // Timeline and reporting
    { label: "Workshop agenda and schedule", key: "agenda", type: "textarea", ph: "Story mining, artifact table, ritual inventory, power map, controls audit, synthesis" },
    { label: "Timeline and cadence", key: "timeline", type: "text", ph: "Prep 1 to 2 weeks, workshop day, brief in 14 days, 60 day check" },
    { label: "Reporting and publication", key: "reporting", type: "textarea", ph: "Community brief, bilingual summary, open artifacts where safe" },
    { label: "Context and links", key: "ctx", type: "textarea", ph: "Constraints, prior guides, reference posts" }
  ],
  template: ({
    title,
    horizon,
    purpose,
    owner,

    participants,
    access,

    consent,
    data_governance,

    evidence_sources,
    canvas_link,

    paradigm_now,
    stories_now,
    rituals_now,
    symbols_now,
    power_now,
    org_now,
    controls_now,

    paradigm_next,
    stories_next,
    rituals_next,
    symbols_next,
    power_next,
    org_next,
    controls_next,

    language_now,
    voice_implications,
    shadows,

    experiments,
    rewrites,

    story_bank,
    rituals_log,
    symbols_log,
    power_log,
    controls_log,

    paradigm_statement,
    tensions,
    actions,

    measures,
    risks,

    agenda,
    timeline,
    reporting,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x, i) => `${i + 1}. ${x}`).join("\n");

    const flow = [
      "Collect artifacts and stories",
      "Map the six elements and the current paradigm",
      "Name voice implications and shadow norms",
      "Draft the desired paradigm and quick experiments",
      "Rewrite two real artifacts and test",
      "Agree actions, owners, and check dates",
      "Publish a short brief and close the loop"
    ].join(" -> ");

    return [
      title && `Cultural Web plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and links:\n${ctx}`,

      "SECTION: Overview",
      horizon && `Horizon and dates: ${horizon}`,
      purpose && `Purpose and scope:\n${purpose}`,
      owner && `Owner or steward: ${owner}`,

      "SECTION: People and inclusion",
      participants && ["Participants and sources:", listify(participants)].join("\n"),
      access && `Access supports and compensation:\n${access}`,

      "SECTION: Ethics and governance",
      consent && `Consent and quoting rules:\n${consent}`,
      data_governance && `Data governance and publication tiers:\n${data_governance}`,

      "SECTION: Evidence and tools",
      evidence_sources && `Evidence sources:\n${evidence_sources}`,
      canvas_link && `Canvas or board: ${canvas_link}`,

      "SECTION: Cultural Web - current state",
      paradigm_now && `Paradigm - current core beliefs:\n${paradigm_now}`,
      stories_now && `Stories and myths - current:\n${stories_now}`,
      rituals_now && `Rituals and routines - current:\n${rituals_now}`,
      symbols_now && `Symbols and artifacts - current:\n${symbols_now}`,
      power_now && `Power structures - current:\n${power_now}`,
      org_now && `Organizational structures - current:\n${org_now}`,
      controls_now && `Control systems - current:\n${controls_now}`,

      "SECTION: Cultural Web - desired state",
      paradigm_next && `Paradigm - desired core beliefs:\n${paradigm_next}`,
      stories_next && `Stories and myths - desired:\n${stories_next}`,
      rituals_next && `Rituals and routines - desired:\n${rituals_next}`,
      symbols_next && `Symbols and artifacts - desired:\n${symbols_next}`,
      power_next && `Power structures - desired:\n${power_next}`,
      org_next && `Organizational structures - desired:\n${org_next}`,
      controls_next && `Control systems - desired:\n${controls_next}`,

      "SECTION: Language and voice",
      language_now && `Language patterns observed:\n${language_now}`,
      voice_implications && `Voice implications:\n${voice_implications}`,
      shadows && `Risks and shadow norms:\n${shadows}`,

      "SECTION: Experiments and change",
      experiments && `Leverage points and experiments:\n${experiments}`,
      rewrites && `Rewrite two artifacts now:\n${rewrites}`,

      "SECTION: Logs and artifacts",
      story_bank && ["Story bank:", listify(story_bank)].join("\n"),
      rituals_log && ["Ritual inventory:", listify(rituals_log)].join("\n"),
      symbols_log && ["Symbol and artifact inventory:", listify(symbols_log)].join("\n"),
      power_log && ["Power map notes:", listify(power_log)].join("\n"),
      controls_log && ["Controls list:", listify(controls_log)].join("\n"),

      "SECTION: Synthesis and decisions",
      paradigm_statement && `Paradigm statement:\n${paradigm_statement}`,
      tensions && `Tensions and tradeoffs:\n${tensions}`,
      actions && ["Decisions and actions:", listify(actions)].join("\n"),

      "SECTION: Measures and risks",
      measures && ["Signals and measures:", listify(measures)].join("\n"),
      risks && `Risks and mitigations:\n${risks}`,

      "SECTION: Timeline and reporting",
      agenda && `Workshop agenda and schedule:\n${agenda}`,
      timeline && `Timeline and cadence: ${timeline}`,
      reporting && `Reporting and publication:\n${reporting}`,

      "Quick reference",
      flow,

      "Checklist:",
      "- [ ] Evidence gathered from diverse sources with consent",
      "- [ ] Six elements mapped with concrete examples",
      "- [ ] Current and desired paradigms written in plain language",
      "- [ ] Voice implications and shadow norms named",
      "- [ ] Two real artifacts rewritten and tested",
      "- [ ] Actions have owners, resources, and check dates",
      "- [ ] Community brief published within 14 days"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "Cultural Web Johnson Scholes stories rituals symbols power structures organizational structures control systems paradigm community voice tone template"
  }
},



{
  id: "sociocracy_consent_governance",
  slug: "sociocracy-consent-decision-making",
  label: "Sociocracy / Consent Decision-Making - Circles, roles, and dynamic governance for shared ownership",
  kind: "governance",
  categories: [
    "governance",
    "community",
    "organization",
    "decision",
    "facilitation"
  ],
  tags: [
    "type:framework",
    "use:governance",
    "use:decision-making",
    "use:structure",
    "use:equity",
    "phase:plan",
    "phase:decide",
    "phase:operate",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "create clear circles with domains, aims, and decision rights",
    "make decisions by consent with good objection handling",
    "select people for roles by consent with transparent criteria",
    "link circles for cross flow using double links",
    "keep governance lightweight through short reviews and expiry dates",
       "set up clear circles with defined domains and aims",
    "make group decisions by consent instead of majority vote",
    "handle objections constructively and turn them into improvements",
    "elect people for roles transparently by consent",
    "link circles together with double links for accountability",
    "review decisions on a regular cycle instead of forever locking them",
    "keep governance lightweight and adaptable",
    "share power fairly instead of centralizing in one leader",
    "build trust through transparent processes",
    "use consent rules to avoid endless arguments",
    "align team structure with shared purpose",
    "clarify who decides what without top-down control",
    "try sociocracy in a co-op board meeting",
    "test sociocracy in a neighborhood group",
    "use consent decision-making in a student council",
    "decide roles in a nonprofit by consent",
    "map overlapping circles in a volunteer org",
    "reduce burnout by sharing responsibilities in circles",
    "avoid dominance by giving equal say to all voices",
    "run elections without campaigning or popularity contests",
    "teach kids group consent in a classroom",
    "decide chores in a household with sociocracy",
    "use consent process in a church or spiritual community",
    "decide budgets with clear domain ownership",
    "experiment with sociocracy in a startup",
    "structure teams in a flat organization",
    "govern a community garden with consent",
    "adapt sociocracy for online communities",
    "try sociocracy with remote teams on Zoom",
    "align project groups using circle governance",
    "separate operations from governance cleanly",
    "use sociocracy for equitable role rotation",
    "design community bylaws with consent principles",
    "shift from majority vote to consent-based culture",
    "train facilitators in handling objections well",
    "check decision quality through consent review",
    "combine sociocracy with agile team sprints",
    "decide how to spend grant money as a circle",
    "use sociocracy for conflict resolution in teams",
    "balance efficiency with inclusivity",
    "show how sociocracy prevents minority rule",
    "analyze differences between sociocracy and democracy",
    "compare sociocracy vs. holacracy in practice",
    "plan meeting structures around sociocratic roles",
    "decide policy changes with sociocratic process",
    "use sociocracy to include quieter voices",
    "explain sociocracy to beginners with a household example",
    "find when sociocracy is better than consensus",
    "how do I stop my meetings from dragging on",
    "how do we decide fairly without voting",
    "how can my co-op make decisions without fighting",
    "show to give everyone a voice in decisions",
    "easy way to organize a flat team"
  ],
  boosters: [
    "Separate governance from operations. Keep policy decisions in governance meetings and delivery in ops meetings.",
    "Write drivers and aims in plain language tied to needs and customers. It keeps proposals relevant and testable.",
    "Treat objections as gifts. Test them against the circle aim and integrate to make proposals safer to try.",
    "Use short review periods and policy expiry. Iteration beats big one time bets.",
    "Double link related circles. A leader and a delegate create two way listening and accountability.",
    "Fund access supports and publish clear records. Transparency builds trust in consent."
  ],
  definition: "A dynamic governance method that structures work in circles with clear domains and aims. Decisions are made by consent when there are no reasoned and paramount objections tied to the shared aim. Roles are selected by consent. Circles are linked for coherence.",
  help: "Complete purpose, mandate, circle map, domains and aims, roles and selection, consent process, objection test, meeting cadences, records, and measures. Keep logs of policies and role selections with review dates.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., Dynamic Governance for Eastside Community" },
    { label: "Sponsor or steward", key: "owner", type: "text", ph: "e.g., Community Council governance steward" },
    { label: "Purpose and scope", key: "purpose", type: "textarea", ph: "Why use sociocracy here and what is in scope" },
    { label: "Authority and mandate", key: "authority", type: "text", ph: "advisory | binding within scope | pilot with review" },

    // Principles and model
    { label: "Core principles", key: "principles", type: "textarea", ph: "consent, equivalence, transparency, effectiveness, empiricism" },
    { label: "Governance vs operations", key: "gov_vs_ops", type: "textarea", ph: "What belongs in governance, what belongs in operations" },

    // Circle map and decision rights
    { label: "Circle map overview", key: "circle_map", type: "textarea", ph: "List circles and links. e.g., General Circle linked to Program, Outreach, Access, Data." },
    { label: "Circle domains and aims (one per line: circle - domain - aim)", key: "domains_aims", type: "textarea", ph: "Outreach - external comms - invite and inform people clearly" },
    { label: "Decision rights matrix", key: "decision_rights", type: "textarea", ph: "Who decides by consent, who advises, who executes, what requires escalation" },
    { label: "Double links between circles", key: "links", type: "textarea", ph: "e.g., Program lead sits in General, General delegate sits in Program" },

    // Roles and selection
    { label: "Standard roles", key: "std_roles", type: "textarea", ph: "Facilitator, Secretary, Leader, Delegate, Operations lead, Rep for access" },
    { label: "Role descriptions (one per line: role - purpose - accountabilities - term)", key: "role_desc", type: "textarea", ph: "Facilitator - enable consent and flow - agenda, rounds - 6 months" },
    { label: "Selection by consent process", key: "selection_process", type: "textarea", ph: "nominations with reasons, questions, proposal, consent check, review date" },
    { label: "Role selections log (one per line: circle - role - person - start - review date)", key: "roles_log", type: "textarea", ph: "Outreach - Facilitator - S. Lee - Jun 1 - Sep 30" },

    // Consent decision flow
    { label: "Driver statement template", key: "driver_tpl", type: "textarea", ph: "Context and need we are responding to" },
    { label: "Proposal template", key: "proposal_tpl", type: "textarea", ph: "Aim - scope - policy or experiment - effects - risks - measures - review date" },
    { label: "Consent question wording", key: "consent_q", type: "text", ph: "Do you have any paramount objections to adopting this as proposed for the review period?" },
    { label: "Objection test", key: "objection_test", type: "textarea", ph: "Based on circle aim, reasoned, and shows how proposal would cause harm or miss aim" },
    { label: "Integration steps", key: "integration_steps", type: "textarea", ph: "Hear objection, restate, find conditions to make safe to try, amend proposal" },
    { label: "Review and expiry rule", key: "review_rule", type: "text", ph: "Default 90 day review unless otherwise stated" },

    // Meetings and cadences
    { label: "Governance meeting cadence", key: "gov_cadence", type: "text", ph: "e.g., monthly 60 min" },
    { label: "Operations meeting cadence", key: "ops_cadence", type: "text", ph: "e.g., weekly 30 min" },
    { label: "Governance agenda template", key: "gov_agenda", type: "textarea", ph: "check in, admin, drivers, proposals, consent, records, check out" },
    { label: "Operations agenda template", key: "ops_agenda", type: "textarea", ph: "check in, metrics, tensions, next actions, help needed, check out" },
    { label: "Backlog and intake", key: "intake", type: "textarea", ph: "how tensions become drivers, who triages, where logged" },

    // Records and policies
    { label: "Policy log (one per line: policy - circle - date - review date - link)", key: "policy_log", type: "textarea", ph: "Captioning standard - Access - May 10 - Aug 10 - link" },
    { label: "Meeting records link", key: "records_link", type: "text", ph: "URL for published minutes or policy board" },

    // Inclusion and ethics
    { label: "Access supports and compensation", key: "access", type: "textarea", ph: "stipends, interpreters and ASL, childcare, transport, food, sensory supports" },
    { label: "Consent and transparency rules", key: "transparency", type: "textarea", ph: "what is public, what is private, who can see minutes" },
    { label: "Data governance and publication tiers", key: "data_governance", type: "textarea", ph: "Public | Community only | Restricted | Not for release with who decides and why" },

    // Training and onboarding
    { label: "Training plan", key: "training", type: "textarea", ph: "intro to consent, objections, facilitation, roles, records" },
    { label: "Onboarding checklist", key: "onboarding", type: "textarea", ph: "join a circle, read policies, meet buddy, shadow facilitation" },

    // Measures and risks
    { label: "Signals and measures", key: "measures", type: "textarea", ph: "time to decision, number of objections integrated, policy delivery rate, parity of voice" },
    { label: "Risks and mitigations", key: "risks", type: "textarea", ph: "hidden hierarchy, decision drift, meeting overload, token roles" },

    // Timeline and context
    { label: "Rollout steps", key: "rollout", type: "textarea", ph: "pilot circle, learn, expand, link circles, publish map" },
    { label: "Timeline and cadence", key: "timeline", type: "text", ph: "prep 2 weeks, pilot 90 days, review and scale" },
    { label: "Context and links", key: "ctx", type: "textarea", ph: "prior governance, legal constraints, references" }
  ],
  template: ({
    title,
    owner,
    purpose,
    authority,

    principles,
    gov_vs_ops,

    circle_map,
    domains_aims,
    decision_rights,
    links,

    std_roles,
    role_desc,
    selection_process,
    roles_log,

    driver_tpl,
    proposal_tpl,
    consent_q,
    objection_test,
    integration_steps,
    review_rule,

    gov_cadence,
    ops_cadence,
    gov_agenda,
    ops_agenda,
    intake,

    policy_log,
    records_link,

    access,
    transparency,
    data_governance,

    training,
    onboarding,

    measures,
    risks,

    rollout,
    timeline,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/)
      .map(x => x.trim())
      .filter(Boolean)
      .map((x,i)=>`${i + 1}. ${x}`)
      .join("\n");

    const flow = [
      "Map circles, domains, aims",
      "Select core roles by consent",
      "Run governance and ops meetings on cadence",
      "Propose, test objections, integrate, consent",
      "Record policies with review dates",
      "Link circles and publish minutes",
      "Review measures and improve"
    ].join(" -> ");

    return [
      title && `Sociocracy plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and links:\n${ctx}`,

      "SECTION: Overview",
      owner && `Sponsor or steward: ${owner}`,
      purpose && `Purpose and scope:\n${purpose}`,
      authority && `Authority and mandate: ${authority}`,

      "SECTION: Principles and model",
      principles && `Core principles:\n${principles}`,
      gov_vs_ops && `Governance vs operations:\n${gov_vs_ops}`,

      "SECTION: Circle map and decision rights",
      circle_map && `Circle map overview:\n${circle_map}`,
      domains_aims && ["Circle domains and aims:", listify(domains_aims)].join("\n"),
      decision_rights && `Decision rights matrix:\n${decision_rights}`,
      links && `Double links between circles:\n${links}`,

      "SECTION: Roles and selection",
      std_roles && `Standard roles:\n${std_roles}`,
      role_desc && ["Role descriptions:", listify(role_desc)].join("\n"),
      selection_process && `Selection by consent process:\n${selection_process}`,
      roles_log && ["Role selections log:", listify(roles_log)].join("\n"),

      "SECTION: Consent decision flow",
      driver_tpl && `Driver statement template:\n${driver_tpl}`,
      proposal_tpl && `Proposal template:\n${proposal_tpl}`,
      consent_q && `Consent question wording: ${consent_q}`,
      objection_test && `Objection test:\n${objection_test}`,
      integration_steps && `Integration steps:\n${integration_steps}`,
      review_rule && `Review and expiry rule: ${review_rule}`,

      "SECTION: Meetings and cadences",
      gov_cadence && `Governance meeting cadence: ${gov_cadence}`,
      ops_cadence && `Operations meeting cadence: ${ops_cadence}`,
      gov_agenda && `Governance agenda template:\n${gov_agenda}`,
      ops_agenda && `Operations agenda template:\n${ops_agenda}`,
      intake && `Backlog and intake:\n${intake}`,

      "SECTION: Records and policies",
      policy_log && ["Policy log:", listify(policy_log)].join("\n"),
      records_link && `Meeting records link: ${records_link}`,

      "SECTION: Inclusion and ethics",
      access && `Access supports and compensation:\n${access}`,
      transparency && `Consent and transparency rules:\n${transparency}`,
      data_governance && `Data governance and publication tiers:\n${data_governance}`,

      "SECTION: Training and onboarding",
      training && `Training plan:\n${training}`,
      onboarding && `Onboarding checklist:\n${onboarding}`,

      "SECTION: Measures and risks",
      measures && ["Signals and measures:", listify(measures)].join("\n"),
      risks && `Risks and mitigations:\n${risks}`,

      "SECTION: Timeline",
      rollout && `Rollout steps:\n${rollout}`,
      timeline && `Timeline and cadence: ${timeline}`,

      "Quick reference",
      flow,

      "Checklist:",
      "- [ ] Circles have clear domains, aims, and links",
      "- [ ] Roles selected by consent with terms and review dates",
      "- [ ] Consent flow and objection test are visible and used",
      "- [ ] Governance and ops meetings follow simple agendas",
      "- [ ] Policies recorded with public access and review dates",
      "- [ ] Access supports funded and transparency rules clear",
      "- [ ] Measures tracked and retros scheduled"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "sociocracy consent decision making circles domains aims roles selection by consent objection integration double links governance vs operations policy log template"
  }
},


{
  id: "holacracy_selective_volunteer",
  slug: "holacracy-selective-role-governance-volunteer",
  label: "Holacracy (selective) - Role-based governance for volunteer groups",
  kind: "governance",
  categories: [
    "governance",
    "community",
    "organization",
    "decision",
    "facilitation"
  ],
  tags: [
    "type:framework",
    "use:governance",
    "use:decision-making",
    "use:structure",
    "use:operations",
    "phase:plan",
    "phase:decide",
    "phase:operate",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "define lightweight roles with clear purposes and accountabilities",
    "run simple governance meetings to evolve roles and policies",
    "run tactical meetings for checklists, metrics, and next actions",
    "capture tensions and turn them into safe-to-try changes",
    "link circles only where needed to avoid bureaucracy",
        "define lightweight roles with clear purposes and accountabilities",
    "run simple governance meetings to evolve roles and policies",
    "run tactical meetings for checklists, metrics, and next actions",
    "capture tensions and turn them into safe-to-try changes",
    "link circles only where needed to avoid bureaucracy",
    "organize a volunteer group so everyone knows their part",
    "decide who takes what role without endless arguments",
    "keep track of tasks when nobody is the official boss",
    "make meetings shorter and more focused on actions",
    "set clear agreements when volunteers switch roles",
    "try a structure that avoids ‘too many chiefs’ problem",
    "let people step into roles they’re energized about",
    "update roles quickly when projects change direction",
    "prevent burnout by making workloads visible",
    "experiment with self-managed governance",
    "help new members know where they fit in fast",
    "avoid one loud person running the whole group",
    "clarify who decides when multiple teams overlap",
    "share leadership without chaos",
    "handle conflicts about authority constructively",
    "balance accountability with flexibility",
    "use clear circles for community projects",
    "let volunteers rotate roles easily",
    "stop meetings from going in circles",
    "split responsibilities without hurting feelings",
    "try decentralized decision-making in a club",
    "test small changes without long approvals",
    "scale a hobby group into a proper org",
    "delegate without micromanaging",
    "empower quieter voices to take roles",
    "document decisions so memory doesn’t fade",
    "share power while still getting things done",
    "reduce confusion when projects overlap",
    "avoid ‘founder syndrome’ in a collective",
    "organize student clubs without hierarchy fights",
    "give community projects flexible structure",
    "avoid everyone asking the leader for permission",
    "make space for experimentation in governance",
    "reduce meeting fatigue with tactical check-ins",
    "set clear role purposes to align volunteers",
    "how do I organize a volunteer group better",
    "no one wants to be the boss, what do we do",
    "simple governance for nonprofits",
    "how to run meetings without a leader",
    "club fights over who is in charge",
    "shared leadership ideas",
    "lightweight roles for community group",
    "avoid power struggles in volunteer org",
    "how to divide tasks fairly in a team",
    "framework for no-boss organization"
  ],
  boosters: [
    "Adopt only the minimum set: roles, accountabilities, domains, policies, tensions to proposals, integrative decision making, and simple tactical meetings.",
    "Set short review dates on policies and roles. Try small changes and iterate.",
    "Keep volunteer bandwidth visible. Add a capacity check in every meeting.",
    "Replace jargon with plain words. Explain the why of each rule in one line.",
    "Double link only when cross flow is blocked. Do not mirror full org charts.",
    "Fund access supports and publish clear records so trust scales with autonomy."
  ],
  definition: "A selective, lightweight take on Holacracy for volunteer groups. Work is organized by roles with clear purposes and accountabilities. Governance updates roles and policies via integrative decision making. Operations flow through brief tactical meetings.",
  help: "Complete purpose and scope, circle map, roles with accountabilities and domains, governance and tactical cadences, tensions intake and IDM steps, records, and measures. Use short terms and review dates to keep the system small and humane.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., Selective Holacracy for Eastside Volunteers" },
    { label: "Sponsor or steward", key: "owner", type: "text", ph: "e.g., Community Council governance steward" },
    { label: "Purpose and scope", key: "purpose", type: "textarea", ph: "Why we are using a role system and what is in scope" },
    { label: "Authority and mandate", key: "authority", type: "text", ph: "advisory | binding within scope | pilot with review" },

    // What we adopt vs skip
    { label: "Adopt these elements", key: "adopt", type: "textarea", ph: "roles, accountabilities, domains, policies, tensions to proposals, IDM, tactical meetings" },
    { label: "Skip or adapt these", key: "skip_adapt", type: "textarea", ph: "full constitution, heavy circle stack, strict role elections, complex metrics" },

    // Circle map and links
    { label: "Circle map overview", key: "circle_map", type: "textarea", ph: "Anchor circle plus any sub circles needed" },
    { label: "Double links between circles", key: "links", type: "textarea", ph: "Only where cross flow needs it. Leader and delegate pattern if used." },

    // Roles and policies
    {
      label: "Roles - one per line",
      key: "roles_list",
      type: "textarea",
      ph: "role name - purpose - 3 to 6 accountabilities - domain (if any) - term and review date"
    },
    { label: "Policies - one per line", key: "policies", type: "textarea", ph: "policy name - scope - rule - owner - review date" },
    { label: "Decision rights and domains", key: "domains", type: "textarea", ph: "Who controls what assets or processes" },

    // Meetings and cadences
    { label: "Governance cadence", key: "gov_cadence", type: "text", ph: "e.g., monthly 60 minutes" },
    { label: "Tactical cadence", key: "tac_cadence", type: "text", ph: "e.g., weekly 25 minutes" },
    { label: "Tactical agenda template", key: "tac_agenda", type: "textarea", ph: "check in - checklist - metrics - projects - next actions - closing" },

    // Tensions and IDM
    { label: "Tension intake", key: "tension_intake", type: "textarea", ph: "how people log tensions and who triages" },
    { label: "IDM steps", key: "idm_steps", type: "textarea", ph: "present proposal - clarifying questions - reactions - amend - objection test - integrate - consent" },
    { label: "Objection test", key: "objection_test", type: "textarea", ph: "a reasoned risk tied to purpose or domain that makes proposal unsafe to try for the review period" },
    { label: "Safe-to-try rule", key: "safe_to_try", type: "text", ph: "default short review window - try small and inspect soon" },

    // Capacity and inclusion
    { label: "Capacity checks and limits", key: "capacity", type: "textarea", ph: "how volunteers set hours limits and say no" },
    { label: "Access supports and compensation", key: "access", type: "textarea", ph: "stipends, interpreters and ASL, transport, childcare, sensory supports" },

    // Ethics and records
    { label: "Consent and transparency rules", key: "transparency", type: "textarea", ph: "what is public, what is private, who can see minutes" },
    { label: "Data governance", key: "data_governance", type: "textarea", ph: "Public | Community only | Restricted | Not for release - who decides and why" },
    { label: "Records link", key: "records_link", type: "text", ph: "URL to minutes, role roster, policies" },

    // Onboarding and training
    { label: "Training plan", key: "training", type: "textarea", ph: "intro to roles, IDM, objections, tactical flow, records" },
    { label: "Onboarding checklist", key: "onboarding", type: "textarea", ph: "join a circle, pick a role, read policies, buddy, first tactical" },

    // Measures and risks
    { label: "Signals and measures", key: "measures", type: "textarea", ph: "time to decision, policy delivery rate, role clarity, volunteer retention, parity of voice" },
    { label: "Risks and mitigations", key: "risks", type: "textarea", ph: "hidden hierarchy, meeting overload, jargon creep, burnout" },

    // Timeline and context
    { label: "Rollout steps", key: "rollout", type: "textarea", ph: "pilot one circle, learn, expand only if needed, publish map" },
    { label: "Timeline and cadence", key: "timeline", type: "text", ph: "prep 2 weeks - pilot 90 days - review and scale or shrink" },
    { label: "Context and links", key: "ctx", type: "textarea", ph: "prior governance, constraints, references" }
  ],
  template: ({
    title,
    owner,
    purpose,
    authority,

    adopt,
    skip_adapt,

    circle_map,
    links,

    roles_list,
    policies,
    domains,

    gov_cadence,
    tac_cadence,
    tac_agenda,

    tension_intake,
    idm_steps,
    objection_test,
    safe_to_try,

    capacity,
    access,

    transparency,
    data_governance,
    records_link,

    training,
    onboarding,

    measures,
    risks,

    rollout,
    timeline,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/)
      .map(x => x.trim())
      .filter(Boolean)
      .map((x,i)=>`${i + 1}. ${x}`)
      .join("\n");

    const flow = [
      "Map minimal circles and links",
      "Define roles with accountabilities and domains",
      "Run short tactical meetings for work",
      "Log tensions and evolve roles or policies via IDM",
      "Record decisions with review dates",
      "Check capacity and access at each meeting",
      "Review measures and adapt"
    ].join(" -> ");

    return [
      title && `Holacracy selective plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and links:\n${ctx}`,

      "SECTION: Overview",
      owner && `Sponsor or steward: ${owner}`,
      purpose && `Purpose and scope:\n${purpose}`,
      authority && `Authority and mandate: ${authority}`,

      "SECTION: What we adopt vs skip",
      adopt && `Adopt these elements:\n${adopt}`,
      skip_adapt && `Skip or adapt these:\n${skip_adapt}`,

      "SECTION: Circle map and links",
      circle_map && `Circle map overview:\n${circle_map}`,
      links && `Double links between circles:\n${links}`,

      "SECTION: Roles and policies",
      roles_list && ["Roles:", listify(roles_list)].join("\n"),
      policies && ["Policies:", listify(policies)].join("\n"),
      domains && `Decision rights and domains:\n${domains}`,

      "SECTION: Meetings and cadences",
      gov_cadence && `Governance cadence: ${gov_cadence}`,
      tac_cadence && `Tactical cadence: ${tac_cadence}`,
      tac_agenda && `Tactical agenda template:\n${tac_agenda}`,

      "SECTION: Tensions and IDM",
      tension_intake && `Tension intake:\n${tension_intake}`,
      idm_steps && `IDM steps:\n${idm_steps}`,
      objection_test && `Objection test:\n${objection_test}`,
      safe_to_try && `Safe-to-try rule: ${safe_to_try}`,

      "SECTION: Capacity and inclusion",
      capacity && `Capacity checks and limits:\n${capacity}`,
      access && `Access supports and compensation:\n${access}`,

      "SECTION: Ethics and records",
      transparency && `Consent and transparency rules:\n${transparency}`,
      data_governance && `Data governance:\n${data_governance}`,
      records_link && `Records link: ${records_link}`,

      "SECTION: Onboarding and training",
      training && `Training plan:\n${training}`,
      onboarding && `Onboarding checklist:\n${onboarding}`,

      "SECTION: Measures and risks",
      measures && ["Signals and measures:", listify(measures)].join("\n"),
      risks && `Risks and mitigations:\n${risks}`,

      "SECTION: Timeline",
      rollout && `Rollout steps:\n${rollout}`,
      timeline && `Timeline and cadence: ${timeline}`,

      "Quick reference",
      flow,

      "Checklist:",
      "- [ ] Roles have clear purposes, 3 to 6 accountabilities, and any domains",
      "- [ ] Governance uses IDM with a clear objection test",
      "- [ ] Tactical meetings are short and produce next actions",
      "- [ ] Records include roles, policies, and review dates",
      "- [ ] Capacity checks protect volunteers from overload",
      "- [ ] Access supports funded and transparency rules clear",
      "- [ ] Measures tracked and retros scheduled"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "Holacracy selective volunteer roles accountabilities domains policies tactical meetings integrative decision making IDM objections safe to try circle map template"
  }
},

{
  id: "soft_systems_methodology_ssm",
  slug: "soft-systems-methodology-ssm-rich-pictures-multiple-worldviews",
  label: "Soft Systems Methodology (SSM) — Explore messy problems via multiple worldviews; rich pictures",
  kind: "analysis",
  categories: [
    "systems",
    "research",
    "facilitation",
    "planning",
    "community"
  ],
  tags: [
    "type:framework",
    "use:diagnosis",
    "use:sensemaking",
    "use:design",
    "use:change",
    "phase:explore",
    "phase:define",
    "phase:plan",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "map messy problem situations before solutioning",
    "surface multiple worldviews and their implications",
    "express the situation using rich pictures and artifacts",
    "formulate root definitions (PQR + CATWOE) and conceptual models",
    "compare models with reality to identify feasible, desirable changes",
        "map messy problem situations before solutioning",
    "surface multiple worldviews and their implications",
    "express the situation using rich pictures and artifacts",
    "formulate root definitions (PQR + CATWOE) and conceptual models",
    "compare models with reality to identify feasible, desirable changes",
    "make sense of a wicked problem with too many actors",
    "analyze a community conflict where everyone disagrees on causes",
    "map out healthcare challenges from patient, doctor, and policy views",
    "understand climate change issues in a local region",
    "explore education reform with teachers, parents, and students",
    "decide what to do when technology, culture, and politics collide",
    "use rich pictures to explain a complex issue visually",
    "bring engineers, users, and managers into the same discussion",
    "clarify system boundaries and what’s inside/outside",
    "diagnose why a project keeps failing despite good intentions",
    "analyze food system problems from farm to plate",
    "study transportation issues across commuters, planners, and residents",
    "map urban housing issues with landlords, tenants, and officials",
    "understand messy policy decisions in government",
    "plan organizational change where staff resist in different ways",
    "improve nonprofit program design with multiple perspectives",
    "capture community voices before writing a strategy",
    "figure out why IT projects always go over budget",
    "explore mental health systems with lived-experience input",
    "diagnose poverty reduction efforts across agencies",
    "analyze disaster response breakdowns from all angles",
    "support cross-cultural projects with conflicting values",
    "map water usage problems across farmers, industry, and households",
    "study youth violence by including police, families, and youth voices",
    "improve stakeholder alignment before funding decisions",
    "find common ground across competing agendas",
    "use CATWOE to structure stakeholder perspectives",
    "plan feasible change instead of idealistic wish lists",
    "stop chasing single solutions to complex problems",
    "figure out why meetings go in circles without decisions",
    "help teams see the big picture instead of blaming each other",
    "ask: why do problems look different depending on who you ask",
    "how to handle a wicked problem",
    "how to solve messy problems at work",
    "why does everyone disagree on the root cause",
    "simple way to explain complicated issues",
    "tools for group sensemaking",
    "how to make a rich picture diagram",
    "how to handle too many stakeholders",
    "how to map different perspectives on one issue",
    "how to avoid quick fixes for big problems",
    "what framework for community planning",
    "messy problem solver framework",
    "how to find common ground in complex issues",
    "tool for seeing whole system not just parts"
  ],
  boosters: [
    "Invite a cross-section of stakeholders, especially edge voices. Compensate lived expertise.",
    "Keep the boundary visible. Explicitly note what’s out of scope and why.",
    "Draw first, debate later. Rich pictures help reveal assumptions and power flows.",
    "Write root definitions in plain language using PQR. Then test with CATWOE.",
    "Prefer small safe-to-try changes with short review cycles over grand designs.",
    "Close the loop by publishing a brief and showing what changed because of the inquiry."
  ],
  definition: "SSM is an inquiry method for ill-structured, human situations. It expresses the situation (rich pictures), formulates root definitions of purposeful activity systems (PQR + CATWOE), builds conceptual models, and compares them with the real world to identify feasible and desirable change.",
  help: "Fill in the problem situation, stakeholders, ethics, rich pictures and artifacts, worldviews and root definitions (PQR + CATWOE), conceptual models, comparison findings, and a shortlist of feasible, desirable changes with owners and review dates.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., SSM Inquiry: Belonging in Shared Spaces" },
    { label: "Horizon & dates", key: "horizon", type: "text", ph: "e.g., Discovery in May; synthesis in June" },
    { label: "Purpose & system of interest", key: "purpose", type: "textarea", ph: "Why we are inquiring and which system we are considering" },
    { label: "Sponsor / convener", key: "owner", type: "text", ph: "e.g., Community Council + Library" },

    // Problem situation
    { label: "Situation description (messy problem)", key: "situation", type: "textarea", ph: "What’s going on, in plain words" },
    { label: "Triggers / symptoms", key: "triggers", type: "textarea", ph: "Events or data that prompted this inquiry" },
    { label: "Boundaries & scope", key: "boundaries", type: "textarea", ph: "What’s in / out; spatial, temporal, jurisdictional" },
    { label: "Assumptions & uncertainties", key: "assumptions", type: "textarea", ph: "Known unknowns; contested facts" },

    // People & inclusion
    {
      label: "Stakeholder groups",
      autofill: "persona->inline",
      itemLabel: "stakeholder",
      itemType: "typeahead",
      key: "stakeholders",
      max: 32,
      type: "repeater",
      ph: "e.g., Youth; elders; renters; disabled residents; staff; partners; funders"
    },

    // Ethics & governance
    { label: "Consent & documentation rules", key: "consent", type: "textarea", ph: "Quoting rules, anonymity, retention & deletion" },
    { label: "Data governance & publication tiers", key: "data_governance", type: "textarea", ph: "Public | Community-only | Restricted | Not-for-release — who decides and why" },

    // Expression: rich pictures & artifacts
    { label: "Rich picture notes (what to depict)", key: "rich_notes", type: "textarea", ph: "Actors, flows, tensions, bottlenecks, emotions, power" },
    { label: "Rich picture link(s)", key: "rich_links", type: "textarea", ph: "URLs to boards or images (Kumu/Miro/FigJam)" },
    { label: "Artifact table", key: "artifacts", type: "textarea", ph: "Screenshots, forms, signage, posts, policies — one per line" },

    // Worldviews & root definitions
    { label: "Worldview statements (Weltanschauung)", key: "worldviews", type: "textarea", ph: "Short statements naming how different groups see the situation" },
    { label: "Root definitions (PQR: do P by Q to achieve R)", key: "root_defs", type: "textarea", ph: "One per line: label — do P by Q to achieve R" },
    { label: "CATWOE entries (one per line)", key: "catwoe", type: "textarea", ph: "label — C:…; A:…; T:…; W:…; O:…; E:…" },

    // Conceptual models
    { label: "Conceptual model activities (one per line)", key: "activities", type: "textarea", ph: "Activity steps implied by a root definition" },
    { label: "Activity graph / dependencies", key: "dependencies", type: "textarea", ph: "Inputs, outputs, feedbacks, measures" },
    { label: "Monitoring & performance ideas", key: "monitoring", type: "textarea", ph: "What to observe to know the system is working" },

    // Comparison with the real world
    { label: "Comparison matrix notes", key: "comparison", type: "textarea", ph: "Model vs reality: matches, gaps, conflicts, constraints" },
    { label: "Tradeoffs & tensions", key: "tradeoffs", type: "textarea", ph: "Social, political, technical tensions to balance" },

    // Changes & action
    { label: "Feasible & desirable changes (one per line)", key: "changes", type: "textarea", ph: "Candidate changes likely to help and acceptable to stakeholders" },
    { label: "Action experiments (one per line: action — owner — resources — start — check date)", key: "experiments", type: "textarea", ph: "e.g., Expand interpreter pool — Maria — $6k — Jul — Sep review" },
    { label: "Decision log", key: "decisions", type: "textarea", ph: "Key decisions made and why" },

    // Learning & adaptation
    { label: "Learning questions", key: "learning_qs", type: "textarea", ph: "What we hope to learn from experiments" },
    { label: "Evaluation plan", key: "evaluation", type: "textarea", ph: "Signals, methods, cadence" },

    // Logistics
    { label: "Workshop agenda & schedule", key: "agenda", type: "textarea", ph: "Express; Rich picture; Worldviews; Root defs; Models; Compare; Changes" },
    { label: "Timeline & cadence", key: "timeline", type: "text", ph: "Prep 1–2 weeks; workshop; brief in 14 days; 60-day check" },
    { label: "Context & links", key: "ctx", type: "textarea", ph: "Prior work, constraints, references" }
  ],
  template: ({
    title,
    horizon,
    purpose,
    owner,

    situation,
    triggers,
    boundaries,
    assumptions,

    stakeholders,

    consent,
    data_governance,

    rich_notes,
    rich_links,
    artifacts,

    worldviews,
    root_defs,
    catwoe,

    activities,
    dependencies,
    monitoring,

    comparison,
    tradeoffs,

    changes,
    experiments,
    decisions,

    learning_qs,
    evaluation,

    agenda,
    timeline,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i+1}. ${x}`).join("\n");

    const flow = [
      "Enter situation",
      "Express (rich picture, artifacts)",
      "Formulate root definitions (PQR + CATWOE)",
      "Build conceptual models of activities",
      "Compare with the real world",
      "Agree feasible & desirable changes",
      "Run action experiments and learn"
    ].join(" -> ");

    return [
      title && `SSM plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context & links:\n${ctx}`,

      "SECTION: Overview",
      horizon && `Horizon & dates: ${horizon}`,
      purpose && `Purpose & system of interest:\n${purpose}`,
      owner && `Sponsor / convener: ${owner}`,

      "SECTION: Problem situation",
      situation && `Situation description:\n${situation}`,
      triggers && `Triggers / symptoms:\n${triggers}`,
      boundaries && `Boundaries & scope:\n${boundaries}`,
      assumptions && `Assumptions & uncertainties:\n${assumptions}`,

      "SECTION: People & inclusion",
      stakeholders && ["Stakeholder groups:", listify(stakeholders)].join("\n"),

      "SECTION: Ethics & governance",
      consent && `Consent & documentation rules:\n${consent}`,
      data_governance && `Data governance & publication tiers:\n${data_governance}`,

      "SECTION: Expression — rich pictures & artifacts",
      rich_notes && `Rich picture notes:\n${rich_notes}`,
      rich_links && ["Rich picture link(s):", listify(rich_links)].join("\n"),
      artifacts && ["Artifact table:", listify(artifacts)].join("\n"),

      "SECTION: Worldviews & root definitions",
      worldviews && `Worldview statements:\n${worldviews}`,
      root_defs && ["Root definitions (PQR):", listify(root_defs)].join("\n"),
      catwoe && ["CATWOE entries:", listify(catwoe)].join("\n"),

      "SECTION: Conceptual models",
      activities && ["Conceptual model activities:", listify(activities)].join("\n"),
      dependencies && `Activity graph / dependencies:\n${dependencies}`,
      monitoring && `Monitoring & performance ideas:\n${monitoring}`,

      "SECTION: Comparison with the real world",
      comparison && `Comparison matrix notes:\n${comparison}`,
      tradeoffs && `Tradeoffs & tensions:\n${tradeoffs}`,

      "SECTION: Changes & action",
      changes && ["Feasible & desirable changes:", listify(changes)].join("\n"),
      experiments && ["Action experiments:", listify(experiments)].join("\n"),
      decisions && ["Decision log:", listify(decisions)].join("\n"),

      "SECTION: Learning & adaptation",
      learning_qs && `Learning questions:\n${learning_qs}`,
      evaluation && `Evaluation plan:\n${evaluation}`,

      "SECTION: Logistics",
      agenda && `Workshop agenda & schedule:\n${agenda}`,
      timeline && `Timeline & cadence: ${timeline}`,

      "Quick reference",
      flow,

      "Checklist:",
      "- [ ] Boundaries explicit; edge voices included and compensated",
      "- [ ] Rich picture captures actors, flows, emotions, and power",
      "- [ ] Root definitions written in plain PQR and tested with CATWOE",
      "- [ ] Conceptual models list activities and feedback loops",
      "- [ ] Comparison surfaces gaps, conflicts, and constraints",
      "- [ ] Shortlist of feasible & desirable changes with owners and dates",
      "- [ ] Action experiments and learning questions are clear",
      "- [ ] Community-first brief published within 14 days"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "Soft Systems Methodology SSM rich picture PQR CATWOE conceptual model worldview messy problem feasible desirable change comparison template"
  }
},

{
  id: "viable_system_model_vsm",
  slug: "viable-system-model-vsm-community",
  label: "Viable System Model - Ensure functions that keep a community adaptive and coherent",
  kind: "systems",
  categories: [
    "systems",
    "governance",
    "community",
    "strategy",
    "operations"
  ],
  tags: [
    "type:framework",
    "use:operating-model",
    "use:structure",
    "use:governance",
    "use:diagnosis",
    "use:adaptation",
    "phase:plan",
    "phase:operate",
    "phase:adapt",
    "topic:community",
    "level:advanced"
  ],
  use_cases: [
    "map the essential functions that keep a community coherent while learning and changing",
    "diagnose gaps in roles, information flows, and feedback needed for viability",
    "design lightweight coordination and control that protects local autonomy",
    "set up scanning and strategy so operations are informed by outside change",
    "create recursion aware governance that scales across neighborhoods or teams",
       "map the essential functions that keep a community coherent while learning and changing",
    "diagnose gaps in roles, information flows, and feedback needed for viability",
    "design lightweight coordination and control that protects local autonomy",
    "set up scanning and strategy so operations are informed by outside change",
    "create recursion-aware governance that scales across neighborhoods or teams",
    "check if our community can survive leadership changes",
    "spot weak links in how groups share information",
    "make sure local teams can act without losing the big picture",
    "adapt to rapid changes in law, funding, or environment",
    "strengthen feedback loops so mistakes are corrected quickly",
    "ensure daily operations don’t drift away from community goals",
    "design a structure that works at both small and large scale",
    "balance freedom of small groups with unity of the whole",
    "prevent burnout by clarifying what functions are missing",
    "test whether our system can learn from external shocks",
    "map who listens to the outside world and brings signals back",
    "create a long-term strategy team that connects to operations",
    "decide how to coordinate across different projects fairly",
    "analyze why decisions get stuck or ignored",
    "check if there’s duplication or missing roles in governance",
    "design simple reporting flows that don’t overload volunteers",
    "help a nonprofit survive when one program shuts down",
    "align neighborhood groups with city-wide efforts",
    "scale up without collapsing under complexity",
    "spot when too much power is centralized in one unit",
    "make hidden assumptions about control explicit",
    "show how each sub-team mirrors the whole system",
    "give leaders a diagnostic lens to fix dysfunction",
    "connect frontline workers’ insights to strategy faster",
    "handle growth spurts without chaos",
    "make resource flows transparent and fair",
    "reduce turf wars between overlapping groups",
    "decide what should be standardized vs. left local",
    "support learning across different branches or circles",
    "audit if our governance actually supports resilience",
    "stress test whether the community could adapt in crisis",
    "design structures for federated or networked communities",
    "help grassroots movements avoid fragmentation",
    "spot whether innovation is being blocked or lost",
    "clarify where monitoring is needed vs. trust is enough",
    "improve coordination between operations and planning",
    "design adaptive policies that evolve with experience",
    "align multiple organizations around a shared system logic",
    "bridge between long-term vision and short-term tactics",
    "track how value, information, and accountability flow",
    "simplify without breaking essential connections",
    "use recursion to organize multiple scales of action",
    "help leaders sleep at night knowing the basics are covered"
  ],
  boosters: [
    "Start with system in focus and boundary. Write it plain. Name what is in and out.",
    "Model recursion. Each unit that delivers value should be viable in itself.",
    "Protect local autonomy. Coordinate only what needs coordinating. Everything else local.",
    "Design information flows first. Roles and meetings follow from what must be sensed and decided.",
    "Use short review horizons and algedonic alerts. Escalate only when needed.",
    "Pair variety attenuation with variety amplification. Reduce noise and increase community voice."
  ],
  definition: "VSM describes five interacting functions that a viable system needs to survive and adapt. S1 Operations deliver value. S2 Coordination stabilizes interactions among S1 units. S3 Control steers the whole today and audits reality. S4 Intelligence scans the outside and plans for tomorrow. S5 Policy holds identity, purpose, and values so the system stays coherent.",
  help: "Fill system in focus, environment, recursion map, S1 to S5 functions, channels and feedback loops, variety management, cadences, roles, records, measures, and risks. Keep it human scale for volunteer communities.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., VSM map for Eastside Community" },
    { label: "Purpose and scope", key: "purpose", type: "textarea", ph: "Why model viability and where it applies" },
    { label: "System in focus", key: "system_focus", type: "text", ph: "The community system you are modeling" },
    { label: "Boundary and exclusions", key: "boundary", type: "textarea", ph: "What is in and what is out" },

    // Environment and recursion
    { label: "Environment segments", key: "environment", type: "textarea", ph: "Partners, policies, funders, residents, culture, market, tech" },
    { label: "Recursion levels", key: "recursions", type: "textarea", ph: "Level 0 city, Level 1 neighborhoods, Level 2 teams, Level 3 events" },
    { label: "Interfaces across levels", key: "interfaces", type: "textarea", ph: "How levels link and what is shared" },

    // S1 Operations
    { label: "S1 units - one per line", key: "s1_units", type: "textarea", ph: "Unit - purpose - customers - key outputs - local measures" },
    { label: "S1 autonomy rules", key: "s1_autonomy", type: "textarea", ph: "What is local by default, what needs consent or review" },

    // S2 Coordination
    { label: "S2 mechanisms", key: "s2_mech", type: "textarea", ph: "Shared calendars, standards, lightweight protocols, handoffs" },
    { label: "S2 cadences", key: "s2_cadence", type: "text", ph: "e.g., weekly 25 min sync, monthly cross unit check" },
    { label: "Conflict and load balancing", key: "s2_balance", type: "textarea", ph: "How clashes are seen early and smoothed" },

    // S3 Control (and S3*)
    { label: "S3 steering focus", key: "s3_focus", type: "textarea", ph: "Resources, constraints, priorities, compliance with values" },
    { label: "S3 audits S3*", key: "s3_audit", type: "textarea", ph: "Spot checks, reality checks, gemba walks, secret shopper, community hotlines" },
    { label: "S3 records and dashboards", key: "s3_records", type: "textarea", ph: "What is logged and where it is visible" },

    // S4 Intelligence
    { label: "S4 scanning and research", key: "s4_scan", type: "textarea", ph: "Trends, policy changes, community insights, experiments" },
    { label: "S4 planning horizons", key: "s4_horizon", type: "text", ph: "90 day, yearly, multi year with light touch" },
    { label: "S4 to S1 learning loop", key: "s4_learning", type: "textarea", ph: "How insights turn into trials and updates" },

    // S5 Policy and identity
    { label: "S5 identity and values", key: "s5_identity", type: "textarea", ph: "Purpose, values, red lines, promises to the community" },
    { label: "S5 decision rules", key: "s5_rules", type: "textarea", ph: "Consent rule, quorum, who holds the pen" },
    { label: "S5 stewardship roles", key: "s5_roles", type: "textarea", ph: "Who holds identity work and how they are selected" },

    // Channels and feedback
    { label: "Key channels", key: "channels", type: "textarea", ph: "Ops to control, ops to ops, community to ops, outside to intelligence" },
    { label: "Algedonic alerts", key: "algedonic", type: "textarea", ph: "When do we escalate fast from S1 to S3 to S5" },
    { label: "Homeostats", key: "homeostats", type: "textarea", ph: "Pairs of measures that stabilize the system, e.g., speed vs inclusion" },

    // Variety management
    { label: "Attenuators", key: "attenuators", type: "textarea", ph: "Filters, queues, templates, standards that reduce noise" },
    { label: "Amplifiers", key: "amplifiers", type: "textarea", ph: "Translation, outreach, facilitation, small grants that increase voice" },

    // Cadences and rituals
    { label: "Meeting map", key: "meetings", type: "textarea", ph: "Ops daily or weekly, S2 sync weekly, S3 monthly, S4 monthly, S5 quarterly" },
    { label: "Decision intake and routing", key: "intake", type: "textarea", ph: "How tensions become proposals and where they go" },

    // Roles and selection
    { label: "Core roles", key: "roles", type: "textarea", ph: "Facilitator, Secretary, Steward, Delegate, Intelligence lead, Access lead" },
    { label: "Selection and terms", key: "selection", type: "textarea", ph: "How roles are filled, terms, review dates" },

    // Inclusion and ethics
    { label: "Access supports and compensation", key: "access", type: "textarea", ph: "Stipends, interpreters, transport, childcare, sensory supports" },
    { label: "Consent and transparency", key: "consent", type: "textarea", ph: "What is public, what is private, who can see minutes" },
    { label: "Data governance tiers", key: "data_governance", type: "textarea", ph: "Public, Community only, Restricted, Not for release" },

    // Records and artifacts
    { label: "Policy log", key: "policy_log", type: "textarea", ph: "Policy - owner - date - review date - link" },
    { label: "Experiment log", key: "experiment_log", type: "textarea", ph: "Test - owner - start - measure - check date - result" },

    // Measures and risks
    { label: "Signals and measures", key: "measures", type: "textarea", ph: "Delivery, service quality, inclusion, talk time parity, decision time, alert count" },
    { label: "Risks and mitigations", key: "risks", type: "textarea", ph: "Hidden hierarchy, over centralization, drift, burnout, bureaucracy creep" },

    // Timeline and context
    { label: "Rollout steps", key: "rollout", type: "textarea", ph: "Pilot one recursion, learn, then scale only where needed" },
    { label: "Timeline and cadence", key: "timeline", type: "text", ph: "Prep 2 weeks, pilot 90 days, review and adapt" },
    { label: "Context and links", key: "ctx", type: "textarea", ph: "References, constraints, prior governance" }
  ],
  template: ({
    title,
    purpose,
    system_focus,
    boundary,

    environment,
    recursions,
    interfaces,

    s1_units,
    s1_autonomy,

    s2_mech,
    s2_cadence,
    s2_balance,

    s3_focus,
    s3_audit,
    s3_records,

    s4_scan,
    s4_horizon,
    s4_learning,

    s5_identity,
    s5_rules,
    s5_roles,

    channels,
    algedonic,
    homeostats,

    attenuators,
    amplifiers,

    meetings,
    intake,

    roles,
    selection,

    access,
    consent,
    data_governance,

    policy_log,
    experiment_log,

    measures,
    risks,

    rollout,
    timeline,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/)
      .map(x => x.trim())
      .filter(Boolean)
      .map((x,i)=>`${i + 1}. ${x}`)
      .join("\n");

    const flow = [
      "State system in focus and boundary",
      "Map recursion and environment",
      "Describe S1 to S5 functions",
      "Design channels, alerts, and homeostats",
      "Tune variety attenuation and amplification",
      "Set cadences, roles, and records",
      "Track measures and adapt"
    ].join(" -> ");

    return [
      title && `VSM plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and links:\n${ctx}`,

      "SECTION: Overview",
      purpose && `Purpose and scope:\n${purpose}`,
      system_focus && `System in focus: ${system_focus}`,
      boundary && `Boundary and exclusions:\n${boundary}`,

      "SECTION: Environment and recursion",
      environment && `Environment segments:\n${environment}`,
      recursions && `Recursion levels:\n${recursions}`,
      interfaces && `Interfaces across levels:\n${interfaces}`,

      "SECTION: S1 Operations",
      s1_units && ["S1 units:", listify(s1_units)].join("\n"),
      s1_autonomy && `S1 autonomy rules:\n${s1_autonomy}`,

      "SECTION: S2 Coordination",
      s2_mech && `S2 mechanisms:\n${s2_mech}`,
      s2_cadence && `S2 cadences: ${s2_cadence}`,
      s2_balance && `Conflict and load balancing:\n${s2_balance}`,

      "SECTION: S3 Control",
      s3_focus && `S3 steering focus:\n${s3_focus}`,
      s3_audit && `S3 audits S3*:\n${s3_audit}`,
      s3_records && `S3 records and dashboards:\n${s3_records}`,

      "SECTION: S4 Intelligence",
      s4_scan && `S4 scanning and research:\n${s4_scan}`,
      s4_horizon && `S4 planning horizons: ${s4_horizon}`,
      s4_learning && `S4 to S1 learning loop:\n${s4_learning}`,

      "SECTION: S5 Policy and identity",
      s5_identity && `S5 identity and values:\n${s5_identity}`,
      s5_rules && `S5 decision rules:\n${s5_rules}`,
      s5_roles && `S5 stewardship roles:\n${s5_roles}`,

      "SECTION: Channels and feedback",
      channels && `Key channels:\n${channels}`,
      algedonic && `Algedonic alerts:\n${algedonic}`,
      homeostats && `Homeostats:\n${homeostats}`,

      "SECTION: Variety management",
      attenuators && `Attenuators:\n${attenuators}`,
      amplifiers && `Amplifiers:\n${amplifiers}`,

      "SECTION: Cadences and rituals",
      meetings && `Meeting map:\n${meetings}`,
      intake && `Decision intake and routing:\n${intake}`,

      "SECTION: Roles and selection",
      roles && `Core roles:\n${roles}`,
      selection && `Selection and terms:\n${selection}`,

      "SECTION: Inclusion and ethics",
      access && `Access supports and compensation:\n${access}`,
      consent && `Consent and transparency:\n${consent}`,
      data_governance && `Data governance tiers:\n${data_governance}`,

      "SECTION: Records and artifacts",
      policy_log && ["Policy log:", listify(policy_log)].join("\n"),
      experiment_log && ["Experiment log:", listify(experiment_log)].join("\n"),

      "SECTION: Measures and risks",
      measures && ["Signals and measures:", listify(measures)].join("\n"),
      risks && `Risks and mitigations:\n${risks}`,

      "SECTION: Timeline",
      rollout && `Rollout steps:\n${rollout}`,
      timeline && `Timeline and cadence: ${timeline}`,

      "Quick reference",
      flow,

      "Checklist:",
      "- [ ] System in focus and boundary are explicit",
      "- [ ] Recursion and environment are mapped",
      "- [ ] S1 to S5 functions have clear owners and flows",
      "- [ ] Channels, algedonic alerts, and homeostats are defined",
      "- [ ] Variety attenuation and amplification are balanced",
      "- [ ] Cadences, roles, and records are simple and visible",
      "- [ ] Measures show delivery, inclusion, and adaptability",
      "- [ ] Short reviews drive continuous learning"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "Viable System Model VSM S1 S2 S3 S3* S4 S5 algedonic alerts homeostat variety attenuation amplification recursion governance community template"
  }
},

{
  id: "competing_values_framework_cvf",
  slug: "competing-values-framework-culture-to-mission",
  label: "Competing Values Framework - Culture map to align ways of working with mission",
  kind: "analysis",
  categories: [
    "strategy",
    "research",
    "community",
    "governance",
    "operations"
  ],
  tags: [
    "type:framework",
    "use:diagnosis",
    "use:operating-model",
    "use:culture",
    "use:alignment",
     "use:values",
    "phase:explore",
    "phase:define",
    "phase:plan",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "assess current culture patterns across Clan, Adhocracy, Market, Hierarchy",
    "align desired culture with mission, values, and outcomes",
    "translate culture shifts into concrete behaviors and routines",
    "balance tensions across quadrants without caricature or drift",
    "track signals that show culture change is happening",
       "assess current culture patterns across Clan, Adhocracy, Market, Hierarchy",
    "align desired culture with mission, values, and outcomes",
    "translate culture shifts into concrete behaviors and routines",
    "balance tensions across quadrants without caricature or drift",
    "track signals that show culture change is happening",
    "figure out why our team feels chaotic vs. rigid",
    "decide if we need more structure or more creativity",
    "spot when competition is undermining collaboration",
    "explain culture clashes between two merging groups",
    "help leaders see their blind spots in style",
    "compare what we say our values are vs. how we actually work",
    "diagnose why staff turnover is high",
    "map tensions between innovation and stability",
    "decide if a startup should formalize processes",
    "explain why some people resist agile or flexible work",
    "check whether rewards match our stated values",
    "balance being people-centered vs. performance-driven",
    "design leadership training tailored to culture quadrant",
    "explain why one department acts differently than another",
    "test if our culture matches customer expectations",
    "use culture mapping in a strategy offsite",
    "translate abstract values into daily habits",
    "spot where hierarchy is stifling innovation",
    "help nonprofits avoid burnout while chasing impact",
    "decide if a team should push harder or slow down",
    "analyze culture fit during partnerships or coalitions",
    "reconcile board priorities with staff values",
    "show investors how culture supports growth",
    "audit culture before scaling into new markets",
    "plan a balanced hiring strategy (clan vs. market types)",
    "decide what type of leader to hire next",
    "coach leaders on flexing across quadrants",
    "map out which culture quadrant dominates meetings",
    "run before/after assessments to measure change",
    "design culture interventions with real indicators",
    "spot gaps where mission and culture diverge",
    "help schools decide between rules or creativity focus",
    "make sense of why projects stall in bureaucracy",
    "connect culture type to decision-making speed",
    "check if our reward system incentivizes the wrong things",
    "teach students how organizations differ in culture",
    "frame why some conflicts are about values not tasks",
    "design a survey for staff cultural alignment",
    "show how culture affects collaboration across silos",
    "develop a hybrid model (e.g., clan + market blend)",
    "reduce stress by balancing flexibility and control",
    "plan leadership succession with culture continuity",
    "help new hires understand ‘how we do things here’",
    "compare two organizations before partnership",
    "prepare for external shocks by flexing quadrants",
    "decide if we’re too focused on short-term results",
    "explain to kids why school rules feel different in classes"
  ],
  boosters: [
    "Use mixed evidence. Pair survey results with artifacts, stories, and observation.",
    "Customize quadrant language so it matches local vocabulary. Do not fight the dialect.",
    "Map desired shifts to a small number of visible routines people can practice next week.",
    "Balance the system. When you amplify one quadrant, name what you will keep from the others.",
    "Review quarterly with short learning cycles rather than one big change program.",
    "Fund access supports for diagnostics and publish a plain language brief."
  ],
  definition: "A culture model with four quadrants that often trade off. Clan Collaborate focuses on cohesion and participation. Adhocracy Create focuses on innovation and adaptability. Market Compete focuses on external results and speed. Hierarchy Control focuses on reliability and clarity. Use it to align ways of working to mission.",
  help: "Fill current and desired profiles, evidence, and the routines you will change. Connect culture choices to mission outcomes. Name tensions and guardrails. Choose a handful of experiments with owners and review dates.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., CVF map for Eastside Community" },
    { label: "Owner or steward", key: "owner", type: "text", ph: "e.g., Community Council culture steward" },
    { label: "Purpose and scope", key: "purpose", type: "textarea", ph: "Why we are mapping culture and what is in scope" },
    { label: "Horizon", key: "horizon", type: "text", ph: "e.g., Now to 12 months" },

    // Units and inclusion
    {
      label: "Units or teams in scope",
      autofill: "persona->inline",
      itemLabel: "unit or team",
      itemType: "typeahead",
      key: "units",
      max: 24,
      type: "repeater",
      ph: "e.g., Outreach; Programs; Access; Data; Events"
    },
    { label: "Stakeholders to include in diagnostic", key: "stakeholders", type: "textarea", ph: "Members, volunteers, staff, partners, funders, residents" },
    { label: "Access supports and compensation", key: "access", type: "textarea", ph: "Stipends, interpreters and ASL, transport, childcare, sensory supports" },

    // Ethics and governance
    { label: "Consent and quoting rules", key: "consent", type: "textarea", ph: "What can be quoted, where, how long, anonymity options" },
    { label: "Data governance and publication tiers", key: "data_governance", type: "textarea", ph: "Public | Community only | Restricted | Not for release. Who decides and why." },

    // Quadrant language
    { label: "Clan Collaborate - local description", key: "q_clan_desc", type: "textarea", ph: "Belonging, mentorship, voice in decisions, mutual aid" },
    { label: "Adhocracy Create - local description", key: "q_adho_desc", type: "textarea", ph: "Experimentation, learning, pilots, variety" },
    { label: "Market Compete - local description", key: "q_market_desc", type: "textarea", ph: "Clear goals, external results, responsiveness" },
    { label: "Hierarchy Control - local description", key: "q_hier_desc", type: "textarea", ph: "Reliability, safety, documented standards" },

    // Current profile
    { label: "Current profile - overall scores 0 to 100", key: "now_overall", type: "text", ph: "Clan 35 | Adhocracy 25 | Market 20 | Hierarchy 20" },
    { label: "Current profile by unit (one per line: unit - clan - adhocracy - market - hierarchy)", key: "now_by_unit", type: "textarea", ph: "Outreach - 40 - 35 - 15 - 10" },
    { label: "Evidence and artifacts", key: "now_evidence", type: "textarea", ph: "Surveys, story quotes, screenshots, policies, metrics" },

    // Desired profile
    { label: "Desired profile - overall scores 0 to 100", key: "next_overall", type: "text", ph: "Clan 30 | Adhocracy 35 | Market 20 | Hierarchy 15" },
    { label: "Desired profile by unit (one per line: unit - clan - adhocracy - market - hierarchy)", key: "next_by_unit", type: "textarea", ph: "Outreach - 35 - 40 - 15 - 10" },
    { label: "Why these shifts", key: "why_shift", type: "textarea", ph: "Mission and outcomes that require the change" },

    // Mission alignment
    { label: "Mission anchors and outcomes", key: "mission", type: "textarea", ph: "Purpose, values, outcomes to improve" },
    { label: "Ways of working that support mission", key: "wow_support", type: "textarea", ph: "Routines that express each quadrant in service of the mission" },

    // Behaviors and routines to change
    { label: "Clan behaviors to amplify", key: "clan_do", type: "textarea", ph: "Peer mentoring, participatory planning, gratitude rituals" },
    { label: "Adhocracy behaviors to amplify", key: "adho_do", type: "textarea", ph: "Monthly pilot window, demo days, small grants" },
    { label: "Market behaviors to amplify", key: "market_do", type: "textarea", ph: "Fast feedback from users, service level targets, response goals" },
    { label: "Hierarchy behaviors to amplify", key: "hier_do", type: "textarea", ph: "Accessible checklists, safety reviews, clear handoffs" },

    // Guardrails and tensions
    { label: "Guardrails and do nots", key: "guardrails", type: "textarea", ph: "What we refuse to compromise, red lines by quadrant" },
    { label: "Tensions and tradeoffs", key: "tensions", type: "textarea", ph: "Create vs Control, Collaborate vs Compete. What will we balance and how." },

    // Experiments
    { label: "Experiments and policy tweaks (one per line: change - owner - resources - start - check date - success signals)", key: "experiments", type: "textarea", ph: "Example - owner - $ - Jul - Sep 15 - signals" },

    // Cadence and learning
    { label: "Review cadence and roles", key: "cadence", type: "textarea", ph: "Quarterly culture review, who leads, who participates" },
    { label: "Integration with governance", key: "governance_link", type: "textarea", ph: "How culture shifts feed proposals and policies" },

    // Measures and risks
    { label: "Signals and measures", key: "measures", type: "textarea", ph: "Belonging, innovation rate, time to decision, reliability, outcomes" },
    { label: "Risks and mitigations", key: "risks", type: "textarea", ph: "Overcorrecting, jargon, tokenism, bureaucracy creep" },

    // Timeline and reporting
    { label: "Timeline", key: "timeline", type: "text", ph: "Prep 2 weeks, workshops, brief in 14 days, 90 day check" },
    { label: "Report back plan", key: "report_back", type: "textarea", ph: "Community first summary, bilingual where relevant" },
    { label: "Context and links", key: "ctx", type: "textarea", ph: "Prior work, references, constraints" }
  ],
  template: ({
    title,
    owner,
    purpose,
    horizon,

    units,
    stakeholders,
    access,

    consent,
    data_governance,

    q_clan_desc,
    q_adho_desc,
    q_market_desc,
    q_hier_desc,

    now_overall,
    now_by_unit,
    now_evidence,

    next_overall,
    next_by_unit,
    why_shift,

    mission,
    wow_support,

    clan_do,
    adho_do,
    market_do,
    hier_do,

    guardrails,
    tensions,

    experiments,

    cadence,
    governance_link,

    measures,
    risks,

    timeline,
    report_back,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i + 1}. ${x}`).join("\n");

    const axes = [
      "Horizontal axis: Collaborate (Clan) on the left vs Compete (Market) on the right",
      "Vertical axis: Create (Adhocracy) on top vs Control (Hierarchy) on bottom"
    ].join(" | ");

    const flow = [
      "Define scope and ethics",
      "Describe quadrants in local language",
      "Capture current and desired profiles",
      "Link shifts to mission and outcomes",
      "Name routines to change and guardrails",
      "Run small experiments with owners and dates",
      "Review signals and iterate"
    ].join(" -> ");

    return [
      title && `CVF plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and links:\n${ctx}`,

      "SECTION: Overview",
      owner && `Owner or steward: ${owner}`,
      purpose && `Purpose and scope:\n${purpose}`,
      horizon && `Horizon: ${horizon}`,

      "SECTION: Units and inclusion",
      units && ["Units or teams in scope:", listify(units)].join("\n"),
      stakeholders && `Stakeholders to include in diagnostic:\n${stakeholders}`,
      access && `Access supports and compensation:\n${access}`,

      "SECTION: Ethics and governance",
      consent && `Consent and quoting rules:\n${consent}`,
      data_governance && `Data governance and publication tiers:\n${data_governance}`,

      "SECTION: Quadrant language",
      q_clan_desc && `Clan Collaborate - local description:\n${q_clan_desc}`,
      q_adho_desc && `Adhocracy Create - local description:\n${q_adho_desc}`,
      q_market_desc && `Market Compete - local description:\n${q_market_desc}`,
      q_hier_desc && `Hierarchy Control - local description:\n${q_hier_desc}`,
      `Axes: ${axes}`,

      "SECTION: Current profile",
      now_overall && `Current profile overall: ${now_overall}`,
      now_by_unit && ["Current profile by unit:", listify(now_by_unit)].join("\n"),
      now_evidence && `Evidence and artifacts:\n${now_evidence}`,

      "SECTION: Desired profile",
      next_overall && `Desired profile overall: ${next_overall}`,
      next_by_unit && ["Desired profile by unit:", listify(next_by_unit)].join("\n"),
      why_shift && `Why these shifts:\n${why_shift}`,

      "SECTION: Mission alignment",
      mission && `Mission anchors and outcomes:\n${mission}`,
      wow_support && `Ways of working that support mission:\n${wow_support}`,

      "SECTION: Behaviors and routines to change",
      clan_do && `Clan behaviors to amplify:\n${clan_do}`,
      adho_do && `Adhocracy behaviors to amplify:\n${adho_do}`,
      market_do && `Market behaviors to amplify:\n${market_do}`,
      hier_do && `Hierarchy behaviors to amplify:\n${hier_do}`,

      "SECTION: Guardrails and tensions",
      guardrails && `Guardrails and do nots:\n${guardrails}`,
      tensions && `Tensions and tradeoffs:\n${tensions}`,

      "SECTION: Experiments",
      experiments && ["Experiments and policy tweaks:", listify(experiments)].join("\n"),

      "SECTION: Cadence and learning",
      cadence && `Review cadence and roles:\n${cadence}`,
      governance_link && `Integration with governance:\n${governance_link}`,

      "SECTION: Measures and risks",
      measures && ["Signals and measures:", listify(measures)].join("\n"),
      risks && `Risks and mitigations:\n${risks}`,

      "SECTION: Timeline and reporting",
      timeline && `Timeline: ${timeline}`,
      report_back && `Report back plan:\n${report_back}`,

      "Quick reference",
      flow,

      "Checklist:",
      "- [ ] Quadrant language localized and understood",
      "- [ ] Current and desired profiles captured by unit and overall",
      "- [ ] Shifts tied directly to mission outcomes",
      "- [ ] 3 to 6 concrete routines to change are named",
      "- [ ] Guardrails avoid overcorrection and tokenism",
      "- [ ] Experiments have owners, resources, and review dates",
      "- [ ] Signals show movement without gaming the system",
      "- [ ] Community first brief scheduled within 14 days"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "Competing Values Framework CVF Clan Adhocracy Market Hierarchy culture diagnosis alignment routines mission signals template"
  }
},

{
  id: "community_capitals_framework",
  slug: "community-capitals-framework-seven-capitals",
  label: "Community Capitals Framework - Seven capitals lens for purpose and investment",
  kind: "analysis",
  categories: [
    "strategy",
    "research",
    "community",
    "planning",
    "investment"
  ],
  tags: [
    "type:framework",
    "use:diagnosis",
    "use:portfolio",
    "use:investment",
    "use:equity",
    "use:resilience",
    "phase:explore",
    "phase:define",
    "phase:plan",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "asset mapping before strategy or funding decisions",
    "align investments with mission across the seven capitals",
    "design small tests that create positive spillovers",
    "track equity outcomes and avoid negative externalities",
    "report a clear, community first portfolio story",
        "asset mapping before strategy or funding decisions",
    "align investments with mission across the seven capitals",
    "design small tests that create positive spillovers",
    "track equity outcomes and avoid negative externalities",
    "report a clear, community first portfolio story",
    "decide if funding should go to parks or training programs",
    "compare social vs. financial return on a grant",
    "check if arts investments boost local pride",
    "show why broadband matters as infrastructure capital",
    "explain why housing affects human capital",
    "help donors see more than just money impact",
    "spot where cultural capital is undervalued",
    "measure how volunteering strengthens social capital",
    "balance natural and built capital in development plans",
    "track if youth programs boost human capital long term",
    "plan disaster recovery by looking across all capitals",
    "decide what mix of investments builds resilience",
    "design surveys to capture capitals growth",
    "connect cultural heritage to economic vitality",
    "report outcomes to funders in plain language",
    "choose capital priorities in strategic planning",
    "make equity tradeoffs more transparent",
    "explain to residents why parks are investments",
    "help a rural town compare assets with a city",
    "set a baseline portfolio across seven capitals",
    "identify capitals most at risk of erosion",
    "diagnose why social trust is breaking down",
    "argue for why art funding matters in tough times",
    "connect education access to human capital growth",
    "decide how to measure community wealth",
    "help students map their town’s assets",
    "teach local officials why natural capital matters",
    "justify grants with a seven-capitals lens",
    "surface unintended effects of an intervention",
    "spot overlapping benefits across capitals",
    "prioritize investments with biggest spillover",
    "track change over time in capital scores",
    "help foundations prove systemic impact",
    "guide coalitions on what capital to focus on",
    "design storytelling that shows community strength",
    "debate tradeoffs: jobs vs. environment",
    "create visuals of capital interconnections",
    "help kids see why playgrounds are investments",
    "diagnose imbalance: strong economy but weak trust",
    "argue against short-term extractive projects",
    "celebrate wins across capitals, not just dollars",
    "map historic inequities across capitals",
    "show where underinvestment locks poverty cycles",
    "frame sustainability plans in seven-capitals terms",
    "design participatory budgeting around capitals",
    "help city planners measure inclusive prosperity"
  ],
  boosters: [
    "Name the boundary up front. Place, time window, who is in scope.",
    "Center equity. For each capital ask who benefits, who pays, and who decides.",
    "Prefer investments that create cross capital multipliers.",
    "Pair qualitative stories with simple, visible indicators.",
    "Publish a short brief within 14 days and credit contributors who opted in."
  ],
  definition: "A structured lens from Flora and Flora with seven capitals: natural, cultural, human, social, political, financial, and built. It helps communities see assets, gaps, and investments that build purpose, resilience, and equity.",
  help: "Fill assets, gaps, risks, opportunities, indicators, and candidate investments for each capital. Then synthesize cross capital synergies, tradeoffs, and a small portfolio with owners, resources, and check dates.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., Seven Capitals map for Eastside" },
    { label: "Owner or steward", key: "owner", type: "text", ph: "e.g., Community Council portfolio steward" },
    { label: "Purpose and scope", key: "purpose", type: "textarea", ph: "Why we are mapping and where it applies" },
    { label: "Horizon", key: "horizon", type: "text", ph: "e.g., Now to 12 months" },
    { label: "Geography and boundary", key: "boundary", type: "textarea", ph: "Neighborhoods, sites, online spaces, in and out of scope" },
    { label: "Population and segments", key: "population", type: "textarea", ph: "Who lives here and who is most affected" },

    // Inclusion and ethics
    {
      label: "Stakeholders to involve",
      autofill: "persona->inline",
      itemLabel: "stakeholder",
      itemType: "typeahead",
      key: "stakeholders",
      max: 28,
      type: "repeater",
      ph: "e.g., Youth, elders, renters, newcomers, disabled residents, small biz"
    },
    { label: "Access supports and compensation", key: "access", type: "textarea", ph: "Stipends, interpreters and ASL, childcare, transport, sensory supports" },
    { label: "Consent and quoting rules", key: "consent", type: "textarea", ph: "What can be quoted, where, how long, anonymity options" },
    { label: "Data governance and publication tiers", key: "data_governance", type: "textarea", ph: "Public | Community only | Restricted | Not for release - who decides and why" },

    // Natural capital
    { label: "Natural - assets and condition", key: "nat_assets", type: "textarea", ph: "Air, water, soil, trees, parks, biodiversity, climate hazards" },
    { label: "Natural - gaps and risks", key: "nat_gaps", type: "textarea", ph: "Pollution, heat islands, flood zones, access gaps" },
    { label: "Natural - opportunities and practices", key: "nat_ops", type: "textarea", ph: "Shade trees, greenways, water capture, habitat work" },
    { label: "Natural - indicators", key: "nat_inds", type: "textarea", ph: "Canopy %, heat days, water quality, access minutes to green space" },
    { label: "Natural - investments (one per line: action - owner - resources - start - check date - indicator)", key: "nat_invest", type: "textarea", ph: "Tree planting - Parks - $25k - Jul - Oct 1 - canopy %" },

    // Cultural capital
    { label: "Cultural - assets and expressions", key: "cul_assets", type: "textarea", ph: "Languages, arts, rituals, heritage sites, storykeepers" },
    { label: "Cultural - gaps and risks", key: "cul_gaps", type: "textarea", ph: "Erasure, appropriation, single story risk" },
    { label: "Cultural - opportunities", key: "cul_ops", type: "textarea", ph: "Festivals, makers, archives, youth arts, language programs" },
    { label: "Cultural - indicators", key: "cul_inds", type: "textarea", ph: "Event count, language access, artist pay, attendance diversity" },
    { label: "Cultural - investments (one per line: action - owner - resources - start - check date - indicator)", key: "cul_invest", type: "textarea", ph: "Community archive - Library - $10k - Aug - Nov 15 - items digitized" },

    // Human capital
    { label: "Human - assets and skills", key: "hum_assets", type: "textarea", ph: "Education, certifications, lived expertise, health" },
    { label: "Human - gaps and risks", key: "hum_gaps", type: "textarea", ph: "Unemployment, burnout, no pathways, health barriers" },
    { label: "Human - opportunities", key: "hum_ops", type: "textarea", ph: "Training, stipends, peer learning, mental health supports" },
    { label: "Human - indicators", key: "hum_inds", type: "textarea", ph: "Completion rates, stipends paid, retention, perceived capability" },
    { label: "Human - investments (one per line: action - owner - resources - start - check date - indicator)", key: "hum_invest", type: "textarea", ph: "Peer facilitation training - Council - $8k - Sep - Dec 1 - grads" },

    // Social capital
    { label: "Social - assets and networks", key: "soc_assets", type: "textarea", ph: "Associations, mutual aid, trust, bridging ties" },
    { label: "Social - gaps and risks", key: "soc_gaps", type: "textarea", ph: "Isolation, silos, conflict, misinformation" },
    { label: "Social - opportunities", key: "soc_ops", type: "textarea", ph: "Story circles, cross group events, mentorship, digital commons" },
    { label: "Social - indicators", key: "soc_inds", type: "textarea", ph: "Attendance mix, talk time parity, collaboration count, trust survey" },
    { label: "Social - investments (one per line: action - owner - resources - start - check date - indicator)", key: "soc_invest", type: "textarea", ph: "Cross group potlucks - Youth org - $5k - Jul - Sep 30 - attendance mix" },

    // Political capital
    { label: "Political - assets and voice", key: "pol_assets", type: "textarea", ph: "Civic groups, advocates, relationships, process fluency" },
    { label: "Political - gaps and risks", key: "pol_gaps", type: "textarea", ph: "Gatekeeping, low turnout, language barriers" },
    { label: "Political - opportunities", key: "pol_ops", type: "textarea", ph: "Civics training, participatory budgeting, advisory seats" },
    { label: "Political - indicators", key: "pol_inds", type: "textarea", ph: "Attendance at hearings, translated notices, policy wins" },
    { label: "Political - investments (one per line: action - owner - resources - start - check date - indicator)", key: "pol_invest", type: "textarea", ph: "Civics bootcamp - CBO - $12k - Aug - Nov 1 - grads" },

    // Financial capital
    { label: "Financial - assets and flows", key: "fin_assets", type: "textarea", ph: "Local spend, grants, small biz, credit access, philanthropy" },
    { label: "Financial - gaps and risks", key: "fin_gaps", type: "textarea", ph: "Leakage, predatory products, uneven grantmaking" },
    { label: "Financial - opportunities", key: "fin_ops", type: "textarea", ph: "Buy local, micro grants, CDFI links, pooled funds" },
    { label: "Financial - indicators", key: "fin_inds", type: "textarea", ph: "Local spend %, small grants count, match dollars" },
    { label: "Financial - investments (one per line: action - owner - resources - start - check date - indicator)", key: "fin_invest", type: "textarea", ph: "Micro grant pool - Council - $30k - Jul - Oct 15 - projects funded" },

    // Built capital
    { label: "Built - assets and quality", key: "bui_assets", type: "textarea", ph: "Housing, venues, sidewalks, transit, broadband, signage" },
    { label: "Built - gaps and risks", key: "bui_gaps", type: "textarea", ph: "Vacancy, ADA gaps, unsafe crossings, digital divide" },
    { label: "Built - opportunities", key: "bui_ops", type: "textarea", ph: "Wayfinding, pocket parks, co working, wifi, repair not replace" },
    { label: "Built - indicators", key: "bui_inds", type: "textarea", ph: "Open hours, ADA checklists passed, wifi coverage, crash data" },
    { label: "Built - investments (one per line: action - owner - resources - start - check date - indicator)", key: "bui_invest", type: "textarea", ph: "Wayfinding refresh - BID - $15k - Sep - Dec 1 - sign installs" },

    // Cross capital synthesis
    { label: "Synergies and sequences", key: "synergies", type: "textarea", ph: "How one investment multiplies another, order of moves" },
    { label: "Tradeoffs and guardrails", key: "tradeoffs", type: "textarea", ph: "What to protect while investing elsewhere" },
    { label: "Interdependencies map link", key: "deps_link", type: "text", ph: "Kumu or Miro or FigJam URL" },
    { label: "Externalities to avoid", key: "externalities", type: "textarea", ph: "Displacement, noise, cultural erasure, exclusion risk" },

    // Portfolio and delivery
    { label: "Portfolio summary (one per line: action - capitals - owner - budget - start - check date - indicator)", key: "portfolio", type: "textarea", ph: "Tree planting - Natural+Social - Parks - $25k - Jul - Oct 1 - canopy %" },
    { label: "Funding sources and constraints", key: "funding", type: "textarea", ph: "Grants, sponsors, public funds, policy links" },
    { label: "Governance and decision rights", key: "governance", type: "textarea", ph: "Who decides, who advises, how the community reviews" },

    // Measures and learning
    { label: "Dashboard indicators", key: "dashboard", type: "textarea", ph: "Small set across capitals with definitions and owners" },
    { label: "Review cadence and roles", key: "cadence", type: "text", ph: "Monthly ops, quarterly portfolio, annual refresh" },

    // Risks
    { label: "Risks and mitigations", key: "risks", type: "textarea", ph: "Backlash, overcorrection, tokenism, drift, burnout" },

    // Timeline and reporting
    { label: "Timeline", key: "timeline", type: "text", ph: "Prep 2 weeks, workshops, brief in 14 days, 90 day check" },
    { label: "Report back plan", key: "report_back", type: "textarea", ph: "Community first summary, bilingual where relevant" },
    { label: "Context and links", key: "ctx", type: "textarea", ph: "Prior work, references, constraints" }
  ],
  template: ({
    title,
    owner,
    purpose,
    horizon,
    boundary,
    population,

    stakeholders,
    access,
    consent,
    data_governance,

    nat_assets, nat_gaps, nat_ops, nat_inds, nat_invest,
    cul_assets, cul_gaps, cul_ops, cul_inds, cul_invest,
    hum_assets, hum_gaps, hum_ops, hum_inds, hum_invest,
    soc_assets, soc_gaps, soc_ops, soc_inds, soc_invest,
    pol_assets, pol_gaps, pol_ops, pol_inds, pol_invest,
    fin_assets, fin_gaps, fin_ops, fin_inds, fin_invest,
    bui_assets, bui_gaps, bui_ops, bui_inds, bui_invest,

    synergies, tradeoffs, deps_link, externalities,

    portfolio, funding, governance,

    dashboard, cadence,

    risks,

    timeline, report_back, ctx,
    audience, style, tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i + 1}. ${x}`).join("\n");

    const flow = [
      "Set boundary and ethics",
      "Map assets, gaps, risks, and opportunities by capital",
      "Pick indicators and candidate investments",
      "Design cross capital synergies and guardrails",
      "Assemble a small portfolio with owners and dates",
      "Review a simple dashboard on a clear cadence",
      "Publish a brief and adjust with community input"
    ].join(" -> ");

    const capBlock = (name, assets, gaps, ops, inds, invest) => [
      `SECTION: ${name} capital`,
      assets && `${name} - assets and condition:\n${assets}`,
      gaps && `${name} - gaps and risks:\n${gaps}`,
      ops && `${name} - opportunities and practices:\n${ops}`,
      inds && `${name} - indicators:\n${inds}`,
      invest && [`${name} - investments:`, listify(invest)].join("\n")
    ].filter(Boolean).join("\n");

    return [
      title && `Community Capitals plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and links:\n${ctx}`,

      "SECTION: Overview",
      owner && `Owner or steward: ${owner}`,
      purpose && `Purpose and scope:\n${purpose}`,
      horizon && `Horizon: ${horizon}`,
      boundary && `Geography and boundary:\n${boundary}`,
      population && `Population and segments:\n${population}`,

      "SECTION: Inclusion and ethics",
      stakeholders && ["Stakeholders to involve:", listify(stakeholders)].join("\n"),
      access && `Access supports and compensation:\n${access}`,
      consent && `Consent and quoting rules:\n${consent}`,
      data_governance && `Data governance and publication tiers:\n${data_governance}`,

      capBlock("Natural", nat_assets, nat_gaps, nat_ops, nat_inds, nat_invest),
      capBlock("Cultural", cul_assets, cul_gaps, cul_ops, cul_inds, cul_invest),
      capBlock("Human", hum_assets, hum_gaps, hum_ops, hum_inds, hum_invest),
      capBlock("Social", soc_assets, soc_gaps, soc_ops, soc_inds, soc_invest),
      capBlock("Political", pol_assets, pol_gaps, pol_ops, pol_inds, pol_invest),
      capBlock("Financial", fin_assets, fin_gaps, fin_ops, fin_inds, fin_invest),
      capBlock("Built", bui_assets, bui_gaps, bui_ops, bui_inds, bui_invest),

      "SECTION: Cross capital synthesis",
      synergies && `Synergies and sequences:\n${synergies}`,
      tradeoffs && `Tradeoffs and guardrails:\n${tradeoffs}`,
      deps_link && `Interdependencies map: ${deps_link}`,
      externalities && `Externalities to avoid:\n${externalities}`,

      "SECTION: Portfolio and delivery",
      portfolio && ["Portfolio summary:", listify(portfolio)].join("\n"),
      funding && `Funding sources and constraints:\n${funding}`,
      governance && `Governance and decision rights:\n${governance}`,

      "SECTION: Measures and learning",
      dashboard && `Dashboard indicators:\n${dashboard}`,
      cadence && `Review cadence and roles: ${cadence}`,

      "SECTION: Risks",
      risks && `Risks and mitigations:\n${risks}`,

      "SECTION: Timeline and reporting",
      timeline && `Timeline: ${timeline}`,
      report_back && `Report back plan:\n${report_back}`,

      "Quick reference",
      flow,

      "Checklist:",
      "- [ ] Boundary clear and equity centered in each capital",
      "- [ ] Assets, gaps, risks, and opportunities captured with consent",
      "- [ ] Indicators small and visible with named owners",
      "- [ ] Investments create cross capital multipliers where possible",
      "- [ ] Tradeoffs and guardrails explicit to avoid harm",
      "- [ ] Portfolio lists action, owner, resources, and check dates",
      "- [ ] Dashboard and cadence agreed and public",
      "- [ ] Community first brief scheduled within 14 days"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "Community Capitals Framework Flora natural cultural human social political financial built asset mapping portfolio equity indicators template"
  }
},


{
  id: "hcd_double_diamond",
  slug: "human-centered-design-double-diamond-co-creation",
  label: "Human-Centered Design / Double Diamond: Discover Define Develop Deliver with community co-creation",
  kind: "design",
  categories: [
    "design",
    "research",
    "community",
    "strategy",
    "product"
  ],
  tags: [
    "type:framework",
    "use:design",
    "use:research",
    "use:co-creation",
    "use:delivery",
    "phase:discover",
    "phase:define",
    "phase:develop",
    "phase:deliver",
    "topic:community",
    "level:beginner"
  ],
  use_cases: [
    "co-create with residents and partners across all four diamonds",
    "turn research into clear problem statements and principles",
    "prototype quickly with access and safety in scope",
    "ship small and learn with community feedback loops",
    "connect discovery insights to delivery decisions and measures",
    "co-create with residents and partners across all four diamonds",
    "turn research into clear problem statements and principles",
    "prototype quickly with access and safety in scope",
    "ship small and learn with community feedback loops",
    "connect discovery insights to delivery decisions and measures",
    "plan a design sprint with clear phases",
    "separate problem finding from solution finding",
    "help a nonprofit redesign its service flow",
    "map research insights into opportunities",
    "structure a student project in clear phases",
    "make a messy challenge feel more manageable",
    "decide when to stop exploring and start focusing",
    "teach teams the difference between diverging and converging",
    "design safer public services with user input",
    "prototype a new digital tool with residents",
    "create visuals that explain process to funders",
    "balance quick wins with deeper discovery",
    "align cross-functional teams on one design process",
    "add community voices into early discovery",
    "prioritize which prototypes to test first",
    "link insights directly to features shipped",
    "explain design process to city officials",
    "make design work visible and transparent",
    "avoid jumping to solutions too quickly",
    "show funders where the money supports co-creation",
    "help volunteers brainstorm and then refine ideas",
    "guide students through design thinking projects",
    "plan youth workshops with a clear arc",
    "turn complaints into structured design input",
    "facilitate a design jam in neighborhoods",
    "connect front-line staff to prototype testing",
    "explain why research before design matters",
    "give clear names to fuzzy project phases",
    "make tradeoffs visible in the delivery stage",
    "set milestones at each diamond point",
    "teach newcomers a simple design language",
    "balance expert design with local lived experience",
    "choose when to diverge vs. converge",
    "adapt the double diamond for government projects",
    "use post-its and whiteboards effectively",
    "design inclusive processes that respect constraints",
    "explain to a board how design reduces risk",
    "test ideas cheaply before investing big",
    "document lessons across multiple iterations",
    "combine HCD with agile delivery sprints",
    "avoid burnout by pacing the design cycle",
    "show impact by connecting phases to outcomes",
    "make abstract research feel practical",
    "remind teams why user voices matter",
    "explain design process to kids building a project"
  ],
  boosters: [
    "Compensate lived expertise and book access supports up front.",
    "Draw a boundary for the system and keep a visible out of scope list.",
    "Publish a one page brief after each diamond with what changed.",
    "Prototype the risky parts first. Paper beats pixel when speed matters.",
    "Always pair emotion with evidence. Quotes with consent plus simple stats.",
    "Design multilingual and accessible by default, not as a later patch."
  ],
  definition: "A practical Double Diamond for community work. Discover and Define to understand needs and opportunities. Develop and Deliver to prototype, test, and ship with clear feedback loops and equity centered practices.",
  help: "Fill ethics, access, stakeholders, and boundary. Then work each diamond: Discover questions and methods, Define synthesis and HMW questions, Develop concepts and prototypes with tests, Deliver the MVP with rollout and measures. Keep decision logs and report back quickly.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., HCD Double Diamond for Shared Spaces" },
    { label: "Owner or team", key: "owner", type: "text", ph: "e.g., Community Council + Library" },
    { label: "Purpose and desired outcomes", key: "purpose", type: "textarea", ph: "Why this work matters and what success looks like" },
    { label: "Horizon and dates", key: "horizon", type: "text", ph: "e.g., Now to 90 days" },
    { label: "Boundary and scope", key: "boundary", type: "textarea", ph: "In scope and out of scope" },

    // People and inclusion
    {
      label: "Stakeholders and participants",
      autofill: "persona->inline",
      itemLabel: "stakeholder or participant",
      itemType: "typeahead",
      key: "stakeholders",
      max: 32,
      type: "repeater",
      ph: "e.g., Youth, elders, renters, disabled residents, staff, partners"
    },
    { label: "Recruitment and sampling plan", key: "recruitment", type: "textarea", ph: "Who, how, where, incentives, quotas for diversity" },
    { label: "Access supports and compensation", key: "access", type: "textarea", ph: "Stipends, interpreters and ASL, transport, childcare, sensory supports" },

    // Ethics and governance
    { label: "Consent and privacy rules", key: "consent", type: "textarea", ph: "Quoting, anonymity, retention and deletion, image consent" },
    { label: "Data governance and publication tiers", key: "data_governance", type: "textarea", ph: "Public | Community only | Restricted | Not for release with who decides and why" },

    // DISCOVER
    { label: "Discover questions", key: "disc_qs", type: "textarea", ph: "What do we need to learn" },
    { label: "Discover methods", key: "disc_methods", type: "textarea", ph: "Interviews, intercepts, observation, diary, story circles" },
    { label: "Discussion guide and prompts", key: "disc_guide", type: "textarea", ph: "Opening, core questions, closing, safety notes" },
    { label: "Recruit log", key: "disc_recruit_log", type: "textarea", ph: "Name or code, segment, date, consent status" },
    { label: "Field notes and artifacts", key: "disc_notes", type: "textarea", ph: "Links to notes, screenshots, photos with consent" },
    { label: "Early insights and quotes", key: "disc_insights", type: "textarea", ph: "Short bullets with evidence links" },

    // DEFINE
    { label: "Synthesis methods", key: "def_methods", type: "textarea", ph: "Affinity, journey, JTBD, tensions, values mapping" },
    { label: "Themes and tensions", key: "def_themes", type: "textarea", ph: "Named in participants words" },
    { label: "Needs and jobs to be done", key: "def_needs", type: "textarea", ph: "Outcome oriented needs in plain language" },
    { label: "Problem statements", key: "def_problem", type: "textarea", ph: "Point of view statements that frame the work" },
    { label: "How might we questions", key: "def_hmw", type: "textarea", ph: "One per line" },
    { label: "Opportunity areas", key: "def_opps", type: "textarea", ph: "Clusters where ideas should focus" },
    { label: "Design principles", key: "def_principles", type: "textarea", ph: "Rules to guide decisions" },

    // DEVELOP
    { label: "Co-design session plans", key: "dev_codesign", type: "textarea", ph: "Agenda, roles, exercises, access supports" },
    { label: "Concept list with hypotheses", key: "dev_concepts", type: "textarea", ph: "Concept name - hypothesis - risk - measure" },
    { label: "Storyboards or wireframes links", key: "dev_wires", type: "textarea", ph: "URLs to boards or files" },
    { label: "Prototype plan", key: "dev_proto_plan", type: "textarea", ph: "What fidelity, for whom, where, safety checks" },
    { label: "Prototype links", key: "dev_proto_links", type: "textarea", ph: "URLs to prototypes" },
    { label: "Experiment matrix", key: "dev_experiments", type: "textarea", ph: "Test - audience - success signal - risk - check date" },
    { label: "Risks and guardrails", key: "dev_risks", type: "textarea", ph: "Harm checks, equity, data and safety limits" },

    // TEST
    { label: "Test participants and segments", key: "test_participants", type: "textarea", ph: "Who will try the prototype" },
    { label: "Test script", key: "test_script", type: "textarea", ph: "Intro, tasks, probes, closing, crisis routes" },
    { label: "Measures and signals", key: "test_measures", type: "textarea", ph: "Task success, time on task, errors, sentiment, quotes" },
    { label: "Test findings", key: "test_findings", type: "textarea", ph: "What worked, what broke, what to change" },
    { label: "Decision log", key: "test_decisions", type: "textarea", ph: "Ship, revise, or drop with reasons" },

    // DELIVER
    { label: "MVP scope", key: "del_mvp", type: "textarea", ph: "What we will ship first" },
    { label: "Acceptance criteria", key: "del_accept", type: "textarea", ph: "Definition of done and quality gates" },
    { label: "Build and rollout plan", key: "del_plan", type: "textarea", ph: "Owners, steps, dependencies, comms" },
    { label: "Access and localization plan", key: "del_access", type: "textarea", ph: "Languages, alt text, captions, contrast, motion limits" },
    { label: "Training and handover", key: "del_training", type: "textarea", ph: "Who needs what to run this well" },
    { label: "Support and feedback loops", key: "del_support", type: "textarea", ph: "Help routes, hotlines, feedback forms, SLAs" },

    // Governance and cadence
    { label: "Roles and decision rights", key: "gov_roles", type: "textarea", ph: "Who decides, who advises, who executes" },
    { label: "Review cadences", key: "gov_cadence", type: "textarea", ph: "Discover weekly, Develop weekly, Deliver biweekly, portfolio monthly" },
    { label: "Change process", key: "gov_change", type: "textarea", ph: "How updates are proposed, reviewed, and recorded" },

    // Budget and timeline
    { label: "Budget and resources", key: "budget", type: "textarea", ph: "People, dollars, tools, venues" },
    { label: "Milestones and dates", key: "timeline", type: "text", ph: "Key reviews and ship dates" },
    { label: "Dependencies and risks", key: "deps_risks", type: "textarea", ph: "What could block delivery and how to mitigate" },

    // Reporting and learning
    { label: "Report back plan", key: "report_back", type: "textarea", ph: "Community first brief schedule and channels" },
    { label: "Learning questions", key: "learning", type: "textarea", ph: "What we hope to learn next" },
    { label: "Dashboard", key: "dashboard", type: "textarea", ph: "Small set of indicators with owners" },

    // Context
    { label: "Context and links", key: "ctx", type: "textarea", ph: "References, constraints, prior work" }
  ],
  template: ({
    title,
    owner,
    purpose,
    horizon,
    boundary,

    stakeholders,
    recruitment,
    access,

    consent,
    data_governance,

    disc_qs,
    disc_methods,
    disc_guide,
    disc_recruit_log,
    disc_notes,
    disc_insights,

    def_methods,
    def_themes,
    def_needs,
    def_problem,
    def_hmw,
    def_opps,
    def_principles,

    dev_codesign,
    dev_concepts,
    dev_wires,
    dev_proto_plan,
    dev_proto_links,
    dev_experiments,
    dev_risks,

    test_participants,
    test_script,
    test_measures,
    test_findings,
    test_decisions,

    del_mvp,
    del_accept,
    del_plan,
    del_access,
    del_training,
    del_support,

    gov_roles,
    gov_cadence,
    gov_change,

    budget,
    timeline,
    deps_risks,

    report_back,
    learning,
    dashboard,

    ctx,
    audience,
    style,
    tone: overall_tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/)
      .map(x => x.trim())
      .filter(Boolean)
      .map((x,i)=>`${i + 1}. ${x}`)
      .join("\n");

    const flow = [
      "Discover",
      "Define",
      "Develop",
      "Deliver"
    ].join(" -> ");

    return [
      title && `HCD Double Diamond plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      overall_tone && `Tone: ${overall_tone}`,
      ctx && `Context and links:\n${ctx}`,

      "SECTION: Overview",
      owner && `Owner or team: ${owner}`,
      purpose && `Purpose and desired outcomes:\n${purpose}`,
      horizon && `Horizon and dates: ${horizon}`,
      boundary && `Boundary and scope:\n${boundary}`,

      "SECTION: People and inclusion",
      stakeholders && ["Stakeholders and participants:", listify(stakeholders)].join("\n"),
      recruitment && `Recruitment and sampling plan:\n${recruitment}`,
      access && `Access supports and compensation:\n${access}`,

      "SECTION: Ethics and governance",
      consent && `Consent and privacy rules:\n${consent}`,
      data_governance && `Data governance and publication tiers:\n${data_governance}`,

      "SECTION: Discover",
      disc_qs && `Discover questions:\n${disc_qs}`,
      disc_methods && `Discover methods:\n${disc_methods}`,
      disc_guide && `Discussion guide and prompts:\n${disc_guide}`,
      disc_recruit_log && ["Recruit log:", listify(disc_recruit_log)].join("\n"),
      disc_notes && `Field notes and artifacts:\n${disc_notes}`,
      disc_insights && `Early insights and quotes:\n${disc_insights}`,

      "SECTION: Define",
      def_methods && `Synthesis methods:\n${def_methods}`,
      def_themes && `Themes and tensions:\n${def_themes}`,
      def_needs && `Needs and jobs to be done:\n${def_needs}`,
      def_problem && `Problem statements:\n${def_problem}`,
      def_hmw && ["How might we questions:", listify(def_hmw)].join("\n"),
      def_opps && `Opportunity areas:\n${def_opps}`,
      def_principles && `Design principles:\n${def_principles}`,

      "SECTION: Develop",
      dev_codesign && `Co-design session plans:\n${dev_codesign}`,
      dev_concepts && ["Concept list with hypotheses:", listify(dev_concepts)].join("\n"),
      dev_wires && `Storyboards or wireframes links:\n${dev_wires}`,
      dev_proto_plan && `Prototype plan:\n${dev_proto_plan}`,
      dev_proto_links && `Prototype links:\n${dev_proto_links}`,
      dev_experiments && ["Experiment matrix:", listify(dev_experiments)].join("\n"),
      dev_risks && `Risks and guardrails:\n${dev_risks}`,

      "SECTION: Test",
      test_participants && `Test participants and segments:\n${test_participants}`,
      test_script && `Test script:\n${test_script}`,
      test_measures && ["Measures and signals:", listify(test_measures)].join("\n"),
      test_findings && `Test findings:\n${test_findings}`,
      test_decisions && ["Decision log:", listify(test_decisions)].join("\n"),

      "SECTION: Deliver",
      del_mvp && `MVP scope:\n${del_mvp}`,
      del_accept && `Acceptance criteria:\n${del_accept}`,
      del_plan && `Build and rollout plan:\n${del_plan}`,
      del_access && `Access and localization plan:\n${del_access}`,
      del_training && `Training and handover:\n${del_training}`,
      del_support && `Support and feedback loops:\n${del_support}`,

      "SECTION: Governance and cadence",
      gov_roles && `Roles and decision rights:\n${gov_roles}`,
      gov_cadence && `Review cadences:\n${gov_cadence}`,
      gov_change && `Change process:\n${gov_change}`,

      "SECTION: Budget and timeline",
      budget && `Budget and resources:\n${budget}`,
      timeline && `Milestones and dates: ${timeline}`,
      deps_risks && `Dependencies and risks:\n${deps_risks}`,

      "SECTION: Reporting and learning",
      report_back && `Report back plan:\n${report_back}`,
      learning && `Learning questions:\n${learning}`,
      dashboard && `Dashboard:\n${dashboard}`,

      "Quick reference",
      `Flow: ${flow}`,

      "Checklist:",
      "- [ ] Boundary clear and equity centered with consent in place",
      "- [ ] Discover plan includes access supports and diverse sampling",
      "- [ ] Define outputs include crisp problem statements and HMW questions",
      "- [ ] Develop includes co-design, prototypes, and harm checks",
      "- [ ] Test has clear measures and a visible decision log",
      "- [ ] Deliver includes access, localization, and support routes",
      "- [ ] Roles, cadences, and change process are published",
      "- [ ] Community first brief scheduled within 14 days"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "Human Centered Design Double Diamond Discover Define Develop Deliver co-creation accessibility consent prototypes MVP decision log template"
  }
},


{
  id: "empathy_personas_jtbd",
  slug: "empathy-mapping-personas-jtbd-ground-voice",
  label: "Empathy Mapping, Personas, JTBD - Ground voice in needs and contexts",
  kind: "research",
  categories: [
    "research",
    "community",
    "strategy",
    "design",
    "communications"
  ],
  tags: [
    "type:framework",
    "use:discovery",
    "use:voice",
    "use:ux",
    "use:service-design",
    "use:segmentation",
    "phase:explore",
    "phase:define",
    "phase:plan",
    "topic:community",
    "level:beginner"
  ],
  use_cases: [
    "co-create personas that reflect real contexts and constraints",
    "map empathy to reveal pains, gains, and language patterns",
    "run Jobs-to-Be-Done interviews to surface progress sought",
    "translate insights into voice, tone, and microcopy decisions",
    "prioritize jobs and test messages with quick experiments",
     "co-create personas that reflect real contexts and constraints",
    "map empathy to reveal pains, gains, and language patterns",
    "run Jobs-to-Be-Done interviews to surface progress sought",
    "translate insights into voice, tone, and microcopy decisions",
    "prioritize jobs and test messages with quick experiments",
    "understand what motivates different user groups",
    "find pain points in customer journeys",
    "decide which needs to solve first",
    "test marketing messages against real contexts",
    "design services that fit lived realities",
    "show teams what different users feel and need",
    "spot gaps between what people say and what they do",
    "group stories into common patterns",
    "plan inclusive outreach strategies",
    "design features that meet actual jobs-to-be-done",
    "use empathy maps in workshops",
    "align stakeholders on who the product is for",
    "visualize user needs in one page",
    "capture emotional as well as functional needs",
    "find the language users use themselves",
    "support fundraising with relatable stories",
    "choose tone of voice for different audiences",
    "help kids explain what they want from a toy",
    "figure out why people quit using an app",
    "improve sign-up flows with empathy insights",
    "map what stresses people in daily life",
    "understand why families choose certain schools",
    "design posters that actually connect with residents",
    "decide which community programs to expand",
    "write grant proposals grounded in lived needs",
    "guide interview questions with empathy prompts",
    "segment volunteers by what helps them contribute",
    "build training that fits different learning goals",
    "explain to leaders what the community values",
    "connect user needs with product backlog items",
    "translate survey data into empathy-based personas",
    "develop campaign messages that resonate locally",
    "improve customer service scripts with JTBD",
    "make sure feedback loops stay human",
    "choose metaphors that reflect real struggles",
    "help kids design their dream playground",
    "ask seniors what matters in daily routines",
    "create empathy maps for pets and owners",
    "figure out why students skip homework",
    "help neighbors explain what makes them feel safe",
    "design outreach for people without internet access",
    "plan health services around patient pain points",
    "decide which community spaces to renovate first",
    "guide team away from stereotypes with real personas",
    "help describe what bugs kids about chores",
    "explain why people choose one snack over another"
  ],
  boosters: [
    "Co-create with people who live the context. Compensate time and care work.",
    "Write jobs in the classic When I... I want to... so I can... template. Keep it specific and situational.",
    "Capture forces of progress. Push of the situation, pull of the new, anxieties, habits of the present.",
    "Record exact phrases. Build the word bank from their words, then trim jargon.",
    "Bind insights to choices. Each persona and job should change at least one message, one channel, or one ritual.",
    "Publish a short brief in 14 days and credit contributors who opted in."
  ],
  definition: "A combined method. Empathy mapping surfaces what people see, hear, say or do, think or feel, pains, and gains. Co-created personas summarize patterns without stereotyping. Jobs-to-Be-Done interviews capture the progress people seek in specific situations and the forces that help or block them. Together they anchor voice and choices in real needs and contexts.",
  help: "Fill ethics and access, recruit participants, capture empathy maps and JTBD jobs, summarize personas with constraints and language, and turn insights into voice and microcopy. Prioritize jobs and run small tests with owners and dates.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., Empathy, Personas, and JTBD for Eastside" },
    { label: "Owner or steward", key: "owner", type: "text", ph: "e.g., Community research steward" },
    { label: "Purpose and scope", key: "purpose", type: "textarea", ph: "Why this study and where findings will be applied" },
    { label: "Horizon", key: "horizon", type: "text", ph: "e.g., 8 week discovery" },

    // Inclusion and ethics
    {
      label: "Participants and segments",
      autofill: "persona->inline",
      itemLabel: "segment",
      itemType: "typeahead",
      key: "participants",
      max: 32,
      type: "repeater",
      ph: "e.g., Youth, elders, renters, newcomers, disabled residents, caregivers"
    },
    { label: "Recruitment and compensation", key: "recruitment", type: "textarea", ph: "Partners, outreach, stipends, scheduling, consent flow" },
    { label: "Access supports", key: "access", type: "textarea", ph: "Interpreters and ASL, transport, childcare, sensory supports" },
    { label: "Consent and privacy", key: "consent", type: "textarea", ph: "Quoting rules, recording, anonymization, retention and deletion" },
    { label: "Data governance tiers", key: "data_governance", type: "textarea", ph: "Public, Community only, Restricted, Not for release" },

    // Context
    { label: "Place and channels in scope", key: "context", type: "textarea", ph: "Neighborhoods, venues, SMS, email, social, in room" },
    { label: "Constraints to respect", key: "constraints", type: "textarea", ph: "Policy, safety, time windows, device limits" },

    // Empathy mapping
    { label: "Empathy map - See", key: "see", type: "textarea", ph: "What do people see in their environment" },
    { label: "Empathy map - Hear", key: "hear", type: "textarea", ph: "What do they hear from peers, leaders, media" },
    { label: "Empathy map - Say or do", key: "say_do", type: "textarea", ph: "What do they say or do now" },
    { label: "Empathy map - Think or feel", key: "think_feel", type: "textarea", ph: "What do they think or feel under the surface" },
    { label: "Empathy map - Pains", key: "pains", type: "textarea", ph: "Fears, risks, barriers" },
    { label: "Empathy map - Gains", key: "gains", type: "textarea", ph: "Helps, benefits, wins" },
    { label: "Language and quotes", key: "quotes", type: "textarea", ph: "Verbatim phrases with consent" },

    // Personas co-created
    { label: "Personas list (one per line: name - summary - constraints - language - access needs)", key: "personas", type: "textarea", ph: "e.g., Night Shift Parent - juggles 2 jobs - low time - Spanish first - SMS only" },
    { label: "Anti-personas or boundary segments", key: "anti_personas", type: "textarea", ph: "Who is out of scope and why" },
    { label: "Persona evidence links", key: "persona_evidence", type: "textarea", ph: "Docs, transcripts, artifacts" },

    // JTBD interviews
    { label: "Jobs list (one per line using When I... I want to... so I can...)", key: "jobs", type: "textarea", ph: "When I move to a new building I want to know my rights so I can avoid surprise fees" },
    { label: "Job types", key: "job_types", type: "textarea", ph: "Functional, emotional, social jobs relevant here" },
    { label: "Forces of progress (one per line: job - push - pull - anxieties - habits)", key: "forces", type: "textarea", ph: "Job A - unsafe crossing - safer route app - fear of fines - driving habit" },
    { label: "Desired outcome statements", key: "outcomes", type: "textarea", ph: "Minimize the time to..., increase the likelihood that..., reduce the risk of..." },
    { label: "Opportunity matrix (one per line: outcome - importance 1 to 10 - satisfaction 1 to 10)", key: "opportunity", type: "textarea", ph: "Get timely interpreter - 9 - 4" },
    { label: "Interview guide link", key: "guide_link", type: "text", ph: "Protocol URL" },
    { label: "Interview notes or transcripts", key: "interviews", type: "textarea", ph: "Short notes, timestamps, or links" },

    // Scenarios and acceptance
    { label: "Key scenarios", key: "scenarios", type: "textarea", ph: "Situation, path, obstacles, success definition" },
    { label: "Acceptance criteria per job", key: "acceptance", type: "textarea", ph: "Job A is successful when... measured by..." },

    // Voice and content implications
    { label: "Voice implications by persona", key: "voice_implications", type: "textarea", ph: "Tone, formality, calls to action, trust cues" },
    { label: "Word bank from quotes", key: "word_bank", type: "textarea", ph: "Preferred words and rewrites of jargon" },
    { label: "Channel and format preferences", key: "channels", type: "textarea", ph: "SMS, flyers, email, in room, radio, reading level" },
    { label: "Microcopy examples to test", key: "microcopy", type: "textarea", ph: "Invites, reminders, apologies, directions" },

    // Prioritization and experiments
    { label: "Prioritized jobs (one per line: job - reason - impact - effort)", key: "prioritized", type: "textarea", ph: "Job A - high equity impact - medium effort" },
    { label: "Experiments (one per line: change - owner - resources - start - check date - success signals)", key: "experiments", type: "textarea", ph: "SMS invite rewrite - Outreach - $500 - Aug 1 - Aug 20 - reply rate 12 percent" },

    // Measures and learning
    { label: "Signals and measures", key: "measures", type: "textarea", ph: "Task success, time to value, satisfaction, attendance, reply rate" },
    { label: "Feedback loop and cadence", key: "cadence", type: "text", ph: "Weekly review, monthly share back, quarterly refresh" },

    // Risks and guardrails
    { label: "Risks and mitigations", key: "risks", type: "textarea", ph: "Stereotyping, tokenism, overfitting, privacy risks" },

    // Timeline and reporting
    { label: "Timeline", key: "timeline", type: "text", ph: "Prep 2 weeks, field 3 weeks, brief in 14 days" },
    { label: "Report back plan", key: "report_back", type: "textarea", ph: "Community first summary, bilingual where relevant" },
    { label: "Context and links", key: "ctx", type: "textarea", ph: "Prior research, references, constraints" }
  ],
  template: ({
    title,
    owner,
    purpose,
    horizon,

    participants,
    recruitment,
    access,
    consent,
    data_governance,

    context,
    constraints,

    see,
    hear,
    say_do,
    think_feel,
    pains,
    gains,
    quotes,

    personas,
    anti_personas,
    persona_evidence,

    jobs,
    job_types,
    forces,
    outcomes,
    opportunity,
    guide_link,
    interviews,

    scenarios,
    acceptance,

    voice_implications,
    word_bank,
    channels,
    microcopy,

    prioritized,
    experiments,

    measures,
    cadence,

    risks,

    timeline,
    report_back,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i + 1}. ${x}`).join("\n");

    const flow = [
      "Recruit with consent and access supports",
      "Map empathy and capture exact phrases",
      "Write jobs and forces of progress",
      "Summarize personas with constraints and language",
      "Prioritize jobs and define acceptance criteria",
      "Update voice, word bank, and microcopy",
      "Run experiments and share back results"
    ].join(" -> ");

    return [
      title && `Empathy, Personas, and JTBD plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and links:\n${ctx}`,

      "SECTION: Overview",
      owner && `Owner or steward: ${owner}`,
      purpose && `Purpose and scope:\n${purpose}`,
      horizon && `Horizon: ${horizon}`,

      "SECTION: Inclusion and ethics",
      participants && ["Participants and segments:", listify(participants)].join("\n"),
      recruitment && `Recruitment and compensation:\n${recruitment}`,
      access && `Access supports:\n${access}`,
      consent && `Consent and privacy:\n${consent}`,
      data_governance && `Data governance tiers:\n${data_governance}`,

      "SECTION: Context",
      context && `Place and channels in scope:\n${context}`,
      constraints && `Constraints to respect:\n${constraints}`,

      "SECTION: Empathy mapping",
      see && `See:\n${see}`,
      hear && `Hear:\n${hear}`,
      say_do && `Say or do:\n${say_do}`,
      think_feel && `Think or feel:\n${think_feel}`,
      pains && `Pains:\n${pains}`,
      gains && `Gains:\n${gains}`,
      quotes && ["Language and quotes:", listify(quotes)].join("\n"),

      "SECTION: Personas co-created",
      personas && ["Personas list:", listify(personas)].join("\n"),
      anti_personas && `Anti-personas or boundary segments:\n${anti_personas}`,
      persona_evidence && `Persona evidence links:\n${persona_evidence}`,

      "SECTION: Jobs-to-Be-Done",
      jobs && ["Jobs list:", listify(jobs)].join("\n"),
      job_types && `Job types:\n${job_types}`,
      forces && ["Forces of progress:", listify(forces)].join("\n"),
      outcomes && ["Desired outcome statements:", listify(outcomes)].join("\n"),
      opportunity && ["Opportunity matrix:", listify(opportunity)].join("\n"),
      guide_link && `Interview guide link: ${guide_link}`,
      interviews && `Interview notes or transcripts:\n${interviews}`,

      "SECTION: Scenarios and acceptance",
      scenarios && `Key scenarios:\n${scenarios}`,
      acceptance && `Acceptance criteria per job:\n${acceptance}`,

      "SECTION: Voice and content implications",
      voice_implications && `Voice implications by persona:\n${voice_implications}`,
      word_bank && ["Word bank from quotes:", listify(word_bank)].join("\n"),
      channels && `Channel and format preferences:\n${channels}`,
      microcopy && `Microcopy examples to test:\n${microcopy}`,

      "SECTION: Prioritization and experiments",
      prioritized && ["Prioritized jobs:", listify(prioritized)].join("\n"),
      experiments && ["Experiments:", listify(experiments)].join("\n"),

      "SECTION: Measures and learning",
      measures && ["Signals and measures:", listify(measures)].join("\n"),
      cadence && `Feedback loop and cadence: ${cadence}`,

      "SECTION: Risks and guardrails",
      risks && `Risks and mitigations:\n${risks}`,

      "SECTION: Timeline and reporting",
      timeline && `Timeline: ${timeline}`,
      report_back && `Report back plan:\n${report_back}`,

      "Quick reference",
      flow,

      "Checklist:",
      "- [ ] Participants compensated and consent recorded",
      "- [ ] Empathy map complete with pains, gains, and quotes",
      "- [ ] Jobs written with forces of progress captured",
      "- [ ] Personas co-created and grounded in evidence",
      "- [ ] Voice and microcopy updated from word bank",
      "- [ ] Prioritized jobs have acceptance criteria and owners",
      "- [ ] Experiments and measures defined with review dates",
      "- [ ] Community first brief scheduled within 14 days"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "Empathy mapping personas co-created JTBD jobs to be done interviews forces of progress word bank acceptance criteria voice microcopy template"
  }
},

{
  id: "service_design_blueprint",
  slug: "service-design-blueprints-frontstage-backstage-voice",
  label: "Service Design Blueprints - Map frontstage/backstage to see where voice is silenced",
  kind: "design",
  categories: [
    "design",
    "research",
    "community",
    "operations",
    "service"
  ],
  tags: [
    "type:method",
    "use:blueprint",
    "use:journey",
    "use:accessibility",
    "use:delivery",
    "use:equity",
    "phase:discover",
    "phase:define",
    "phase:develop",
    "phase:deliver",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "map how people experience a service across channels and roles",
    "expose backstage systems, policies, and handoffs shaping voice",
    "spot where voices are silenced and add access supports",
    "align teams on fixes, SLAs, and accountability",
    "prototype changes in the riskiest steps first",
        "map how people experience a service across channels and roles",
    "expose backstage systems, policies, and handoffs shaping voice",
    "spot where voices are silenced and add access supports",
    "align teams on fixes, SLAs, and accountability",
    "prototype changes in the riskiest steps first",
    "visualize how front desk and back office connect",
    "show tech teams what users actually see",
    "trace delays back to hidden bottlenecks",
    "compare staff effort vs. user effort",
    "find pain points where service breaks down",
    "help leaders see the whole service end-to-end",
    "improve hospital patient check-in experience",
    "redesign library borrowing process",
    "make call center scripts match website info",
    "test if policy changes show up in user journey",
    "help government offices simplify paperwork",
    "map school lunch line from student perspective",
    "spot accessibility barriers in ticket booking",
    "see why online and in-person don’t align",
    "check where residents drop out of an application",
    "link metrics to specific steps in the blueprint",
    "guide training by showing hidden staff work",
    "design fairer housing application processes",
    "plan digital upgrades without forgetting human steps",
    "show funders real gaps in service delivery",
    "decide which backstage tools to integrate first",
    "run staff workshops using the blueprint map",
    "connect surveys to touchpoints in the flow",
    "spot when translation or signage is missing",
    "analyze complaints by blueprint stage",
    "help kids map cafeteria lunch experience",
    "hwo do I improve the line speed",
    "map pet adoption process from family’s view",
    "figure out why parents hate school forms",
    "design smoother vaccine clinic flow",
    "trace how mail requests are processed",
    "show residents how their feedback travels",
    "visualize where volunteers get confused",
    "align vendors and partners on shared service",
    "turn mystery shopper notes into blueprint",
    "see what happens after pressing submit online",
    "highlight hidden labor of frontline workers",
    "spot duplication across staff roles",
    "test if chatbot answers match live agent help",
    "design museum visit flow from entry to exit",
    "make neighborhood permit system clearer",
    "uncover equity gaps in social services",
    "map before-and-after service improvement",
    "help students design a lemonade stand blueprint",
    "explain airport security lines to kids",
    "show why grandma struggles with online forms",
    "plan simple fixes before full system change"
  ],
  boosters: [
    "Blueprint from evidence. Pair interviews and observation with artifact screenshots and logs.",
    "Draw the three lines: Interaction, Visibility, Internal Interaction. Label them in the map.",
    "Capture who speaks and who can’t at each step. Track talk-time parity and reading level.",
    "Model edge cases explicitly: low bandwidth, language access, crisis, disability scenarios.",
    "Make handoffs and waits visible with times and ownership. Timeboxes reveal reality.",
    "Close the loop. Publish a plain-language brief in 14 days with before/after examples."
  ],
  definition: "A service map with swimlanes for Customer/Community actions, Frontstage interactions, Backstage actions, Support processes, and Evidence. It shows lines of interaction and visibility, making silenced voices, handoffs, and policy constraints explicit.",
  help: "Define scenario, stages, actors, and ethics. Fill lanes per stage (customer, frontstage, backstage, support, evidence). Mark voice gaps, waits, and risks. Add measures, SLAs, owners, experiments, and review dates. Use multilingual, accessible artifacts.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., Blueprint: Community Meeting Sign-up & Participation" },
    { label: "Owner or team", key: "owner", type: "text", ph: "e.g., Service Design + Community Council" },
    { label: "Purpose and scope", key: "purpose", type: "textarea", ph: "What we want to improve and where this blueprint applies" },
    { label: "Horizon and dates", key: "horizon", type: "text", ph: "e.g., Now to 90 days" },
    { label: "Boundary and exclusions", key: "boundary", type: "textarea", ph: "In vs out of scope; channels; locations" },

    // People and inclusion
    {
      label: "Actors / participants",
      autofill: "persona->inline",
      itemLabel: "actor",
      itemType: "typeahead",
      key: "actors",
      max: 24,
      type: "repeater",
      ph: "e.g., Resident, volunteer, moderator, interpreter, facilities"
    },
    { label: "Segments & access needs", key: "segments", type: "textarea", ph: "Language, mobility, sensory, digital access, trust" },

    // Ethics
    { label: "Consent & privacy rules", key: "consent", type: "textarea", ph: "Quoting, images, retention, opt-out, anonymity" },
    { label: "Data governance tiers", key: "data_governance", type: "textarea", ph: "Public | Community-only | Restricted | Not for release" },

    // Scenario
    { label: "Service / scenario name", key: "scenario", type: "text", ph: "e.g., Register → Attend → Speak at meeting" },
    { label: "Trigger & desired outcome", key: "trigger_outcome", type: "textarea", ph: "What starts the journey and what success looks like" },
    { label: "Channels in play", key: "channels", type: "textarea", ph: "Web, SMS, phone, in-room, paper, social" },

    // Stages
    { label: "Stages (one per line)", key: "stages", type: "textarea", ph: "Discover info; Register; Prepare; Arrive; Participate; Follow-up" },

    // Swimlanes (use 'stage - detail' per line)
    { label: "Customer actions (stage - action)", key: "lane_customer", type: "textarea", ph: "Register - Fill form on phone" },
    { label: "Frontstage interactions (stage - touchpoint - channel)", key: "lane_front", type: "textarea", ph: "Register - Confirmation SMS - SMS" },
    { label: "Backstage actions (stage - who - what)", key: "lane_back", type: "textarea", ph: "Register - Moderator - Approves speaker list" },
    { label: "Support processes (stage - team/system - process)", key: "lane_support", type: "textarea", ph: "Register - IT - Provision shortlink & redirects" },
    { label: "Evidence (stage - artifact - link)", key: "lane_evidence", type: "textarea", ph: "Register - Screenshot of form - URL" },

    // Systems, policies, data
    { label: "Systems & tools (one per line: name - purpose - owner)", key: "systems", type: "textarea", ph: "Signup form - registration - Comms" },
    { label: "Policies & scripts (one per line: policy - rule - owner)", key: "policies", type: "textarea", ph: "Public comment rules - 2 min limit - Council" },
    { label: "Data flows (one per line: data - from - to - retention)", key: "data_flows", type: "textarea", ph: "Name/email - form - CRM - 12 months" },

    // Voice, access, waits
    { label: "Voice gaps & silence points (stage - who - why - signal)", key: "voice_gaps", type: "textarea", ph: "Participate - renters - jargon blocks - no hands raised" },
    { label: "Access barriers & supports (stage - barrier - support)", key: "access_supports", type: "textarea", ph: "Arrive - stairs - ramp & seating map" },
    { label: "Waits & handoffs (stage - from - to - wait mins)", key: "waits_handoffs", type: "textarea", ph: "Register - form submit - confirmation - 120" },
    { label: "Risk & harm checks (stage - risk - guardrail)", key: "risks", type: "textarea", ph: "Follow-up - doxxing risk - redact names by default" },

    // Measures & SLAs
    { label: "Experience signals", key: "exp_signals", type: "textarea", ph: "Task success, time to speak, talk-time parity, sentiment" },
    { label: "Operational metrics & SLAs", key: "ops_metrics", type: "textarea", ph: "Confirm within 10 mins; captioning 100%; reading level <= Grade 8" },

    // Opportunities & experiments
    { label: "Pain points (stage - issue - evidence)", key: "pain_points", type: "textarea", ph: "Register - phone form breaks - 8/20 errors" },
    { label: "Opportunities (stage - idea - value)", key: "opportunities", type: "textarea", ph: "Register - SMS fallback - reduces drop-off" },
    { label: "Experiments (one per line: test - owner - resources - start - check date - success)", key: "experiments", type: "textarea", ph: "SMS fallback - Comms - $1k - Jul - Aug 15 - +20% completion" },

    // Ownership & cadence
    { label: "Owners & RACI (one per line: area - R/A/C/I)", key: "owners", type: "textarea", ph: "Captioning - Access Lead R, Vendor A, Comms C, IT I" },
    { label: "Review cadence", key: "cadence", type: "text", ph: "Weekly ops; monthly blueprint review; quarterly report-back" },

    // Timeline & reporting
    { label: "Timeline", key: "timeline", type: "text", ph: "Key changes and dates" },
    { label: "Report back plan", key: "report_back", type: "textarea", ph: "Community-first brief in 14 days; bilingual; artifacts before/after" },

    // Context
    { label: "Context & links", key: "ctx", type: "textarea", ph: "References, constraints, related guides" }
  ],
  template: ({
    title,
    owner,
    purpose,
    horizon,
    boundary,

    actors,
    segments,

    consent,
    data_governance,

    scenario,
    trigger_outcome,
    channels,

    stages,

    lane_customer,
    lane_front,
    lane_back,
    lane_support,
    lane_evidence,

    systems,
    policies,
    data_flows,

    voice_gaps,
    access_supports,
    waits_handoffs,
    risks,

    exp_signals,
    ops_metrics,

    pain_points,
    opportunities,
    experiments,

    owners,
    cadence,

    timeline,
    report_back,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i + 1}. ${x}`).join("\n");

    const lanes = [
      lane_customer && ["Customer actions:", listify(lane_customer)].join("\n"),
      lane_front && ["Frontstage interactions:", listify(lane_front)].join("\n"),
      lane_back && ["Backstage actions:", listify(lane_back)].join("\n"),
      lane_support && ["Support processes:", listify(lane_support)].join("\n"),
      lane_evidence && ["Evidence:", listify(lane_evidence)].join("\n")
    ].filter(Boolean).join("\n");

    const keys = [
      "Lines:",
      "• Line of Interaction (Customer ↔ Frontstage)",
      "• Line of Visibility (Frontstage ↔ Backstage)",
      "• Line of Internal Interaction (Backstage ↔ Support)"
    ].join("\n");

    return [
      title && `Service Blueprint: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context & links:\n${ctx}`,

      "SECTION: Overview",
      owner && `Owner or team: ${owner}`,
      purpose && `Purpose and scope:\n${purpose}`,
      horizon && `Horizon and dates: ${horizon}`,
      boundary && `Boundary and exclusions:\n${boundary}`,

      "SECTION: People & inclusion",
      actors && ["Actors / participants:", listify(actors)].join("\n"),
      segments && `Segments & access needs:\n${segments}`,

      "SECTION: Ethics",
      consent && `Consent & privacy rules:\n${consent}`,
      data_governance && `Data governance tiers:\n${data_governance}`,

      "SECTION: Scenario",
      scenario && `Service / scenario: ${scenario}`,
      trigger_outcome && `Trigger & desired outcome:\n${trigger_outcome}`,
      channels && `Channels in play:\n${channels}`,
      stages && ["Stages:", listify(stages)].join("\n"),

      "SECTION: Swimlanes",
      keys,
      lanes,

      "SECTION: Systems, policies, data",
      systems && ["Systems & tools:", listify(systems)].join("\n"),
      policies && ["Policies & scripts:", listify(policies)].join("\n"),
      data_flows && ["Data flows:", listify(data_flows)].join("\n"),

      "SECTION: Voice, access, waits",
      voice_gaps && ["Voice gaps & silence points:", listify(voice_gaps)].join("\n"),
      access_supports && ["Access barriers & supports:", listify(access_supports)].join("\n"),
      waits_handoffs && ["Waits & handoffs:", listify(waits_handoffs)].join("\n"),
      risks && ["Risk & harm checks:", listify(risks)].join("\n"),

      "SECTION: Measures & SLAs",
      exp_signals && ["Experience signals:", listify(exp_signals)].join("\n"),
      ops_metrics && ["Operational metrics & SLAs:", listify(ops_metrics)].join("\n"),

      "SECTION: Opportunities & experiments",
      pain_points && ["Pain points:", listify(pain_points)].join("\n"),
      opportunities && ["Opportunities:", listify(opportunities)].join("\n"),
      experiments && ["Experiments:", listify(experiments)].join("\n"),

      "SECTION: Ownership & cadence",
      owners && ["Owners & RACI:", listify(owners)].join("\n"),
      cadence && `Review cadence: ${cadence}`,

      "SECTION: Timeline & reporting",
      timeline && `Timeline: ${timeline}`,
      report_back && `Report back plan:\n${report_back}`,

      "Quick reference",
      "- Lanes: Customer | Frontstage | Backstage | Support | Evidence",
      "- Lines: Interaction | Visibility | Internal Interaction",

      "Checklist:",
      "- [ ] Stages defined with real artifacts and logs",
      "- [ ] Voice gaps and access supports named per stage",
      "- [ ] Handoffs, waits, and owners visible with times",
      "- [ ] Policies, scripts, and data flows mapped",
      "- [ ] Measures include inclusion (talk-time parity, reading level)",
      "- [ ] Experiments and SLAs have owners and review dates",
      "- [ ] Community-first brief scheduled within 14 days"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "service design blueprint frontstage backstage support processes evidence line of interaction visibility internal interaction voice silenced accessibility equity template"
  }
},


{
  id: "power_mapping_inclusive_engagement",
  slug: "power-mapping-visualize-power-inclusive-engagement",
  label: "Power Mapping - Visualize formal and informal power; plan inclusive engagement",
  kind: "analysis",
  categories: [
    "community",
    "strategy",
    "research",
    "governance",
    "advocacy"
  ],
  tags: [
    "type:framework",
    "use:diagnosis",
    "use:network",
    "use:engagement",
    "use:advocacy",
    "use:risk",
    "phase:explore",
    "phase:plan",
    "phase:act",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "map formal authority and informal influence around a decision",
    "identify allies, opponents, and swing stakeholders",
    "trace influence pathways and gatekeepers to choose messengers",
    "design inclusive and safe engagement plans with access supports",
    "track stance shifts and commitments over time",
        "map formal authority and informal influence around a decision",
    "identify allies, opponents, and swing stakeholders",
    "trace influence pathways and gatekeepers to choose messengers",
    "design inclusive and safe engagement plans with access supports",
    "track stance shifts and commitments over time",
    "understand who actually makes decisions behind the scenes",
    "see which community voices are ignored or sidelined",
    "spot gatekeepers who control access to leaders",
    "decide who to talk to first in an advocacy campaign",
    "build coalitions by finding overlapping interests",
    "prevent over-reliance on one powerful ally",
    "map who influences budget decisions",
    "analyze school board power dynamics",
    "track which council members support an issue",
    "see how social media influencers sway debates",
    "plan which journalists to brief for coverage",
    "identify which residents shape neighborhood opinion",
    "spot who has veto power in a committee",
    "decide which partners need more engagement",
    "understand how money flows affect influence",
    "map church, union, or club influence in local politics",
    "plan safe routes to reach marginalized voices",
    "test whether outreach reached key audiences",
    "prevent tokenism by showing who has real say",
    "analyze which staffers influence elected officials",
    "show youth who actually makes school rules",
    "teach kids why principals, not teachers, set policy",
    "spot when parents or alumni drive school choices",
    "map family decision-making before tough talks",
    "see who controls playground rules at recess",
    "understand which friend groups set trends",
    "trace how gossip changes opinions",
    "show how grandma’s opinion sways the family",
    "plan who to ask for help on a group project",
    "see how student council actually wields power",
    "help nonprofits lobby effectively",
    "decide which donors to prioritize",
    "spot when outside consultants drive outcomes",
    "compare formal org chart with real influence",
    "track influence shifts after an election",
    "prevent exclusion of disabled voices in planning",
    "analyze workplace power flows",
    "decide who can block a proposal",
    "find out why some voices never get heard",
    "see how peer pressure drives teen choices",
    "understand social networks in small towns",
    "use diagrams to explain complex politics simply",
    "plan strategy by knowing who listens to whom",
    "prepare activists with a map of risks and allies",
    "map playground politics"
  ],
  boosters: [
    "Name the decision and boundary up front. Keep the map scoped and current.",
    "Evidence first. Record sources for claims about influence or stance.",
    "Pair positional power with narrative and relational power indicators.",
    "Use trusted messengers for each audience. Proximity and credibility matter.",
    "Plan for safety and do no harm. Redact or aggregate sensitive data when needed.",
    "Close the loop with a public brief that credits contributors who opted in."
  ],
  definition: "A practical way to chart who has power and influence on an issue, how they connect, what motivates them, and how to engage them safely and inclusively.",
  help: "Complete scope and ethics, list stakeholders, score power and interest, map relationships and gatekeepers, segment into allies and swings, choose messengers and offers, schedule one on ones, and track stance shifts and commitments.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., Power map for Safe Crossings" },
    { label: "Owner or steward", key: "owner", type: "text", ph: "e.g., Community outreach steward" },
    { label: "Purpose and decision context", key: "purpose", type: "textarea", ph: "What decision or change is at stake and why this map" },
    { label: "Horizon", key: "horizon", type: "text", ph: "e.g., Now to 90 days" },

    // Scope and ethics
    { label: "Issue and scope", key: "issue_scope", type: "textarea", ph: "Issue statement, geographic or org boundary, what is out of scope" },
    { label: "Time window", key: "time_window", type: "text", ph: "e.g., Q3 hearings and related votes" },
    { label: "Consent and sensitivity rules", key: "consent_rules", type: "textarea", ph: "What is public versus private, anonymization and redaction rules" },
    { label: "Data governance tiers", key: "data_governance", type: "textarea", ph: "Public, Community only, Restricted, Not for release" },
    { label: "Safety and do no harm notes", key: "safety", type: "textarea", ph: "Doxxing risks, retaliation risks, conflict sensitivity" },

    // Stakeholders
    {
      label: "Stakeholder entities",
      autofill: "persona->inline",
      itemLabel: "stakeholder",
      itemType: "typeahead",
      key: "stakeholders",
      max: 60,
      type: "repeater",
      ph: "e.g., Tenant association, school principal, council member, business owner"
    },
    { label: "Stakeholders list (one per line: name - type - org - role - notes)", key: "stakeholder_list", type: "textarea", ph: "Jane Doe - council member - city - transportation committee - key vote" },

    // Power and interest scoring
    { label: "Scoring rubric", key: "scoring_rubric", type: "textarea", ph: "Power 0 to 5, Interest 0 to 5, Legitimacy 0 to 5, Access 0 to 5, Resources 0 to 5" },
    { label: "Stakeholder scores (one per line: name - power - interest - legitimacy - access - resources)", key: "scores", type: "textarea", ph: "Council District 3 - 5 - 4 - 4 - 4 - 3" },

    // Positions and motivations
    { label: "Stance notes (one per line: name - public stance - private stance - salience 0 to 5)", key: "stance", type: "textarea", ph: "Business Association - neutral - leaning support - 3" },
    { label: "Motivations and constraints (one per line: name - incentives - red lines - flex areas)", key: "motivations", type: "textarea", ph: "District 3 - safety and cost savings - no new taxes - pilot ok" },

    // Relationships and pathways
    { label: "Influence ties (one per line: source -> target - strength 1 to 5 - channel - evidence)", key: "ties", type: "textarea", ph: "Principal -> Council D3 - 4 - school safety briefings - meeting minutes" },
    { label: "Gatekeepers and veto points", key: "gatekeepers", type: "textarea", ph: "Committee chairs, schedulers, legal reviewers" },
    { label: "Brokers and connectors", key: "brokers", type: "textarea", ph: "Who bridges groups, high betweenness roles" },

    // Segments
    { label: "Allies", key: "allies", type: "textarea", ph: "Supportive stakeholders and why" },
    { label: "Opponents", key: "opponents", type: "textarea", ph: "Stakeholders likely to block and why" },
    { label: "Swing or undecided", key: "swing", type: "textarea", ph: "Stakeholders whose stance can move with the right offer" },

    // Strategy and engagement
    { label: "Objectives", key: "objectives", type: "textarea", ph: "What must change in 30 to 90 days" },
    { label: "Messengers and validators (one per line: audience - messenger - validator)", key: "messengers", type: "textarea", ph: "Council D3 - school nurse - traffic engineer" },
    { label: "Offers and asks by segment", key: "offers", type: "textarea", ph: "For swing businesses: clear delivery windows, signage kit, pilot sunset" },
    { label: "Access supports", key: "access", type: "textarea", ph: "Interpreters and ASL, childcare, stipends, transport, sensory supports" },
    { label: "Engagement ladder (one per line: action - owner - by when - success signal)", key: "ladder", type: "textarea", ph: "One on one with D3 scheduler - Alex - Jul 12 - meeting booked" },
    { label: "One on ones plan", key: "one_on_ones", type: "textarea", ph: "Targets, order, briefing packet owners" },
    { label: "Coalition partners and roles", key: "coalition", type: "textarea", ph: "Which orgs bring reach, legitimacy, technical help" },

    // Measures and learning
    { label: "Signals and measures", key: "measures", type: "textarea", ph: "Meetings booked, responses, co sponsors, commitments, stance shifts" },
    { label: "Review cadence and owners", key: "cadence", type: "text", ph: "Weekly standup, biweekly map refresh, post action debriefs" },

    // Risks
    { label: "Risks and mitigations", key: "risks", type: "textarea", ph: "Backlash, safety risks, misrepresentation, confidentiality breaches" },

    // Visualization and evidence
    { label: "Map link", key: "map_link", type: "text", ph: "Kumu or Miro or FigJam URL" },
    { label: "Legend and notes", key: "legend", type: "textarea", ph: "Color and line meanings, scoring legend" },
    { label: "Evidence sources", key: "evidence", type: "textarea", ph: "Public records, minutes, FOIA, press, social, interviews" },

    // Logs
    { label: "Interactions log (one per line: date - with whom - notes - follow up)", key: "log", type: "textarea", ph: "Jul 7 - D3 staff - wants crash data by school - send brief" },
    { label: "Commitments log (one per line: who - what - by when - status)", key: "commitments", type: "textarea", ph: "Council D3 - co sponsor ordinance - Aug 10 - pending" },

    // Timeline and context
    { label: "Timeline", key: "timeline", type: "text", ph: "Key hearings, deadlines, events" },
    { label: "Context and links", key: "ctx", type: "textarea", ph: "Prior work, constraints, reference docs" }
  ],
  template: ({
    title,
    owner,
    purpose,
    horizon,

    issue_scope,
    time_window,
    consent_rules,
    data_governance,
    safety,

    stakeholders,
    stakeholder_list,

    scoring_rubric,
    scores,

    stance,
    motivations,

    ties,
    gatekeepers,
    brokers,

    allies,
    opponents,
    swing,

    objectives,
    messengers,
    offers,
    access,
    ladder,
    one_on_ones,
    coalition,

    measures,
    cadence,

    risks,

    map_link,
    legend,
    evidence,

    log,
    commitments,

    timeline,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i + 1}. ${x}`).join("\n");

    const flow = [
      "Define issue, boundary, and ethics",
      "List stakeholders and score power and interest",
      "Map ties, brokers, and gatekeepers",
      "Segment allies, opponents, and swings",
      "Choose messengers, offers, and access supports",
      "Schedule one on ones and coalition moves",
      "Track stance shifts and commitments and refresh the map"
    ].join(" -> ");

    return [
      title && `Power mapping plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and links:\n${ctx}`,

      "SECTION: Overview",
      owner && `Owner or steward: ${owner}`,
      purpose && `Purpose and decision context:\n${purpose}`,
      horizon && `Horizon: ${horizon}`,

      "SECTION: Scope and ethics",
      issue_scope && `Issue and scope:\n${issue_scope}`,
      time_window && `Time window: ${time_window}`,
      consent_rules && `Consent and sensitivity rules:\n${consent_rules}`,
      data_governance && `Data governance tiers:\n${data_governance}`,
      safety && `Safety and do no harm notes:\n${safety}`,

      "SECTION: Stakeholders",
      stakeholders && ["Stakeholder entities:", listify(stakeholders)].join("\n"),
      stakeholder_list && ["Stakeholders list:", listify(stakeholder_list)].join("\n"),

      "SECTION: Power and interest scoring",
      scoring_rubric && `Scoring rubric:\n${scoring_rubric}`,
      scores && ["Stakeholder scores:", listify(scores)].join("\n"),

      "SECTION: Positions and motivations",
      stance && ["Stance notes:", listify(stance)].join("\n"),
      motivations && ["Motivations and constraints:", listify(motivations)].join("\n"),

      "SECTION: Relationships and pathways",
      ties && ["Influence ties:", listify(ties)].join("\n"),
      gatekeepers && `Gatekeepers and veto points:\n${gatekeepers}`,
      brokers && `Brokers and connectors:\n${brokers}`,

      "SECTION: Segments",
      allies && `Allies:\n${allies}`,
      opponents && `Opponents:\n${opponents}`,
      swing && `Swing or undecided:\n${swing}`,

      "SECTION: Strategy and engagement",
      objectives && `Objectives:\n${objectives}`,
      messengers && ["Messengers and validators:", listify(messengers)].join("\n"),
      offers && `Offers and asks by segment:\n${offers}`,
      access && `Access supports:\n${access}`,
      ladder && ["Engagement ladder:", listify(ladder)].join("\n"),
      one_on_ones && `One on ones plan:\n${one_on_ones}`,
      coalition && `Coalition partners and roles:\n${coalition}`,

      "SECTION: Measures and learning",
      measures && ["Signals and measures:", listify(measures)].join("\n"),
      cadence && `Review cadence and owners: ${cadence}`,

      "SECTION: Risks",
      risks && `Risks and mitigations:\n${risks}`,

      "SECTION: Visualization and evidence",
      map_link && `Map link: ${map_link}`,
      legend && `Legend and notes:\n${legend}`,
      evidence && `Evidence sources:\n${evidence}`,

      "SECTION: Logs",
      log && ["Interactions log:", listify(log)].join("\n"),
      commitments && ["Commitments log:", listify(commitments)].join("\n"),

      "SECTION: Timeline",
      timeline && `Timeline: ${timeline}`,

      "Quick reference",
      flow,

      "Checklist:",
      "- [ ] Decision and scope defined and time bound",
      "- [ ] Ethics and safety rules understood and used",
      "- [ ] Stakeholders listed with evidence based scores",
      "- [ ] Ties, brokers, and gatekeepers mapped",
      "- [ ] Allies, opponents, and swings segmented with offers",
      "- [ ] One on ones and coalition steps scheduled",
      "- [ ] Measures tracked and map refreshed on cadence",
      "- [ ] Community first brief prepared within 14 days"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "power mapping formal informal influence interest grid allies opponents swing messengers gatekeepers brokers inclusive engagement do no harm template"
  }
},

{
  id: "sna_network_weaving_netography",
  slug: "social-network-analysis-network-weaving-netography",
  label: "Social Network Analysis / Network Weaving / Netography - Find connectors, peripheries, and missing voices",
  kind: "analysis",
  categories: [
    "research",
    "community",
    "systems",
    "strategy",
    "operations"
  ],
  tags: [
    "type:method",
    "use:analysis",
    "use:network",
    "use:engagement",
    "use:equity",
    "use:sensemaking",
    "phase:explore",
    "phase:define",
    "phase:plan",
    "phase:act",
    "topic:community",
    "alt:netnography",
    "level:intermediate"
  ],
  use_cases: [
    "map relationships to spot connectors, bridges, clusters, isolates, and peripheries",
    "surface missing voices and homophily patterns that silence participation",
    "design weaving moves that increase healthy bridges and reduce bottlenecks",
    "track pre and post changes in inclusion, reach, and resilience",
    "prioritize light touch investments with positive spillovers",
     "map relationships to spot connectors, bridges, clusters, isolates, and peripheries",
    "surface missing voices and homophily patterns that silence participation",
    "design weaving moves that increase healthy bridges and reduce bottlenecks",
    "track pre and post changes in inclusion, reach, and resilience",
    "prioritize light touch investments with positive spillovers",
    "see which people bring different groups together",
    "find out who is left out of important conversations",
    "show how information really flows across teams",
    "measure which voices dominate vs. who is sidelined",
    "understand friendship circles in a school",
    "map alliances in city politics",
    "track how community rumors spread",
    "spot over-reliance on a single connector",
    "identify super-spreaders of misinformation",
    "analyze which subgroups resist collaboration",
    "find cultural brokers across language groups",
    "spot who carries messages across silos",
    "decide where to invest limited outreach funds",
    "plan how to connect newcomers into networks",
    "measure diversity of ties across gender or race",
    "trace resilience of networks during crises",
    "see if programs actually broaden networks",
    "identify youth leaders in a sports club",
    "help students map their own friend groups",
    "understand bullying dynamics in classrooms",
    "trace how ideas move through social media",
    "spot echo chambers in online communities",
    "see where elders hold quiet influence",
    "track which organizations work in isolation",
    "design introductions that spark new bridges",
    "see how volunteers recruit each other",
    "map gaps in healthcare provider networks",
    "spot critical connectors in disaster response",
    "measure shifts in trust between groups",
    "trace influence in activist campaigns",
    "find peripheries who need extra support",
    "understand how gossip changes reputations",
    "teach kids who their hidden connectors are",
    "show families how relatives connect cousins",
    "analyze network growth after training",
    "trace how innovation spreads in a company",
    "spot bottlenecks in cross-department work",
    "see which employees act as informal leaders",
    "map alliances in neighborhood councils",
    "study how migrants build new networks",
    "plan outreach for hard-to-reach residents",
    "use network maps to evaluate equity goals",
    "compare online vs. offline connections",
    "prepare a clear visual map for funders",
    "track network change over several years"
  ],
  boosters: [
    "Define boundary and time window first. Then pick a clear tie definition.",
    "Pair math with meaning. Validate patterns with participant debriefs.",
    "Use minimal necessary data. Aggregate and anonymize wherever possible.",
    "Prefer multiple lenses: degree, betweenness, communities, assortativity.",
    "Make visuals accessible: high contrast, readable labels, alt text, bilingual where relevant.",
    "Close the loop with a short brief and consented quotes."
  ],
  definition: "A practical SNA and network weaving approach for communities. Collect relationship data, build a graph, compute centrality and community measures, visualize patterns, then weave introductions, supports, and routines that bring peripheries in while avoiding overload on hubs.",
  help: "Complete ethics, boundary, data sources, tie rules, construction steps, metrics, visuals, insights, weaving moves, experiments, and measures. Keep sensitive attributes safe and apply suppression rules for small cells.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., Network map of Eastside participants" },
    { label: "Owner or steward", key: "owner", type: "text", ph: "e.g., Community Council research steward" },
    { label: "Purpose and questions", key: "purpose", type: "textarea", ph: "Why map the network and what you need to learn" },
    { label: "Horizon and dates", key: "horizon", type: "text", ph: "e.g., Last 180 days" },
    { label: "Boundary and scope", key: "boundary", type: "textarea", ph: "Who and where are in scope. Channels and contexts included." },

    // People and inclusion
    {
      label: "Stakeholder groups",
      autofill: "persona->inline",
      itemLabel: "stakeholder",
      itemType: "typeahead",
      key: "stakeholders",
      max: 28,
      type: "repeater",
      ph: "e.g., Youth, elders, renters, newcomers, disabled residents, staff, partners"
    },
    { label: "Access supports and compensation", key: "access", type: "textarea", ph: "Stipends, interpreters or ASL, transport, childcare, sensory supports" },

    // Ethics and governance
    { label: "Consent and privacy rules", key: "consent", type: "textarea", ph: "Quoting, anonymity, retention and deletion, image consent" },
    { label: "Data governance and publication tiers", key: "data_governance", type: "textarea", ph: "Public | Community only | Restricted | Not for release - who decides and why" },
    { label: "Risk assessment and mitigations", key: "risk", type: "textarea", ph: "Doxxing risk, re-identification, small cell suppression, opt out" },

    // Data sources
    { label: "Tie definition", key: "tie_def", type: "textarea", ph: "What counts as a tie. e.g., replied 2+ times, co-attended 2 events, co-authored, introduced." },
    { label: "Time window", key: "time_window", type: "text", ph: "e.g., Jan 1 to Jun 30" },
    { label: "Survey roster or egocentric instrument", key: "survey_instrument", type: "textarea", ph: "Roster names, prompts, consent text" },
    { label: "Digital trace sources", key: "trace_sources", type: "textarea", ph: "Forums, chat, email headers, sign-ins with terms checked" },
    { label: "Raw data files and schema links", key: "data_links", type: "textarea", ph: "CSV URLs, tabs, column descriptions" },
    { label: "Node attributes to collect", key: "node_attrs", type: "textarea", ph: "Role, unit, language, neighborhood, tenure, skills" },

    // Construction and transforms
    { label: "Node types", key: "node_types", type: "textarea", ph: "People, orgs, channels, events. Note multiplex ties if any." },
    { label: "Graph construction notes", key: "graph_build", type: "textarea", ph: "Bipartite projection rules, weighting, direction, thresholds" },
    { label: "Filters and inclusion rules", key: "filters", type: "textarea", ph: "Drop one time ties, minimum interactions, bots removal" },

    // Metrics
    { label: "Centrality metrics", key: "metrics_centrality", type: "textarea", ph: "Degree, in and out degree, betweenness, closeness, eigenvector or PageRank" },
    { label: "Cohesion and structure", key: "metrics_structure", type: "textarea", ph: "Communities and modularity, clustering coefficient, k core, components" },
    { label: "Bridging and constraint", key: "metrics_bridge", type: "textarea", ph: "Burt constraint or effective size, articulation points, bridges" },
    { label: "Equity and mixing", key: "metrics_equity", type: "textarea", ph: "Assortativity by language or role, participation by subgroup, talk time parity" },

    // Visualization
    { label: "Views to render", key: "viz_views", type: "textarea", ph: "Overall, by community, by role, by neighborhood, newcomers only" },
    { label: "Layout and mapping rules", key: "viz_rules", type: "textarea", ph: "Layout type, size by degree, color by community, labels threshold" },
    { label: "Legend and accessibility notes", key: "viz_access", type: "textarea", ph: "Alt text, high contrast, bilingual captions, publish tiers" },

    // Findings
    { label: "Connectors and brokers list", key: "find_connectors", type: "textarea", ph: "Names or roles - why they matter - support needed" },
    { label: "Peripheries and isolates", key: "find_periphery", type: "textarea", ph: "Segments with low degree - where and why" },
    { label: "Missing voices", key: "find_missing", type: "textarea", ph: "Groups not present or under connected and hypotheses" },
    { label: "Homophily and barriers", key: "find_homophily", type: "textarea", ph: "Strong same to same ties and what maintains them" },
    { label: "Opportunities and risks", key: "find_ops_risks", type: "textarea", ph: "Quick wins, structural holes, overload risks" },

    // Weaving moves
    { label: "Weaving strategies", key: "weave_strategies", type: "textarea", ph: "Warm introductions, cross group salons, buddy systems, micro grants, translation support" },
    { label: "Introductions and bridges log", key: "weave_log", type: "textarea", ph: "Who introduced whom - purpose - check date" },
    { label: "Onboarding and rituals", key: "weave_rituals", type: "textarea", ph: "Welcome calls, ask-me-anything, newcomer spotlight, norms walkthrough" },

    // Experiments
    { label: "Experiments (one per line: test - owner - resources - start - check date - success signals)", key: "experiments", type: "textarea", ph: "Cross circle coffee chats - A. Lee - $500 - Jul - Aug 15 - +bridging ties" },

    // Measures and cadence
    { label: "Signals and measures", key: "measures", type: "textarea", ph: "Change in periphery degree, bridge count, newcomer retention, talk time parity, response latency" },
    { label: "Review cadence and roles", key: "cadence", type: "text", ph: "Monthly network review - quarterly brief - who leads" },

    // Toolchain and artifacts
    { label: "Toolchain", key: "tools", type: "textarea", ph: "Kumu, Gephi, GraphCommons, Polinode, NetworkX, NodeXL" },
    { label: "Figures and exports", key: "figures", type: "textarea", ph: "PNG and SVG links, data dictionary, notebook links" },

    // Reporting
    { label: "Report back plan", key: "report_back", type: "textarea", ph: "Community first brief in 14 days - translated - accessible visuals" },

    // Context
    { label: "Context and links", key: "ctx", type: "textarea", ph: "References, constraints, prior maps" }
  ],
  template: ({
    title,
    owner,
    purpose,
    horizon,
    boundary,

    stakeholders,
    access,

    consent,
    data_governance,
    risk,

    tie_def,
    time_window,
    survey_instrument,
    trace_sources,
    data_links,
    node_attrs,

    node_types,
    graph_build,
    filters,

    metrics_centrality,
    metrics_structure,
    metrics_bridge,
    metrics_equity,

    viz_views,
    viz_rules,
    viz_access,

    find_connectors,
    find_periphery,
    find_missing,
    find_homophily,
    find_ops_risks,

    weave_strategies,
    weave_log,
    weave_rituals,

    experiments,

    measures,
    cadence,

    tools,
    figures,

    report_back,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/)
      .map(x => x.trim())
      .filter(Boolean)
      .map((x,i)=>`${i + 1}. ${x}`)
      .join("\n");

    const flow = [
      "Set boundary and ethics",
      "Collect survey or trace data with consent",
      "Build graph with clear tie rules",
      "Compute metrics and render accessible views",
      "Validate patterns with participants",
      "Weave introductions and supports",
      "Track measures and report back"
    ].join(" -> ");

    return [
      title && `Network analysis plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and links:\n${ctx}`,

      "SECTION: Overview",
      owner && `Owner or steward: ${owner}`,
      purpose && `Purpose and questions:\n${purpose}`,
      horizon && `Horizon and dates: ${horizon}`,
      boundary && `Boundary and scope:\n${boundary}`,

      "SECTION: People and inclusion",
      stakeholders && ["Stakeholder groups:", listify(stakeholders)].join("\n"),
      access && `Access supports and compensation:\n${access}`,

      "SECTION: Ethics and governance",
      consent && `Consent and privacy rules:\n${consent}`,
      data_governance && `Data governance and publication tiers:\n${data_governance}`,
      risk && `Risk assessment and mitigations:\n${risk}`,

      "SECTION: Data sources",
      tie_def && `Tie definition:\n${tie_def}`,
      time_window && `Time window: ${time_window}`,
      survey_instrument && `Survey roster or egocentric instrument:\n${survey_instrument}`,
      trace_sources && `Digital trace sources:\n${trace_sources}`,
      data_links && ["Raw data files and schema:", listify(data_links)].join("\n"),
      node_attrs && ["Node attributes to collect:", listify(node_attrs)].join("\n"),

      "SECTION: Construction and transforms",
      node_types && `Node types:\n${node_types}`,
      graph_build && `Graph construction notes:\n${graph_build}`,
      filters && `Filters and inclusion rules:\n${filters}`,

      "SECTION: Metrics",
      metrics_centrality && `Centrality metrics:\n${metrics_centrality}`,
      metrics_structure && `Cohesion and structure:\n${metrics_structure}`,
      metrics_bridge && `Bridging and constraint:\n${metrics_bridge}`,
      metrics_equity && `Equity and mixing:\n${metrics_equity}`,

      "SECTION: Visualization",
      viz_views && ["Views to render:", listify(viz_views)].join("\n"),
      viz_rules && `Layout and mapping rules:\n${viz_rules}`,
      viz_access && `Legend and accessibility notes:\n${viz_access}`,

      "SECTION: Findings",
      find_connectors && ["Connectors and brokers:", listify(find_connectors)].join("\n"),
      find_periphery && ["Peripheries and isolates:", listify(find_periphery)].join("\n"),
      find_missing && ["Missing voices:", listify(find_missing)].join("\n"),
      find_homophily && `Homophily and barriers:\n${find_homophily}`,
      find_ops_risks && `Opportunities and risks:\n${find_ops_risks}`,

      "SECTION: Weaving moves",
      weave_strategies && `Weaving strategies:\n${weave_strategies}`,
      weave_log && ["Introductions and bridges log:", listify(weave_log)].join("\n"),
      weave_rituals && `Onboarding and rituals:\n${weave_rituals}`,

      "SECTION: Experiments",
      experiments && ["Experiments:", listify(experiments)].join("\n"),

      "SECTION: Measures and cadence",
      measures && ["Signals and measures:", listify(measures)].join("\n"),
      cadence && `Review cadence and roles: ${cadence}`,

      "SECTION: Toolchain and artifacts",
      tools && `Toolchain:\n${tools}`,
      figures && ["Figures and exports:", listify(figures)].join("\n"),

      "SECTION: Reporting",
      report_back && `Report back plan:\n${report_back}`,

      "Quick reference",
      flow,

      "Checklist:",
      "- [ ] Boundary and tie rules are explicit",
      "- [ ] Consent, minimization, and suppression rules are in place",
      "- [ ] Graph construction and filters are documented",
      "- [ ] Metrics include bridges and equity lenses",
      "- [ ] Visuals are accessible and bilingual where relevant",
      "- [ ] Weaving moves target peripheries without overloading hubs",
      "- [ ] Experiments have owners, resources, and check dates",
      "- [ ] Community first brief scheduled within 14 days"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "social network analysis SNA network weaving netography netnography centrality betweenness communities homophily bridges periphery missing voices template"
  }
},

{
  id: "ethical_data_stewardship",
  slug: "ethical-data-stewardship-data-trusts-community-irb",
  label: "Ethical Data Stewardship - Governance for safe listening",
  kind: "governance",
  categories: [
    "governance",
    "community",
    "research",
    "data",
    "safety"
  ],
  tags: [
    "type:framework",
    "use:data",
    "use:privacy",
    "use:governance",
    "use:risk",
    "use:equity",
    "use:ethics",
    "phase:plan",
    "phase:operate",
    "phase:review",
    "topic:community",
    "level:advanced"
  ],
  use_cases: [
    "set up a community data trust or community IRB for listening work",
    "govern consent, access, and sharing with clear tiers",
    "minimize harm with DPIA and safe release standards",
    "honor data sovereignty principles and community benefit",
    "publish transparent records and respond to incidents",
    "set up a community data trust or community IRB for listening work",
    "govern consent, access, and sharing with clear tiers",
    "minimize harm with DPIA and safe release standards",
    "honor data sovereignty principles and community benefit",
    "publish transparent records and respond to incidents",
    "decide what data should never be collected",
    "create clear rules for who can see survey responses",
    "set boundaries for using AI on sensitive community stories",
    "decide how long to keep or delete community data",
    "design safe processes for handling children’s information",
    "prevent re-identification when sharing anonymized data",
    "write consent forms people actually understand",
    "build a public registry of approved data projects",
    "design emergency stop rules if harm is detected",
    "let community members vote on data use policies",
    "plan fair ways to share research benefits back",
    "handle health data with extra protections",
    "design secure storage that still allows community access",
    "create red flag categories (never share, always anonymize)",
    "teach students how to respect participant privacy",
    "set up escalation steps for when data is misused",
    "draft plain-language data-sharing agreements",
    "make dashboards that hide personal identifiers",
    "involve Elders or cultural leaders in data review",
    "align with OCAP, CARE, or other sovereignty standards",
    "balance transparency with protecting vulnerable groups",
    "test bias impacts before releasing datasets",
    "manage researcher credentials and role-based access",
    "decide who owns and controls social media scraping data",
    "design clear grievance and remedy pathways",
    "build capacity for community data stewardship roles",
    "review algorithms against equity and safety standards",
    "train volunteers in safe data handling",
    "develop exit strategies if a data project shuts down",
    "map risks of cross-border data storage or use",
    "negotiate terms with funders about data ownership",
    "write a community-first data code of ethics",
    "design audits to check compliance over time",
    "handle DNA, biometric, or cultural heritage data safely",
    "trace who accessed what data and when",
    "allow participants to withdraw their data anytime",
    "show communities how their data is being used",
    "design safe aggregation so no one is singled out",
    "balance open data with redaction for safety",
    "explain to kids why sharing names and addresses online is risky",
    "decide if sensitive stories should be archived or deleted",
    "create visual consent flows instead of legal jargon",
    "check social media terms before using community posts",
    "compare options: keep data local vs. cloud storage",
    "publish a transparency report that real people can read",
    "decide how to handle hacked or leaked community data"
  ],
  boosters: [
    "Write the boundary and purpose first. Collect only what you need.",
    "Center community sovereignty. Align with OCAP and CARE where relevant.",
    "Use dynamic consent with easy withdrawal routes and plain language.",
    "Prefer safe aggregates and small experiments over broad collection.",
    "Publish transparency reports and close the loop with contributors.",
    "Practice defense in depth. People, process, and technical controls together."
  ],
  definition: "A lightweight operating model for community data governance using data trusts and community IRBs. It covers roles, consent, access tiers, risk assessment, safe release, accountability, and transparent reporting so listening can be ethical and effective.",
  help: "Complete charter and principles, scope of data and uses, roles and decision rights, consent flows, lifecycle and security, access tiers and review, DPIA and safe release, transparency and incident response, measures and cadence.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., Community Data Trust for Eastside" },
    { label: "Sponsor or steward", key: "owner", type: "text", ph: "e.g., Community Council data steward" },
    { label: "Purpose and scope", key: "purpose", type: "textarea", ph: "Why collect or steward data and where this applies" },
    { label: "Jurisdiction and horizon", key: "jurisdiction", type: "text", ph: "e.g., City level, 12 month pilot" },

    // Charter and principles
    { label: "Charter link", key: "charter_link", type: "text", ph: "URL to charter or bylaws" },
    { label: "Principles adopted", key: "principles", type: "textarea", ph: "OCAP, CARE, FAIR, local sovereignty, equity, transparency" },
    { label: "Community benefit statement", key: "benefit", type: "textarea", ph: "How this stewardship benefits the community first" },

    // People and roles
    {
      label: "Governing bodies",
      autofill: "persona->inline",
      itemLabel: "body",
      itemType: "typeahead",
      key: "bodies",
      max: 10,
      type: "repeater",
      ph: "Data Trust Board, Community IRB, Access Committee, Appeals Panel"
    },
    { label: "Roles and decision rights (one per line: role - purpose - decisions - term)", key: "roles", type: "textarea", ph: "Data Steward - administer consent and access - approve tier 1 - 1 year" },
    { label: "Conflict of interest policy", key: "coi", type: "textarea", ph: "Disclosure, recusal, public notes" },

    // Data scope
    { label: "Data uses and questions", key: "uses", type: "textarea", ph: "What questions you intend to answer" },
    { label: "Data types in scope", key: "data_types", type: "textarea", ph: "Surveys, narratives, logs, attendance, contact info, location, etc" },
    { label: "Out of scope or prohibited", key: "oos", type: "textarea", ph: "Sensitive or high risk data you will not collect" },
    { label: "Sources and provenance", key: "provenance", type: "textarea", ph: "Where data comes from and evidence of consent" },

    // Legal and agreements
    { label: "Legal basis and contracts", key: "legal", type: "textarea", ph: "MOUs, DUAs, licenses, research approvals" },
    { label: "Community benefit agreements", key: "cba", type: "textarea", ph: "Return of value to community" },

    // Consent and participation
    { label: "Consent models", key: "consent_models", type: "textarea", ph: "Opt in, dynamic consent, guardians for minors, withdrawal route" },
    { label: "Notices and plain language", key: "notices", type: "textarea", ph: "Reading level, languages, formats, examples" },
    { label: "Vulnerable groups protections", key: "vulnerable", type: "textarea", ph: "Minors, undocumented, survivors, disability, indigenous data sovereignty" },

    // Access tiers and review
    { label: "Access tiers", key: "tiers", type: "textarea", ph: "Tier 0 public brief, Tier 1 aggregates, Tier 2 limited deidentified, Tier 3 identified by exception" },
    { label: "Access request workflow", key: "access_flow", type: "textarea", ph: "Apply - review - decision - conditions - expiry - audit" },
    { label: "Review criteria", key: "review_criteria", type: "textarea", ph: "Benefit, risk, necessity, equity impact, reciprocity" },

    // Lifecycle and security
    { label: "Data minimization and quality", key: "minimize", type: "textarea", ph: "Collect the least needed and verify accuracy" },
    { label: "Storage and security controls", key: "security", type: "textarea", ph: "Encryption, IAM, logs, backups, segregation" },
    { label: "Retention and deletion", key: "retention", type: "textarea", ph: "Schedules by type and verified deletion process" },

    // Risk assessment and safe release
    { label: "DPIA or threat model", key: "dpia", type: "textarea", ph: "Risks, likelihood, impact, mitigations" },
    { label: "Deidentification and SDC methods", key: "sdc", type: "textarea", ph: "Aggregation thresholds, suppression, k-anonymity, differential privacy if used" },
    { label: "Redaction and small cell rules", key: "redaction", type: "textarea", ph: "Minimum cell size, masking rules" },

    // Transparency and accountability
    { label: "Transparency report template", key: "transparency_tpl", type: "textarea", ph: "What was collected, who accessed, for what, outcomes" },
    { label: "Appeals and redress", key: "appeals", type: "textarea", ph: "How to contest decisions and seek remedy" },
    { label: "Audit plan", key: "audit", type: "textarea", ph: "Internal checks, external reviews, cadence" },

    // Community IRB process
    { label: "Submission requirements", key: "irb_sub", type: "textarea", ph: "Protocol, consent materials, risk plan, benefit plan" },
    { label: "Review steps and timelines", key: "irb_steps", type: "textarea", ph: "Precheck, full review, conditions, monitoring" },
    { label: "Monitoring and continuing review", key: "irb_monitor", type: "textarea", ph: "Amendments, adverse events, renewals" },

    // Artifacts and registry
    { label: "Data inventory register", key: "inventory", type: "textarea", ph: "Dataset - purpose - fields - tier - owner - retention" },
    { label: "Data dictionary links", key: "dictionary", type: "textarea", ph: "Where definitions live" },
    { label: "Public briefs and summaries", key: "briefs", type: "textarea", ph: "Links to published community reports" },

    // Logs
    { label: "Access request log (one per line: id - who - dataset - tier - decision - expiry)", key: "access_log", type: "textarea", ph: "REQ-12 - City Dept - traffic survey - T2 - approved - 2025-12-31" },
    { label: "Incident log (one per line: date - type - severity - status - lessons)", key: "incident_log", type: "textarea", ph: "2025-07-01 - misdirected email - low - closed - added 2 person review" },
    { label: "Consent withdrawal log", key: "withdraw_log", type: "textarea", ph: "id - when - action taken - confirmation sent" },

    // Measures and cadence
    { label: "Signals and measures", key: "measures", type: "textarea", ph: "Time to decision, approvals with conditions, withdrawals processed, incidents, audit findings" },
    { label: "Review cadence and owners", key: "cadence", type: "text", ph: "Monthly access committee, quarterly board, annual external review" },

    // Training
    { label: "Training plan", key: "training", type: "textarea", ph: "Privacy, security, bias, safe storytelling, consent refreshers" },
    { label: "Training completion log", key: "training_log", type: "textarea", ph: "name - module - date - status" },

    // Timeline and context
    { label: "Rollout plan", key: "rollout", type: "textarea", ph: "Pilot, evaluate, scale, archive or exit" },
    { label: "Timeline", key: "timeline", type: "text", ph: "Prep 2 weeks, pilot 90 days, review and adapt" },
    { label: "Context and links", key: "ctx", type: "textarea", ph: "Prior policies, community norms, references" }
  ],
  template: ({
    title,
    owner,
    purpose,
    jurisdiction,

    charter_link,
    principles,
    benefit,

    bodies,
    roles,
    coi,

    uses,
    data_types,
    oos,
    provenance,

    legal,
    cba,

    consent_models,
    notices,
    vulnerable,

    tiers,
    access_flow,
    review_criteria,

    minimize,
    security,
    retention,

    dpia,
    sdc,
    redaction,

    transparency_tpl,
    appeals,
    audit,

    irb_sub,
    irb_steps,
    irb_monitor,

    inventory,
    dictionary,
    briefs,

    access_log,
    incident_log,
    withdraw_log,

    measures,
    cadence,

    training,
    training_log,

    rollout,
    timeline,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i + 1}. ${x}`).join("\n");

    const flow = [
      "Define charter and principles",
      "Limit scope and collect the minimum",
      "Set consent, tiers, and access workflow",
      "Assess risks and define safe release",
      "Operate with audits, transparency, and appeals",
      "Monitor measures and adapt with community input"
    ].join(" -> ");

    return [
      title && `Ethical Data Stewardship plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and links:\n${ctx}`,

      "SECTION: Overview",
      owner && `Sponsor or steward: ${owner}`,
      purpose && `Purpose and scope:\n${purpose}`,
      jurisdiction && `Jurisdiction and horizon: ${jurisdiction}`,
      charter_link && `Charter link: ${charter_link}`,

      "SECTION: Principles and benefit",
      principles && `Principles adopted:\n${principles}`,
      benefit && `Community benefit statement:\n${benefit}`,

      "SECTION: People and roles",
      bodies && ["Governing bodies:", listify(bodies)].join("\n"),
      roles && ["Roles and decision rights:", listify(roles)].join("\n"),
      coi && `Conflict of interest policy:\n${coi}`,

      "SECTION: Data scope",
      uses && `Data uses and questions:\n${uses}`,
      data_types && `Data types in scope:\n${data_types}`,
      oos && `Out of scope or prohibited:\n${oos}`,
      provenance && `Sources and provenance:\n${provenance}`,

      "SECTION: Legal and agreements",
      legal && `Legal basis and contracts:\n${legal}`,
      cba && `Community benefit agreements:\n${cba}`,

      "SECTION: Consent and participation",
      consent_models && `Consent models:\n${consent_models}`,
      notices && `Notices and plain language:\n${notices}`,
      vulnerable && `Vulnerable groups protections:\n${vulnerable}`,

      "SECTION: Access tiers and review",
      tiers && `Access tiers:\n${tiers}`,
      access_flow && `Access request workflow:\n${access_flow}`,
      review_criteria && `Review criteria:\n${review_criteria}`,

      "SECTION: Lifecycle and security",
      minimize && `Data minimization and quality:\n${minimize}`,
      security && `Storage and security controls:\n${security}`,
      retention && `Retention and deletion:\n${retention}`,

      "SECTION: Risk assessment and safe release",
      dpia && `DPIA or threat model:\n${dpia}`,
      sdc && `Deidentification and SDC methods:\n${sdc}`,
      redaction && `Redaction and small cell rules:\n${redaction}`,

      "SECTION: Transparency and accountability",
      transparency_tpl && `Transparency report template:\n${transparency_tpl}`,
      appeals && `Appeals and redress:\n${appeals}`,
      audit && `Audit plan:\n${audit}`,

      "SECTION: Community IRB process",
      irb_sub && `Submission requirements:\n${irb_sub}`,
      irb_steps && `Review steps and timelines:\n${irb_steps}`,
      irb_monitor && `Monitoring and continuing review:\n${irb_monitor}`,

      "SECTION: Artifacts and registry",
      inventory && ["Data inventory register:", listify(inventory)].join("\n"),
      dictionary && `Data dictionary links:\n${dictionary}`,
      briefs && `Public briefs and summaries:\n${briefs}`,

      "SECTION: Logs",
      access_log && ["Access request log:", listify(access_log)].join("\n"),
      incident_log && ["Incident log:", listify(incident_log)].join("\n"),
      withdraw_log && ["Consent withdrawal log:", listify(withdraw_log)].join("\n"),

      "SECTION: Measures and cadence",
      measures && ["Signals and measures:", listify(measures)].join("\n"),
      cadence && `Review cadence and owners: ${cadence}`,

      "SECTION: Training",
      training && `Training plan:\n${training}`,
      training_log && ["Training completion log:", listify(training_log)].join("\n"),

      "SECTION: Timeline",
      rollout && `Rollout plan:\n${rollout}`,
      timeline && `Timeline: ${timeline}`,

      "Quick reference",
      flow,

      "Checklist:",
      "- [ ] Purpose, boundary, and community benefit are clear",
      "- [ ] Roles, decision rights, and COI policy are published",
      "- [ ] Consent is specific, revocable, and multilingual",
      "- [ ] Access tiers and review criteria are documented",
      "- [ ] DPIA complete with safe release standards in place",
      "- [ ] Transparency reports and audits scheduled",
      "- [ ] Logs maintained for access, incidents, and withdrawals",
      "- [ ] Measures tracked and practices adapted with community input"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "ethical data stewardship data trust community IRB consent tiers DPIA safe release OCAP CARE transparency appeals audit registry template"
  }
},

{
  id: "cultural_probes_diary_studies",
  slug: "cultural-probes-diary-studies-longitudinal-voice",
  label: "Cultural Probes & Diary Studies - Longitudinal, participant-led voice capture",
  kind: "research",
  categories: [
    "research",
    "design",
    "community",
    "ethnography",
    "evaluation"
  ],
  tags: [
    "type:method",
    "use:longitudinal",
    "use:co-creation",
    "use:voice",
    "use:equity",
    "use:ethnography",
    "phase:discover",
    "phase:define",
    "phase:develop",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "capture lived experiences over time in participants' own words and media",
    "surface routines, workarounds, and emotions that single sessions miss",
    "feed design with real moments and event-triggered insights",
    "enable participant reflection and co-analysis",
    "build a consented story bank for strategy and communication",
     "capture lived experiences over time in participants' own words and media",
    "surface routines, workarounds, and emotions that single sessions miss",
    "feed design with real moments and event-triggered insights",
    "enable participant reflection and co-analysis",
    "build a consented story bank for strategy and communication",
    "study how daily habits actually change over weeks or months",
    "see what people do when no researcher is in the room",
    "capture photos, sketches, or recordings from participants’ lives",
    "compare weekday vs weekend routines in detail",
    "track how feelings about a service shift across touchpoints",
    "understand how chronic illness affects daily decisions",
    "observe how children use learning apps outside school",
    "see how families actually cook and eat meals at home",
    "collect real-world experiences of using public transport",
    "spot workarounds people invent for broken systems",
    "test how a new product integrates into daily routines",
    "gather voice notes during key stress or joy moments",
    "capture participant reflections after specific triggers",
    "study rituals around money, budgeting, and saving",
    "understand how farmers adapt across planting seasons",
    "compare cultural practices across different households",
    "track how trust builds or fades with a new program",
    "study student study patterns before exams",
    "document how people use health tech over time",
    "compare what people *say* vs what they *do* daily",
    "design probes that spark creativity, like postcards or maps",
    "make participants co-researchers by interpreting their entries",
    "spot contradictions in routines (healthy vs unhealthy)",
    "collect video diaries to understand emotional highs and lows",
    "learn what frustrates people most about an app",
    "understand why people skip medication doses",
    "capture moments when people decide to ask for help",
    "study daily mobility challenges of people with disabilities",
    "track how neighborhoods change through resident diaries",
    "see how new policies affect daily life over time",
    "give participants playful kits to document experiences",
    "ask people to draw maps of their social worlds",
    "understand how migration impacts everyday identity",
    "study bedtime routines across cultures",
    "capture the soundscapes of different communities",
    "see how gig workers juggle multiple jobs in a week",
    "study how trust builds in online communities",
    "track joy moments: what makes people smile daily",
    "log frustrations: where people feel stuck or excluded",
    "let kids design probes to show their own world",
    "study how families share tech devices across members",
    "follow how language use shifts over time in context",
    "diary entries to measure emotional resilience",
    "capture how climate events change daily routines"
  ],
  boosters: [
    "Design prompts that are small, specific, and situated. Ask for a moment in time, not a life story.",
    "Offer multiple modes: voice notes, photos, video, text, drawings, paper kits. Meet people where they are.",
    "Schedule brief check-ins to reduce drift, answer questions, and keep consent fresh.",
    "Close the loop with a participant-first report back and optional co-analysis session.",
    "Budget for access supports: data stipends, devices, translation, ASL, childcare, transport.",
    "Minimize data. Collect what you need, de-identify early, and set deletion dates."
  ],
  definition: "A longitudinal, participant-led method. Cultural probes seed reflection with playful artifacts and prompts. Diary studies collect repeated entries over days or weeks. Together they surface patterns, emotions, and constraints that reveal opportunities for change.",
  help: "Complete ethics and access, sampling and recruitment, probe kit and diary prompts, cadence and channels, check-ins, data handling, analysis, and report back. Keep instructions simple and multimodal. Compensate contributions fairly and protect privacy.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., Everyday Access Diaries" },
    { label: "Owner or team", key: "owner", type: "text", ph: "e.g., Community Research + Library" },
    { label: "Purpose and research questions", key: "purpose", type: "textarea", ph: "Why this matters and what you need to learn" },
    { label: "Horizon and dates", key: "horizon", type: "text", ph: "e.g., Aug 1 to Sept 15" },
    { label: "Boundary and scope", key: "boundary", type: "textarea", ph: "People, places, channels that are in scope" },

    // Participants and inclusion
    {
      label: "Participants and segments",
      autofill: "persona->inline",
      itemLabel: "participant segment",
      itemType: "typeahead",
      key: "participants",
      max: 32,
      type: "repeater",
      ph: "e.g., Youth, elders, renters, newcomers, disabled residents"
    },
    { label: "Sampling frame and quotas", key: "sampling", type: "textarea", ph: "Targets by segment, language, neighborhood" },
    { label: "Recruitment channels and scripts", key: "recruitment", type: "textarea", ph: "Partners, outreach text, screening, screener link" },
    { label: "Incentives and payment plan", key: "incentives", type: "textarea", ph: "Amount, schedule, bonuses for completion" },
    { label: "Access supports", key: "access", type: "textarea", ph: "Devices, data stipends, interpreters or ASL, transport, childcare, sensory supports" },

    // Ethics and governance
    { label: "Consent and data rights", key: "consent", type: "textarea", ph: "Quoting rules, image consent, opt-out, deletion on request" },
    { label: "Assent for minors and guardians", key: "assent", type: "textarea", ph: "Process if under 18 and who consents" },
    { label: "Privacy tiers and publication", key: "publication", type: "textarea", ph: "Public, community only, restricted, not for release" },
    { label: "Risk and crisis protocol", key: "risk", type: "textarea", ph: "Triggers, response routes, contacts, mandatory reporting if any" },
    { label: "Data governance and retention", key: "data_governance", type: "textarea", ph: "Storage, encryption, retention period, deletion dates" },

    // Probe and diary design
    { label: "Probe kit contents", key: "probe_kit", type: "textarea", ph: "Postcards, stickers, map, disposable camera, prompt cards, prepaid envelope" },
    { label: "Probe activities", key: "probe_activities", type: "textarea", ph: "Photo a doorway you avoid and tell why; draw your route to the clinic; save one receipt" },
    { label: "Diary entry prompts", key: "diary_prompts", type: "textarea", ph: "What happened, where, who, how it felt, what helped or got in the way" },
    { label: "Entry types allowed", key: "entry_types", type: "textarea", ph: "Text, audio note, photo with caption, short video, drawing, artifact" },
    { label: "Cadence and duration", key: "cadence", type: "text", ph: "Daily for 14 days or 3 times a week for 6 weeks" },
    { label: "Event triggers", key: "triggers", type: "textarea", ph: "When X happens, send an entry within 24 hours" },
    { label: "Reminders and check-ins", key: "checkins", type: "textarea", ph: "Automated SMS, weekly 10 min call, group chat office hours" },

    // Onboarding and training
    { label: "Orientation session plan", key: "onboarding", type: "textarea", ph: "45 min overview, consent, practice entry, safety checks" },
    { label: "Instruction sheet link", key: "instructions_link", type: "text", ph: "URL for quick start guide" },
    { label: "Practice entry script", key: "practice_entry", type: "textarea", ph: "Warm up prompt and example" },

    // Fieldwork operations
    { label: "Channels and tools", key: "tools", type: "textarea", ph: "SMS, WhatsApp, email, research platform, paper return envelope" },
    { label: "Help and contact routes", key: "help_routes", type: "textarea", ph: "Hotline, office hours, contact names" },
    { label: "Translation and transcription plan", key: "translation", type: "textarea", ph: "Who translates and transcribes, quality checks" },

    // Data handling
    { label: "Intake and tagging schema", key: "intake_schema", type: "textarea", ph: "Filename, participant code, time, location, tags" },
    { label: "De-identification and suppression", key: "deid", type: "textarea", ph: "Blur faces, remove names, small cell rules" },
    { label: "File storage and backup", key: "storage", type: "textarea", ph: "Folder structure, backup cadence, access control" },

    // Interim sensemaking
    { label: "Interim check-ins and reflections", key: "interim", type: "textarea", ph: "Midpoint prompts, short surveys, mini-interviews" },
    { label: "Analyst memoing and codes", key: "memos_codes", type: "textarea", ph: "Initial codes, tensions, surprises, quotes with consent" },
    { label: "Participant co-analysis session", key: "co_analysis", type: "textarea", ph: "Agenda, activities, accessibility, honoraria" },

    // Synthesis and outputs
    { label: "Themes and tensions", key: "themes", type: "textarea", ph: "Named in participants' words" },
    { label: "Story bank and exemplars", key: "story_bank", type: "textarea", ph: "Short titles, essence, media link, consent level" },
    { label: "Design principles and implications", key: "principles", type: "textarea", ph: "Rules that guide choices" },
    { label: "Recommendations and opportunities", key: "recs", type: "textarea", ph: "Where to act and why" },

    // Measures and risks
    { label: "Signals and measures", key: "measures", type: "textarea", ph: "Entry completion rate, retention, diversity coverage, time to insight" },
    { label: "Bias and sampling risks", key: "bias_risks", type: "textarea", ph: "Under coverage, attrition, self selection, tech exclusion" },

    // Report back and closure
    { label: "Report back plan", key: "report_back", type: "textarea", ph: "Participant first brief in 14 days, bilingual, accessible artifacts" },
    { label: "Return of results and thanks", key: "return_results", type: "textarea", ph: "Individual summaries if requested, share outcomes, thank by name if consented" },
    { label: "Data disposition", key: "data_disposition", type: "textarea", ph: "What is kept, archived, or deleted when" },

    // Timeline and context
    { label: "Timeline and key dates", key: "timeline", type: "text", ph: "Pilot, launch, midpoint, close, synthesis, share out" },
    { label: "Context and links", key: "ctx", type: "textarea", ph: "References, constraints, related work" }
  ],
  template: ({
    title,
    owner,
    purpose,
    horizon,
    boundary,

    participants,
    sampling,
    recruitment,
    incentives,
    access,

    consent,
    assent,
    publication,
    risk,
    data_governance,

    probe_kit,
    probe_activities,
    diary_prompts,
    entry_types,
    cadence,
    triggers,
    checkins,

    onboarding,
    instructions_link,
    practice_entry,

    tools,
    help_routes,
    translation,

    intake_schema,
    deid,
    storage,

    interim,
    memos_codes,
    co_analysis,

    themes,
    story_bank,
    principles,
    recs,

    measures,
    bias_risks,

    report_back,
    return_results,
    data_disposition,

    timeline,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i + 1}. ${x}`).join("\n");

    const flow = [
      "Prep ethics and access",
      "Recruit and onboard",
      "Seed probes and start diaries",
      "Check in and support",
      "Intake and de-identify",
      "Co-analyze and synthesize",
      "Report back and close the loop"
    ].join(" -> ");

    return [
      title && `Cultural Probes & Diary Studies plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and links:\n${ctx}`,

      "SECTION: Overview",
      owner && `Owner or team: ${owner}`,
      purpose && `Purpose and research questions:\n${purpose}`,
      horizon && `Horizon and dates: ${horizon}`,
      boundary && `Boundary and scope:\n${boundary}`,

      "SECTION: Participants and inclusion",
      participants && ["Participants and segments:", listify(participants)].join("\n"),
      sampling && `Sampling frame and quotas:\n${sampling}`,
      recruitment && `Recruitment channels and scripts:\n${recruitment}`,
      incentives && `Incentives and payment plan:\n${incentives}`,
      access && `Access supports:\n${access}`,

      "SECTION: Ethics and governance",
      consent && `Consent and data rights:\n${consent}`,
      assent && `Assent for minors and guardians:\n${assent}`,
      publication && `Privacy tiers and publication:\n${publication}`,
      risk && `Risk and crisis protocol:\n${risk}`,
      data_governance && `Data governance and retention:\n${data_governance}`,

      "SECTION: Probe and diary design",
      probe_kit && `Probe kit contents:\n${probe_kit}`,
      probe_activities && ["Probe activities:", listify(probe_activities)].join("\n"),
      diary_prompts && `Diary entry prompts:\n${diary_prompts}`,
      entry_types && `Entry types allowed:\n${entry_types}`,
      cadence && `Cadence and duration: ${cadence}`,
      triggers && `Event triggers:\n${triggers}`,
      checkins && `Reminders and check-ins:\n${checkins}`,

      "SECTION: Onboarding and training",
      onboarding && `Orientation session plan:\n${onboarding}`,
      instructions_link && `Instruction sheet link: ${instructions_link}`,
      practice_entry && `Practice entry script:\n${practice_entry}`,

      "SECTION: Fieldwork operations",
      tools && `Channels and tools:\n${tools}`,
      help_routes && `Help and contact routes:\n${help_routes}`,
      translation && `Translation and transcription plan:\n${translation}`,

      "SECTION: Data handling",
      intake_schema && `Intake and tagging schema:\n${intake_schema}`,
      deid && `De-identification and suppression:\n${deid}`,
      storage && `File storage and backup:\n${storage}`,

      "SECTION: Interim sensemaking",
      interim && `Interim check-ins and reflections:\n${interim}`,
      memos_codes && `Analyst memoing and codes:\n${memos_codes}`,
      co_analysis && `Participant co-analysis session:\n${co_analysis}`,

      "SECTION: Synthesis and outputs",
      themes && `Themes and tensions:\n${themes}`,
      story_bank && ["Story bank and exemplars:", listify(story_bank)].join("\n"),
      principles && `Design principles and implications:\n${principles}`,
      recs && `Recommendations and opportunities:\n${recs}`,

      "SECTION: Measures and risks",
      measures && ["Signals and measures:", listify(measures)].join("\n"),
      bias_risks && `Bias and sampling risks:\n${bias_risks}`,

      "SECTION: Report back and closure",
      report_back && `Report back plan:\n${report_back}`,
      return_results && `Return of results and thanks:\n${return_results}`,
      data_disposition && `Data disposition:\n${data_disposition}`,

      "SECTION: Timeline",
      timeline && `Timeline and key dates: ${timeline}`,

      "Quick reference",
      flow,

      "Checklist:",
      "- [ ] Prompts are small, specific, and situated",
      "- [ ] Multimodal capture enabled with access supports funded",
      "- [ ] Consent, privacy tiers, and crisis routes are clear",
      "- [ ] Cadence and reminders agreed with participants",
      "- [ ] Intake, de-identification, and storage rules documented",
      "- [ ] Co-analysis or participant feedback integrated",
      "- [ ] Measures show completion, diversity coverage, and insight quality",
      "- [ ] Participant-first report back scheduled within 14 days"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "cultural probes diary studies longitudinal participant led prompts cadence multimodal consent privacy de-identification co-analysis report back template"
  }
},

{
  id: "opportunity_solution_tree",
  slug: "opportunity-solution-tree-outcomes-first",
  label: "Opportunity Solution Tree - Tie problems to outcomes to keep purpose tight",
  kind: "strategy",
  categories: [
    "strategy",
    "research",
    "product",
    "community",
    "operations"
  ],
  tags: [
    "type:framework",
    "use:discovery",
    "use:prioritization",
    "use:experimentation",
    "use:outcomes",
    "use:opportunities",
    "phase:explore",
    "phase:define",
    "phase:test",
    "topic:community",
    "level:beginner"
  ],
  use_cases: [
    "anchor discovery work to a single outcome metric",
    "turn research into a tree of opportunities before jumping to solutions",
    "design lean experiments to de risk assumptions",
    "decide what to build next with clear evidence",
    "avoid scope creep by pruning ideas that do not serve the outcome",
        "anchor discovery work to a single outcome metric",
    "turn research into a tree of opportunities before jumping to solutions",
    "design lean experiments to de-risk assumptions",
    "decide what to build next with clear evidence",
    "avoid scope creep by pruning ideas that do not serve the outcome",
    "map every user problem back to the bigger outcome you want to achieve",
    "separate opportunities from solutions so teams don’t fall in love with ideas",
    "make hidden assumptions visible and testable",
    "align cross-functional teams on one outcome goal",
    "show stakeholders how ideas connect to strategy",
    "turn messy user feedback into structured opportunity spaces",
    "trace which opportunities deliver the biggest outcome impact",
    "spot duplicate solutions that address the same need",
    "help prioritize experiments when resources are limited",
    "find the riskiest branch of the tree and test it first",
    "teach product teams how to stay outcome-focused",
    "document learning as you test and update the tree",
    "compare different outcome paths before investing",
    "use as a visual roadmap in strategy reviews",
    "adapt tree for community projects, not just products",
    "use in nonprofit settings to connect activities to mission outcomes",
    "make design sprints more focused on outcomes, less on features",
    "pair with OKRs to trace goals down to daily experiments",
    "apply in operations: tie process improvements to efficiency outcomes",
    "help avoid ‘pet projects’ that don’t link to outcomes",
    "clarify difference between customer pain vs. business pain",
    "map user journey pain points into opportunities on the tree",
    "trace how solving small frustrations can lead to larger change",
    "show how multiple solutions can address one opportunity",
    "prevent random idea dumps by structuring thinking",
    "use in workshops to align leadership around priorities",
    "teach students to connect problems, solutions, and results",
    "apply to civic projects: tie community asks to clear outcomes",
    "use in hackathons to keep energy directed toward impact",
    "adapt for healthcare to connect interventions to health outcomes",
    "apply in education to link teaching methods to student outcomes",
    "for startups: avoid building cool tech with no purpose",
    "for teams: stop saying yes to everything, focus on outcome paths",
    "use with volunteers: connect community efforts to results",
    "document trade-offs when two outcomes conflict",
    "help funders see why a solution matters through outcomes",
    "keep track of ‘failed’ solutions and what they taught",
    "create transparency: anyone can trace why this solution matters",
    "make retrospectives more useful: tie learning back to the tree",
    "use trees as living documents in Notion or Miro",
    "make it fun for kids: ‘tree of problems and answers’ to homework"
  ],
  boosters: [
    "Name one outcome for this cycle. If you need two outcomes, run two trees.",
    "Write opportunities as needs in context. Avoid solution words.",
    "Score evidence strength. Favor problems with strong signals from interviews or data.",
    "Separate desirability, feasibility, and viability risks. Test the scariest first.",
    "Time box experiments and define success signals before you start.",
    "Close the loop. Share a brief that shows what you learned and what you will do next."
  ],
  definition: "A visual way to connect one outcome to the opportunities that block it, then to solution ideas and experiments. Popularized by Teresa Torres for continuous discovery.",
  help: "Fill the outcome and metric, list opportunities from interviews and data, attach solution ideas to each opportunity, and plan experiments with clear hypotheses and success criteria. Track evidence, decisions, and next bets.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., Outcome tree for Eastside onboarding" },
    { label: "Owner or steward", key: "owner", type: "text", ph: "e.g., Discovery lead or community steward" },
    { label: "Horizon", key: "horizon", type: "text", ph: "e.g., 6 to 12 weeks" },
    { label: "Purpose and scope", key: "purpose", type: "textarea", ph: "Why this tree and where it applies" },

    // Outcome
    { label: "Outcome statement", key: "outcome_stmt", type: "textarea", ph: "Improve X for Y by Z within T" },
    { label: "Outcome metric name and definition", key: "metric_def", type: "textarea", ph: "Name, formula, segment, source" },
    { label: "Baseline and target", key: "metric_targets", type: "text", ph: "Baseline 12 percent to 18 percent by Nov 30" },
    { label: "Guardrail metrics", key: "guardrails", type: "textarea", ph: "Quality, inclusion, safety, cost, support load" },

    // Discovery inputs
    {
      label: "Segments in focus",
      autofill: "persona->inline",
      itemLabel: "segment",
      itemType: "typeahead",
      key: "segments",
      max: 24,
      type: "repeater",
      ph: "e.g., Newcomers, night shift parents, elders, small biz owners"
    },
    { label: "Evidence sources", key: "evidence_src", type: "textarea", ph: "Interviews, logs, surveys, story circles, analytics" },
    { label: "Interview or story links", key: "interview_links", type: "textarea", ph: "Docs or board URLs" },

    // Opportunities
    { label: "Opportunity list (one per line: id - parent id or root - need in context - evidence strength 1 to 5 - notes)", key: "opportunities", type: "textarea", ph: "OP1 - root - cannot find meeting times on mobile - 4 - 7 of 10 interviews" },

    // Solutions
    { label: "Solution ideas (one per line: op id - idea name - sketch or link - notes)", key: "solutions", type: "textarea", ph: "OP1 - SMS time picker - figma link - quick to try" },

    // Assumptions
    { label: "Assumptions list (one per line: item - type D/F/V/E - risk high or med or low - evidence strength 1 to 5)", key: "assumptions", type: "textarea", ph: "People will reply to SMS - D - high - 2" },

    // Experiments
    { label: "Experiment backlog (one per line: solution - hypothesis - method - sample - success criteria - owner - by when)", key: "experiments", type: "textarea", ph: "SMS time picker - replies will increase signups - fake door - n=300 - 8 percent click rate - Alex - Aug 15" },
    { label: "Experiment methods allowed", key: "methods", type: "textarea", ph: "Fake door, prototype test, concierge, Wizard of Oz, A/B, usability, intercept interview" },

    // Prioritization
    { label: "Prioritization notes", key: "prioritization", type: "textarea", ph: "Pick highest outcome leverage with lowest effort and risk" },
    { label: "Now, next, later bets (one per line: bet - reason - owner)", key: "bets", type: "textarea", ph: "Now - OP1 SMS time picker - strongest evidence - Alex" },

    // Ethics and inclusion
    { label: "Consent and privacy", key: "consent", type: "textarea", ph: "Quoting rules, recording, anonymization, withdrawal" },
    { label: "Access supports", key: "access", type: "textarea", ph: "Interpreters and ASL, stipends, childcare, transport" },
    { label: "Equity and do no harm checks", key: "equity_checks", type: "textarea", ph: "Bias risks, exclusion risks, sensitive contexts" },

    // Links and visualization
    { label: "Tree link", key: "tree_link", type: "text", ph: "Miro or FigJam or Kumu URL" },
    { label: "Backlog link", key: "backlog_link", type: "text", ph: "Tracker or board URL" },

    // Logs and decisions
    { label: "Evidence log (one per line: date - finding - impact on tree)", key: "evidence_log", type: "textarea", ph: "Aug 5 - 6 of 8 could not find the link - increased OP1 strength" },
    { label: "Decisions log (one per line: date - decision - reason)", key: "decisions", type: "textarea", ph: "Aug 12 - drop OP4 - not tied to outcome" },

    // Measures and cadence
    { label: "Signals and measures", key: "measures", type: "textarea", ph: "Leading and lagging indicators beyond the outcome" },
    { label: "Discovery cadence", key: "cadence", type: "text", ph: "Weekly interviews, biweekly synthesis, monthly share back" },

    // Timeline and context
    { label: "Timeline", key: "timeline", type: "text", ph: "Prep 1 week, discovery 4 to 6 weeks, review and decide" },
    { label: "Context and links", key: "ctx", type: "textarea", ph: "Constraints, prior work, references" }
  ],
  template: ({
    title,
    owner,
    horizon,
    purpose,

    outcome_stmt,
    metric_def,
    metric_targets,
    guardrails,

    segments,
    evidence_src,
    interview_links,

    opportunities,
    solutions,
    assumptions,

    experiments,
    methods,

    prioritization,
    bets,

    consent,
    access,
    equity_checks,

    tree_link,
    backlog_link,

    evidence_log,
    decisions,

    measures,
    cadence,

    timeline,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i + 1}. ${x}`).join("\n");

    const flow = [
      "Choose one outcome and metric",
      "List opportunities from interviews and data",
      "Sketch solution ideas per opportunity",
      "Map assumptions and pick the riskiest",
      "Run small experiments with clear success criteria",
      "Log evidence and decisions and prune the tree",
      "Ship the next bet and review the outcome"
    ].join(" -> ");

    const legend = [
      "Legend",
      "D desirability, F feasibility, V viability, E ethical",
      "Evidence strength 1 weak to 5 strong"
    ].join("\n");

    return [
      title && `Opportunity Solution Tree plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and links:\n${ctx}`,

      "SECTION: Overview",
      owner && `Owner or steward: ${owner}`,
      horizon && `Horizon: ${horizon}`,
      purpose && `Purpose and scope:\n${purpose}`,

      "SECTION: Outcome",
      outcome_stmt && `Outcome statement:\n${outcome_stmt}`,
      metric_def && `Outcome metric definition:\n${metric_def}`,
      metric_targets && `Baseline and target: ${metric_targets}`,
      guardrails && `Guardrail metrics:\n${guardrails}`,

      "SECTION: Discovery inputs",
      segments && ["Segments in focus:", listify(segments)].join("\n"),
      evidence_src && `Evidence sources:\n${evidence_src}`,
      interview_links && `Interview or story links:\n${interview_links}`,

      "SECTION: Opportunities",
      opportunities && ["Opportunity list:", listify(opportunities)].join("\n"),

      "SECTION: Solutions",
      solutions && ["Solution ideas:", listify(solutions)].join("\n"),

      "SECTION: Assumptions",
      assumptions && ["Assumptions list:", listify(assumptions)].join("\n"),
      legend,

      "SECTION: Experiments",
      methods && `Experiment methods allowed:\n${methods}`,
      experiments && ["Experiment backlog:", listify(experiments)].join("\n"),

      "SECTION: Prioritization",
      prioritization && `Prioritization notes:\n${prioritization}`,
      bets && ["Now, next, later bets:", listify(bets)].join("\n"),

      "SECTION: Ethics and inclusion",
      consent && `Consent and privacy:\n${consent}`,
      access && `Access supports:\n${access}`,
      equity_checks && `Equity and do no harm checks:\n${equity_checks}`,

      "SECTION: Links and visualization",
      tree_link && `Tree link: ${tree_link}`,
      backlog_link && `Backlog link: ${backlog_link}`,

      "SECTION: Logs and decisions",
      evidence_log && ["Evidence log:", listify(evidence_log)].join("\n"),
      decisions && ["Decisions log:", listify(decisions)].join("\n"),

      "SECTION: Measures and cadence",
      measures && ["Signals and measures:", listify(measures)].join("\n"),
      cadence && `Discovery cadence: ${cadence}`,

      "SECTION: Timeline",
      timeline && `Timeline: ${timeline}`,

      "Quick reference",
      flow,

      "Checklist:",
      "- [ ] One outcome and metric are named",
      "- [ ] Opportunities are needs in context with evidence strength",
      "- [ ] Solutions attach to opportunities not the other way around",
      "- [ ] Assumptions typed D F V E with risk level",
      "- [ ] Experiments have clear hypotheses and success criteria",
      "- [ ] Bets are chosen based on outcome leverage and risk",
      "- [ ] Logs show evidence and decisions and pruning",
      "- [ ] Share back brief scheduled within 14 days"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "Opportunity Solution Tree outcome metric opportunities solutions experiments assumptions desirability feasibility viability ethical Teresa Torres continuous discovery template"
  }
},

{
  id: "raci_drci_consent",
  slug: "raci-drci-consent-based-tweaks",
  label: "RACI or DRCI - Clarify roles without muting voice",
  kind: "governance",
  categories: [
    "governance",
    "operations",
    "community",
    "strategy",
    "delivery"
  ],
  tags: [
    "type:framework",
    "use:decision-clarity",
    "use:roles",
    "use:equity",
    "use:process",
    "phase:plan",
    "phase:decide",
    "phase:operate",
    "topic:community",
    "level:beginner"
  ],
  use_cases: [
    "make decision rights explicit without silencing affected groups",
    "speed up delivery while keeping informed consent where needed",
    "reduce meeting load by clarifying who is Consulted vs Informed",
    "surface shadow work and handoff gaps",
    "add review dates so decisions are safe to try and revisitable",
     "make decision rights explicit without silencing affected groups",
    "speed up delivery while keeping informed consent where needed",
    "reduce meeting load by clarifying who is Consulted vs Informed",
    "surface shadow work and handoff gaps",
    "add review dates so decisions are safe to try and revisitable",
    "help a project team figure out who actually makes the final call",
    "clarify roles for cross-department initiatives",
    "prevent confusion over who approves vs. who advises",
    "map accountabilities to reduce dropped tasks",
    "adapt for nonprofits to honor community input",
    "document volunteer roles in a transparent way",
    "create fairness by separating power from information rights",
    "avoid bottlenecks caused by unclear decision authority",
    "explain to stakeholders why they’re informed, not consulted",
    "train new staff by showing clear RACI/DRCI examples",
    "use in agile teams to clarify roles sprint by sprint",
    "set up governance for coalition work",
    "co-create role clarity with marginalized groups included",
    "resolve conflict when two people think they’re ‘Responsible’",
    "adapt for student groups to make fair decisions",
    "apply in startups to balance speed with inclusion",
    "use for board vs. staff clarity in nonprofits",
    "document who owns a budget vs. who advises spending",
    "show where too many ‘Approvers’ slow things down",
    "audit equity by tracking whose voices get Consulted",
    "layer consent practices onto traditional RACI charts",
    "help distributed teams coordinate without endless calls",
    "adapt to civic processes so residents see where they fit",
    "compare RACI vs. DRCI for more consent-based practices",
    "catch duplicate ‘Responsible’ roles that cause confusion",
    "track how decisions shift over time as roles evolve",
    "tie RACI/DRCI maps to performance reviews or OKRs",
    "pair with service design blueprints to map roles to steps",
    "spot ghost roles where no one is Accountable",
    "simplify onboarding with a one-page RACI",
    "design temporary roles for short-term projects",
    "check for equity in who gets ‘C’ and who gets ‘I’",
    "highlight over-consulted people burning out",
    "use in conflict resolution: who had what role?",
    "decide when consent is required vs. just information",
    "silly version: who’s in charge of cleaning the break room?",
    "kid version: who decides bedtime, who gets asked, who just hears?"
  ],
  boosters: [
    "Localize the letters. If Decider fits better than Accountable, switch to DRCI.",
    "Write consent gates clearly. Define where affected groups must consent or can object.",
    "Publish a living matrix and keep it small. 20 to 40 named decisions is plenty.",
    "Name access supports for participation. Interpreters, captions, stipends, and timing.",
    "Record reasons in plain language. People accept outcomes they understand.",
    "Add expiry dates. Policy and roles are perishable."
  ],
  definition: "A lightweight role and decision map. RACI means Responsible, Accountable, Consulted, Informed. DRCI is Decider, Responsible, Consulted, Informed. This version adds consent gates and speak up rights so clarity does not come at the cost of voice.",
  help: "Fill scope, variant, consent rules, role roster, and the decision matrix. For each decision list who decides or is accountable, who is responsible to execute, who must be consulted, and who is informed. Add consent gates for affected groups, review dates, and access supports.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., Decision clarity for Eastside portfolio" },
    { label: "Owner or steward", key: "owner", type: "text", ph: "e.g., Governance steward" },
    { label: "Purpose and scope", key: "purpose", type: "textarea", ph: "Why we are clarifying and what is in scope" },
    { label: "Horizon and review date", key: "horizon", type: "text", ph: "e.g., Pilot to 90 days then review" },

    // Variant and vocabulary
    { label: "Variant", key: "variant", type: "text", ph: "RACI or DRCI or custom" },
    { label: "Letter meanings", key: "letters", type: "textarea", ph: "R - does the work. A or D - ultimately answers or decides. C - must be consulted before decision. I - is informed after." },
    { label: "Local terms and definitions", key: "local_terms", type: "textarea", ph: "Replace jargon with plain local words" },

    // Inclusion and ethics
    {
      label: "Stakeholders and affected groups",
      autofill: "persona->inline",
      itemLabel: "group",
      itemType: "typeahead",
      key: "stakeholders",
      max: 24,
      type: "repeater",
      ph: "e.g., Renters, elders, youth, disabled residents, staff, partners"
    },
    { label: "Access supports and compensation", key: "access", type: "textarea", ph: "Interpreters, captions, transport, stipends, childcare, sensory supports" },
    { label: "Consent and quoting rules", key: "consent_rules", type: "textarea", ph: "What requires consent, quoting and anonymity, retention and deletion" },
    { label: "Data governance and publication tiers", key: "data_governance", type: "textarea", ph: "Public, community only, restricted, not for release" },

    // Roles and roster
    { label: "Role roster and people - one per line", key: "roles", type: "textarea", ph: "Role - person or seat - purpose - limits - term - review date" },
    { label: "Delegation and limits", key: "delegation", type: "textarea", ph: "What can be delegated and what cannot" },

    // Consent based tweaks
    { label: "Consent gates - one per line", key: "consent_gates", type: "textarea", ph: "Area or decision type - groups that must consent - objection test - escalation path" },
    { label: "Speak up rights", key: "speak_up", type: "textarea", ph: "Who can raise a reasoned objection, how, and within what time window" },
    { label: "Objection test", key: "objection_test", type: "textarea", ph: "Reasoned, tied to purpose or harm, proposes conditions to be safe to try" },

    // Decision matrix
    { label: "Decision list - one per line", key: "decisions", type: "textarea", ph: "Decision - domain - A or D - R - C list - I list - consent gate if any - evidence link - review date" },
    { label: "Escalation and algedonic alerts", key: "escalation", type: "textarea", ph: "When to escalate quickly and to whom" },
    { label: "Handoffs and records", key: "handoffs", type: "textarea", ph: "Where decisions are logged and how handoffs happen" },

    // Meeting cadences
    { label: "Governance cadence", key: "gov_cadence", type: "text", ph: "e.g., monthly 60 min for policy decisions" },
    { label: "Operations cadence", key: "ops_cadence", type: "text", ph: "e.g., weekly 30 min for delivery coordination" },

    // Checks and risks
    { label: "Shadow work scan", key: "shadow_work", type: "textarea", ph: "Unpaid or hidden tasks and who carries them" },
    { label: "Risks and mitigations", key: "risks", type: "textarea", ph: "Token consultation, overload, rubber stamping, drift" },

    // Measures and learning
    { label: "Signals and measures", key: "measures", type: "textarea", ph: "Time to decision, percent decisions with required consent logged, talk time parity, rework rate" },
    { label: "Review and expiry rules", key: "review_rules", type: "textarea", ph: "Default expiry and retro cadence" },

    // Timeline and links
    { label: "Timeline and rollout steps", key: "timeline", type: "text", ph: "Pilot, publish, train, review" },
    { label: "Records and board links", key: "links", type: "textarea", ph: "Matrix doc, minutes, policy board, issue tracker" },
    { label: "Context and notes", key: "ctx", type: "textarea", ph: "Constraints, references, related frameworks" }
  ],
  template: ({
    title,
    owner,
    purpose,
    horizon,

    variant,
    letters,
    local_terms,

    stakeholders,
    access,
    consent_rules,
    data_governance,

    roles,
    delegation,

    consent_gates,
    speak_up,
    objection_test,

    decisions,
    escalation,
    handoffs,

    gov_cadence,
    ops_cadence,

    shadow_work,
    risks,

    measures,
    review_rules,

    timeline,
    links,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/)
      .map(x => x.trim())
      .filter(Boolean)
      .map((x, i) => `${i + 1}. ${x}`)
      .join("\n");

    const flow = [
      "Pick variant and local words",
      "Name consent gates and speak up rights",
      "List roles and limits",
      "Publish small decision matrix",
      "Run on clear cadences",
      "Track signals and review on expiry"
    ].join(" -> ");

    return [
      title && `RACI or DRCI plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and notes:\n${ctx}`,

      "SECTION: Overview",
      owner && `Owner or steward: ${owner}`,
      purpose && `Purpose and scope:\n${purpose}`,
      horizon && `Horizon and review date: ${horizon}`,

      "SECTION: Variant and vocabulary",
      variant && `Variant: ${variant}`,
      letters && `Letter meanings:\n${letters}`,
      local_terms && `Local terms and definitions:\n${local_terms}`,

      "SECTION: Inclusion and ethics",
      stakeholders && ["Stakeholders and affected groups:", listify(stakeholders)].join("\n"),
      access && `Access supports and compensation:\n${access}`,
      consent_rules && `Consent and quoting rules:\n${consent_rules}`,
      data_governance && `Data governance and publication tiers:\n${data_governance}`,

      "SECTION: Roles and roster",
      roles && ["Role roster and people:", listify(roles)].join("\n"),
      delegation && `Delegation and limits:\n${delegation}`,

      "SECTION: Consent based tweaks",
      consent_gates && ["Consent gates:", listify(consent_gates)].join("\n"),
      speak_up && `Speak up rights:\n${speak_up}`,
      objection_test && `Objection test:\n${objection_test}`,

      "SECTION: Decision matrix",
      decisions && ["Decision list:", listify(decisions)].join("\n"),
      escalation && `Escalation and algedonic alerts:\n${escalation}`,
      handoffs && `Handoffs and records:\n${handoffs}`,

      "SECTION: Cadences",
      gov_cadence && `Governance cadence: ${gov_cadence}`,
      ops_cadence && `Operations cadence: ${ops_cadence}`,

      "SECTION: Checks and risks",
      shadow_work && `Shadow work scan:\n${shadow_work}`,
      risks && `Risks and mitigations:\n${risks}`,

      "SECTION: Measures and learning",
      measures && ["Signals and measures:", listify(measures)].join("\n"),
      review_rules && `Review and expiry rules:\n${review_rules}`,

      "SECTION: Timeline and links",
      timeline && `Timeline and rollout steps: ${timeline}`,
      links && ["Records and board links:", listify(links)].join("\n"),

      "Quick reference",
      flow,

      "Checklist:",
      "- [ ] Variant chosen and terms localized",
      "- [ ] Consent gates and speak up rights are published",
      "- [ ] Roles and limits are clear and time boxed",
      "- [ ] Decision matrix small, visible, and linked to evidence",
      "- [ ] Cadences scheduled and minutes published",
      "- [ ] Shadow work and access supports reviewed",
      "- [ ] Measures tracked and expiry dates honored",
      "- [ ] Community brief within 14 days"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "RACI DRCI Responsible Accountable Decider Consulted Informed consent gates speak up rights decision matrix governance clarity equity template"
  }
},


{
  id: "wardley_mapping",
  slug: "wardley-mapping-capabilities-evolution",
  label: "Wardley Mapping - Map capabilities and evolution to protect community advantage",
  kind: "strategy",
  categories: [
    "strategy",
    "systems",
    "community",
    "operations",
    "product"
  ],
  tags: [
    "type:framework",
    "use:capabilities",
    "use:portfolio",
    "use:landscape",
    "use:prioritization",
    "use:governance",
    "phase:explore",
    "phase:plan",
    "phase:operate",
    "topic:community",
    "level:advanced"
  ],
  use_cases: [
    "make a shared picture of users, needs, and the value chain",
    "place components along evolution to choose the right methods",
    "spot duplication, inertia, and where to open or standardize",
    "plan plays and investments that build community advantage",
    "connect discovery and delivery across pioneers, settlers, and town planners",
    "make a shared picture of users, needs, and the value chain",
    "place components along evolution to choose the right methods",
    "spot duplication, inertia, and where to open or standardize",
    "plan plays and investments that build community advantage",
    "connect discovery and delivery across pioneers, settlers, and town planners",
    "map your tech stack to see what’s custom vs commodity",
    "decide where to innovate vs outsource",
    "see which community services need standardization",
    "spot bottlenecks in the value chain",
    "explain why some tools should be shared infra, not custom builds",
    "map where volunteer energy is best used",
    "decide what parts of a program need experimentation",
    "figure out when to stop reinventing the wheel",
    "show stakeholders why migration is necessary",
    "analyze supply chains for fragility and duplication",
    "map the maturity of community practices",
    "visualize partnerships and shared infrastructure",
    "explain tech debt vs strategic bets in plain view",
    "align a board on where to cut vs invest",
    "diagnose why a project feels chaotic vs stable",
    "tie funding proposals to clear landscape gaps",
    "train new leaders on strategic thinking visually",
    "compare maps across teams to find overlap",
    "decide what should stay open source vs closed",
    "design fair shared services across neighborhoods",
    "spot early signals of disruption and commoditization",
    "support advocacy with evidence of dependency",
    "map people’s roles alongside technical components",
    "see where rules and governance lag behind reality",
    "help founders avoid over-investing in utilities",
    "use maps to defend budgets with clarity",
    "trace how innovations become commodities over time",
    "plan data governance by maturity stage",
    "spot fragile one-person dependencies",
    "show communities how their assets evolve",
    "teach kids why not everything should be custom-built"
  ],
  boosters: [
    "Start with users and needs in plain language. Draw the map from the user outward.",
    "Place first, debate later. You can refine positions once the landscape exists.",
    "Use local language for stages. Teach with real artifacts and examples.",
    "Choose doctrine before gameplay. Good play on bad doctrine still loses.",
    "Prefer small, testable moves with short review dates over grand plans.",
    "Publish a simple brief and show what changed because of the map."
  ],
  definition: "Wardley Mapping is a way to make strategy visible. It begins with user needs and a value chain, then places components on an evolution axis from Genesis to Custom Built to Product to Commodity or Utility. With climate patterns, doctrine, and gameplay, you choose moves that improve position and protect community advantage.",
  help: "Fill users and needs, list components and dependencies, place components by evolution and visibility, note climate patterns and doctrine choices, then pick plays and investments. Record risks, measures, and review cadence.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., Wardley map for Eastside engagement" },
    { label: "Owner or steward", key: "owner", type: "text", ph: "e.g., Strategy steward" },
    { label: "Purpose and scope", key: "purpose", type: "textarea", ph: "Why we are mapping and where it applies" },
    { label: "Horizon", key: "horizon", type: "text", ph: "e.g., 1 to 3 quarters" },

    // Boundary and context
    { label: "Boundary and exclusions", key: "boundary", type: "textarea", ph: "What is in scope and what is out" },
    { label: "Assumptions and constraints", key: "assumptions", type: "textarea", ph: "Funding, policy, tech limits, time windows" },

    // Users and needs
    {
      label: "Users and segments",
      autofill: "persona->inline",
      itemLabel: "user or segment",
      itemType: "typeahead",
      key: "users",
      max: 24,
      type: "repeater",
      ph: "Residents, volunteers, staff, partners, small businesses"
    },
    { label: "Needs list - one per line", key: "needs", type: "textarea", ph: "Need statement - segment - criticality 1 to 5 - evidence link" },

    // Components and chain
    { label: "Components - one per line", key: "components", type: "textarea", ph: "id - name - type pipeline or platform or activity or data - serves need or component - stage G or Cb or P or U - visibility 0.0 to 1.0 - owner - notes" },
    { label: "Dependencies - one per line", key: "links", type: "textarea", ph: "src id -> dst id - strength 1 to 5 - notes" },
    { label: "Interfaces and standards", key: "interfaces", type: "textarea", ph: "Contracts, APIs, protocols that stabilize handoffs" },
    { label: "Map link", key: "map_link", type: "text", ph: "Miro or FigJam or Kumu URL" },

    // Evolution language
    { label: "Local stage descriptions", key: "stage_lang", type: "textarea", ph: "Genesis - few examples and uncertainty. Custom Built - tailored. Product or Rental - off the shelf. Commodity or Utility - ubiquitous and cheap." },
    { label: "Anticipated evolution notes", key: "evolution_notes", type: "textarea", ph: "What is likely to commoditize, what will move to product, what might regress" },
    { label: "Inertia sources", key: "inertia", type: "textarea", ph: "Financial, political, cultural, technical reasons placement will not change quickly" },

    // Climate, doctrine, gameplay
    { label: "Climate patterns seen", key: "climate", type: "textarea", ph: "Ubiquity increases, efficiency improves with evolution, inertia, coevolution, economic cycles" },
    { label: "Doctrine choices", key: "doctrine", type: "textarea", ph: "Focus on user needs, challenge assumptions, small empowered teams, use appropriate methods by stage, bias for transparency" },
    { label: "Gameplay options", key: "plays", type: "textarea", ph: "Open approach, standardize, outsource, build a platform, leverage ecosystem, educate, pioneer, acquire, retire" },

    // Delivery approach by stage
    { label: "Methods by stage", key: "methods", type: "textarea", ph: "Genesis - discovery, spikes. Custom - agile product. Product - lean delivery. Commodity - utility optimization and SRE" },
    { label: "Pioneers settlers town planners allocation", key: "pst", type: "textarea", ph: "Percent allocation and teams for each stage" },

    // Portfolio and moves
    { label: "Now next later moves - one per line", key: "moves", type: "textarea", ph: "Now - standardize notifications to reduce toil. Next - open data schema. Later - outsource SMS gateway" },
    { label: "Investments and owners - one per line", key: "investments", type: "textarea", ph: "Move - owner - resources - start - check date - success signal" },
    { label: "Open vs proprietary choices", key: "open_prop", type: "textarea", ph: "Where to open for ecosystem advantage and where to keep proprietary" },
    { label: "Partner and ecosystem plays", key: "ecosystem", type: "textarea", ph: "Allies, complementors, shared standards" },

    // Measures and alerts
    { label: "Signals and measures", key: "measures", type: "textarea", ph: "Lead time, reliability, cost per transaction, adoption, equity, satisfaction" },
    { label: "Algedonic alerts and thresholds", key: "alerts", type: "textarea", ph: "When to escalate decisions or pause a move" },
    { label: "Review cadence", key: "cadence", type: "text", ph: "Monthly landscape refresh, quarterly doctrine check" },

    // Risks and ethics
    { label: "Risks and mitigations", key: "risks", type: "textarea", ph: "Lock in, vendor risk, exclusion, fragility, governance gaps" },
    { label: "Access supports and ethics", key: "ethics", type: "textarea", ph: "Interpreters and ASL, stipend policy, privacy, do no harm" },

    // Evidence and logs
    { label: "Evidence sources", key: "evidence", type: "textarea", ph: "Docs, interviews, metrics, market signals" },
    { label: "Decisions log - one per line", key: "decisions", type: "textarea", ph: "Date - decision - reason - link" },
    { label: "Experiments log - one per line", key: "experiments", type: "textarea", ph: "Date - hypothesis - method - result - effect on map" },

    // Timeline and context
    { label: "Timeline", key: "timeline", type: "text", ph: "Prep 1 week, mapping 1 to 2 sessions, review in 30 days" },
    { label: "Context and links", key: "ctx", type: "textarea", ph: "Prior maps, constraints, references" }
  ],
  template: ({
    title,
    owner,
    purpose,
    horizon,

    boundary,
    assumptions,

    users,
    needs,

    components,
    links,
    interfaces,
    map_link,

    stage_lang,
    evolution_notes,
    inertia,

    climate,
    doctrine,
    plays,

    methods,
    pst,

    moves,
    investments,
    open_prop,
    ecosystem,

    measures,
    alerts,
    cadence,

    risks,
    ethics,

    evidence,
    decisions,
    experiments,

    timeline,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x,i)=>`${i + 1}. ${x}`).join("\n");

    const axes = [
      "Y axis: Visibility from the user - high at the top and low at the bottom",
      "X axis: Evolution - Genesis -> Custom Built -> Product or Rental -> Commodity or Utility"
    ].join(" | ");

    const flow = [
      "Name users and needs",
      "List components and dependencies",
      "Place components by visibility and evolution",
      "Note climate patterns and adopt doctrine",
      "Choose plays and investments by stage",
      "Set measures, alerts, and review cadence",
      "Publish a brief and update as the landscape shifts"
    ].join(" -> ");

    return [
      title && `Wardley map plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and links:\n${ctx}`,

      "SECTION: Overview",
      owner && `Owner or steward: ${owner}`,
      purpose && `Purpose and scope:\n${purpose}`,
      horizon && `Horizon: ${horizon}`,
      boundary && `Boundary and exclusions:\n${boundary}`,
      assumptions && `Assumptions and constraints:\n${assumptions}`,

      "SECTION: Users and needs",
      users && ["Users and segments:", listify(users)].join("\n"),
      needs && ["Needs list:", listify(needs)].join("\n"),

      "SECTION: Value chain",
      components && ["Components:", listify(components)].join("\n"),
      links && ["Dependencies:", listify(links)].join("\n"),
      interfaces && `Interfaces and standards:\n${interfaces}`,
      map_link && `Map link: ${map_link}`,
      `Axes: ${axes}`,

      "SECTION: Evolution language and inertia",
      stage_lang && `Local stage descriptions:\n${stage_lang}`,
      evolution_notes && `Anticipated evolution notes:\n${evolution_notes}`,
      inertia && `Inertia sources:\n${inertia}`,

      "SECTION: Climate, doctrine, gameplay",
      climate && `Climate patterns seen:\n${climate}`,
      doctrine && `Doctrine choices:\n${doctrine}`,
      plays && `Gameplay options:\n${plays}`,

      "SECTION: Delivery approach and roles",
      methods && `Methods by stage:\n${methods}`,
      pst && `Pioneers settlers town planners allocation:\n${pst}`,

      "SECTION: Portfolio moves",
      moves && ["Now next later moves:", listify(moves)].join("\n"),
      investments && ["Investments and owners:", listify(investments)].join("\n"),
      open_prop && `Open vs proprietary choices:\n${open_prop}`,
      ecosystem && `Partner and ecosystem plays:\n${ecosystem}`,

      "SECTION: Measures and alerts",
      measures && ["Signals and measures:", listify(measures)].join("\n"),
      alerts && `Algedonic alerts and thresholds:\n${alerts}`,
      cadence && `Review cadence: ${cadence}`,

      "SECTION: Risks and ethics",
      risks && `Risks and mitigations:\n${risks}`,
      ethics && `Access supports and ethics:\n${ethics}`,

      "SECTION: Evidence and logs",
      evidence && `Evidence sources:\n${evidence}`,
      decisions && ["Decisions log:", listify(decisions)].join("\n"),
      experiments && ["Experiments log:", listify(experiments)].join("\n"),

      "SECTION: Timeline",
      timeline && `Timeline: ${timeline}`,

      "Quick reference",
      flow,

      "Checklist:",
      "- [ ] Users and needs are clear and in plain language",
      "- [ ] Components and dependencies listed with evidence",
      "- [ ] Each component placed by visibility and evolution",
      "- [ ] Climate patterns noted and doctrine chosen",
      "- [ ] Plays tied to stage with owners and dates",
      "- [ ] Measures and alerts defined with a review cadence",
      "- [ ] Open vs proprietary choices explicit and ethical",
      "- [ ] Brief published and map refreshed on cadence"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "Wardley Mapping user needs value chain evolution Genesis Custom Product Commodity climate doctrine gameplay pioneers settlers town planners community strategy template"
  }
},




{
  id: "backcasting_future_to_now",
  slug: "backcasting-start-from-future-plan-backwards",
  label: "Backcasting - Start from the desired future state and plan backwards",
  kind: "strategy",
  categories: [
    "strategy",
    "planning",
    "community",
    "design",
    "operations"
  ],
  tags: [
    "type:framework",
    "use:roadmap",
    "use:alignment",
    "use:prioritization",
    "use:equity",
    "phase:plan",
    "phase:decide",
    "phase:act",
    "topic:community",
    "level:beginner"
  ],
  use_cases: [
    "name a vivid future state and trace the minimum path back to today",
    "align teams and community on outcomes before choosing activities",
    "identify preconditions, enablers, and policy changes required",
    "sequence no regret moves with short reviews and feedback loops",
    "expose risks and forks where choices change the path",
     "name a vivid future state and trace the minimum path back to today",
    "align teams and community on outcomes before choosing activities",
    "identify preconditions, enablers, and policy changes required",
    "sequence no regret moves with short reviews and feedback loops",
    "expose risks and forks where choices change the path",
    "plan for climate resilience by envisioning a sustainable community 20 years out",
    "design education reforms starting from an inclusive school system in 2035",
    "map policy reforms needed for universal healthcare by 2040",
    "plan a nonprofit campaign around what success looks like in 10 years",
    "help a city council set a 2050 net-zero goal and backcast actions to 2025",
    "decide how to transition from fossil fuels to renewables in stages",
    "set a personal retirement vision and backcast financial milestones",
    "plan a family’s move toward debt-free living by working backward from the goal",
    "figure out how to publish a book by a set date by planning backwards",
    "organize a graduation party by starting from the event day and mapping steps back",
    "use in software teams to decide what’s needed for a launch date",
    "align a startup’s milestones with investor expectations backwards from IPO",
    "map the end state of a product and design feature sprints in reverse",
    "structure a health program to reach equity targets by a certain year",
    "show a church or community org how to achieve housing stability goals",
    "map needed partnerships and funding steps for a nonprofit vision",
    "teach students to work backwards from final exams to daily study plans",
    "help activists plan campaign wins by backcasting from policy change",
    "plan disaster preparedness by envisioning full resilience after a crisis",
    "set Indigenous land stewardship outcomes and work back to today",
    "visualize future inclusive hiring practices and design HR steps back",
    "plan digital transformation from an ideal future org setup",
    "decide household chores backwards from a ‘clean house by Saturday’ goal",
    "a kid planning: ‘I want to be an astronaut’ → map steps back from NASA",
    "‘I want to be a YouTuber’ → map gear, practice, and uploads back from success",
    "what will my future look like"
  ],
  boosters: [
    "Write the future in present tense. Make it observable and testable.",
    "Anchor on equity and access. For each milestone ask who benefits and who decides.",
    "Limit to the vital few outcomes. Everything else is supporting detail.",
    "Prefer reversible steps with clear review dates. Safe to try beats perfect.",
    "Track leading signals, not just lagging results. Make them visible on one page.",
    "Publish a plain language brief and show what changed because of the plan."
  ],
  definition: "Backcasting begins by describing a concrete future state at a specific date. You then work backward to identify milestones, preconditions, and actions that make the future feasible. It aligns purpose, policy, and practice without locking into premature solutions.",
  help: "Fill ethics, boundary, and the future snapshot first. Add success signals, guardrails, and assumptions. Backcast milestones in reverse order, name preconditions, enablers, blockers, and no regret moves. Convert to experiments with owners, dates, and measures. Keep a simple review cadence.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., Backcast: Inclusive Participation by 2026" },
    { label: "Owner or steward", key: "owner", type: "text", ph: "e.g., Community Council planning steward" },
    { label: "Purpose and scope", key: "purpose", type: "textarea", ph: "Why we are backcasting and where it applies" },
    { label: "Horizon and future date", key: "horizon", type: "text", ph: "e.g., Future date Dec 2026 with quarterly checks" },
    { label: "Boundary and exclusions", key: "boundary", type: "textarea", ph: "In scope vs out of scope" },

    // People and inclusion
    {
      label: "Stakeholders and participants",
      autofill: "persona->inline",
      itemLabel: "stakeholder",
      itemType: "typeahead",
      key: "stakeholders",
      max: 28,
      type: "repeater",
      ph: "e.g., Youth, elders, renters, disabled residents, staff, partners"
    },
    { label: "Access supports and compensation", key: "access", type: "textarea", ph: "Stipends, interpreters or ASL, transport, childcare, sensory supports" },

    // Ethics and governance
    { label: "Consent and quoting rules", key: "consent", type: "textarea", ph: "Quoting, anonymity, retention and deletion" },
    { label: "Data governance and publication tiers", key: "data_governance", type: "textarea", ph: "Public | Community only | Restricted | Not for release" },

    // Desired future
    { label: "Future state snapshot", key: "future_snapshot", type: "textarea", ph: "Describe the world on the future date. Outcomes, equity, experience, environment." },
    { label: "Success signals and metrics", key: "future_signals", type: "textarea", ph: "Belonging, participation parity, service outcomes, reliability, trust" },
    { label: "Guardrails and red lines", key: "guardrails", type: "textarea", ph: "What must not be compromised while pursuing the future" },
    { label: "Assumptions and uncertainties", key: "assumptions", type: "textarea", ph: "What must hold true. What is unknown and will be tested." },
    { label: "Drivers and constraints", key: "drivers_constraints", type: "textarea", ph: "External trends and internal limits to respect" },

    // Backcasting ladder
    { label: "Milestones backcast high to low (one per line: date - milestone - evidence you would see)", key: "milestones", type: "textarea", ph: "2026-10-01 - 70% talk time parity - monthly dashboard shows parity" },
    { label: "Preconditions per milestone", key: "preconditions", type: "textarea", ph: "Policy, capacity, relationships, tech, budget needed" },
    { label: "Enablers", key: "enablers", type: "textarea", ph: "Assets, partners, capabilities that make the path feasible" },
    { label: "Blockers", key: "blockers", type: "textarea", ph: "Risks, policies, bottlenecks, missing roles" },
    { label: "No regret moves now", key: "no_regrets", type: "textarea", ph: "Actions worth doing in any scenario" },

    // Options and pathways
    { label: "Pathways options (one per line: path name - short description - key risk - key advantage)", key: "pathways", type: "textarea", ph: "Community first rollout - slower but deeper trust - backlash risk low" },
    { label: "Decision gates and forks", key: "decision_gates", type: "textarea", ph: "Dates or signals that determine which path to take" },

    // Experiments and policy tweaks
    { label: "Experiments and policy tweaks (one per line: test - owner - resources - start - check date - success signals)", key: "experiments", type: "textarea", ph: "SMS reminders pilot - Comms - $2k - Jul - Aug 15 - +20% attendance" },

    // Ownership and cadence
    { label: "Owners and RACI", key: "owners", type: "textarea", ph: "Area - R/A/C/I names or roles" },
    { label: "Review cadence and learning loops", key: "cadence", type: "text", ph: "Monthly reviews, quarterly portfolio check, 60 day experiment cycles" },

    // Measures and risks
    { label: "Leading indicators", key: "leading", type: "textarea", ph: "Early signals that predict progress" },
    { label: "Lagging indicators", key: "lagging", type: "textarea", ph: "Outcome measures that confirm impact" },
    { label: "Risks and mitigations", key: "risks", type: "textarea", ph: "Backlash, overload, tokenism, delivery drift, budget shocks" },

    // Timeline and reporting
    { label: "Reverse timeline by quarter", key: "reverse_timeline", type: "textarea", ph: "Q4 2026, Q3 2026, ... Q1 2025, Q4 2024 with milestone notes" },
    { label: "Report back plan", key: "report_back", type: "textarea", ph: "Community first brief in 14 days. Bilingual. Before and after examples." },
    { label: "Context and links", key: "ctx", type: "textarea", ph: "References, constraints, prior plans" }
  ],
  template: ({
    title,
    owner,
    purpose,
    horizon,
    boundary,

    stakeholders,
    access,

    consent,
    data_governance,

    future_snapshot,
    future_signals,
    guardrails,
    assumptions,
    drivers_constraints,

    milestones,
    preconditions,
    enablers,
    blockers,
    no_regrets,

    pathways,
    decision_gates,

    experiments,

    owners,
    cadence,

    leading,
    lagging,
    risks,

    reverse_timeline,
    report_back,
    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/)
      .map(x => x.trim())
      .filter(Boolean)
      .map((x, i) => `${i + 1}. ${x}`)
      .join("\n");

    const flow = [
      "Describe the future state with success signals",
      "List guardrails and key assumptions",
      "Backcast milestones in reverse order",
      "Name preconditions, enablers, blockers",
      "Choose pathways and decision gates",
      "Convert to experiments with owners and dates",
      "Review on cadence and report back"
    ].join(" -> ");

    return [
      title && `Backcasting plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and links:\n${ctx}`,

      "SECTION: Overview",
      owner && `Owner or steward: ${owner}`,
      purpose && `Purpose and scope:\n${purpose}`,
      horizon && `Horizon and future date: ${horizon}`,
      boundary && `Boundary and exclusions:\n${boundary}`,

      "SECTION: People and inclusion",
      stakeholders && ["Stakeholders and participants:", listify(stakeholders)].join("\n"),
      access && `Access supports and compensation:\n${access}`,

      "SECTION: Ethics and governance",
      consent && `Consent and quoting rules:\n${consent}`,
      data_governance && `Data governance and publication tiers:\n${data_governance}`,

      "SECTION: Desired future",
      future_snapshot && `Future state snapshot:\n${future_snapshot}`,
      future_signals && `Success signals and metrics:\n${future_signals}`,
      guardrails && `Guardrails and red lines:\n${guardrails}`,
      assumptions && `Assumptions and uncertainties:\n${assumptions}`,
      drivers_constraints && `Drivers and constraints:\n${drivers_constraints}`,

      "SECTION: Backcasting ladder",
      milestones && ["Milestones backcast high to low:", listify(milestones)].join("\n"),
      preconditions && `Preconditions per milestone:\n${preconditions}`,
      enablers && `Enablers:\n${enablers}`,
      blockers && `Blockers:\n${blockers}`,
      no_regrets && `No regret moves now:\n${no_regrets}`,

      "SECTION: Options and pathways",
      pathways && ["Pathways options:", listify(pathways)].join("\n"),
      decision_gates && `Decision gates and forks:\n${decision_gates}`,

      "SECTION: Experiments and policy tweaks",
      experiments && ["Experiments and policy tweaks:", listify(experiments)].join("\n"),

      "SECTION: Ownership and cadence",
      owners && ["Owners and RACI:", listify(owners)].join("\n"),
      cadence && `Review cadence and learning loops: ${cadence}`,

      "SECTION: Measures and risks",
      leading && ["Leading indicators:", listify(leading)].join("\n"),
      lagging && ["Lagging indicators:", listify(lagging)].join("\n"),
      risks && `Risks and mitigations:\n${risks}`,

      "SECTION: Timeline and reporting",
      reverse_timeline && ["Reverse timeline by quarter:", listify(reverse_timeline)].join("\n"),
      report_back && `Report back plan:\n${report_back}`,

      "Quick reference",
      flow,

      "Checklist:",
      "- [ ] Future state is concrete, equitable, and observable",
      "- [ ] Success signals fit on one page with owners",
      "- [ ] Milestones are backcast from the future to now",
      "- [ ] Preconditions, enablers, and blockers are explicit",
      "- [ ] Pathways have decision gates and fork criteria",
      "- [ ] Experiments have owners, resources, and check dates",
      "- [ ] Leading and lagging indicators are tracked",
      "- [ ] Community first brief scheduled within 14 days"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "backcasting future state reverse planning milestones preconditions pathways decision gates no regret moves leading lagging indicators equity template"
  }
},

{
  id: "hoshin_kanri_policy_deployment",
  slug: "hoshin-kanri-policy-deployment-true-north-to-daily-work",
  label: "Hoshin Kanri (Policy Deployment) - Align annual breakthrough objectives with daily work",
  kind: "strategy",
  categories: [
    "strategy",
    "planning",
    "operations",
    "community",
    "governance"
  ],
  tags: [
    "type:framework",
    "use:alignment",
    "use:execution",
    "use:prioritization",
    "use:measurement",
    "phase:plan",
    "phase:act",
    "phase:review",
    "topic:community",
    "level:intermediate"
  ],
  use_cases: [
    "set true north and 3 to 5 breakthrough objectives",
    "translate strategy into annual objectives, projects, and daily work",
    "run catchball to align across teams without muting voice",
    "track progress with an X matrix and bowling charts",
    "trigger countermeasures early with clear review cadences"
  ],
  boosters: [
    "Name no more than 3 to 5 breakthrough objectives. Focus beats everything.",
    "Run real catchball. Invite edge voices, publish changes from feedback, fund access supports.",
    "Use codes to link items across the X matrix. Example B1 maps to A2, P3, M1.",
    "Track both leading and lagging signals. Make the bowling chart visible.",
    "Review monthly and learn quarterly. Countermeasures beat blame.",
    "Yokoten. Share wins and lessons sideways so others can adapt quickly."
  ],
  definition: "Hoshin Kanri aligns a clear true north and a small set of breakthrough objectives to annual objectives, projects, and daily management. Catchball builds shared commitment. The X matrix visualizes linkage. Bowling charts make performance and countermeasures visible.",
  help: "Fill ethics and boundary. Set true north, breakthrough objectives, and annual objectives with targets. Build the X matrix using codes. List projects, owners, and measures. Schedule catchball and monthly reviews. Track a bowling chart and log countermeasures with A3 links.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., Hoshin 2026: Inclusive Participation" },
    { label: "Owner or steward", key: "owner", type: "text", ph: "e.g., Strategy steward" },
    { label: "Purpose and scope", key: "purpose", type: "textarea", ph: "Why policy deployment and where it applies" },
    { label: "Horizon", key: "horizon", type: "text", ph: "e.g., 3 year horizon with annual Hoshin 2025" },
    { label: "Boundary and exclusions", key: "boundary", type: "textarea", ph: "In scope vs out of scope" },

    // Inclusion and ethics
    {
      label: "Stakeholders and affected groups",
      autofill: "persona->inline",
      itemLabel: "group",
      itemType: "typeahead",
      key: "stakeholders",
      max: 28,
      type: "repeater",
      ph: "e.g., Youth, elders, renters, disabled residents, staff, partners"
    },
    { label: "Access supports and compensation", key: "access", type: "textarea", ph: "Interpreters, captions, stipends, transport, childcare, sensory supports" },
    { label: "Consent and quoting rules", key: "consent", type: "textarea", ph: "Quoting, anonymity, retention and deletion" },
    { label: "Data governance and publication tiers", key: "data_governance", type: "textarea", ph: "Public | Community only | Restricted | Not for release" },

    // True North and Breakthroughs
    { label: "True north statement", key: "true_north", type: "textarea", ph: "Plain, observable, equity anchored north star" },
    { label: "Breakthrough objectives (codes B1..B5, one per line: code - outcome - horizon - target state - why)", key: "breakthroughs", type: "textarea", ph: "B1 - Participation parity - 3y - 0.9 to 1.1 parity - voice matters" },

    // Annual objectives and targets to improve
    { label: "Annual objectives (codes A1..A8, one per line: code - objective - target - due - owner)", key: "annual_objectives", type: "textarea", ph: "A1 - Captioning coverage - 100% - Dec - Access lead" },

    // Measures
    { label: "Measures and KPIs (codes M1..M10, one per line: code - name - baseline - target - owner - frequency - leading/lagging)", key: "measures", type: "textarea", ph: "M1 - Talk time parity - 0.55 - 0.9 to 1.1 - Council - monthly - leading" },

    // Projects and initiatives
    { label: "Hoshin projects or initiatives (codes P1..P12, one per line: code - name - owner - start - finish - resources)", key: "projects", type: "textarea", ph: "P1 - Interpreter pool expansion - A. Lee - Jul - Oct - $6k" },

    // X matrix linkages
    { label: "X matrix links top to left (B to A) one per line: Bx -> Ay", key: "x_b_to_a", type: "textarea", ph: "B1 -> A1" },
    { label: "X matrix links left to bottom (A to P) one per line: Ax -> Py", key: "x_a_to_p", type: "textarea", ph: "A1 -> P1" },
    { label: "X matrix links right to top (M to B) one per line: Mx -> By", key: "x_m_to_b", type: "textarea", ph: "M1 -> B1" },
    { label: "Critical interlocks and tradeoffs (one per line: item - linked item - note)", key: "x_interlocks", type: "textarea", ph: "P2 - P3 - resource contention" },

    // Catchball
    { label: "Catchball plan and rounds", key: "catchball_plan", type: "textarea", ph: "Who reviews what, sequence, access supports" },
    { label: "Catchball notes and changes (one per line: item - feedback - change made)", key: "catchball_notes", type: "textarea", ph: "A1 - renters want SMS - add SMS opt in" },
    { label: "Unresolved tensions and escalation path", key: "tensions", type: "textarea", ph: "What needs S3 or S5 level attention if using VSM terms" },

    // Bowling chart tracking
    { label: "Bowling chart table link", key: "bowling_link", type: "text", ph: "Sheet URL for monthly plan vs actual" },
    { label: "Bowling chart notes (one per line: Mx - Jan plan/actual - Feb plan/actual ...)", key: "bowling_notes", type: "textarea", ph: "M1 - 0.75/0.62 - 0.8/0.7 ..." },

    // Daily management and deployment
    {
      label: "Units or teams deploying Hoshin",
      autofill: "persona->inline",
      itemLabel: "unit or team",
      itemType: "typeahead",
      key: "units",
      max: 24,
      type: "repeater",
      ph: "Outreach, Programs, Access, Data, Events"
    },
    { label: "Tier meetings and cadences", key: "cadences", type: "textarea", ph: "Tier 1 daily, Tier 2 weekly, Tier 3 monthly, Portfolio monthly, Quarterly review" },
    { label: "Standard work and visual management", key: "std_work", type: "textarea", ph: "Boards, checklists, SLAs, visual KPIs" },

    // Countermeasures and A3s
    { label: "Trigger rules for countermeasures", key: "triggers", type: "textarea", ph: "2 misses in a row or adverse trend" },
    { label: "Countermeasures and A3 links (one per line: problem - owner - link - next check)", key: "countermeasures", type: "textarea", ph: "Low turnout - Comms - A3 link - Aug 15" },

    // Risks and supports
    { label: "Risks and mitigations", key: "risks", type: "textarea", ph: "Overload, gaming metrics, tokenism, drift" },
    { label: "Access supports for reviews", key: "review_access", type: "textarea", ph: "Bilingual briefs, interpreters, stipend schedule" },

    // Reporting and yokoten
    { label: "Report back plan", key: "report_back", type: "textarea", ph: "Community first brief in 14 days, bilingual, before and after examples" },
    { label: "Yokoten and knowledge sharing", key: "yokoten", type: "textarea", ph: "Cross team demos, playbooks, office hours" },

    // Context
    { label: "Context and links", key: "ctx", type: "textarea", ph: "References, OKR link, budget, constraints" }
  ],
  template: ({
    title,
    owner,
    purpose,
    horizon,
    boundary,

    stakeholders,
    access,
    consent,
    data_governance,

    true_north,
    breakthroughs,
    annual_objectives,

    measures,
    projects,

    x_b_to_a,
    x_a_to_p,
    x_m_to_b,
    x_interlocks,

    catchball_plan,
    catchball_notes,
    tensions,

    bowling_link,
    bowling_notes,

    units,
    cadences,
    std_work,

    triggers,
    countermeasures,

    risks,
    review_access,

    report_back,
    yokoten,

    ctx,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/).map(x => x.trim()).filter(Boolean)
      .map((x, i) => `${i + 1}. ${x}`).join("\n");

    const flow = [
      "Set true north and breakthroughs",
      "Run catchball and refine",
      "Link X matrix across B, A, P, M",
      "Deploy to units with tier cadences",
      "Track bowling chart and trigger countermeasures",
      "Share learning through yokoten"
    ].join(" -> ");

    return [
      title && `Hoshin Kanri plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,
      ctx && `Context and links:\n${ctx}`,

      "SECTION: Overview",
      owner && `Owner or steward: ${owner}`,
      purpose && `Purpose and scope:\n${purpose}`,
      horizon && `Horizon: ${horizon}`,
      boundary && `Boundary and exclusions:\n${boundary}`,

      "SECTION: Inclusion and ethics",
      stakeholders && ["Stakeholders and affected groups:", listify(stakeholders)].join("\n"),
      access && `Access supports and compensation:\n${access}`,
      consent && `Consent and quoting rules:\n${consent}`,
      data_governance && `Data governance and publication tiers:\n${data_governance}`,

      "SECTION: True North and Breakthroughs",
      true_north && `True north statement:\n${true_north}`,
      breakthroughs && ["Breakthrough objectives:", listify(breakthroughs)].join("\n"),

      "SECTION: Annual objectives",
      annual_objectives && ["Annual objectives and targets to improve:", listify(annual_objectives)].join("\n"),

      "SECTION: Measures and projects",
      measures && ["Measures and KPIs:", listify(measures)].join("\n"),
      projects && ["Hoshin projects or initiatives:", listify(projects)].join("\n"),

      "SECTION: X matrix links",
      x_b_to_a && ["B to A links:", listify(x_b_to_a)].join("\n"),
      x_a_to_p && ["A to P links:", listify(x_a_to_p)].join("\n"),
      x_m_to_b && ["M to B links:", listify(x_m_to_b)].join("\n"),
      x_interlocks && ["Critical interlocks and tradeoffs:", listify(x_interlocks)].join("\n"),

      "SECTION: Catchball",
      catchball_plan && `Catchball plan and rounds:\n${catchball_plan}`,
      catchball_notes && ["Catchball notes and changes:", listify(catchball_notes)].join("\n"),
      tensions && `Unresolved tensions and escalation path:\n${tensions}`,

      "SECTION: Bowling chart tracking",
      bowling_link && `Bowling chart link: ${bowling_link}`,
      bowling_notes && ["Bowling chart notes:", listify(bowling_notes)].join("\n"),

      "SECTION: Daily management and deployment",
      units && ["Units or teams deploying Hoshin:", listify(units)].join("\n"),
      cadences && `Tier meetings and cadences:\n${cadences}`,
      std_work && `Standard work and visual management:\n${std_work}`,

      "SECTION: Countermeasures",
      triggers && `Trigger rules for countermeasures:\n${triggers}`,
      countermeasures && ["Countermeasures and A3 links:", listify(countermeasures)].join("\n"),

      "SECTION: Risks and supports",
      risks && `Risks and mitigations:\n${risks}`,
      review_access && `Access supports for reviews:\n${review_access}`,

      "SECTION: Reporting and yokoten",
      report_back && `Report back plan:\n${report_back}`,
      yokoten && `Yokoten and knowledge sharing:\n${yokoten}`,

      "Quick reference",
      flow,

      "Checklist:",
      "- [ ] True north is plain and observable",
      "- [ ] 3 to 5 breakthroughs with clear targets",
      "- [ ] Annual objectives, projects, and measures coded and linked",
      "- [ ] Catchball run with edge voices and published changes",
      "- [ ] Bowling chart visible with plan vs actual",
      "- [ ] Countermeasures triggered by clear rules with A3s",
      "- [ ] Tier cadences active and minutes published",
      "- [ ] Yokoten sharing scheduled and resourced"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "Hoshin Kanri policy deployment true north breakthrough objectives annual objectives X matrix catchball bowling chart countermeasures A3 yokoten template"
  }
},


{
  id: "dot_voting_heatmap",
  slug: "dot-voting-heat-mapping-priorities",
  label: "Dot Voting and Heat-mapping - Quick temperature check on priorities",
  kind: "facilitation",
  categories: [
    "facilitation",
    "strategy",
    "research",
    "community",
    "decision"
  ],
  tags: [
    "type:framework",
    "use:prioritization",
    "use:engagement",
    "use:workshop",
    "use:decision-record",
    "phase:plan",
    "phase:decide",
    "phase:act",
    "topic:community",
    "level:beginner"
  ],
  use_cases: [
    "surface quick group preferences before deep planning",
    "compare options across criteria with a heat map",
    "triage backlog or portfolio into now next later",
    "check temperature on themes after clustering",
    "create a transparent decision trail with consent"
  ],
  boosters: [
    "Set a clear boundary and question. What are we prioritizing and for whom.",
    "Keep dots scarce. Small budgets sharpen choices.",
    "Silence first then group discussion. Prevent anchoring.",
    "Randomize item order and anonymize when power dynamics exist.",
    "Pair the vote with a short decision rule and a review date.",
    "Publish results and credit contributors who opted in."
  ],
  definition: "A lightweight method to gauge group priorities. Participants allocate a fixed dot budget to items or in a matrix across criteria. Results inform but do not replace good judgment and consent based decisions.",
  help: "Define the decision and scope, set budgets and rules, list items, cluster themes, run a silent read then voting round, tally and visualize as a heat map, apply decision rules, record actions and review dates, and publish a short brief.",
  fields: [
    // Overview
    { label: "Title", key: "title", type: "text", ph: "e.g., Priority heat map for Eastside projects" },
    { label: "Owner or steward", key: "owner", type: "text", ph: "e.g., Workshop facilitator" },
    { label: "Purpose and scope", key: "purpose", type: "textarea", ph: "Decision context and what is in scope" },
    { label: "Horizon", key: "horizon", type: "text", ph: "e.g., Now to next quarter" },

    // Inclusion and ethics
    {
      label: "Participants and segments",
      autofill: "persona->inline",
      itemLabel: "participant or segment",
      itemType: "typeahead",
      key: "participants",
      max: 64,
      type: "repeater",
      ph: "Youth, elders, renters, staff, partners"
    },
    { label: "Access supports and compensation", key: "access", type: "textarea", ph: "Interpreters and ASL, childcare, stipends, transport, sensory supports" },
    { label: "Consent and privacy", key: "consent", type: "textarea", ph: "Anonymity options, quoting rules, retention and deletion" },
    { label: "Data governance tiers", key: "data_governance", type: "textarea", ph: "Public, Community only, Restricted, Not for release" },

    // Items and structure
    { label: "Question prompt", key: "prompt", type: "text", ph: "What are we choosing or ranking" },
    { label: "Items list (one per line: id - label - short note - link)", key: "items", type: "textarea", ph: "P1 - Safer Crossings - add beacons near schools - doc link" },
    { label: "Pre clusters or themes (optional)", key: "clusters", type: "textarea", ph: "Safety, Belonging, Access, Maintenance" },

    // Heat map criteria
    { label: "Use heat map matrix", key: "use_matrix", type: "text", ph: "yes or no" },
    { label: "Rows source", key: "rows_src", type: "text", ph: "items or clusters" },
    { label: "Rows list (one per line)", key: "rows", type: "textarea", ph: "If rows are not items, list them here" },
    { label: "Columns criteria (one per line)", key: "cols", type: "textarea", ph: "Impact, Effort, Equity, Urgency" },
    { label: "Color legend", key: "legend", type: "textarea", ph: "High impact dark, medium mid, low light" },

    // Voting rules
    { label: "Dot budget per participant", key: "budget", type: "text", ph: "e.g., 5 dots or 100 points" },
    { label: "Budget mode", key: "budget_mode", type: "text", ph: "equal dots or points or one vote per column" },
    { label: "Weighting by segment (optional)", key: "weights", type: "textarea", ph: "Segment - weight. Use sparingly and disclose." },
    { label: "Anonymity", key: "anonymity", type: "text", ph: "public or anonymous" },
    { label: "Anti bias safeguards", key: "anti_bias", type: "textarea", ph: "silent read, randomized order, rotate speaking" },

    // Facilitation
    { label: "Facilitation steps", key: "steps", type: "textarea", ph: "check in, explain rules, silent read, clarify, cluster, vote, tally, discuss, decide, next steps" },
    { label: "Board or tool link", key: "board_link", type: "text", ph: "Miro or FigJam or Kumu URL" },

    // Decision rule
    { label: "Quorum and eligibility", key: "quorum", type: "text", ph: "e.g., 70 percent of invited segments present" },
    { label: "Decision rule", key: "decision_rule", type: "textarea", ph: "Top N with consent, or threshold plus consent, or advisory to a consent circle" },
    { label: "Guardrails and do nots", key: "guardrails", type: "textarea", ph: "Equity floors, budget caps, legal constraints" },
    { label: "Tie breakers", key: "tiebreakers", type: "textarea", ph: "Runoff vote, consent check, random pick with review" },

    // Results capture
    { label: "Raw votes or points (one per line: id or row - col optional - count)", key: "raw", type: "textarea", ph: "P1 - 17" },
    { label: "Heat map image or sheet link", key: "heatmap_link", type: "text", ph: "URL to visualization" },
    { label: "Top selections and rationale", key: "top", type: "textarea", ph: "List winners and why based on discussion" },

    // Actions
    { label: "Now next later actions (one per line: item - owner - resources - start - check date - signals)", key: "actions", type: "textarea", ph: "P1 - Maya - $8k - Aug 1 - Sep 15 - installs complete" },

    // Measures and learning
    { label: "Signals and measures", key: "measures", type: "textarea", ph: "Participation rate, dispersion of votes, equity representation, outcome movement" },
    { label: "Review cadence and owners", key: "cadence", type: "text", ph: "Weekly ops, monthly review, 90 day refresh" },

    // Risks and notes
    { label: "Risks and mitigations", key: "risks", type: "textarea", ph: "Popularity bias, tokenism, loud voices, gaming" },
    { label: "Notes and links", key: "ctx", type: "textarea", ph: "Constraints, references, prior votes" },

    // Logs
    { label: "Decisions log (one per line: date - decision - reason)", key: "decisions", type: "textarea", ph: "Aug 12 - adopted P1 and P3 - strongest signals and consent" }
  ],
  template: ({
    title,
    owner,
    purpose,
    horizon,

    participants,
    access,
    consent,
    data_governance,

    prompt,
    items,
    clusters,

    use_matrix,
    rows_src,
    rows,
    cols,
    legend,

    budget,
    budget_mode,
    weights,
    anonymity,
    anti_bias,

    steps,
    board_link,

    quorum,
    decision_rule,
    guardrails,
    tiebreakers,

    raw,
    heatmap_link,
    top,

    actions,

    measures,
    cadence,

    risks,
    ctx,

    decisions,
    audience,
    style,
    tone
  }) => {
    const listify = s => String(s || "")
      .split(/\n+/)
      .map(x => x.trim())
      .filter(Boolean)
      .map((x,i)=>`${i + 1}. ${x}`)
      .join("\n");

    const flow = [
      "Define the decision and scope",
      "List items and cluster themes",
      "Set budgets, anonymity, and anti bias steps",
      "Silent read then vote",
      "Tally, heat map, and discuss",
      "Apply decision rule and guardrails",
      "Record actions and review on cadence"
    ].join(" -> ");

    return [
      title && `Dot voting and heat map plan: ${title}`,
      audience && `Audience: ${audience}`,
      style && `Style: ${style}`,
      tone && `Tone: ${tone}`,

      "SECTION: Overview",
      owner && `Owner or steward: ${owner}`,
      purpose && `Purpose and scope:\n${purpose}`,
      horizon && `Horizon: ${horizon}`,

      "SECTION: Inclusion and ethics",
      participants && ["Participants and segments:", listify(participants)].join("\n"),
      access && `Access supports and compensation:\n${access}`,
      consent && `Consent and privacy:\n${consent}`,
      data_governance && `Data governance tiers:\n${data_governance}`,

      "SECTION: Items and structure",
      prompt && `Question prompt: ${prompt}`,
      items && ["Items list:", listify(items)].join("\n"),
      clusters && `Pre clusters or themes:\n${clusters}`,

      "SECTION: Heat map criteria",
      use_matrix && `Use heat map matrix: ${use_matrix}`,
      rows_src && `Rows source: ${rows_src}`,
      rows && ["Rows list:", listify(rows)].join("\n"),
      cols && ["Columns criteria:", listify(cols)].join("\n"),
      legend && `Color legend:\n${legend}`,

      "SECTION: Voting rules",
      budget && `Dot budget per participant: ${budget}`,
      budget_mode && `Budget mode: ${budget_mode}`,
      weights && ["Weighting by segment:", listify(weights)].join("\n"),
      anonymity && `Anonymity: ${anonymity}`,
      anti_bias && `Anti bias safeguards:\n${anti_bias}`,

      "SECTION: Facilitation",
      steps && `Facilitation steps:\n${steps}`,
      board_link && `Board or tool link: ${board_link}`,

      "SECTION: Decision rule",
      quorum && `Quorum and eligibility: ${quorum}`,
      decision_rule && `Decision rule:\n${decision_rule}`,
      guardrails && `Guardrails and do nots:\n${guardrails}`,
      tiebreakers && `Tie breakers:\n${tiebreakers}`,

      "SECTION: Results",
      raw && ["Raw votes or points:", listify(raw)].join("\n"),
      heatmap_link && `Heat map link: ${heatmap_link}`,
      top && `Top selections and rationale:\n${top}`,

      "SECTION: Actions",
      actions && ["Now next later actions:", listify(actions)].join("\n"),

      "SECTION: Measures and learning",
      measures && ["Signals and measures:", listify(measures)].join("\n"),
      cadence && `Review cadence and owners: ${cadence}`,

      "SECTION: Risks and notes",
      risks && `Risks and mitigations:\n${risks}`,
      ctx && `Notes and links:\n${ctx}`,

      "SECTION: Decisions log",
      decisions && ["Decisions log:", listify(decisions)].join("\n"),

      "Quick reference",
      flow,

      "Checklist:",
      "- [ ] Decision and scope are clear and in plain language",
      "- [ ] Items are de duplicated and clustered",
      "- [ ] Budgets and anonymity are set and explained",
      "- [ ] Anti bias steps used and documented",
      "- [ ] Results visualized and decision rule applied",
      "- [ ] Actions have owners, resources, and check dates",
      "- [ ] Participation and equity signals reviewed on cadence",
      "- [ ] Brief published within 14 days"
    ].filter(Boolean).join("\n");
  },
  meta: {
    search_text: "dot voting heat map prioritization workshop matrix criteria budget anonymity anti bias quorum guardrails template"
  }
}



    
  ];
  
  
  ;(() => {
  // 1) Canonical schema (keep this small and opinionated)
  const TAG_SCHEMA = {
    type:   ['framework','pattern','task','helper','heuristic','strategy','method'],
    use:    ['ideation','copywriting','presentations','evaluation','decision-making','process-improvement','task-brief','content','teaching','prioritization','workshop','problem-framing','iteration','goals','ad-copy','scope-management','format-guidance','healing','coding'],
    phase:  ['explore','define','ideate','plan','compose','apply','evaluate','review','prioritize','troubleshoot','debug','premortem','compare','decide'],
    level:  ['beginner','intermediate','advanced'],
    topic:  ['prompting','debiasing','logic','ethics','psychology','education','design','reasoning','philosophy','storytelling','matrix','values','future-self'],
    format: ['checklist','table','matrix','outline','plan','recipe','map','tree'],
    aud:    [] // optional audience/persona facet
  };

  // 2) Alias map → collapses singletons to canon
  const TAG_ALIASES = new Map([
    // namespaces
    ['phase:evaluate/review','phase:evaluate'],
    ['phase:compare/decide','phase:compare'], // you’ll still have a compare→decide step in UI
    ['phase:premortem','phase:premortem'],
    ['use:ad copy','use:ad-copy'],
    ['use:pattern','use:iteration'], // or route to 'use:process-improvement' if that’s truer for your set
    ['topic:matrix','format:matrix'], // matrix is a format, not a topic
    // common slips
    ['use:task-brief','use:task-brief'],
    ['use:message-brief','use:task-brief'],
    ['use:process improvement','use:process-improvement'],
    ['phase:apply','phase:apply'],
    // kebab/case normalizations happen below too
    
    
    
    
  ]);

  // 3) Helpers
  const kebab = s => String(s||'').trim().toLowerCase().replace(/\s+/g,'-');
  const normTag = t => {
    if (!t) return null;
    let v = kebab(t);
    if (TAG_ALIASES.has(v)) v = TAG_ALIASES.get(v);
    return v;
  };
  const parseTag = t => {
    const v = normTag(t);
    const m = v && v.match(/^([^:]+):(.+)$/);
    return m ? { ns: m[1], val: m[2] } : null;
  };

  // 4) Build faceted view + counts + backfill from kind/categories
  const SRC = (window.TEMPLATES || window.FRAMEWORKS || []).filter(Boolean);
  const INDEX = { all: new Map(), byNS: new Map() };

  function addCount(tag){
    const v = normTag(tag);
    if (!v) return;
    INDEX.all.set(v, 1 + (INDEX.all.get(v)||0));
    const { ns, val } = parseTag(v) || {};
    if (!ns || !val) return;
    if (!INDEX.byNS.has(ns)) INDEX.byNS.set(ns, new Map());
    const nsMap = INDEX.byNS.get(ns);
    nsMap.set(val, 1 + (nsMap.get(val)||0));
  }

  // Pass 1: count existing tags
  for (const t of SRC){
    (t.tags||[]).forEach(addCount);
  }

  // Utility: gently map categories/kind into tags if missing
  function deriveTagsFromMeta(t){
    const out = new Set(t.tags?.map(normTag).filter(Boolean) || []);
    // from kind → type
    if (t.kind && ![...out].some(x=>/^type:/.test(x))){
      const typeGuess = kebab(t.kind); // framework, pattern, task, helper...
      out.add(`type:${typeGuess}`);
    }
    // from categories → topic (conservative: only take simple words)
    for (const c of (t.categories||[])){
      const val = kebab(c).replace(/[^a-z0-9\-]+/g,'-');
      if (val && !val.includes('storytelling frameworks')) { // sample guard for noisy category
        // choose topic or format by heuristic
        if (['matrix','table','checklist','outline','map','tree'].includes(val)) out.add(`format:${val}`);
        else out.add(`topic:${val}`);
      }
    }
    return [...out];
  }

  // Pass 2: normalize + facet each template
  const FACETED = SRC.map(t => {
    const raw = (t.tags||[]).map(normTag).filter(Boolean);
    const withMeta = new Set([...raw, ...deriveTagsFromMeta(t)]);
    const facets = { type:null, use:[], phase:[], level:null, topic:[], format:[], aud:[] };

    for (const tag of withMeta){
      const p = parseTag(tag);
      if (!p) continue;
      const ns = p.ns, val = p.val;
      if (ns === 'type' && TAG_SCHEMA.type.includes(val)) facets.type = val;
      else if (ns === 'level' && TAG_SCHEMA.level.includes(val)) facets.level = val;
      else if (ns in TAG_SCHEMA) {
        const arr = facets[ns];
        if (Array.isArray(arr)) {
          if (!arr.includes(val)) arr.push(val);
        }
      }
      // keep counting after aliasing
      addCount(tag);
    }

    // Minimal guarantees
    if (!facets.type && t.kind) facets.type = kebab(t.kind);
    if (!facets.level) facets.level = 'beginner'; // default you can change

    return { ...t, facets, tags_normalized: [...new Set(Object.entries(facets)
        .flatMap(([ns, v]) => Array.isArray(v) ? v.map(x=>`${ns}:${x}`) : (v? [`${ns}:${v}`]:[])))] };
  });

  // 5) Public API for UI and external pages
  window.TagAPI = {
    // Backwards compatibility: original list
    getTemplatesRaw: () => SRC,

    // New faceted view (don’t mutate)
    getTemplatesFaceted: () => FACETED,

    // Simple grouped options: "namespace" header + values (sorted by count)
    getDropdownModel: () => {
      const out = [];
      for (const ns of ['type','use','phase','level','topic','format']) {
        const nsMap = INDEX.byNS.get(ns);
        if (!nsMap) continue;
        const items = [...nsMap.entries()]
          .sort((a,b)=> b[1]-a[1] || a[0].localeCompare(b[0]))
          .map(([val,count]) => ({ ns, val, count, tag:`${ns}:${val}` }));
        if (items.length) out.push({ namespace: ns, items });
      }
      return out;
    },

    // Handy counts for audits
    getCounts: () => ({
      byTag: Object.fromEntries([...INDEX.all.entries()].sort((a,b)=>b[1]-a[1])),
      byNamespace: Object.fromEntries(
        [...INDEX.byNS.entries()].map(([ns, m]) => [ns, Object.fromEntries(m.entries())])
      ),
      singletons: [...INDEX.all.entries()].filter(([,n])=>n===1).map(([k])=>k)
    })
  };

  // 6) Gentle log so you can spot problems without breaking anything
  console.groupCollapsed('%cTagAPI ready','color:#0b7');
  const counts = window.TagAPI.getCounts();
  console.log('Singletons (fix or alias these):', counts.singletons.slice(0,50), counts.singletons.length>50?'…':'');
  console.log('Facets preview:', window.TagAPI.getTemplatesFaceted().slice(0,3));
  console.groupEnd();
})();
  
  // === Canonicalize tags & categories (runs once on load) ===
// Purpose: merge near-duplicates (e.g., debiasing → bias), normalize separators/case,
// and dedupe. Works for namespaced tags like "topic:debiasing" → "topic:bias".
(function normalizeTaxonomy(list){
  // Expandable alias groups. Left side = canonical form; right side = regexes to match variants.
  const ALIASES = {
    bias: [
      /^bias$/, /^biased$/, /^bias-?check(s)?$/, /^fair(ness)?-?check(s)?$/,
      /^de-?bias(ing|e)?$/, /^unbias(ing|ed)?$/, /^bias-?mitigation$/, /^mitigate-?bias$/i
    ],
    brainstorming: [
      /^brainstorm(ing)?$/, /^ideation$/, /^idea[-\s]?organization$/, /^mind[-\s]?map(ping)?$/i
    ],
    accessibility: [
      /^a11y$/, /^accessibility$/, /^inclusive[-\s]?design$/, /^universal[-\s]?design$/, /^wcag$/i
    ],
    privacy: [
      /^privacy$/, /^data[-\s]?privacy$/, /^pii$/, /^gdpr$/, /^ccpa$/i
    ],
    safety: [
      /^safety$/, /^trust[-\s]?and[-\s]?safety$/, /^content[-\s]?safety$/, /^guardrails?$/, /^risk$/i
    ],
    analysis: [/^analysis$/, /^analytical$/, /^analyses$/i],
    planning: [/^planning$/, /^plan$/, /^roadmap(ping)?$/, /^prioritization$/i],
    teaching: [/^teaching$/, /^education$/, /^learning$/, /^pedagogy$/, /^tutorial$/i],
    debugging: [/^debug(ging)?$/, /^troubleshoot(ing)?$/, /^bugfix(ing)?$/, /^fix$/i],
    evaluation: [/^eval(uation|s)?$/, /^assessment$/, /^measure(ment)?$/i],
  };

  // Keep namespace (e.g., "topic:"/"use:"/"level:"), clean the value.
  function canonOne(raw) {
    if (!raw) return null;
    const s = String(raw).trim();
    let ns = '', val = s;

    // Split "ns:value" if present
    const m = s.match(/^([a-z]+)\s*:\s*(.+)$/i);
    if (m) { ns = m[1].toLowerCase(); val = m[2]; }

    // Normalize separators & case on value
    let v = String(val).replace(/[_.]/g, '-').replace(/\s+/g, '-').replace(/[–—]/g, '-')
      .toLowerCase().replace(/-+/g, '-').replace(/^-|-$/g, '');

    // Try alias groups
    outer: for (const [canon, patterns] of Object.entries(ALIASES)) {
      for (const re of patterns) { if (re.test(v)) { v = canon; break outer; } }
    }

    // Recombine with namespace (if there was one)
    return ns ? `${ns}:${v}` : v;
  }

  function canonList(arr) {
    if (!Array.isArray(arr)) return [];
    const seen = new Set();
    const out = [];
    for (const t of arr.map(canonOne).filter(Boolean)) {
      if (!seen.has(t)) { seen.add(t); out.push(t); }
    }
    return out;
  }

  for (const t of list) {
    if (t && Array.isArray(t.tags))       t.tags       = canonList(t.tags);
    if (t && Array.isArray(t.categories)) t.categories = canonList(t.categories);
  }
})(TEMPLATES);
// === End taxonomy normalization ===


  // === Lightweight search hooks (optional) ===
  // Mirrors how the app scores matches (label/slug/defs/tags/categories/use_cases/boosters/fields)
   for (const t of TEMPLATES){
    t.meta = t.meta || {};
    const bits = [
      t.label, t.slug, t.definition, t.help,
      ...(t.tags||[]), ...(t.categories||[]), ...(t.use_cases||[]),
      ...(t.boosters||[]),
      ...(Array.isArray(t.fields) ? t.fields.map(f => f?.label || f?.key || '') : [])
    ].filter(Boolean).join(' ').toLowerCase();
    t.meta.search_text = bits;
  }

  // 3) Export to the window under both names while you migrate wording
  root.TEMPLATES  = TEMPLATES;
  root.FRAMEWORKS = TEMPLATES;

  // 4) Node/CommonJS convenience (harmless in browser)
  if (typeof module !== 'undefined') module.exports = TEMPLATES;
})(typeof window !== 'undefined' ? window : globalThis);


